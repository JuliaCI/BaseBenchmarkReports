cset: moving following pidspec: 10470
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.348466463 seconds)
loading group "string"... done (took 0.487849303 seconds)
loading group "linalg"... done (took 7.879875003 seconds)
loading group "parallel"... done (took 0.175882369 seconds)
loading group "find"... done (took 1.19159925 seconds)
loading group "tuple"... done (took 1.886014313 seconds)
loading group "dates"... done (took 1.280046381 seconds)
loading group "micro"... done (took 0.237007768 seconds)
loading group "io"... done (took 0.875726608 seconds)
loading group "scalar"... done (took 42.137135908 seconds)
loading group "sparse"... done (took 12.994632259 seconds)
loading group "broadcast"... done (took 1.061659269 seconds)
loading group "union"... done (took 14.222604978 seconds)
loading group "simd"... done (took 4.866149491 seconds)
loading group "random"... done (took 9.834919408 seconds)
loading group "problem"... done (took 2.013366921 seconds)
loading group "array"... done (took 23.074478825 seconds)
loading group "misc"... done (took 1.470971 seconds)
loading group "sort"... done (took 3.683038289 seconds)
loading group "collection"... done (took 19.977096446 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.551526426 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.1508044 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.160103375 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.160739334 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.221481229 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.147987404 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.165700524 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.118644351 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.063297381 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.193069383 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.161607705 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.524739414 seconds)
done (took 5.385199377 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.231524192 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.099184777 seconds)
    (2/2) benchmarking "String"...
    done (took 0.11021184 seconds)
  done (took 0.914688962 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.080750291 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.1523947 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09831786 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.098262225 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.083561469 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.099405663 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.081693907 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.097806049 seconds)
  done (took 1.418090279 seconds)
done (took 3.358735016 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.751923204 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.292110391 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.22833653 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.486713985 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.186630323 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.221014759 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682907569 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.351835186 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.273784993 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10218959 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.15329323 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.416479923 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13888615 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672165683 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.093718056 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.130626595 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.182593195 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444601083 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.087157626 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.113987209 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.120154022 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145844657 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.133386531 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095545856 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.190033361 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.102148834 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193702608 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111393586 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.085517903 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.297005963 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.206222794 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.694585808 seconds)
  done (took 11.132067862 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.121651206 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.142742458 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.102727562 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159585613 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140555476 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.088049669 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.106218899 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083789935 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128501676 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.183874256 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138040939 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.146776569 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097857107 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088041736 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.123142694 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250881464 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.125036761 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.110121295 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10482435 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108634177 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126671925 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.118271127 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.114262764 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.113188992 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170447928 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.210726739 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114321544 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.131007537 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100266534 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.117768818 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147573683 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146830779 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.098464389 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083618798 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.179794059 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.128586841 seconds)
  done (took 5.375393881 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.196871817 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126705912 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.176306795 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.168022671 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14634931 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163266451 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122432918 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258205903 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.122769178 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.187838288 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152393649 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.120391375 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085071092 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.106307661 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083329441 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.76927561 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.169222691 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.138921409 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122147716 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106188014 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.093275574 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369387084 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10845496 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083372181 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103784516 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067839105 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.115204855 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.184267576 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087245709 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.216170124 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.105201198 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105933055 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137232062 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208311775 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.117695031 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098836694 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137636872 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083550973 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.100220676 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.180923617 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107946223 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084003011 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12823176 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13739402 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12660218 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.102501381 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.103425985 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.214965925 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.100564733 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101276788 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.996911039 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18583033 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.098472944 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099337256 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.344106232 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100112225 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102250358 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097990468 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.271045697 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.142268078 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.102791379 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082104253 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101096807 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.101864131 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.392724808 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089048968 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.754833137 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087663759 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.110003248 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10297394 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085326864 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.129545299 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089944922 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.109753608 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118472304 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082965777 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.102728035 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082991042 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.100680391 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101869 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094621296 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105515262 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099232085 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152940583 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09776653 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102082702 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132701331 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103911126 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098198793 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118536392 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.100499388 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101326911 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085410356 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.141934725 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101712714 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.09557624 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104520942 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.147686054 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.101146349 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.193080581 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084264115 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.130239008 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.105457993 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134497434 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114531112 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086145896 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107252832 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081304096 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09923756 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16583598 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083467373 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.101437376 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086739049 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.116554171 seconds)
  done (took 23.463262677 seconds)
done (took 40.677501204 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.354667244 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109234196 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.109053866 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108520304 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.107747178 seconds)
  done (took 1.568962813 seconds)
done (took 2.321382791 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.295367941 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.181288872 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10080547 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.175494062 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.098972084 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.184932548 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.186570768 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100765001 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.212110568 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080254276 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.191184094 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081276312 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.099320496 seconds)
  done (took 2.768186292 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100400723 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12164155 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087141795 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117404004 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.097620365 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100244945 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115394969 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104047593 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116421724 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108192447 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0819012 seconds)
  done (took 1.899970768 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099373378 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119756648 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086503965 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116444916 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080847245 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116631294 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115169051 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104525093 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116412014 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107725929 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081714236 seconds)
  done (took 1.898993771 seconds)
done (took 7.311736118 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.100200771 seconds)
  done (took 0.847648497 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.052282215 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.209568601 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.121753543 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.16057042 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.332616291 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.188510204 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.601288711 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.13278561 seconds)
  done (took 15.771936176 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.154059984 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090026164 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10874728 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.108386611 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.091824327 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.105624132 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090213133 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.104197715 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.105264429 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089227828 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.107399601 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.103030571 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091405983 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.104961968 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08663007 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.105938858 seconds)
  done (took 2.45741285 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141942491 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.141037653 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094768623 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.114275391 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.11024769 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.092573918 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.113302053 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.110306563 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089239674 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.108310811 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.113121368 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.109860383 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091160625 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.101411048 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.111464111 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.095882221 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.10852114 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.111021418 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.111127957 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.096593879 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.112217952 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100403818 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091960374 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.111481755 seconds)
  done (took 3.425382351 seconds)
done (took 23.256328636 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171952174 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115450845 seconds)
  done (took 1.041788578 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.107951265 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.125412735 seconds)
  done (took 0.992912964 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114467915 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.1008808 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.14220392 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.120931023 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.100680582 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084758812 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.137756335 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.101602216 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084011012 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.101498338 seconds)
  done (took 1.850913658 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.092041207 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.120608796 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.112452072 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.123293943 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.098934827 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.106703448 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.116131067 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091654787 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.123385192 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.101905167 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094726511 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.12218691 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.111860428 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124087146 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.115794657 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.093672334 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114168207 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.108794326 seconds)
  done (took 2.736090104 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084722136 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.105499687 seconds)
  done (took 0.953104845 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.090940903 seconds)
    (2/7) benchmarking "second"...
    done (took 0.101986316 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08829278 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10658514 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.101561454 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.085100348 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.102793404 seconds)
  done (took 1.440378957 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.496999501 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.139656281 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.263390288 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.106730578 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.128652943 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.335104777 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083557672 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108538206 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107039956 seconds)
  done (took 2.572057813 seconds)
done (took 12.347109997 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.098901608 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.12302275 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.137898889 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.483566529 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.129503659 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.08345387 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.169218653 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.269877888 seconds)
done (took 2.262177466 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.159141076 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337887678 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.122837891 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085838258 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085123444 seconds)
  done (took 1.4026288 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084974743 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104202684 seconds)
  done (took 0.961399889 seconds)
done (took 3.294434382 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086359088 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.100628355 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081842448 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.101013909 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.081746202 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098886612 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083698038 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.117178236 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.10317069 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083739629 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.103478544 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.101493724 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085203656 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09753474 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083054309 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10168843 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.082364976 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098667989 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081111483 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099399063 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084858243 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10227368 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.09828841 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.082595119 seconds)
  done (took 3.058001552 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.114456342 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.10257378 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107196649 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092182323 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.107265244 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.107178435 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089948166 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.103031114 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.107534657 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.087594752 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1069006 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.105411064 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086272032 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.105576864 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102673353 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088351477 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.108918509 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101763944 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087480761 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.106703103 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.107149788 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086457291 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.106187049 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106455465 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.089571161 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106583556 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.103040858 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086073503 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108922944 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.105304316 seconds)
  done (took 3.79673263 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.091566331 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.098541253 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082957957 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.106616918 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081606577 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.105204217 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.098284228 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083750646 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.099897759 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.082110364 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.101277512 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081478911 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.100385513 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08259082 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.102218746 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102152014 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09651013 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.099835033 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081898676 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.101204678 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084918781 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.101588979 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.101355498 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082033991 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098032498 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.081684367 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.099813928 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081621679 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.101259442 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.099235503 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.086431636 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.102806681 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.082889606 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.105643344 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085850517 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.099737614 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085816088 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.099967625 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099234657 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.083400594 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.097705887 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.083169279 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.099098699 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.089596265 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.103464504 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08337696 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.100308867 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.101219753 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.083345773 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102861996 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081100977 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.099804595 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083852335 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.101509409 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.102771547 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081864652 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.101294111 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.081583446 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.101109798 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.081440235 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.100232834 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.097983577 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.085539499 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.100207783 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.098450737 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.106184144 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081789809 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.102392081 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.102862927 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085170214 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101488922 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.0970177 seconds)
  done (took 7.536375727 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088979026 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111977541 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084604521 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102927198 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098656375 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083639432 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104052143 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082250448 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102821756 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119549031 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083603092 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10247581 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101160138 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.088249645 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101025349 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084831354 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111016797 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097570384 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.083250953 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104130075 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082814487 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104707816 seconds)
  done (took 2.903388495 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.223270365 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.111588285 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.148937719 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.127920496 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119987932 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099408254 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107691749 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108439949 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090245974 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106771392 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106281383 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089893492 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110749477 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105665058 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087957677 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107396535 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106730041 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09000341 seconds)
  done (took 2.827251534 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.099747126 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.104709246 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125114647 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.086115995 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.104393367 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086929931 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109325447 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119185704 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.104349882 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.085998157 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.113835455 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104564212 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.087961481 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103659174 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088366994 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10422116 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.106390507 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085551323 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113797083 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109651507 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091842019 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114151391 seconds)
  done (took 3.032242503 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102674374 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106834792 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123625048 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088494048 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.1027746 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.086541114 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.110860618 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.102977448 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094031406 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.105891606 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103584559 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087051839 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.111512425 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101450231 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.092746998 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103206308 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086355737 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104474789 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105078008 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084986697 seconds)
  done (took 2.789618262 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126012007 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10632849 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.213852566 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110585171 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10676726 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104711514 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128756339 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.088485193 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10473936 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132062632 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087753232 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105908258 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129745567 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124641071 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087955496 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12973663 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12828469 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129018135 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087944125 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105164301 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.132260942 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104510948 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111085366 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105403252 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103933159 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08754161 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105163465 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12440115 seconds)
  done (took 3.998863377 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086792927 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102675024 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08319363 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.101100095 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.084167016 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.100827905 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08289897 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.101316793 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083834646 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101236906 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.101769825 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.087373816 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.102811592 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084734475 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102902479 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.085136484 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106220756 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082123944 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10104782 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099636698 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.085459381 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102881463 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.086087579 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10097899 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082572147 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.103640999 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081674655 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10110474 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101859778 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08314778 seconds)
  done (took 3.597193937 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09663303 seconds)
    (2/2) benchmarking "in"...
    done (took 0.112244411 seconds)
  done (took 0.99826111 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.084432002 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120582516 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08166515 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107705927 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.108660716 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08615068 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114820262 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109403072 seconds)
  done (took 1.600773876 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.104247552 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.122185395 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.107376956 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10582311 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.119267849 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.119534484 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167339399 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093193758 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110735749 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083637414 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.122059562 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.102082212 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092497063 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10425383 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092283248 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111363484 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.1038428 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103272165 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.111244766 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084232049 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107204932 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115754778 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088151419 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10170469 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10591424 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.098179091 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114384745 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103592464 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091389715 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113171058 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091309166 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.099914651 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.104326836 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.091440893 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.105017904 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.099462093 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118225681 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107614466 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094454837 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110711714 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.132301499 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.08316677 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.112001772 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.11043714 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096008353 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.110355943 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10843503 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.085337929 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10131385 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088341028 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.103522993 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086141212 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.100069254 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111185958 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091608674 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117992951 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.105385093 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088867739 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108385249 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089509243 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111431577 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106272301 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089689775 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.103776498 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093110924 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.109699892 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111552481 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.083959039 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.099103811 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.087006759 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.11339451 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128241634 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095128988 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.110070493 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108714443 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.087429354 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10837126 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092578971 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112369074 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.114260701 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.090899682 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.1263055 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113691227 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085646387 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.108208457 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.119103962 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084881814 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10775767 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082935322 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121377155 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.104728132 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.086542175 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102555262 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112975252 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.09048646 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104477799 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083681655 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113109868 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079661386 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.111031972 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110311342 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086696897 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11518371 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115226086 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097006195 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.114016839 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.115484859 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08635199 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108342834 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.083334731 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111274385 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106840035 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.094434634 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.099163197 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089560724 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.107498871 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.110407051 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.095028574 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.103683406 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.090346375 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115022519 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112703647 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08551545 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.102987727 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.106801202 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.091875718 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114515125 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094442189 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.10517935 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.103066406 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.085470276 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.109906622 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.090162347 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.111399843 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115128037 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089899422 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.100685616 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.087088396 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.115487827 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113801157 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085533274 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106351687 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109488423 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087596617 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.104007084 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091558836 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.108534974 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104401785 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091625108 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107391342 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.08443634 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11541515 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107647718 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085802063 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108385866 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093805531 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.108020652 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.110195984 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085438347 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.113077945 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110121812 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086275145 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105443512 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085516839 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115054925 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.107294109 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08629545 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.102299441 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099433113 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103592956 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.107997668 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086108609 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107436786 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.0923472 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.106957641 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.104375081 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089195475 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.137420211 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117886793 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092724924 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.112814362 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095516754 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.109226802 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107127466 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.090937233 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112250398 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091356813 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113313692 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110685698 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097059821 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108503957 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.101948661 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094445135 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114255005 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084754279 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.106984633 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.104014483 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091612773 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113734679 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.109722473 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.092321576 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103799096 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087518246 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115198431 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108257466 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.090519739 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.105157985 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091565355 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106883435 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.118820874 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092060561 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.116520765 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108635417 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.085401028 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115199305 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0843968 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.112487349 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.10418499 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084529864 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104814315 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.092211906 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.105134963 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.107574925 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.081510471 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114099822 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095070001 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106986379 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.103654427 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.092923658 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114911616 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087837253 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109200021 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108694848 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093894195 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120425025 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.104931011 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091338181 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115765706 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.091190043 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.10060079 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111165981 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.087273855 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.105700609 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.086109482 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.105937483 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108440867 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102840313 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111557458 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080446337 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10895387 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.104167912 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086611387 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.10477056 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093852187 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110057058 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10711954 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096472767 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112289889 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.110782648 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0917472 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.109618046 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.092078847 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.11264709 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108959476 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.093082093 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.109246038 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085768631 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.1088268 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104277725 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.088596526 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108123165 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.091451544 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.106507564 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11154318 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.089730793 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106137629 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089048097 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.112362805 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107235194 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088890434 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.105901817 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090355019 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107417528 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105127716 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090863452 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.103865731 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095213278 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.110547744 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11281807 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087483828 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.103545085 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092556122 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.11040278 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.116087206 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.092643463 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.112128775 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088047855 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.111806457 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108501023 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097017517 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.104772233 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11504929 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095788004 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106959286 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08927867 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.107012651 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.106359995 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08695361 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108226947 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.092756185 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10789529 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.105645794 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093401555 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.109506582 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087401114 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109548607 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.110977366 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087775316 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.108077178 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.082053532 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.106404797 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08569753 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.110830674 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11315608 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.092545427 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109981887 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084689682 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112897839 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.106185472 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.084099467 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.120991455 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121732208 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.092431044 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11679726 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.105605087 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089500973 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11725939 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081015198 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.105613214 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.106365469 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085579693 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114682302 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.092327236 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.115581239 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105935618 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087039005 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.104305158 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.092951695 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105956452 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.089724145 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.109010086 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109703805 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090500556 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106668081 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.092264796 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.110378053 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112314304 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095777517 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.107343908 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089323551 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.11187896 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.103004431 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085777569 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.106471781 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090604935 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.113235093 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.103265947 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.085411058 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.109588743 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089956381 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.107219863 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087051344 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.108554827 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113213188 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087572413 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110099348 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115228228 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082691616 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109930097 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087304546 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.110970413 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085000083 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.111101867 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110733987 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093542229 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114883222 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.110532542 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089292509 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107526823 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.088645114 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.112290974 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.109304773 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.093529388 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.105887522 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.092509419 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116537823 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.107103546 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090619985 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10677208 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087782915 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112308691 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.110683631 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090243418 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121078978 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089266272 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.109408453 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112776066 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091902512 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110508229 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111566795 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090456409 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113955183 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086638 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116143564 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.105886424 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.094177577 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10861694 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084416426 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10749005 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.106759061 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087255276 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112660507 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.09239359 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.107696638 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.106090193 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.089248767 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10960589 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095899376 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115708488 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.109522388 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091223982 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.105564448 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.084726963 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112886909 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103610776 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090603834 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110005695 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094245692 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.110176457 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.107182597 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086827358 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.115681028 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093255426 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.113763374 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103800095 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092543552 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.11315715 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089147163 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.109075225 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.107693794 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089471714 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.113943044 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088381082 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107753734 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115618235 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091566267 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113385203 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10847336 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088285135 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107069425 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08673641 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.113675952 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107859196 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096010954 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109356742 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087610859 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119229373 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10658143 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088492397 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117293969 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087406639 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115006542 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.104983116 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088543591 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113902967 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092516969 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.107519294 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106278808 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.086179152 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.109828694 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087027369 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.108188823 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116875384 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096269287 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110384933 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086679452 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107993705 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.105710786 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.087572607 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107122064 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093471736 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.110765395 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117017803 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088421592 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.107266591 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.086857422 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108939256 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1101656 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093399049 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.104524994 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.08736982 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.106987566 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090791337 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116466964 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106390197 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.092949352 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111604425 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089484091 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.110046054 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116891357 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.085230317 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.113126256 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118996464 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.094075077 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108673941 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094880286 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116389898 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.112211356 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.087319035 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.114711643 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090316388 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.109214146 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.113809425 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090412922 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123837159 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111262114 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087859252 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.108265275 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090535249 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.108757086 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114790203 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09551725 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.114583611 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093019262 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110160766 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123727589 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090800349 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115272362 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.109886717 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091876467 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.107681193 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087866668 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.107344325 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105147487 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.091662365 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.114276809 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093428911 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.122400195 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.107988994 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098109572 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11707532 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.112787748 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.085610794 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.107333716 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088199044 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.108254738 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.112917864 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.087634982 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.106588083 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086774078 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.107902329 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088169579 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11479342 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110424079 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.094031822 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.109174003 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081514057 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111126253 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.111492367 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089722196 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.105910953 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.092938338 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.114737364 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.114649268 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09989885 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.109576906 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089680155 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.110841622 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108279438 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.087701696 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115204198 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087515126 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112479385 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087007449 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109459588 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.113183991 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09274207 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119534963 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109536958 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091973566 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121551308 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114346317 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.087537263 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104867541 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094761876 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.109936672 seconds)
  done (took 61.862845662 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.157157509 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093883026 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10526355 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082754502 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12395366 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108749573 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083431426 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108721357 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108229503 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091848836 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104899325 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082821352 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117884661 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133624808 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123046404 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113539549 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083637122 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109658222 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08236462 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109376698 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119518041 seconds)
  done (took 3.084671822 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.111180826 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.123553973 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.120274459 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12782584 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114140378 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.102432581 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.121916028 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122614914 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.125377488 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115341877 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.105708206 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123283847 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.118342912 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.116406032 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095682253 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120336063 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.126585737 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114308358 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.102760758 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121531937 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119748433 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.121628228 seconds)
  done (took 3.409141965 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09830257 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.111219661 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.092662431 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.104117599 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08704862 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.104662101 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.116589523 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.086795276 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112544874 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.086353892 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.108017958 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.086668164 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.114175855 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.10333756 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.088532103 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.106471766 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.161921124 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11188744 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.093293882 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.110041885 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.085483372 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.112214393 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.105748844 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.088947055 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10838439 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.100690648 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.110942988 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.087950189 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.109785785 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.106447709 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.093149828 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.106802286 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090390654 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.109659695 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087072446 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.108834027 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.1078065 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.092633507 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.106234027 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.088788636 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.109712948 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.087237248 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.113999274 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.110077951 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.089639157 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.106136238 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089679201 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109620153 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.082938802 seconds)
  done (took 5.83283553 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.121855675 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162555115 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089764996 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.132625403 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129345765 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.12384663 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.11383349 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.150675792 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.087242798 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.113113486 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.130786331 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127249927 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.092092173 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.11878354 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112806522 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092425622 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.114687431 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108168063 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.097373363 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.110385018 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.117869147 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.115889149 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.106306302 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12551302 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.118179102 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.111174658 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08939397 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.118588303 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.123535936 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11877071 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.098682296 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.120390239 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.128018987 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.113376235 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089282368 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.115942692 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.129715902 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.092378214 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.117672824 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106789572 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.094149982 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.119329087 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.117276126 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.128880509 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.093064086 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.11619681 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.112003351 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.086339987 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.125269933 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.116916822 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.122141363 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.126330453 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.099499882 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.114758899 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.118397633 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.107332102 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.114292568 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.111024707 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.095650812 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.12394073 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107982256 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115627135 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.105509405 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.115845375 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.12239371 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126428182 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.093859626 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.119157307 seconds)
  done (took 8.745994055 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121619811 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.122146547 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133075985 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132594333 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119627139 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.100756285 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.121659308 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.122222897 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119835467 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107306074 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121437975 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.168861696 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.115362587 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.124903918 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099718513 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122506405 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121661314 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121153049 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099879931 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12248243 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.120996794 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132971183 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.121042517 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131844861 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131495082 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.095678842 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121402351 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121229163 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13149004 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101010444 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130865117 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.121836178 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12144428 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133205939 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.130841065 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.100500012 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113153363 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120259327 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.100076272 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.121837171 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.115721234 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131615664 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100016452 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.116277945 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121887932 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120777764 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.131801632 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.109979197 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.126341787 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127679675 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.121509104 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13214226 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121047405 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.1016026 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133285548 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13835142 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132762518 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132261163 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122816842 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.133420752 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13287457 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.137459968 seconds)
  done (took 8.415141081 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.143653674 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10431094 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.132752639 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.106548584 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08756475 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.118527744 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107306288 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087319719 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.124488632 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.123534798 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126021076 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096860252 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123519426 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127877356 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117927806 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120569442 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098809009 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118429529 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124683238 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.116905348 seconds)
  done (took 3.162582124 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098520387 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.131948774 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.111365891 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097154693 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.115045068 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116580632 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09257355 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1148821 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110688019 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094288661 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.123893142 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122949129 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089955503 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.119493275 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.123359182 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.119030609 seconds)
  done (took 2.636031199 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.103133246 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.131740423 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.131490409 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.110105994 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.087838421 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107367 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.092678059 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.108104039 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.105558293 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.10657588 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.113062718 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.115848743 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.092688007 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.108561152 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.085462037 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.117142348 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.106265184 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.088106916 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.114459267 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.130870749 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.101886963 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.110184996 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.114025841 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.093344832 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.112014674 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.115947182 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.092398024 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108726052 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08668138 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.115253667 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.110669738 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.098098946 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108939555 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108724908 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.088892597 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.109509364 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.091582036 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.114990011 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.116118509 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.092255427 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.109492306 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109901497 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.093581271 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.112320736 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083962722 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.11392626 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105925743 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09680674 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109070783 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.110394766 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.093108899 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.113202369 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.089720822 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.123411032 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114646134 seconds)
  done (took 6.683773235 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106068565 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115501223 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084624653 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110429016 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114333162 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.092420886 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.114396722 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091379048 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113869302 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.107829314 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091872941 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116430024 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111699515 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093905229 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113607394 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092940865 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.106469591 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112027645 seconds)
  done (took 2.751253748 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096187173 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11070575 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096031189 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.11184327 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.109775836 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092722758 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107045371 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088521564 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110644616 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087786509 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111725952 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.113559283 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088834351 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.113813926 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088914053 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112190959 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.112441088 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088351956 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.111261779 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084565124 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114422763 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108591841 seconds)
  done (took 3.121817356 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.127193184 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.132572778 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.117857907 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.225127056 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.108173171 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.139875511 seconds)
  done (took 1.71365212 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115097286 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150166204 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11196605 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094459553 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124929309 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116817193 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094355791 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117328908 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128641042 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129767901 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116597826 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10654871 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128389668 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12908266 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124420665 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123120343 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095202659 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117638767 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111872856 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137464225 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094358292 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129303306 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118138531 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116632731 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096332741 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128432516 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129360686 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130261075 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11668766 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127029438 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103263696 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117751212 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12896981 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131392216 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092334164 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128748225 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116916814 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138140702 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123891651 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128219849 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.094221443 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125019316 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129400258 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12286626 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10778934 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118116166 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123274059 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116305264 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096961176 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144319406 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124269518 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129069377 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124516701 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128994115 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106763054 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166668739 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128767595 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107122879 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125489956 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130346429 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128436982 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125289455 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127681847 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129972477 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105016332 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128419738 seconds)
  done (took 8.835338713 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131562533 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11527731 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117770141 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129591442 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127225871 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095769137 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117336012 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117243679 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096379599 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114006902 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161390718 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118218518 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129037015 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128262192 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097421408 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117003796 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117838339 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127626837 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09242947 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143531841 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117621916 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129319751 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128481393 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127534975 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128970525 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10412756 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118819421 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117768047 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09406901 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117627408 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124355645 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117717461 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127724476 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092728148 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127632369 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116618259 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095848704 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124677631 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118659517 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12456651 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128898078 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136483112 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097135679 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11926518 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131416993 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117571649 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096489905 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114394428 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116617015 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093426681 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130120536 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130960186 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129806288 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128736985 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117157666 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097070437 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118836933 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1170417 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096435025 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124608053 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128936236 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117812654 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144307312 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116833537 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097842789 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129420161 seconds)
  done (took 8.700714912 seconds)
done (took 165.861812542 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.107271989 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.145875213 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.124913841 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.152522243 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.112737766 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.123875785 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.144878948 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.126602221 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.090783812 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.112025387 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.089402403 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.114903958 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153768517 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.112404144 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.111705474 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092703489 seconds)
  done (took 2.786260687 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.208677381 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.280707772 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.129586186 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.088312063 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.117613197 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.08996847 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.111166869 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.119830511 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.092673782 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.110615665 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.090783314 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.112858084 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088364947 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.113336061 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111199523 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091025251 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.110652169 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091055011 seconds)
  done (took 3.039207308 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.1185162 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155681977 seconds)
  done (took 1.155753262 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126250849 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.191514454 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311139912 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.162017795 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.147986732 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.133527385 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.160171572 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.116741228 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.23495505 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130260048 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.108323338 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.124971028 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149589529 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.121524567 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09939942 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.12509416 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.150966738 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.119300463 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099427978 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.123376347 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144976417 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.089776616 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.12410631 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.118871384 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.197344678 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.104573578 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.112272333 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.110040129 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.101523931 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.122112077 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.117078662 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131348066 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.105038154 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.196007408 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.108295491 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.190299218 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.124278839 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.096664115 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.121343849 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.11682391 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104668038 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.12677984 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132417428 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.102184002 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114172656 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.125184654 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.090011567 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.111390118 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11951504 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.104624795 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.120686932 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11784488 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.168081311 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.125014228 seconds)
  done (took 8.007996443 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.840860019 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.160424198 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118581752 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.93863935 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120550403 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13241241 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.828553507 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.140425454 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.243469963 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.816132412 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137282876 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12720533 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241002059 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.247032665 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.94165927 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.323533719 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.701723251 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130990712 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.14469873 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162987911 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122015224 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141268617 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113500957 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.461307499 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099772768 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117161179 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12121061 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10360361 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190673795 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.094409367 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119071878 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.188844469 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.280080652 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.195586209 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120304621 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115248433 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093264911 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.200859094 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.277979051 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.228187021 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18717895 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090722538 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114961945 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125107702 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114817019 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112801302 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.173294064 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.207602552 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.182482857 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11929087 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124365292 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103034936 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125559677 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174798478 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.127383118 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.325605595 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.335880725 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116978127 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123196049 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10942582 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276605228 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129079655 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237451392 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142257509 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.2258468 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094465769 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795207192 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.178869423 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115683386 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123210358 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100123069 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122345265 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124908444 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175803824 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.416097951 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128486665 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09642637 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11639109 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.239461329 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094921035 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115279204 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.172215178 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121735053 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121857607 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107369769 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127350986 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.179027315 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.264446985 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126386786 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102010763 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.122257412 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127962943 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098559596 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.245566555 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.235522263 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.171630938 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.239331084 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105322957 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.197761199 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.179031008 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124500015 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.182201277 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123999497 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129425284 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104710804 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.23087468 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.175057128 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107733916 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120723036 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122287443 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155694653 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096129816 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122457839 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.180457762 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.495251252 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.179915466 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.114067752 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.118598819 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103789414 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192807955 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10119498 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276537072 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125779055 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.179953878 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123784561 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.112242073 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10249929 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.196555801 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104390587 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125051079 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126897631 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122710985 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.245866464 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232506545 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127011155 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230578873 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.190237197 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12279001 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203609359 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102502627 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.198140678 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10240622 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125730567 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119776237 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785151961 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105674079 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123136993 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12051825 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198113121 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093463534 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.130695242 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.116416097 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090464245 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.825157909 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.118519043 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103947891 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.130004887 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123252415 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122368411 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100496774 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.120073529 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.172096352 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24674266 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126483166 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122904249 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.092943166 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.193115228 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.098320787 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.116677111 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.116220173 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.095034592 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12521191 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096323945 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.131373871 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.202689376 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.173491822 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.23575659 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574869715 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094145789 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.11751402 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245626172 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114802522 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.303694262 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103328517 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.241137162 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1979811 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105114602 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.33751575 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.199861279 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197102556 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096152266 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.207215305 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090811966 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122558674 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.196140696 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094362799 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123434518 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.172201736 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130426733 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126720713 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.990210297 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094731698 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258808593 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092462253 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.202911657 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099120239 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12698995 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.303610101 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114888886 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112091478 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.196614433 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097436918 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.11820991 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.884441895 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.095524015 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12618631 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122935602 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.239241507 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.17401803 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123491283 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101209045 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126010603 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.173872725 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.241737794 seconds)
  done (took 46.004873532 seconds)
done (took 61.869812893 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.293153397 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219754794 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.266709037 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17352908 seconds)
  done (took 1.938969498 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.187388658 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.154771676 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.152643039 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.08965424 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.160473252 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.111514954 seconds)
  done (took 1.769301899 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.384462447 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.287390303 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.249831254 seconds)
  done (took 1.830858676 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.257825664 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.279720346 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.335292517 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.434555131 seconds)
  done (took 2.323369247 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.244708439 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.149228811 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.133141663 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.127577974 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.22965115 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.27325167 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.16373693 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.224437865 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.144043366 seconds)
  done (took 2.646957244 seconds)
done (took 11.423804649 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.257624519 seconds)
    (2/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.27088985 seconds)
    (3/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.271624607 seconds)
    (4/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.181625321 seconds)
    (5/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.150438973 seconds)
    (6/286) benchmarking ("sort", BigInt, true)...
    done (took 0.274768322 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.091280803 seconds)
    (8/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.244556948 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.134568629 seconds)
    (10/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.20970179 seconds)
    (11/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.1880829 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.13095019 seconds)
    (13/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.134748897 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.098554169 seconds)
    (15/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.203518196 seconds)
    (16/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097231171 seconds)
    (17/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.180147367 seconds)
    (18/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.21654845 seconds)
    (19/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.18891143 seconds)
    (20/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.250508768 seconds)
    (21/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.126200444 seconds)
    (22/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.162007068 seconds)
    (23/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.130454411 seconds)
    (24/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.208673511 seconds)
    (25/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.196908222 seconds)
    (26/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.265973449 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.117055623 seconds)
    (28/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.181828183 seconds)
    (29/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.116125996 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.240788137 seconds)
    (31/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.136804312 seconds)
    (32/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.13272221 seconds)
    (33/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.208350101 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.101933918 seconds)
    (35/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.121123862 seconds)
    (36/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.133767694 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114679257 seconds)
    (38/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.12830074 seconds)
    (39/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.1206699 seconds)
    (40/286) benchmarking ("sort", Float32, false)...
    done (took 0.186002706 seconds)
    (41/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.11383582 seconds)
    (42/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.098527725 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.123165296 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.143961276 seconds)
    (45/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.070765748 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.121266626 seconds)
    (47/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.138226398 seconds)
    (48/286) benchmarking ("sort", Int8, false)...
    done (took 0.200383466 seconds)
    (49/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.11512532 seconds)
    (50/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.204376114 seconds)
    (51/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.204696336 seconds)
    (52/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.18764644 seconds)
    (53/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.074250802 seconds)
    (54/286) benchmarking ("sort", Int8, true)...
    done (took 0.236564124 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.117356923 seconds)
    (56/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.164392548 seconds)
    (57/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.121588024 seconds)
    (58/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.095437942 seconds)
    (59/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.12410123 seconds)
    (60/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069555822 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.115601792 seconds)
    (62/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.125354272 seconds)
    (63/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.153432871 seconds)
    (64/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.160350895 seconds)
    (65/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.077948763 seconds)
    (66/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.196891913 seconds)
    (67/286) benchmarking ("sort", Int64, false)...
    done (took 0.115024808 seconds)
    (68/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.209530657 seconds)
    (69/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.126028057 seconds)
    (70/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.103078401 seconds)
    (71/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.145259519 seconds)
    (72/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.17915074 seconds)
    (73/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.22122152 seconds)
    (74/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.099251592 seconds)
    (75/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.194050409 seconds)
    (76/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.095811776 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.169291687 seconds)
    (78/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.178948949 seconds)
    (79/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.125597539 seconds)
    (80/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.125343852 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.146342917 seconds)
    (82/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.143087922 seconds)
    (83/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.200809253 seconds)
    (84/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.079363569 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.142075717 seconds)
    (86/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.070138469 seconds)
    (87/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.188300254 seconds)
    (88/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113563801 seconds)
    (89/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.071078147 seconds)
    (90/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.126191318 seconds)
    (91/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.108177615 seconds)
    (92/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.093561235 seconds)
    (93/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.092012347 seconds)
    (94/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.12240858 seconds)
    (95/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095443043 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.140818232 seconds)
    (97/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.123785367 seconds)
    (98/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.165635086 seconds)
    (99/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.144312304 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.142048035 seconds)
    (101/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069493352 seconds)
    (102/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.176333932 seconds)
    (103/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119628191 seconds)
    (104/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.070373139 seconds)
    (105/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.128676545 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090346077 seconds)
    (107/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.101497155 seconds)
    (108/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.117750833 seconds)
    (109/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.114407893 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089641244 seconds)
    (111/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.094113932 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 0.194553829 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.123329562 seconds)
    (114/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.093193082 seconds)
    (115/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.069144091 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123435624 seconds)
    (117/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.113670182 seconds)
    (118/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090986536 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.120279655 seconds)
    (120/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.07629002 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.120543659 seconds)
    (122/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.103047605 seconds)
    (123/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.161084097 seconds)
    (124/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.12914977 seconds)
    (125/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.152589592 seconds)
    (126/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.118949694 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098951072 seconds)
    (128/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.095225254 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089995032 seconds)
    (130/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.096993307 seconds)
    (131/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.119729949 seconds)
    (132/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.197178053 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.11485982 seconds)
    (134/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097512948 seconds)
    (135/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.142491312 seconds)
    (136/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.141755007 seconds)
    (137/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.123043386 seconds)
    (138/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075479305 seconds)
    (139/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.071170349 seconds)
    (140/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.116779557 seconds)
    (141/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.072285311 seconds)
    (142/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.096921249 seconds)
    (143/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.139800526 seconds)
    (144/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.124069682 seconds)
    (145/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.118785451 seconds)
    (146/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.098165989 seconds)
    (147/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.121118693 seconds)
    (148/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09708106 seconds)
    (149/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.09605661 seconds)
    (150/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.170631005 seconds)
    (151/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.071280968 seconds)
    (152/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.150487996 seconds)
    (153/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076349446 seconds)
    (154/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.142963943 seconds)
    (155/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.098046896 seconds)
    (156/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.132541623 seconds)
    (157/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.079892429 seconds)
    (158/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.122166633 seconds)
    (159/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.133135242 seconds)
    (160/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.072828875 seconds)
    (161/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.124947348 seconds)
    (162/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.09997144 seconds)
    (163/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.12826681 seconds)
    (164/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.090134368 seconds)
    (165/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.094347507 seconds)
    (166/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.103631179 seconds)
    (167/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.159910551 seconds)
    (168/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.06917575 seconds)
    (169/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.13632094 seconds)
    (170/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.119880377 seconds)
    (171/286) benchmarking ("sort", Bool, true)...
    done (took 0.238930369 seconds)
    (172/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.121141564 seconds)
    (173/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.114568472 seconds)
    (174/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.091075871 seconds)
    (175/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.201039795 seconds)
    (176/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.097833535 seconds)
    (177/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.0791511 seconds)
    (178/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.118506811 seconds)
    (179/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.116646129 seconds)
    (180/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.153596418 seconds)
    (181/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.131037437 seconds)
    (182/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.404707814 seconds)
    (183/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.124863956 seconds)
    (184/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.166931284 seconds)
    (185/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102901884 seconds)
    (186/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.129049377 seconds)
    (187/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.113292975 seconds)
    (188/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.071475828 seconds)
    (189/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11616868 seconds)
    (190/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.074169121 seconds)
    (191/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09617095 seconds)
    (192/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.116019326 seconds)
    (193/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.078865314 seconds)
    (194/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.187183005 seconds)
    (195/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.151199554 seconds)
    (196/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.081013659 seconds)
    (197/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.113846983 seconds)
    (198/286) benchmarking ("sort", Float32, true)...
    done (took 0.24513501 seconds)
    (199/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.125564045 seconds)
    (200/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.097455544 seconds)
    (201/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098531943 seconds)
    (202/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.126762146 seconds)
    (203/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117493254 seconds)
    (204/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.094145917 seconds)
    (205/286) benchmarking ("sort", Float64, false)...
    done (took 0.18389328 seconds)
    (206/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.176460023 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.09137372 seconds)
    (208/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.093850272 seconds)
    (209/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.07198577 seconds)
    (210/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.114777209 seconds)
    (211/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.154125684 seconds)
    (212/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.124831388 seconds)
    (213/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.121554141 seconds)
    (214/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.092928441 seconds)
    (215/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.174339572 seconds)
    (216/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.097782439 seconds)
    (217/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.115817894 seconds)
    (218/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.071730454 seconds)
    (219/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.122304504 seconds)
    (220/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.250311875 seconds)
    (221/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.126897017 seconds)
    (222/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091843631 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.116435592 seconds)
    (224/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.09086705 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.115770286 seconds)
    (226/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.115345434 seconds)
    (227/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.105743796 seconds)
    (228/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.115628511 seconds)
    (229/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.072515018 seconds)
    (230/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.178374187 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089704481 seconds)
    (232/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.097123885 seconds)
    (233/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.105344229 seconds)
    (234/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.199583223 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.114896615 seconds)
    (236/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.114254428 seconds)
    (237/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.12466348 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119500001 seconds)
    (239/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.080198963 seconds)
    (240/286) benchmarking ("sort", BigInt, false)...
    done (took 0.232003877 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123792416 seconds)
    (242/286) benchmarking ("sort", Float64, true)...
    done (took 0.246166762 seconds)
    (243/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.070190868 seconds)
    (244/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.094741709 seconds)
    (245/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.097700393 seconds)
    (246/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.118499959 seconds)
    (247/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.07350284 seconds)
    (248/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.093974753 seconds)
    (249/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.149115257 seconds)
    (250/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116703269 seconds)
    (251/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.071394421 seconds)
    (252/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.094716447 seconds)
    (253/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.126475657 seconds)
    (254/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.178535235 seconds)
    (255/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.082400246 seconds)
    (256/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.119267015 seconds)
    (257/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118648244 seconds)
    (258/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.072773443 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.097943194 seconds)
    (260/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.096826486 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.08895968 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.114611327 seconds)
    (263/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097813743 seconds)
    (264/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.117490328 seconds)
    (265/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069881124 seconds)
    (266/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.103528185 seconds)
    (267/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.089073588 seconds)
    (268/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.09549857 seconds)
    (269/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.096114548 seconds)
    (270/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.128411957 seconds)
    (271/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.089527337 seconds)
    (272/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.121588294 seconds)
    (273/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.072141936 seconds)
    (274/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.105672252 seconds)
    (275/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.07048406 seconds)
    (276/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.141167568 seconds)
    (277/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097023774 seconds)
    (278/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.095823872 seconds)
    (279/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.073191673 seconds)
    (280/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.104532774 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097579082 seconds)
    (282/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.094624856 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.091917645 seconds)
    (284/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.122320504 seconds)
    (285/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.072436972 seconds)
    (286/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.070390274 seconds)
  done (took 38.041834589 seconds)
done (took 38.961501662 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.115930421 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15687598 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.123552607 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119969897 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.129326779 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.117431933 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.100791386 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.126545034 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103072056 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.13055789 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.126688799 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07370694 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125681063 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.099916871 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.1263105 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.148468209 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103885605 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.122908441 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.123275374 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.090477785 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.124523816 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089727583 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11715597 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072460061 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.127223035 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.096972402 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.121874445 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.124356791 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.090377345 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.115716889 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095982213 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.123144044 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089545222 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.129052756 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.120256575 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.099613586 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.12712484 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099184138 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.118320316 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.114049107 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.099201748 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.115211991 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.098319325 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.123393674 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.09641069 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.121970909 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.123696115 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103810182 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.147233167 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118673031 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.100571295 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.126649099 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.100056644 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.123385009 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093123223 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125750875 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.119411248 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.12318041 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.125238143 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120225481 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.099122543 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.12349123 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.096059493 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.125375021 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.123387214 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102607682 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126917566 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096453988 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.127002293 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119170236 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.091877339 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.124038635 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094618235 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.11515536 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.100028004 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.127471952 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089355625 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.122625304 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.121449565 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096566223 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.114882332 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093938495 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.117553123 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096322542 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119116605 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07245407 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.119827455 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096351143 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.115262532 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.124600252 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097520717 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.122672221 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.093166973 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.128049644 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.089368599 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.122053184 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.114594685 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.092160503 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.117136645 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094667767 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.1155396 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094093297 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.125622976 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.092433638 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.121916137 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127785717 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091333128 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.122063215 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.090224001 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.114812435 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.129247268 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102683322 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.115746253 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096654711 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.114821563 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.097836376 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.115365486 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090731907 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.116522877 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114429817 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.098413202 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.115269527 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094683474 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.122567807 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104811479 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.116385536 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.093996565 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119559399 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.11501907 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.097934478 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.115236943 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.091363967 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.117875994 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081194303 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119145185 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090775851 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.123748307 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093659489 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.128954537 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.116533991 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102058941 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.121339062 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.097182837 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.122074835 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.089550217 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.102395287 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095474533 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119570852 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.091698702 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.116889816 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.116307951 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.091933497 seconds)
done (took 17.817850975 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.092615212 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.1906481 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.161543075 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.151191468 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.136810714 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.092129923 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.127858973 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.148837188 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092864167 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.150480326 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.14063825 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135657809 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.130453581 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.115906357 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115202395 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09656613 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.118213453 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108291394 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.153880407 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.137669542 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.171997749 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.114393302 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128364469 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141943894 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.126592457 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.142652073 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.093602594 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.119255978 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.094849215 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.133037071 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.136506485 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.096415963 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.115580826 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.113714926 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.135045132 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.124293117 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.092769082 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.12317787 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.091002971 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11824778 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.147735111 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136746227 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.097912452 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.122384907 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09544453 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.1256647 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092943809 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.127707859 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.127510727 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.096080434 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.133096967 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.1635934 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.119444415 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.114846846 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116595984 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126498903 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.108428946 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.125035717 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.091496029 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.124601315 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.116065573 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.095375305 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.132522827 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.149126217 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.095083014 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.133190744 seconds)
  done (took 9.091021567 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.111217872 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.147837829 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13475344 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110896481 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.118147218 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092230787 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.118989265 seconds)
  done (took 1.808248842 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093784357 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.143151647 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135584764 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.144136136 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.141937965 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11828937 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12348446 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.117396939 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.113483895 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.120120429 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.141793649 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134876367 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.120131867 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.124944672 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.12138559 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.1193297 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.143535831 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093538068 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120580165 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.119668659 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122062623 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136112333 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.096364102 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.119324445 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110954531 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.119858054 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.167488459 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097234658 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117028207 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.119592378 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091939165 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.158452391 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.1363054 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.101936336 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117854285 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112682611 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.137413612 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115464848 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.11071677 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.125132323 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.135162599 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.094998519 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118682834 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.09182824 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.123232748 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.105997428 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.123449438 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.096086278 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.122818503 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142081338 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094359745 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.13693443 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092525478 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.122973583 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.119762916 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096777566 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129227522 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093479089 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.143296446 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115406958 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115486471 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.138686944 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.135106654 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.113559612 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122075688 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.110192418 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.137546051 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120389215 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09598382 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121972561 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112485814 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.117159814 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.094546407 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.134102005 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120031717 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.12076584 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.147527679 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122423304 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.104711002 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.120616509 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.092720257 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.119949857 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.145275442 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09769105 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118968297 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096805761 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122158928 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090517645 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.117684065 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.120706766 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.092667979 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.1189078 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096005129 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118814829 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095550091 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.139963316 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.119072603 seconds)
  done (took 12.494491409 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095975473 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.120837524 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096989132 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120115461 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093491812 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.12032944 seconds)
  done (took 1.631652485 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.122828958 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.123345787 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.134104161 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.100904416 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.161597223 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.138012385 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.112331791 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130446975 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138470366 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105278917 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.13861177 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.138176746 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.144209114 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100813572 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.138328317 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.124643248 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.114527672 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.130964648 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130960295 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102146145 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143640159 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.124922402 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100426437 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.141088262 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122596675 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.101566768 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.131016092 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.13181076 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.107037888 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.130089443 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124282691 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.098673891 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.127476708 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126795129 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.115058706 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.127336835 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124242039 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.100988491 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.131310693 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121808119 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.114068004 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126858692 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.131530191 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.099668044 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.129757249 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.1251995 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.100119103 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.130931412 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.138066182 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.0991622 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.124842327 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.099561128 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.12375405 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.12438188 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.100646825 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129720829 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.124517263 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.112795423 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12734111 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.127006426 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.09731906 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.124864693 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.128829638 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.09846031 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.135798265 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.124131583 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.101163419 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127097828 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127043313 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.10051945 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.124436703 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121049797 seconds)
  done (took 9.751773538 seconds)
done (took 35.751496654 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.707796593 seconds)
  done (took 1.691765302 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.872676439 seconds)
  done (took 1.85971819 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.28822589 seconds)
  done (took 18.303889046 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.516957366 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.59360158 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.027007013 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179573432 seconds)
  done (took 3.300632422 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.964293656 seconds)
  done (took 1.966634679 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.287545468 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265311623 seconds)
  done (took 1.54221505 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.809181231 seconds)
  done (took 1.804083022 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.48675555 seconds)
  done (took 2.480348732 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334009391 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190859254 seconds)
  done (took 1.529808327 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.575041593 seconds)
  done (took 1.574945734 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.91800928 seconds)
  done (took 11.920348099 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.28058105 seconds)
  done (took 1.292447463 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.312989723 seconds)
  done (took 1.318226468 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.529685211 seconds)
  done (took 4.535186524 seconds)
done (took 56.111354498 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.1046173 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132200836 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106773226 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.130072664 seconds)
  done (took 1.472425221 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.110572997 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125402056 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107712 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12508582 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.136088422 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.099793813 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.128676452 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.132346583 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098781181 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.128306035 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.098774333 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.125996084 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.129364882 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101922816 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.123870454 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.127259195 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104604849 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.125462456 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128917401 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.10083361 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.123613548 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.102824776 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.131680003 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.124028192 seconds)
  done (took 3.850089185 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105915529 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.12309664 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101815413 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.12333601 seconds)
  done (took 1.463337003 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105286505 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.136604846 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.109289164 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.130563438 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.137251581 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110371027 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.122938766 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096454038 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.126007163 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129410331 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095177008 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.145587774 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.135544681 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.103976338 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.133396911 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.092703457 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.122556021 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136040338 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.104488591 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.130137265 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.097496469 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.130214239 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.11944427 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.113877222 seconds)
  done (took 3.874696983 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17742345 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.132909006 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.144208044 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.099972788 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16503637 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.146075427 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091250984 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.146234004 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.118381481 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.109403191 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.124463407 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165105296 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.10817064 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119957161 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117182327 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.093832763 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.132171709 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.105754507 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.122610481 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.132032856 seconds)
  done (took 3.569092884 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104165016 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.12143889 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093283638 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.121315259 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.104049419 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12662428 seconds)
  done (took 1.683309245 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.102661964 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.119130027 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.098578766 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.121256099 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.098065399 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.119162707 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.092070578 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.121233237 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.118720515 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.094103625 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.120582355 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.093605675 seconds)
  done (took 2.312473778 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.52214368 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.126064152 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.125039397 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.094068603 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.13052607 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.118727186 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.111087906 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.123434722 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.147029941 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.09462826 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118551572 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.096925411 seconds)
  done (took 2.826491721 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23529932 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130086967 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288721371 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363370645 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205091645 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170673604 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.288226237 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172719648 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206851451 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161622706 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235588314 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184232614 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159448192 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20931111 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145356905 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.14822934 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19766729 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275488859 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158558664 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246045201 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175018356 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171698688 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189134603 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157802584 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143222859 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180532778 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099743415 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136010591 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189972028 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209796082 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197216242 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168568365 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162281711 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.457362405 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265968764 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197094531 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2904561 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141348509 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.173019008 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.1763073 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268815407 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144942882 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211711937 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168297224 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137225087 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207637366 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.344446642 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185537676 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150713012 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148395512 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229265334 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20381249 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201425258 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14424772 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.334775137 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158218353 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166461175 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200159851 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215695386 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23656606 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198093542 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12717074 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195801925 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227826866 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194108771 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.162219535 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187774794 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155670037 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177939743 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226641584 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18296975 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174956099 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.212709195 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11808393 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172949087 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20503135 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175512342 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264035535 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192932477 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.125708967 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173916474 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15455792 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111885258 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.200099801 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130390669 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218698065 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146138999 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.168713383 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216054245 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162956632 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163515837 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218605899 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179327033 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151321189 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.087048314 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159210172 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160067017 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177870558 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142593904 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163393817 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156429606 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.135807826 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175542963 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.100557234 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217777026 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.094264602 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.357714628 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189228661 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132402183 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168409136 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154499148 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.153858164 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189063403 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202888219 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147321598 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138827907 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21569266 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211918578 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.119531229 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208919936 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209647737 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147693583 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155276814 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207360606 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246190355 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146464387 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209080766 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154112868 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140651425 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.110450361 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217609357 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162272342 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165126269 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11257518 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.216210565 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207735067 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.130780264 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142965858 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203643309 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138183518 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136696564 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150456568 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151997307 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.11559912 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145955539 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151779032 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182063582 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182260256 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159223356 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170661014 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150700434 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248613783 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146320123 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.153916488 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150797481 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.100813034 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.226347622 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207292311 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13541152 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207217147 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173636265 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235280643 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17622374 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138319285 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18216315 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108232634 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.125852081 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224811471 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169338049 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166026063 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200260111 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233124516 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189452149 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.186180499 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172230338 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207909925 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.143846063 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15526717 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142406343 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165204877 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160888828 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.127784831 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144205035 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.112794558 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154080784 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149363788 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141795094 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201246558 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202749495 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19862846 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16569896 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154900094 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190505573 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.134464975 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177944954 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.402734593 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154088041 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201609043 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226765885 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194229749 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147766261 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20596858 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.126248962 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128744401 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.147461553 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173084587 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113697598 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140016117 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167100886 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188330821 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.355662364 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177757556 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242533556 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187938612 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198213729 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.127612169 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.173641553 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185954307 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184089197 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.185777966 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145296726 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126294861 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211760985 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130186624 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241322077 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172605261 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178535311 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230838082 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154134321 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109843579 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154333595 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174853476 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1585458 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205510128 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124377591 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144229761 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.337696718 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10884736 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167346959 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214048362 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167878503 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184582858 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156372262 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192125031 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132562844 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16522899 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164086064 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167863401 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.11171699 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330559584 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226704733 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12130797 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.34102203 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188242486 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135550504 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.318388757 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210263255 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.361161309 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143199986 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161157738 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164188452 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168836668 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.317343604 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182467839 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164287708 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220091932 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160428713 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.114162376 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143711901 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155076464 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158105707 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109664374 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.152894132 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.212254441 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.113354285 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217286983 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152367447 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161983688 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177494811 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.154475123 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.123078706 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157128723 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248453237 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191739015 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194818306 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153453322 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.182282691 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236054153 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130040391 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110400796 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.139754277 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18330683 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141271352 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197204787 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.222866425 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210091999 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216150654 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177391291 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115576917 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.125052856 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163961119 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174258201 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239117255 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152167196 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152724332 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204402349 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.139099392 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109675059 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169136558 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323800584 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123537152 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223734737 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083051936 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.291540687 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131384765 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137529237 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168000819 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191822451 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.141974136 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.157095881 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198570462 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156615402 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141776569 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156047093 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.226748838 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221612511 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236847053 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187530999 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.138890277 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164640559 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.316032759 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219092597 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165025195 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112760346 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191731019 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229615288 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.199633937 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.148855662 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173565331 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174388421 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164790765 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22364808 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113739255 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237158885 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139069497 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202609063 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159920508 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148719116 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178836055 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.222578876 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118756103 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217124344 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189865053 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139996149 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109596486 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191475377 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185709381 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155319045 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104332154 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21224675 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101982621 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226808411 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240698513 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142000097 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160769688 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151400337 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141350474 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159623209 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16466357 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142670193 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.143784001 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226994914 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.112792974 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22030043 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209893762 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17569388 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.341124704 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146872005 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.713989695 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107986934 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228408714 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15299092 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1842797 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152724364 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1786605 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164840351 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172942128 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202154239 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164635919 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.236775562 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230804753 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.185193869 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138969585 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165734434 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153192759 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.149742222 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157017232 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172696145 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163935417 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.124020645 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.214846797 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161604033 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111014535 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145019731 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232651971 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125962229 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215644526 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184190814 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141888355 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179383638 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196712176 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138789213 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.189747727 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218425978 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119976439 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155307844 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.142950972 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157822154 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272088181 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100716059 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216613902 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193582775 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16640442 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172282818 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.152577222 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197483924 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190284975 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195146439 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14967023 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162701392 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162636975 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145028845 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.108997607 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160459019 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172277837 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.155853315 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166524588 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.170993579 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201846271 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127530858 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148552286 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297582379 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179988762 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245352941 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.11192919 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141498181 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165096301 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150776921 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.183833043 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185447562 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.141682734 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140670351 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139359482 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13489499 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.1443693 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162779194 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203245939 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315923355 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238615299 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.141686387 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.285953977 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118161894 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161026998 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.120207556 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.111330459 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155644754 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15103323 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15607693 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227949872 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272045519 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.125149303 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.140112869 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156266492 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12935827 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113580424 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170153332 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165751824 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212077668 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119743483 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.11387205 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162328705 seconds)
  done (took 87.16162967 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19774285 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.144595505 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155914669 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.208872913 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.185719018 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.29958396 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.216943262 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263388775 seconds)
  done (took 2.776274909 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.098341591 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.157792343 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.161187859 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.140137555 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.096279306 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.125340986 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.390835601 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.137298806 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.096312385 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.154601776 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.152196637 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.125577784 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.651013016 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.125586832 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.123861684 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.161407498 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.122332912 seconds)
  done (took 4.119276113 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.148451313 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.500327951 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.970610482 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.201047069 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.164633902 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.121045022 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.719666604 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.125076006 seconds)
  done (took 12.055709807 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.129084052 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.149485179 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.166980707 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.141100665 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.154555498 seconds)
  done (took 1.8511614 seconds)
done (took 130.016850906 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102686313 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132715302 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102327106 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.134593643 seconds)
  done (took 1.568924459 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.101748191 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07358617 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103937156 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.078101517 seconds)
  done (took 1.465679783 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.198506018 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.174338486 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401698059 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074974946 seconds)
  done (took 1.617232526 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.120968567 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137040001 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.136910253 seconds)
  done (took 1.512744289 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.111029927 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.133627524 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106955981 seconds)
  done (took 1.458293403 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111839339 seconds)
  done (took 1.225978747 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.115945496 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.144885071 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.116589567 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.143627719 seconds)
  done (took 1.635604262 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.103192658 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13053544 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116824883 seconds)
  done (took 1.465831209 seconds)
done (took 13.432588988 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111557122 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.5297778 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.421903903 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113947863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.731023646 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.412961826 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.046061273 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150662134 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17493639 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124575248 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11592042 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.706529892 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.028442799 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.445364788 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.016576475 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.474489711 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680040385 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124464651 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095945705 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125715616 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.029532773 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125301912 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125245614 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097451191 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70681943 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42902841 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099445037 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.476003271 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096738432 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133919354 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383423279 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126796405 seconds)
  done (took 17.563148759 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10376899 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184697591 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134844485 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099060405 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.132421528 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097791258 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.128883383 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124069751 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190528479 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099140213 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146493137 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095852186 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130329503 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12639333 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119610316 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.125686237 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12339199 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09813194 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123700246 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098979792 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144586771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095930026 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127777858 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124152443 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099827757 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.14037113 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125918635 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097801658 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124600502 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.106149105 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128502793 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099064303 seconds)
  done (took 5.013544182 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149251973 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.194345463 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13769415 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.158815688 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178078249 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099773014 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.205335273 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152771324 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192098817 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125798545 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117409171 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124925339 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.16012991 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.100293088 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147063874 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097609234 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127229007 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123886358 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09706351 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12603549 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115938945 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125097616 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125628619 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097049824 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126627356 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139609186 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100734963 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12441263 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097523426 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.135267734 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126883871 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101022608 seconds)
  done (took 5.350834938 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.102073086 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.131178842 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113680124 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143571575 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.126796231 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.101537355 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.129117276 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100080555 seconds)
  done (took 2.067716947 seconds)
done (took 31.110926351 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117065318 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132216222 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.111279799 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.139682009 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.135386635 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.110607891 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.124037346 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.108218602 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.139192292 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.105584982 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.142996794 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.123532312 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098966219 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.124390736 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.11020816 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.131851799 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.138293119 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.106645203 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13998947 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110613975 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.127681713 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.136201972 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.108444452 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.140153577 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.111018871 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.140526242 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.141037725 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103392177 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.127835665 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097796269 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.131296256 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.108990057 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12910498 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.140145278 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.103095232 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.130037349 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097584236 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.13092249 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.138528721 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.109245006 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.13236592 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.109345583 seconds)
  done (took 6.254219976 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.115408642 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.146647197 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111100164 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.112893442 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091789686 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083584335 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.145796368 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081734173 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.115101458 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11389894 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.107041785 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080081958 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.110239794 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076778737 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07898778 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.108065645 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.084046881 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077626341 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.108699035 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080604987 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.111553462 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076862921 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081730311 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.110934386 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078206349 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111406312 seconds)
  done (took 3.729092003 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10503562 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14590331 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118048429 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18170284 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162121229 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.134171333 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110171635 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.145573578 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112919408 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.126420651 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12854835 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126390252 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144329254 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103919026 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.130549285 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141701374 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.111801686 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.128413455 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10654211 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.147164265 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.142422659 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.108065715 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.146524498 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135793805 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.097895308 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127663997 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.10387942 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.140341372 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.104251068 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.137076011 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132488413 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.100405538 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.128133864 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.136727746 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103776367 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.127153764 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.116580935 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.140930596 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.134855347 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.098789974 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.133934157 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.099534856 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.148393073 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166112505 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097434474 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.134254237 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.099113272 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.137723453 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.126834958 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115436403 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136805656 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097282501 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.130270173 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.125458603 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.100701178 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142146161 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099354034 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.129511507 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.105644479 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.131947556 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138027133 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.102782553 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144320398 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.097791428 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.135318742 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.126869697 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.098890132 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12404782 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.121104558 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134120414 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16851189 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09760234 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.129747175 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106834845 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.135625162 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132927535 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098071077 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.14388381 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106356777 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.133171414 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.137326847 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100939134 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.129821489 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.114780333 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.129527618 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125886729 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.099531073 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.133134762 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100426048 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127734084 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110877798 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.125913529 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.128902962 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111148112 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.126145141 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.097743513 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.134477734 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.130494213 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096955672 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.14018509 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102512984 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.127481039 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.136521271 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09804682 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12933716 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.106234035 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.132656726 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.124479335 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103425794 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.133200134 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097226232 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.131214076 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.100502502 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.129730489 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134454056 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.10510876 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.132441364 seconds)
  done (took 15.562523335 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.239917721 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.225385381 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.194613335 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.305438395 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.140568548 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.151996949 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.222452765 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.161946694 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098914814 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.1661758 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176564185 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.189207645 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.177884444 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.187640615 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.179034589 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.126744519 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116213573 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.173556781 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.253812863 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.273494449 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.150133509 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134989536 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16721216 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.169633549 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.112499701 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.137837085 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.146190488 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.111248084 seconds)
  done (took 6.027833634 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115315233 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.161223934 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.133362648 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.121167432 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.155281262 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126740746 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102154224 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.129701521 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110504867 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.142738703 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.126687328 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.104330212 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.135458601 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.136842089 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.09900105 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.137079367 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.10819379 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.129092271 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129104602 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.102871714 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.138368879 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.107277119 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.131943987 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.125033686 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.109102792 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12696758 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.092007538 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.148884167 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.128096175 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119687764 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.126581955 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133136739 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.112902834 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.127587987 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.098335868 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.1296118 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099105263 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.130592549 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.098935269 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.127073753 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124698662 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.082242279 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096855364 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.143418747 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.135225405 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.084175214 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.135492926 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103752597 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129914539 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123311717 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101918828 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.130273285 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.101358881 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.136116018 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099903397 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.129950813 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100623869 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.120261299 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102976464 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.130861593 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.087637421 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.126299605 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.130818785 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.093941163 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.136585939 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102228413 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127342022 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.099765878 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.132791542 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.135463236 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.101400364 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.133972307 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096001196 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.131072767 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100492056 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.13443807 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.128900437 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.097862874 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.126489303 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099607361 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.107322614 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.100635089 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077424608 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.13184706 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.125516857 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.098011887 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.129161494 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.105593457 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.145029514 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129131712 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.10761083 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.129492168 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.096459909 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.132187495 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087206251 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.131165908 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.14377773 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.117595307 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.128602192 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.125681613 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.113921727 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.13175352 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097478597 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.109695169 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10826386 seconds)
  done (took 13.61509355 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137637795 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.159478692 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.130244743 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.117559542 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.16290248 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.164469072 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105309325 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.136247299 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.127971044 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.118777983 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128131343 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107237039 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128881286 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.112451731 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163548452 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.13846065 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099625001 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.144573462 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132164387 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.174278782 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.118231968 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.148589586 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.115675898 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12927819 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132493955 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.117106572 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.167074299 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.141745309 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.112268222 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.147538212 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.112096017 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.168667383 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.149552864 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101952444 seconds)
  done (took 5.707096823 seconds)
done (took 52.01785147 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.258159421 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.439553773 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.216084085 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.124342849 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.268166104 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.225793657 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.224961325 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.218909162 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.250600071 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.214909666 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.474137512 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.709913916 seconds)
done (took 58.766764313 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.237282706 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.374234483 seconds)
    (2/2) benchmarking "String"...
    done (took 1.517688456 seconds)
  done (took 4.027571027 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.829449952 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.160379929 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.477984209 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.238006819 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.233207215 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.502367423 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.013165751 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.615527482 seconds)
  done (took 28.377995587 seconds)
done (took 42.612126689 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.224277321 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.247503001 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.255318709 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.192287848 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.330597013 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.254917776 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.475989876 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.232996087 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.238811616 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.200464057 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.216106552 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.217223954 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.224910226 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.515132841 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.220334988 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.22081446 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.263755172 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.719879467 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.608605524 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.221645539 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.234767024 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.309519423 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.223632958 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.221189392 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.239876372 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.213194805 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.213042852 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.23990054 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.541313532 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.21998657 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.316734966 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.674818074 seconds)
  done (took 190.866002251 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.212240271 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.2574792 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.319751012 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.269841426 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.601065602 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.41306864 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.379236274 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.678196845 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.236086499 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.234522639 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.426750041 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.211255099 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.487643589 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.240809976 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.246464887 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.290001994 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.439713871 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.495098988 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.249610031 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.376558111 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.236706089 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.337772655 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.253301106 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.387206122 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.222070681 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.324854732 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.248308447 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.234305387 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.408663563 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.36488689 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.247057377 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.258955216 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.783923359 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.072051156 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.215312667 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.222474526 seconds)
  done (took 150.018671248 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.21536199 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.213201652 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.215288751 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.245242145 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.214194944 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.744247858 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.744735513 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.716651346 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.338331781 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.441736737 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.429916516 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.212346436 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308544977 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.228676571 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.214705229 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.230147132 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.260559035 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.214357015 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.216433305 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.742930022 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.231904778 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.320957247 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.397530636 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.230042388 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.247800027 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.603979508 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.213408672 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21498926 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24521828 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.53913287 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.260635838 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214767175 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.551342908 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.178397763 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326136688 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.214092959 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.217531841 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246554484 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.216366903 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.492892553 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.215024303 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.215877959 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.219663762 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.841461396 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.218000796 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.746984857 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.218346298 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.138870439 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.216818612 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.214753526 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.758082484 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.783297748 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.229211612 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.21442543 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.215910027 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.21717155 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21381516 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.248000094 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.649613706 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.30836628 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.227051656 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.214716288 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240189765 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.210700899 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.245002558 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.226594895 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.573084742 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.279276093 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.326715705 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.714287949 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21497859 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.213418189 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304409837 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328188171 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.209377474 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.20882346 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20800027 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.213396191 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.316868765 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.212353595 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.575033158 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.376453483 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.227373275 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.422639868 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.307916341 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.21177974 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.560758426 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.215323984 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.213207805 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.910656038 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.210418612 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303601551 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.209768966 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.213647906 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.209946295 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.579540217 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.712685398 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.41218771 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.215654269 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.645094843 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.2145235 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.60297866 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.704096836 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.831401979 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.218159094 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321164139 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.374886968 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.230126054 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.211247552 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.358830718 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.215870264 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.268408125 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.218587469 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.608372808 seconds)
  done (took 365.335091469 seconds)
done (took 707.357671851 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.89791705 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.816335992 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.93048329 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.811014814 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.773363091 seconds)
  done (took 10.361466597 seconds)
done (took 11.49314111 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.393619934 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.394033501 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266195348 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.399840729 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24260114 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.416906615 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.375344354 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.232699837 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.317301376 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.288574988 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.316980909 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.264599887 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.250631433 seconds)
  done (took 18.290170679 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.556332603 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.531841354 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.281372338 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.544378673 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.256621165 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545185045 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.410975191 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.433855916 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.430878759 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249042182 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22612319 seconds)
  done (took 16.600494033 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.553902769 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.545060175 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285710443 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.533979635 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261356597 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545073405 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.427179012 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.429826795 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.437166778 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.250226392 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227613467 seconds)
  done (took 16.633163625 seconds)
done (took 52.656529521 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.222655856 seconds)
  done (took 2.357348604 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.260026081 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.420860685 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.241602408 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.228298281 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.223304775 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.230308079 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.229440449 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.22498055 seconds)
  done (took 11.195253133 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.222762811 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.222129265 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.224255559 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.225484584 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.226885842 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.223561158 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.223277882 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.220881522 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.223890201 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.224086121 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.222628187 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.220497559 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.226754676 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.224515649 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.222296582 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.222345333 seconds)
  done (took 20.711273926 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.226101562 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.221755576 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.222546895 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.222722543 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.22288611 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.222204247 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.222082084 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.223548061 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.222753659 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.222426108 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.221815738 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.222388883 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.224263686 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.225500281 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.22114954 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.223617574 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.223812053 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.226144581 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.229584833 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.224074763 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.226163488 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.223813314 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.222366067 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.22286873 seconds)
  done (took 30.506650742 seconds)
done (took 65.907202185 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.801685315 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.723790506 seconds)
  done (took 6.661654043 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.28286133 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.287114746 seconds)
  done (took 3.709143699 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.227471895 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.226751103 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.224221433 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.225134751 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.22593987 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.22638343 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.2242001 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.226283926 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.225815817 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.224971875 seconds)
  done (took 13.396682042 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.225295249 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.227069237 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.226782837 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.227051038 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.229313124 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.228345562 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.22589818 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.225889659 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.225773087 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.226400989 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.229116093 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.225880952 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.229780427 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.227895515 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.227658129 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.226902994 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.227012066 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.228766879 seconds)
  done (took 23.230462731 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.228393799 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.251329103 seconds)
  done (took 3.619177922 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.356156811 seconds)
    (2/7) benchmarking "second"...
    done (took 1.268563194 seconds)
    (3/7) benchmarking "month"...
    done (took 1.338144459 seconds)
    (4/7) benchmarking "year"...
    done (took 1.324557889 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.268306077 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.247977684 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.268773642 seconds)
  done (took 10.213474817 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.226474318 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.404816853 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.508000911 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.803995254 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.230698139 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.23482438 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.108262351 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.233608339 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.238079623 seconds)
  done (took 14.129801384 seconds)
done (took 76.097825792 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.198040485 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.237452401 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.405707245 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.233778188 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.255245706 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.565161846 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.254922914 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.346325093 seconds)
done (took 37.639119858 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.236259773 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.198887655 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.892569633 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.231566267 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.256980343 seconds)
  done (took 18.72229591 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.184718378 seconds)
    (2/2) benchmarking "read"...
    done (took 1.564639986 seconds)
  done (took 4.89176807 seconds)
done (took 30.99290771 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22919248 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.233312774 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.230340944 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.231462482 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.230891985 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.229053192 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.232278911 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.22959472 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.233132557 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.234131255 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.232576947 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.231288411 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229176352 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229328934 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229789818 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230893035 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.229032055 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230868708 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.227536393 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226587083 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.233692543 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234872054 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.231960236 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.23173208 seconds)
  done (took 30.685940019 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.229969165 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.229925393 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.234113086 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.234734638 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.230695373 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.234201521 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.234383772 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.231695487 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.232930968 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.234965106 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23124995 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.232833591 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.237059986 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.23109883 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234553571 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.230915686 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.234151765 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231845617 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237029254 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.233321854 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.23554386 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232481225 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.232970454 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236318865 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.232967042 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233127896 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.23631939 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.235804816 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236154736 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.234340875 seconds)
  done (took 38.152548184 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.237604801 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.244591706 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.236355093 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.234999796 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.235963647 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.237576096 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.236237074 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.235291906 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.23649669 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.238450613 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.236377988 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.235587025 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.235936478 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.235919082 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.23645273 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.236317383 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.235669151 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.235794609 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.235476395 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.236068513 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.23764382 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.23739209 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.235060949 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.236348132 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.237284633 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.236688152 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.235914416 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.236703582 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.23690635 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.236795624 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.236765406 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.237838247 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.238186853 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.239199932 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.237274435 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.23756999 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.24209563 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.244235134 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.239709226 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.237600447 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.237417914 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.239558015 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.238442079 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.23842087 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.238268431 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.238101532 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.239881707 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.23764608 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.238719033 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.239625924 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.239645345 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.238126924 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.239927515 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.239552894 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.238019099 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.237527441 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.237224139 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.238298654 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.239921553 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.239494461 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.237062835 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.239370383 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.240897665 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.240368116 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.240372949 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.239122125 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.240413222 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.23919738 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.239294725 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.239281147 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.240521302 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.240481496 seconds)
  done (took 90.28927314 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.236126828 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.238429004 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.236191761 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.235852131 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236493729 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.240768904 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.236990144 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239416725 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236862875 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.238930635 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240621518 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.238630067 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237918271 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.240848802 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239893171 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.237707984 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.2424561 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239443318 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.240952873 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.243521148 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242226477 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.239314881 seconds)
  done (took 28.409297247 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241386809 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24409356 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.240795602 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24361399 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.241330899 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.243745159 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.244861447 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246715929 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243874926 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239009259 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240312912 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242590909 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.241133047 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23908386 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239006935 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.242087145 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243807099 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.241274244 seconds)
  done (took 23.507634359 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.238696265 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.239779353 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.242827593 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.237738186 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.240543643 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.243525345 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242004649 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.241889583 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.2428652 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.241243572 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.24054279 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241360068 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.245159607 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240946933 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244744937 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.239531929 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.244382587 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241183991 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243772077 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.242441394 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.239615153 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243182426 seconds)
  done (took 28.471149245 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238441971 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.243790098 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.240951267 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.241874447 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.241305014 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.24556426 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.245236512 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.241701465 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.246102456 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.245781048 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242729651 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.245689242 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.245413931 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.24262644 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.241211705 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243322675 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.244618461 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.244280416 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242396937 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.242252627 seconds)
  done (took 26.019393499 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246128749 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246746076 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.247069232 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246729261 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245265241 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.244028194 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24343001 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.24633222 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244880629 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.246195446 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.241194641 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.243537596 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245943887 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.24609245 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.245310733 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24603597 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.246385091 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.247227728 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.245574329 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243704614 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.248368021 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243428542 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246135119 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.245176753 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.245075482 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.245434974 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245277018 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.246617515 seconds)
  done (took 36.027993276 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244867046 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.246659511 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.245533881 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.245022563 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.242924437 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.241578199 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.246883786 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.243413434 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.245494465 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242434979 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.247017037 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.244820749 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.246485075 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.248405188 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246751512 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.247027569 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249532096 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.24477675 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24481064 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244161055 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.246426781 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247104229 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.247983725 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.245222593 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243847499 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.245997638 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24573204 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245288912 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248999872 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.244707696 seconds)
  done (took 38.529133791 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.264482768 seconds)
    (2/2) benchmarking "in"...
    done (took 1.265803332 seconds)
  done (took 3.688126766 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.244162059 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246751541 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.248047964 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.245432672 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.243546225 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.247885223 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.24889184 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244945809 seconds)
  done (took 11.12687486 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.246549739 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.248661532 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.248471245 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.249828157 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.250795388 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.246444979 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256872309 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.272141477 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.252616933 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.251642082 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.256932748 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.257193805 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.252298367 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251939899 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.249873327 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252503548 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.253281574 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.25133934 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.248899336 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.250214544 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250861825 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251800332 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254236347 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.249667492 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.251984023 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.262011738 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.272167701 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.251969715 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249154972 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.255093315 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.251892754 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.24796758 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.252586615 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.250639035 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.250684518 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.252711211 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257487971 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.272554917 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.258668938 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270627805 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250842439 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.250676553 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.252698824 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.253056006 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254767848 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.254715709 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.252299922 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.25126433 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.252642239 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.254812501 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.258130071 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254315207 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.25083766 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255627892 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.255646364 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261426024 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.274432356 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.254998387 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.261980344 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.262770061 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.283088671 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.27905343 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254050261 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.256712943 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26050354 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.278274725 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259994265 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.272500455 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.251346425 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.254025478 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.2624294 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2866091 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.283143296 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.257818752 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254857669 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.253122409 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256242682 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256085123 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262677647 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.279103874 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.255894419 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256179465 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26411299 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278090357 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.25544226 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.257060435 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.256649102 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.254259718 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.257272069 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264825388 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.27651191 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.25587122 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.25613066 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.256790116 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.254551265 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.257495876 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.252031695 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255414783 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.252797237 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.256795669 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257035093 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259655862 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.265205378 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259395904 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254069413 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.26227214 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.275100113 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259335324 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.263074907 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.276904192 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257864355 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.258595844 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.262478302 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.255995276 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26321038 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.265550613 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.257582404 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.257529863 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.259479625 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.257957339 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2687454 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.283020751 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.260799584 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.25794919 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.261264827 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.271346159 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258017571 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.260220726 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.259505454 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.256876513 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.257164836 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.259340983 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.260845301 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.258613611 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256557708 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258209461 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.255862105 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.259412231 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.259596588 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.260079546 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.260527531 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.257779722 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.259597191 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.262514144 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.261001089 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.260068216 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.266534786 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.278904093 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.260066034 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.26104254 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.258944631 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259199237 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.260033555 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.261656699 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.260194772 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261915531 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.25750743 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.260931321 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258926745 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.260128012 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261943242 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.261129609 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265214599 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.262307263 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.264205676 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.260555533 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.260206581 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.2607707 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.263205653 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.260630201 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.26303576 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.260370433 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.262776764 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.270963048 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.260093644 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.262316528 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.262979314 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264059381 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259261437 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260008383 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.261737213 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.269743295 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.263165671 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.266395703 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.280051771 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262285432 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.260262061 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.262108875 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.260732833 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263876455 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.262986646 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.270015654 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275498196 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289792631 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.26412088 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.266400025 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.266279021 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.26755209 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.264967128 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.263569544 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.262574073 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262094775 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258707647 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264124808 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.26142181 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.262695736 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.258595563 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.262995817 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.262064193 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.264767425 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2631416 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.263887412 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264234188 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.264361867 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263169478 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264216165 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.26051576 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.257050084 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.262032593 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.261227264 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.263225132 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.26564083 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.267468066 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.281354109 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266243479 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267490282 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.267540615 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.262785245 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.263838022 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267173403 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.268214366 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270309373 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.285670019 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.264941194 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270474295 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.283316482 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.262794804 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.264842928 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.265874047 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.261897201 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.269118254 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.274772486 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.267659342 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.266117755 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.26291201 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263149775 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266931546 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.271706056 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.281561512 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.264983408 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.263896148 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.266775948 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.263630905 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.264937912 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.264946413 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.265127771 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265087602 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265890154 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.266030688 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267883516 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.263844012 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.263785333 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.265610934 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265986164 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.273456894 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.269355934 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.282440215 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.268368569 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.268246128 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.269530389 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.268563127 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.268830007 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.26468842 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27728387 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.292831528 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266282259 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.287022577 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.265327767 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272133398 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.285982146 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.269496495 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266374744 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26537122 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.265467775 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.265865284 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.263382279 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269279597 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.267736581 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267702375 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.269147481 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.271861571 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.265176439 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.266415435 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.266934548 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.268297615 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.266247179 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.269092835 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.269320865 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.271152354 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267230517 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.269779842 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.266327353 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274293658 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.289890798 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.267074038 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.265845103 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.26801594 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.269022369 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.269519456 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.26680524 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.271867843 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.277245169 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.269385484 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.276508592 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.26853499 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.277127943 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.287443766 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.273234278 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.275955109 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.265248396 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.268732132 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.270980428 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.269242687 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275083775 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.291258122 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.270059186 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.272748672 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268917134 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.268502364 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.269816025 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.268585568 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267621739 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.271346164 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.280113137 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.294208218 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.276393441 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273420499 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.270402337 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.271800856 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.269744124 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.267443293 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274862609 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.272874389 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.268145359 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.272208819 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.269558689 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.269279806 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.273065358 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.270192903 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.267053684 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.273724191 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.278270018 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.293178904 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276360844 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.270261316 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.278861177 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289878785 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275227877 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.29436901 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.269344089 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.273781923 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.271250088 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.271971849 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.270623757 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.272616074 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.271533242 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.272066157 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.275102488 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.271363619 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.272712114 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.27117353 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.273402232 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.272074958 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279317919 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.298515859 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.274015506 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27678684 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.271257549 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.27379482 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.278889181 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.269713343 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.270731891 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.276258474 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28524784 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.282280992 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.272344795 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.27349697 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274720481 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273391873 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.273299377 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.273639965 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.274521932 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.274288279 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.274220345 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.276151473 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274859224 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.276444649 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.275876798 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27503694 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.274909387 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.2791891 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.292856894 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.27388054 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273517654 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.27563163 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.274219849 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.274855522 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.274388496 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.2757361 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274343538 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.275341087 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282963692 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.284319929 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.278108847 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.275306924 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.276724496 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.276749781 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.276914636 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277291286 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.274333325 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276188084 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.274830952 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.278396314 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.276415231 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.276097141 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.277726385 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.276894842 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278722338 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279797034 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.287161564 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275896382 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.272115936 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.27618968 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277627836 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.275845734 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.277966199 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.284878281 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.298817149 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.286037296 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.283736298 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.282216252 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.276398919 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27913882 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.284142655 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.276115425 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.279664836 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.27915636 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.279330389 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.279318136 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.28129332 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277879079 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.281151892 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.295383228 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.276660945 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287425593 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.303070604 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.278739526 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.28242889 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.283139465 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.279154815 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.277875951 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.276992097 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.278043988 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286035708 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.298403987 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280507787 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279494667 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.279433838 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.278907857 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285045547 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279348202 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.278638767 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.278693265 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.282780805 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28008923 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278543431 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.278101487 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.276935214 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.27954689 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.284209624 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.28469882 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.276867894 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279612154 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.281276975 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.278733625 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27851393 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279446672 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.275828613 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.279001372 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.280517918 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282556961 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.281236249 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.283435077 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.28148172 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.285199408 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.282574618 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281187839 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280886115 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.294227928 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.292265857 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.279243713 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.28013681 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.281445904 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.282783511 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282493327 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.282467432 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281152408 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.282982229 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.279475385 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.282112149 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.280315016 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.285523054 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294143251 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.30743814 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28136699 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.281000357 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281914808 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.284679063 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.280637894 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.280372853 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.285122308 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.283447022 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.289844894 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.280852871 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286764729 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.301687862 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.282471458 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.285596364 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.285719665 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.290269265 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.284168066 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284509865 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.281342094 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.285955855 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.29841102 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.299634532 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294539837 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.313421071 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.302534769 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.282855263 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.283472981 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28090219 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.280316505 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.282526243 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.27813256 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.281676892 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282669151 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.283214696 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.283257348 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285007816 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.287093003 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.285662419 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.283985514 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.282933984 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.283159455 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.280560806 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.280188018 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.28291337 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.282554746 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.2812366 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.2835905 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.282805373 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297223794 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.313606331 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.288112901 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.286338969 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.279166986 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.289816711 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.287909442 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.29439138 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.29275802 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.289154706 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.282919258 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.283254336 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.283912079 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.284129127 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.288024518 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.284600502 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285689712 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.281452525 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.29796656 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.312018347 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.290054952 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.299803169 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.288473815 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.285475836 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286812661 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285937812 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28307451 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.28555147 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.288037668 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28849741 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.285297666 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.287023698 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.292227483 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.295623235 seconds)
  done (took 758.939316691 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286541926 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285877965 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284176023 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287768091 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288166144 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285676844 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286442316 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.285342247 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.286813717 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287327367 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.28551427 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285224743 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281970188 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.285121913 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285250355 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.285162397 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28574901 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284768635 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288429607 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289455905 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.284134379 seconds)
  done (took 28.198586641 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.289086687 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.286761865 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28620199 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288577739 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286505238 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.287650226 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.286427279 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28719323 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.288582245 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288147198 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.290569155 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28856815 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.286001403 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.284916055 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285063462 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287166946 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.289363898 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287043242 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.287235371 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286364489 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289834022 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.284995807 seconds)
  done (took 29.519707386 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.290048409 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.288436149 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.288493624 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.283985127 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.29464206 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.288017571 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.292287094 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.287178577 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.290547664 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.290157033 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.290205037 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.290991689 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.295845157 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.298177768 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.291009428 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.290294384 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.43408042 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.292448464 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.289785632 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.289821951 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.286711577 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.296758863 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.306816897 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.288699541 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.288747966 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.289645255 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.291210707 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.292400527 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.293511018 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.291974193 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.296664571 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.290629164 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.289699871 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.295467138 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.29278285 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.292709246 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.296508687 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.294216554 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.287411846 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.294631565 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.303999163 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.314605419 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.294085984 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.296146681 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.311631213 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.290483898 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.295509921 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.30457413 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.28878485 seconds)
  done (took 64.712341128 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.291707656 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.294948807 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.292313539 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.29378738 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.294429223 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.295038006 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.291247532 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.29143522 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.288776469 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.292560314 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.294765784 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.289410576 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.292973592 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.296127822 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.296231361 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.292593565 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.292172217 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.292723938 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.294538518 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.293065036 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.294266119 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.299083398 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.294198173 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.29286036 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.296024677 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.295579921 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.292897504 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.293690443 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.291708765 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.292597657 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.297350842 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.295842034 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.294053333 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.293826 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.294025086 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.297316967 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.295858945 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.294142069 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.298164667 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.291145755 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.294303079 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.293807015 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.294768946 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.297507175 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.294920444 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.291518826 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.294117407 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.294235619 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.293625991 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.297037663 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.295322873 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.295471112 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.295263415 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.294751926 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.297007745 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.299116004 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.294953043 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.292249147 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.298069541 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.295972602 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.296238902 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.297564639 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.294538243 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.299012051 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.298336209 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.29654037 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.29267726 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.30026004 seconds)
  done (took 89.237212837 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296415546 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.296458337 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296213221 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295273103 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294523519 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.298690438 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.294994539 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.296539179 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.296707449 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.294774134 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296740314 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.297444391 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.298058612 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.296376757 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.301120431 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.296246517 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.30054917 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.300456162 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.295595567 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298100161 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.300783041 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.297522028 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.296367975 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296700655 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.297074627 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.296536171 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.296766136 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.298755185 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297284953 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.297179658 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.296204824 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.297961925 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.296711877 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.29468477 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.297673176 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.298994713 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295492517 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297671107 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.297129732 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.298261878 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.302643745 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.299619095 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.299059214 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.300248318 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.2969624 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.297453404 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.30092619 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.301263408 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.303088624 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.301326236 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.297404516 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296072024 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299048647 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.29945649 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.297778577 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.299167867 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303202597 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.302158962 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299837513 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.298849584 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.300919423 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.301574654 seconds)
  done (took 81.691209086 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.300830133 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.301249946 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.300859363 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.301754581 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.299106798 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.300134099 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.301160064 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.302928027 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.305423537 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.303447574 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305724979 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302358033 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304969942 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307153125 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.30257497 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301291378 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302797596 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.300331098 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30489512 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.297539123 seconds)
  done (took 27.254825856 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.296970697 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.302164189 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.301212332 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.300580497 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.307134873 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.303083692 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.304718056 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302640975 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301866666 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305733407 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.306169458 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.305498129 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303860801 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303771789 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.305192575 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.304245787 seconds)
  done (took 22.064096105 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.300877455 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.306229547 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.305278576 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.301476399 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.301585771 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.30263881 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.305948167 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.304697544 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.300161274 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.307201908 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.305711631 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.304470087 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.303789665 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.303770118 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.301787395 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.306183675 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.299247848 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.299218326 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.30218848 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.308844469 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.301677662 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.30065546 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.303291628 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.306016145 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.305693956 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.305481305 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.305547637 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.305356871 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.304513164 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.30454128 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.304672778 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.304079824 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.30427445 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.304851605 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.306207687 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.301100485 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.306956154 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.306879602 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.307510003 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.307663188 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.307712276 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.304714998 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.308100011 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.309114298 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.30668527 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.308191968 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.303421276 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.305101471 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.303567859 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.303349558 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.305889218 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.306499819 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.306888946 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.30927926 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.307650763 seconds)
  done (took 72.976263481 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307234968 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.306360138 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.302234054 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.306964824 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.309061426 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.307983051 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.305654037 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.306580737 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303685705 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.310094297 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.305086392 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.310038583 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308332236 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.308964583 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.307858656 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.309745627 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.304460897 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.30527505 seconds)
  done (took 24.739363698 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.303114044 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.30820703 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.31110421 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.306851627 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.306062269 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.310430097 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307790179 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.310650022 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311787297 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.307789204 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303253696 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.309314571 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307111311 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.311440187 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.309269364 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307742124 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.310062554 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310502366 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.310932172 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.308954166 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.309785937 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.307613176 seconds)
  done (took 30.004068093 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.306357031 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.311443056 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.309681567 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.324916041 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.331173893 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.331094635 seconds)
  done (took 9.130256287 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316079595 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313840264 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.309904457 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313426375 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312683205 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311024376 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310268667 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312293968 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315790861 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312322261 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312554023 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314754762 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312964792 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309827692 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314886138 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314329057 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310719881 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30846632 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313754404 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315736706 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311625422 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314865045 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312113774 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311251363 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30720782 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310138352 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314339013 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311367248 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312979599 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315306224 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314060148 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309513059 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316998145 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314437324 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316149012 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316162896 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311629628 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317187822 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316737721 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312712633 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315435354 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310841794 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3119223 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312543947 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314228479 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312812858 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314623684 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310025282 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312621261 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314815751 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314226785 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311580463 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315835612 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317659834 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314675256 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315833774 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310285239 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312793248 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314413063 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311698137 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313482682 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313428828 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312241339 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311318507 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316736816 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312783696 seconds)
  done (took 87.913264415 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312455473 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.3109365 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314466381 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312997961 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310974371 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313285238 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312666539 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311596381 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314200939 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311884616 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314353265 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31646836 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313105228 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312914112 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31371392 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312323495 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311514072 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315181165 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313102141 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314318712 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315464662 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315602937 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315462445 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315388603 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31531181 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32054203 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316156289 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311941589 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317566245 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3161473 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31588326 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315754027 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31730934 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.314505088 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318141209 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315059 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31713448 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316341482 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31746992 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319959613 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314776954 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318709547 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317230192 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318440412 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318494154 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318473217 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317343764 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31851282 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319946999 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316207313 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316244975 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317679147 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319117044 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317506421 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320266111 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320275082 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317637483 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31604783 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318654852 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320481138 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318371357 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315875004 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319482512 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314930259 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317693128 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315215914 seconds)
  done (took 88.075165201 seconds)
done (took 1770.506210382 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.477679183 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.431303855 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.318857608 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.354745325 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.314941175 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.339844172 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.316703339 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.316227723 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.319530864 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.318159114 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.319703454 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.505933562 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.316222864 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.314918627 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.317549705 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.41361531 seconds)
  done (took 42.921039637 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.342412863 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.326707917 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.431674222 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.34113193 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.347946293 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.504086912 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.380803358 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.327519182 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.487010157 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.363752957 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.860578806 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.349622556 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.323733544 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.411473744 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.343825867 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.504921099 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.566566609 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.832898641 seconds)
  done (took 30.272282414 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.756077318 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.328861488 seconds)
  done (took 9.310353105 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.345320897 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.328913103 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.324265821 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.326052796 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.322696177 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.312032898 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.325030322 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.321057191 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.789286112 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.448937248 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.345793377 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.334492506 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.344162404 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.325099039 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.322565312 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.361302869 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.490000822 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.319739925 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.321965327 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.330715801 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.321410542 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.433578086 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.383220866 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.324906074 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.447479821 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.820444603 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.330147252 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.330511683 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.472057468 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.322513827 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.32387937 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.326159678 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.324339879 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.209583453 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.836549451 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.32062929 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.346440283 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.335450027 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.322118049 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.487960001 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.328799188 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.328946262 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.315066263 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.814913839 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.462209683 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.439952655 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.521910693 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.340898906 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.330801114 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.389933963 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.326704726 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.332752711 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.373320204 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.125995635 seconds)
  done (took 111.028446736 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.339317599 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.7162154 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.490235029 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.343409207 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.000127433 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.993186126 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.338212343 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.598616036 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.361223451 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318425203 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.619409594 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.81724677 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.336205599 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.327341104 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.950129028 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.40844274 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.319707689 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.047313074 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.336181195 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.317575181 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.816835496 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323682984 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.337323451 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.476188635 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.353624018 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.770185091 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.731373834 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.795633512 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.342894335 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.31933843 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.777052438 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.339797077 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.357671074 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.321006473 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.580743822 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.672959191 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.666692768 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.339116054 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.323574542 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.322227745 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.330603425 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.772134283 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.669234426 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.334143403 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.318630574 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.781206353 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.334104246 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.324216441 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.320284947 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.519038973 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.200087038 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.326611926 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.737910378 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.329106717 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.685878069 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.378678867 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.378622521 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.794045974 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333594367 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.414187792 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.358948616 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.320382276 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.325300552 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323525698 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.343165041 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.667418442 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.476373812 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.32356179 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.665750763 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.792045771 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.34200739 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.833385074 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.213815214 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.342545389 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.409265539 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.333400477 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.857846099 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.813959157 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.367235206 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.320030563 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.655409014 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.346488534 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.606260068 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.341881198 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.323451467 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.839908662 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.328594271 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.3500503 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.318955995 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.329368502 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.947710711 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.3299014 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.602857045 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.349044185 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.324144538 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.325703062 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.333658535 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.321978285 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.339655329 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.32442645 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.838919614 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.349667088 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.303215139 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.346752863 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330648661 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.338774992 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.329752242 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.325488852 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.542764596 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.768294715 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.347255701 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.328283433 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.32318929 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.33135223 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.508797106 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.329240477 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.628564497 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.346845952 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.32463695 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.344782595 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.033584158 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.365458512 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.326270466 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.330621229 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.190977166 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.536726451 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.348704925 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.341259403 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.330063459 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.347017981 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.518097862 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.344768662 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.411129368 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.325501974 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.022295451 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.362860355 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.343661351 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.826155638 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.335448028 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.167928408 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.346829989 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.32486056 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.62634985 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.591042402 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.38133707 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.327944837 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.340980375 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.007359232 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.374287651 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464546817 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.351062752 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.372556599 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527773247 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.693102681 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.326193368 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.970739912 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.328305215 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.538382196 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.335875815 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.629523108 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.811893136 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.340620716 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.337952592 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.025087196 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.023493042 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.965525022 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.328360106 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.602768051 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.297791024 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.80719704 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.327323675 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.329684612 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.749264757 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.338705304 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.330213356 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.329210098 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.333436236 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.381681696 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.501907329 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.980623749 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.330696859 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.767142097 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.354848851 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328044329 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.353969153 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.329379823 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.675160039 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.415047925 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.329971873 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.374720341 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.327737029 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.332888391 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.795277528 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.181618353 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.334982 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.483251646 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.954125181 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.348855968 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.334735287 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.909329505 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.644951878 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.832176463 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.353953454 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.630861036 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.354897518 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.369315878 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.902522485 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.365290762 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.794957172 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.346234618 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.330536248 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.920958429 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.348416911 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.684962808 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.328978583 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.330889203 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.862334809 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.352321844 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.334883278 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.628852014 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.350330605 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.586397117 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.337397409 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.35714519 seconds)
  done (took 1109.246464641 seconds)
done (took 1304.002460692 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.332197497 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.335557193 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.31705192 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.339525486 seconds)
  done (took 26.569095466 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.343880478 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.336329889 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.341237139 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.339576763 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.341099024 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.338398103 seconds)
  done (took 9.286890684 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.42443698 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.337732415 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.338304883 seconds)
  done (took 19.347783123 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.543420058 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.592246383 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.665262333 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.484633341 seconds)
  done (took 10.533601259 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.341083464 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.342129552 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.33982798 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.3441686 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.346068671 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.349425097 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.342143067 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.342544182 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.345833756 seconds)
  done (took 13.339322413 seconds)
done (took 80.322815509 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.902646458 seconds)
    (2/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.314435435 seconds)
    (3/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.090392015 seconds)
    (4/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.175415823 seconds)
    (5/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.078626534 seconds)
    (6/286) benchmarking ("sort", BigInt, true)...
    done (took 6.334290275 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.967782543 seconds)
    (8/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.586985767 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.609444437 seconds)
    (10/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.36723187 seconds)
    (11/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.535294264 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.396982114 seconds)
    (13/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.838573142 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.36998585 seconds)
    (15/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.699001002 seconds)
    (16/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.384361786 seconds)
    (17/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.445391091 seconds)
    (18/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.335992388 seconds)
    (19/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.315023105 seconds)
    (20/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.482456934 seconds)
    (21/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.445730998 seconds)
    (22/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.152806592 seconds)
    (23/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.366000737 seconds)
    (24/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.863166254 seconds)
    (25/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.33403623 seconds)
    (26/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.858287838 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.758457472 seconds)
    (28/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.39240287 seconds)
    (29/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.403832962 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 6.336429867 seconds)
    (31/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.07667351 seconds)
    (32/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.042270393 seconds)
    (33/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.336397125 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.438880292 seconds)
    (35/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.704607499 seconds)
    (36/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.148947383 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.696217487 seconds)
    (38/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.366683544 seconds)
    (39/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.8131767 seconds)
    (40/286) benchmarking ("sort", Float32, false)...
    done (took 5.336503052 seconds)
    (41/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.330185034 seconds)
    (42/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.36858339 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.450083508 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.968205449 seconds)
    (45/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.567546946 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.621052294 seconds)
    (47/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.594801783 seconds)
    (48/286) benchmarking ("sort", Int8, false)...
    done (took 4.349818133 seconds)
    (49/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.725333979 seconds)
    (50/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.327319077 seconds)
    (51/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.798086924 seconds)
    (52/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.739238786 seconds)
    (53/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.317733365 seconds)
    (54/286) benchmarking ("sort", Int8, true)...
    done (took 6.337801037 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.416282349 seconds)
    (56/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.316607642 seconds)
    (57/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.555209021 seconds)
    (58/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.802646892 seconds)
    (59/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.369604505 seconds)
    (60/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.893176662 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.97508652 seconds)
    (62/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.455435484 seconds)
    (63/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.323024034 seconds)
    (64/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.639495716 seconds)
    (65/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.708423847 seconds)
    (66/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.391152127 seconds)
    (67/286) benchmarking ("sort", Int64, false)...
    done (took 5.553627898 seconds)
    (68/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.363737682 seconds)
    (69/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.477340394 seconds)
    (70/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.338962826 seconds)
    (71/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.692676196 seconds)
    (72/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.323365998 seconds)
    (73/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.330861747 seconds)
    (74/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.457808181 seconds)
    (75/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.464862761 seconds)
    (76/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.3234044 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.332268946 seconds)
    (78/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.736533928 seconds)
    (79/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.366144766 seconds)
    (80/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.517526619 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.356063712 seconds)
    (82/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.367596799 seconds)
    (83/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.350562668 seconds)
    (84/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.721803038 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.216213759 seconds)
    (86/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.527803409 seconds)
    (87/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.446177454 seconds)
    (88/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.591780056 seconds)
    (89/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.858220554 seconds)
    (90/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.372315175 seconds)
    (91/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.425403869 seconds)
    (92/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.527790851 seconds)
    (93/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.346648432 seconds)
    (94/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.578278095 seconds)
    (95/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.426861709 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.74261013 seconds)
    (97/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.461944279 seconds)
    (98/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.322393562 seconds)
    (99/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.810046796 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.189515134 seconds)
    (101/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.711652313 seconds)
    (102/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.340962443 seconds)
    (103/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.382707259 seconds)
    (104/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.185602588 seconds)
    (105/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.466374911 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.695173365 seconds)
    (107/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.770017412 seconds)
    (108/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.376957788 seconds)
    (109/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.423912411 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.907952095 seconds)
    (111/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.941049885 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 1.865707989 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.379104545 seconds)
    (114/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.451503684 seconds)
    (115/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.961075637 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.606216571 seconds)
    (117/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.753026064 seconds)
    (118/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.115017856 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.086701007 seconds)
    (120/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.321542964 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.629383126 seconds)
    (122/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.464922603 seconds)
    (123/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.071639071 seconds)
    (124/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.346984827 seconds)
    (125/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.373510529 seconds)
    (126/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.363736835 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.454970202 seconds)
    (128/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.703611408 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.263529615 seconds)
    (130/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.380097109 seconds)
    (131/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.205307976 seconds)
    (132/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.372449288 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.087446978 seconds)
    (134/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.370807138 seconds)
    (135/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.428085903 seconds)
    (136/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.35884786 seconds)
    (137/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.36666973 seconds)
    (138/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.325873631 seconds)
    (139/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.338513669 seconds)
    (140/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.443255596 seconds)
    (141/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.321378239 seconds)
    (142/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.326935592 seconds)
    (143/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.439439842 seconds)
    (144/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.37318994 seconds)
    (145/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.410968497 seconds)
    (146/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.371173413 seconds)
    (147/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.372152935 seconds)
    (148/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.36230442 seconds)
    (149/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.325359239 seconds)
    (150/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.329488899 seconds)
    (151/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.867152155 seconds)
    (152/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.53052329 seconds)
    (153/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.326535645 seconds)
    (154/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.385070373 seconds)
    (155/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.127656934 seconds)
    (156/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.052529303 seconds)
    (157/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.138934204 seconds)
    (158/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.372540644 seconds)
    (159/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.291950927 seconds)
    (160/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.331034176 seconds)
    (161/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.362250267 seconds)
    (162/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.458682713 seconds)
    (163/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.385537614 seconds)
    (164/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.166696416 seconds)
    (165/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.367104235 seconds)
    (166/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.354677111 seconds)
    (167/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.751789481 seconds)
    (168/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.161886283 seconds)
    (169/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.722790385 seconds)
    (170/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.433382288 seconds)
    (171/286) benchmarking ("sort", Bool, true)...
    done (took 5.389859812 seconds)
    (172/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.694183571 seconds)
    (173/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.40457506 seconds)
    (174/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.377605761 seconds)
    (175/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.560563968 seconds)
    (176/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.339569666 seconds)
    (177/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.709049119 seconds)
    (178/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.417456495 seconds)
    (179/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.193249089 seconds)
    (180/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.961667073 seconds)
    (181/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.70689447 seconds)
    (182/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.001949262 seconds)
    (183/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.560673602 seconds)
    (184/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.363326916 seconds)
    (185/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.355055202 seconds)
    (186/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.348357004 seconds)
    (187/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.843533285 seconds)
    (188/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.302530036 seconds)
    (189/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.426986788 seconds)
    (190/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.323647176 seconds)
    (191/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.377094875 seconds)
    (192/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.453080229 seconds)
    (193/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.111430709 seconds)
    (194/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.437814627 seconds)
    (195/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.947814783 seconds)
    (196/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.765191679 seconds)
    (197/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.402845133 seconds)
    (198/286) benchmarking ("sort", Float32, true)...
    done (took 6.349112124 seconds)
    (199/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.32865285 seconds)
    (200/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.353272411 seconds)
    (201/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.374940556 seconds)
    (202/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.395180237 seconds)
    (203/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.415807627 seconds)
    (204/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.513800022 seconds)
    (205/286) benchmarking ("sort", Float64, false)...
    done (took 5.624160758 seconds)
    (206/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.110780892 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.276979503 seconds)
    (208/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.558401572 seconds)
    (209/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.333664225 seconds)
    (210/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.351162195 seconds)
    (211/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.331934164 seconds)
    (212/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.353092822 seconds)
    (213/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.363674105 seconds)
    (214/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.375720461 seconds)
    (215/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.332858892 seconds)
    (216/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.454325019 seconds)
    (217/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.347547336 seconds)
    (218/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.363136663 seconds)
    (219/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.379532003 seconds)
    (220/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.348700682 seconds)
    (221/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.436690855 seconds)
    (222/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.37656024 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.255235763 seconds)
    (224/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.351179465 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.265660807 seconds)
    (226/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.437077601 seconds)
    (227/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.563939391 seconds)
    (228/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.367001925 seconds)
    (229/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.561659625 seconds)
    (230/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.328551501 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.578135782 seconds)
    (232/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.348015764 seconds)
    (233/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.602240875 seconds)
    (234/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.913999914 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.974588066 seconds)
    (236/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.808447821 seconds)
    (237/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.375575928 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.375627557 seconds)
    (239/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.607214546 seconds)
    (240/286) benchmarking ("sort", BigInt, false)...
    done (took 6.349831845 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.757838223 seconds)
    (242/286) benchmarking ("sort", Float64, true)...
    done (took 6.353747421 seconds)
    (243/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.328226316 seconds)
    (244/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.933381672 seconds)
    (245/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.382953296 seconds)
    (246/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.45764871 seconds)
    (247/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.330761532 seconds)
    (248/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.14193806 seconds)
    (249/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.363367466 seconds)
    (250/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.201581207 seconds)
    (251/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.132648522 seconds)
    (252/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.74073298 seconds)
    (253/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.563329582 seconds)
    (254/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.343731368 seconds)
    (255/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.33853913 seconds)
    (256/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.437146797 seconds)
    (257/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.397352116 seconds)
    (258/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.337504872 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.457374771 seconds)
    (260/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.189538801 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.441967473 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.469532905 seconds)
    (263/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.151872723 seconds)
    (264/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.401982789 seconds)
    (265/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.91626724 seconds)
    (266/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.73823515 seconds)
    (267/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.457084598 seconds)
    (268/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.06937692 seconds)
    (269/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.412609768 seconds)
    (270/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.722492634 seconds)
    (271/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.358572452 seconds)
    (272/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.402772132 seconds)
    (273/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.372988071 seconds)
    (274/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.629365354 seconds)
    (275/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.590120283 seconds)
    (276/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.358835852 seconds)
    (277/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.481900567 seconds)
    (278/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.168473391 seconds)
    (279/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.354614195 seconds)
    (280/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.369639648 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.399259142 seconds)
    (282/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.330106204 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.772879559 seconds)
    (284/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.37970823 seconds)
    (285/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.3378676 seconds)
    (286/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.337196152 seconds)
  done (took 940.853807824 seconds)
done (took 942.102466024 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.384819158 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382408393 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.36478955 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.385268044 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.478243981 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.388681834 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.375828202 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.365449463 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.414386821 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.415034654 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.363360041 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.386034473 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.366872188 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.36486351 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.363897985 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380992982 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.398565107 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.36582603 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.382009147 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.376445172 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.380419635 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.362418798 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.415397422 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.386407519 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.370655895 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.36816565 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.371335527 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.384853506 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.477316091 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.369284893 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.370417407 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.376733564 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.397374894 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.365829062 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.362368195 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.386433509 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.377369328 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.376331294 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.372088603 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.402187428 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.801195296 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.381161534 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.369656475 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.365697087 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.369002213 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.372329451 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.369686751 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.372742111 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382417413 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382155588 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.786534037 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.397686179 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.368125358 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.369246472 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.380370768 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.37311248 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.37164791 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38597301 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.387160733 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387379751 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.385112263 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.3748743 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.372821312 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.385941704 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.376567108 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.825051441 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.37809972 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.375962787 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.799712096 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.386272188 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.824859423 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.390734953 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.37052328 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.381738771 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.405529038 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.400150962 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.365755545 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.370680947 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.377244962 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.368123978 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.378924886 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384425968 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.377654258 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.371022759 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38657062 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.392790755 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.384759269 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.37324401 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.379938402 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.390367076 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.378035551 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.384233681 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.374316177 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.366346624 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.37914272 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.372856142 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.37408929 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.376733451 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.377591306 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.383197841 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.799426032 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.405276396 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.368343175 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.368396981 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.370835063 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.389102425 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.803733813 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.38732733 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.394222248 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.420673466 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.373646464 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.391926881 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.373050701 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3903522 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.38075448 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.3775653 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.368446588 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.392306741 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.790639944 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.403479718 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.376610703 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.370338434 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39355526 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.377649026 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.369275808 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.407434783 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.374687756 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389629953 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.493904667 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.384229442 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.405921823 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.372880304 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.375458342 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.392419633 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.393795989 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.405715585 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.376759622 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391252578 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.389932849 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.369026491 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.385255839 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.384165625 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.375783683 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.381106492 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.370166223 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.397462953 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392214316 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388477523 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.396841212 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.496707189 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.375067541 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.398008203 seconds)
done (took 231.02489546 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.434419182 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.367375581 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.45738498 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.373002401 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.473614764 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.471732175 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.369389763 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.370802547 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.370829096 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.748953955 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.369820663 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.371965089 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.370326549 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.370035435 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.456732615 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.373130365 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.370000404 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.712257229 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.374433314 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.440340373 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.366325193 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.36952251 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.373240963 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.753633637 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.369461513 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.367803327 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.444822822 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.37408745 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.718053279 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.373887928 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.36652997 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.717931354 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.461642505 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.399866307 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.384250739 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.372295616 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.475039499 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.401899071 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.454559732 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.454613843 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.456689614 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.40362256 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.371940016 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.374946996 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.374455267 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.376269169 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.373659563 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.40673359 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.368717465 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.371724078 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.713883685 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.384538325 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.373266354 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.377042564 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.373992123 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.404456924 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.371304602 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.377127064 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.471064792 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.377338719 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.436505636 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.755670652 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.75232116 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.373331766 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.373833924 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.375027606 seconds)
  done (took 151.09131684 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.442626449 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.449916337 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.487120573 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.392650257 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.428263956 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.492025651 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.394786373 seconds)
  done (took 11.364388819 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.381294553 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.381451219 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.424618876 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.424192773 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.375448587 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.553206108 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.376492948 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.38523534 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.373433165 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.428022873 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.377326779 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.376159828 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.384522828 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.374934081 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.426668052 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.388736756 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.491654156 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.378201671 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.376462909 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.52840169 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.372837762 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.384870249 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.427266026 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.387346028 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.378002214 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.381314654 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.197616146 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378781261 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.374444969 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.377272822 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.375113852 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.452916351 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.377468352 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.373224319 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.37700665 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.491107925 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.377948941 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.374684258 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.376712598 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.377303553 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.378792632 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.379240856 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.378594453 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.375270351 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.378896113 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.40175865 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.379504017 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.380159058 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.379886273 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.380291105 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.428854128 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.377462433 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.373647419 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.376667731 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.430684055 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.386532587 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.380034234 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.376494632 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.381523456 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.376316481 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.529014895 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.426990766 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.37967661 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.426834064 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378419439 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.381186315 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.380719062 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.380592281 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.436337125 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.377213356 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.430420431 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.378399089 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.559211852 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.402357861 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.381752384 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.381023981 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.382739774 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.380285165 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.371634319 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.386884642 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.378900157 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.38086005 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.388359476 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378260686 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378820733 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.546612025 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.488640436 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.380194022 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.392018441 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.388383024 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.378963671 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.437077852 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.379910605 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.380421328 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.434612819 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.495480641 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.433360504 seconds)
  done (took 157.993854592 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.386597183 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.38989553 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.384333182 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.404240928 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.39933535 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.382653786 seconds)
  done (took 9.632478593 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.387118429 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.383487381 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.385435167 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.383358361 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.380958969 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.384281435 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.383583469 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.385458297 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.387513071 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.384084331 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.383222915 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.384234671 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.386613945 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.385640705 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.383343052 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.38422349 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.383801581 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.380807128 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.383883691 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386149742 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.489045077 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.386728196 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382328903 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.384997877 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.388624821 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.381976527 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.39408438 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.384130437 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.384818345 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.393013988 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.404269466 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.386463636 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.385197185 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.391340233 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.390465519 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.387994446 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389262896 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.388554596 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.382561229 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.387080877 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.38656644 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.389257123 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.383245572 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.388127025 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.387571963 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.389163694 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.392355894 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.393801193 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.387357242 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.389629779 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.387910277 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.386624541 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.386699316 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.387198502 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.388134745 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.40667688 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.390586522 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.387384293 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.386780809 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.389120168 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.385431621 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.385927791 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.388339761 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.391583929 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.385879438 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.389744106 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.385431611 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.389251181 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388132833 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.385697051 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.388433842 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.385526351 seconds)
  done (took 102.270072094 seconds)
done (took 433.624971003 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.762780452 seconds)
  done (took 8.0494886 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.403567484 seconds)
  done (took 7.693655618 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.177031511 seconds)
  done (took 22.470831519 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.419462436 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.404032199 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.388797194 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.383091456 seconds)
  done (took 26.883259349 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.675792341 seconds)
  done (took 7.965773364 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.380473809 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.403308439 seconds)
  done (took 14.074725706 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.42087663 seconds)
  done (took 7.708571599 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.540949309 seconds)
  done (took 7.836584756 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.382889506 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.399646066 seconds)
  done (took 14.085724529 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.360632792 seconds)
  done (took 7.649305906 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.20324981 seconds)
  done (took 12.494302361 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.397638917 seconds)
  done (took 7.689368508 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.413960484 seconds)
  done (took 7.704332178 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.474141467 seconds)
  done (took 9.760699131 seconds)
done (took 163.355172782 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.382423911 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.384208928 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.381287878 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.382393162 seconds)
  done (took 26.819794747 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.441081339 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.440638607 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.426179846 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.442097234 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.425883095 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.423405255 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.413632613 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.415241406 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.434976196 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.426689752 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.424707369 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.42570756 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.424127803 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.415472715 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.426576453 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.425118941 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.434381918 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.425753653 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.417232823 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.425691223 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.393240218 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.433889279 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.428204813 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.39226494 seconds)
  done (took 35.473508367 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.914781399 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.461434061 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.543789685 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.440386741 seconds)
  done (took 7.651168642 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.440293447 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.443928188 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.456441329 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.49602168 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.519444939 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.453147515 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.418376971 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.415314632 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.399549369 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.444763092 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.521071913 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.460968538 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.527180956 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.392771297 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.581348998 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.393517583 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.392849883 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.445494043 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.497211207 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.523000134 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.392591432 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.442955297 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.448465212 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.464336785 seconds)
  done (took 36.264335311 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.390505414 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.410546381 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.391932511 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.392876716 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.400779227 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.390571252 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.392792232 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.39595336 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.39124217 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.397859161 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.392117861 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.407459049 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.392855047 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.392951168 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.403087874 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.395773092 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.398894882 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.391396263 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.394570364 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.397614357 seconds)
  done (took 29.215123002 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.387440327 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.242190364 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.738072626 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.641742471 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.387729745 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.384207815 seconds)
  done (took 28.073670824 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.462923833 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.620119352 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.392038093 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.749869827 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.846095658 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.411395129 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.39430463 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.638874063 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.959968571 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.944250444 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.45669753 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.46499748 seconds)
  done (took 20.636578255 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.388200463 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.393057223 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.389715973 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.410216751 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.45021755 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.41553151 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.401042597 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.387887007 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.456154321 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.469557908 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.414090849 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.450652553 seconds)
  done (took 38.323905991 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477656366 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.433206001 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.317926671 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421939578 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.113513304 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600354086 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.412609917 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.142034156 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.414896417 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663346683 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396384901 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481666036 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.644658076 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390869352 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412652538 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.372107488 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638172589 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858253373 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391333581 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.467308563 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420654909 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401951724 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.565091994 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.632453682 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62451305 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.366980526 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.649324469 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.169372618 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681535347 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408135704 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400613507 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390328496 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665160163 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.34937452 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492346349 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.605089972 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422854368 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.934281985 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.374090194 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.456926995 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406716431 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396899638 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399949212 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391176976 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.326597531 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396723476 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.507877372 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.400988053 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.104069885 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.392202067 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65155202 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491826076 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.394347141 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.961680862 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454014227 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.421333072 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.395216116 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48879628 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97948257 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.726191467 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405841485 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.331638688 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39424304 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.473698652 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003887946 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.412990585 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.396806108 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395412135 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327047035 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.466061301 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412043938 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539230528 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.416480484 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.041280614 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06372645 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.415923576 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.329704054 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936703871 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395792995 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.333705822 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622564994 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.172411939 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327642086 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.359031956 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331135218 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08007457 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407726283 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.913500938 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411722743 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.171403988 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.630612061 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437188034 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41683953 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.617973966 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.269112781 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396165161 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.400179555 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527148794 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413629296 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.150064462 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353609889 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.396326248 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649193114 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.60757823 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399413589 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.386766294 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247574977 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402636514 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.413740281 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.396150881 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.614289893 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.993689927 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425317212 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.744366123 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418149966 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.171782276 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122127471 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402463163 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.404570507 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.404458941 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673943391 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.136017799 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.283065759 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461410813 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402045851 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397043392 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.503326333 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.25147412 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.294752756 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.593358431 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424777159 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.412103823 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.397687662 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343761757 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.395194265 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402201562 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.196829666 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.616803835 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397876556 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695484033 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3320408 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544600837 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40591999 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.616782352 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.609855521 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.422464912 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658910965 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405026329 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412803175 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413432891 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418491569 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494540333 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420397001 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.398384246 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.674930108 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.402011947 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.402040968 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.646664051 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.18343409 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407179266 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.405033883 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396193847 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981084338 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401414718 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402861109 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.290549321 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.411467611 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466576598 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404081765 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614836665 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.647992591 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423785259 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.403140625 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.406172893 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629963725 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406213051 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.497368677 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.482783567 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.907834519 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.002313854 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427204784 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.336844932 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.111083085 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.095429346 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399697767 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.593570694 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399692269 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.617106278 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.436757665 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.413844332 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.975293603 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416944992 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.510772525 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.412473596 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415202639 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.680418359 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419685347 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.649165149 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.78760798 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406444389 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.430944723 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545524828 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.413690424 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.334046635 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.917318873 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408729522 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402133408 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.177073176 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435089405 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.519407778 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.68663366 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689280244 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401563384 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677404442 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.609741507 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.438753662 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.404148008 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407043455 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408015094 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.410642387 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411301928 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.412698229 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.49881438 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.847051573 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968674532 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112312388 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941338665 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.736233775 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.4367554 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.305787534 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.163709266 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35804367 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.057517789 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642399777 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.193208732 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371645993 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254180175 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.627629909 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194408517 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663901843 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641353802 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.72498509 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.4341958 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670559432 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622458733 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437946928 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.40953781 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.336405429 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.682346837 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.427919592 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410607127 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489363547 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.534520335 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422527273 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.189377564 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.408144124 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.072587759 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.055733539 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.957846333 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.793600088 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.41812112 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.411558233 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.661131819 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.434764563 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.931716645 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028616831 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.424183169 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.919799302 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363180628 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.622340091 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.442804594 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.400786112 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.964473607 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.42898442 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.659972725 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667038423 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347244457 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.416872415 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931203124 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.276692876 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.41257539 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407883937 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.570332421 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413928378 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700903062 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.416165624 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.66477124 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427143005 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.342200906 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339595679 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.098483719 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405221282 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383563678 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872839005 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.412639345 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42942463 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410030834 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257462555 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661056806 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.418851885 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.986080129 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647426888 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420646642 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43067217 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.409419579 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408874506 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.387345813 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.311719033 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645255344 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417561484 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.656511658 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.351822476 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.31084672 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.49096458 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.643567701 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.289737364 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.408622553 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635150537 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.140449456 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.409893896 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111175141 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449907819 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.424616235 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.42176678 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.413377529 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427503642 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499567278 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627189652 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.441470841 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.420024704 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.055511387 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414030555 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428902086 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.423783691 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504166349 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.776876134 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.6637844 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.198613561 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996079229 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139117514 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.009016449 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.691637735 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.41524974 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419889441 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345319594 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558960917 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.936776859 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685200608 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54541404 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.412094015 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433541279 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413142214 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412284155 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629267244 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688260632 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.282105692 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416669171 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.076255401 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.570829141 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421121147 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.623333107 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881474693 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945521442 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535475285 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41014157 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.192766881 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.711328735 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.503031776 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41303097 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.999626724 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.429574557 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.095745914 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.425669444 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412554217 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578762487 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67845566 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.38537808 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.428970417 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.573744859 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.187090057 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.537768312 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.667564245 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.824040069 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.629276635 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018439468 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.128163632 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67675455 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485174122 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632757337 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.545619756 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562074609 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.42009942 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.3109462 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415796895 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260343648 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.125426109 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.42514956 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000768108 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699043775 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.420624952 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.416539518 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435575434 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.425369151 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.641316921 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114346501 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.640987817 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426381173 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.425588643 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.986914598 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00239417 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699661403 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354379511 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.419223874 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645235947 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.673429048 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440802292 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.8693748 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.12599597 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962666434 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.385658633 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437758265 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427446844 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.119363334 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008224929 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.697479067 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904447764 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.074594664 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42091711 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698269636 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.424027089 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.418227103 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695659906 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.422833319 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.422783424 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641715223 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.018723804 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212763208 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.417892929 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.726193665 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.359739449 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.645465216 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.469757455 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355971764 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418307248 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.836694191 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.441629617 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550400114 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42826733 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.414855262 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436864694 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.178033726 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.701319425 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.425538663 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.409127155 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.423736415 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.427994192 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518216234 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363546003 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42851444 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.09062801 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.768327248 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.674239088 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.433197482 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.404108189 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.424985212 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42032901 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.137775601 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.386583918 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.422349006 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984464952 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.420878254 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.434409466 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.427215065 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.637435229 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633689296 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.420996964 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644153011 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450316699 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441797614 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.279482849 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.199325788 seconds)
  done (took 1710.088759521 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.452509041 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.430169904 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.456197055 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.45289608 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.475735503 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.535661469 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.524982699 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.515146557 seconds)
  done (took 53.166365038 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.429132055 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.576306721 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.454195988 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.425563318 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.429535275 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.435502086 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.887137127 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.441224595 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.427669118 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.43307305 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.436150859 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.425650002 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.072189414 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.430745009 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.430234234 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.440494234 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.430959666 seconds)
  done (took 66.935971336 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.474035841 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.445809748 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.40831719 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.439425826 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.478191719 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.428007818 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.482474246 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.435757166 seconds)
  done (took 58.920382509 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.433562725 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.433341183 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.43428258 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.435023357 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.432234294 seconds)
  done (took 8.493497854 seconds)
done (took 2121.352430629 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.42812379 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.429587236 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.426931281 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.432668815 seconds)
  done (took 7.042971165 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.401094372 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.104375533 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.405899398 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.418607313 seconds)
  done (took 18.655677591 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.430795767 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.44863792 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.113142301 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.086118226 seconds)
  done (took 5.526965566 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.173154582 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.188228902 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.171885741 seconds)
  done (took 7.863876271 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.423008478 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.428128578 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.428759405 seconds)
  done (took 20.605512745 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.728947976 seconds)
  done (took 3.056488221 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.569170533 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.622441617 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.743574664 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.742904236 seconds)
  done (took 8.007619213 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.818033368 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.802297134 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.616269848 seconds)
  done (took 6.563562174 seconds)
done (took 91.530825662 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.268848131 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.799624872 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.629830708 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.282223051 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.65277508 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.627585527 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.844063343 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.249331485 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.751155304 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.741518461 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.284072161 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.657765128 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.577083055 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.800369094 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.577648326 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.802532645 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.656115453 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.290619158 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.962709006 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.127145629 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.850195257 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.884237192 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.115867545 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.896443862 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.660637334 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.582948905 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.458075997 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.797865957 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.136669637 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.477438729 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.581731428 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.307532502 seconds)
  done (took 194.663178328 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.427180845 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.437354749 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.426517217 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.440892696 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.440584052 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.443420689 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.442984788 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.425745235 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.446973165 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.452139974 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.424367964 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.427348874 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.445671393 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.442110267 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.424878261 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.428561381 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.424543919 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.423920539 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.444066961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.424123435 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.446654538 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.43657938 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.426735882 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.427855016 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.43320345 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.427436919 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.441555826 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.426666682 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.427764246 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.44338753 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.444665441 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.427194522 seconds)
  done (took 207.234053029 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.425949358 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.426802522 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.444616329 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.429132897 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.431829205 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.429964481 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.439911472 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.440409646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.435648098 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.432334319 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.428525793 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.426662981 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.445707241 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.448085935 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.442251439 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.45357812 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.427526961 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.44699935 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.434120748 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.428066562 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.442918203 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.446393934 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.436042148 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.429991934 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.432522762 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.43029069 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.427885227 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.451519079 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.444385657 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.431407711 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.44555166 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.431602382 seconds)
  done (took 207.300261206 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.633261904 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.437909482 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.440188957 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.38975983 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.437083986 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.437382818 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.437036002 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.628932792 seconds)
  done (took 15.177589648 seconds)
done (took 625.703816566 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.74258701 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.450597375 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.636024946 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.458267396 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.246030936 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.474297664 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.459934862 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.628102407 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.370071676 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.631438932 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.664000356 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.474211807 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.80793507 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.455341092 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.711406627 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.557162498 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.338833612 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.452819743 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.77476383 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.010465843 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.716400476 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.897652338 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.64783276 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.362720799 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.823224523 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.89593337 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.156195196 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.329415002 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.473711552 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.781225606 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.125430446 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.418839112 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.498252721 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.516224257 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.575169686 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.556898179 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.385160664 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.515052314 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.654277871 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.662047495 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.018579279 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.184149819 seconds)
  done (took 95.872898423 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.420534361 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.424476037 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.424028408 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.42168018 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.428372953 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.425345695 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.42329449 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.424919316 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.42327821 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.42516221 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.426145682 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.424301699 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.424692367 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.425508812 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.42446418 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.424256425 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.426506317 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.427387259 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.425385113 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.427546964 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.429477972 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.426271722 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.424988164 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.424152293 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.424442726 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.426985455 seconds)
  done (took 38.391157221 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.444807668 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.692015269 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.856520673 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.45343431 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.442664471 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.448852682 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.523270778 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.445631539 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.448545468 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.451783481 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.599282254 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.449258886 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.480108686 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.884364857 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.447858798 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.447764253 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.448164812 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.442943339 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.702210037 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.454613408 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.545049937 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.448187619 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.524447065 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.455046477 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.469603853 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.447201844 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.452300333 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.012163979 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.468023038 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.600703903 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.243350931 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.525666241 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.96737708 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.886077996 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.243898292 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.453296045 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.451761033 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.606951395 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.448074604 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.449249751 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.525097517 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.449059288 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.865559395 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.119058577 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.465863734 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.447751592 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.034303817 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.61795444 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.693036562 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.454246799 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.893785885 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.451941471 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.450676412 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.451999025 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.693642883 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.452797252 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.44814523 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.057129989 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.470211135 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.524740146 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.451508647 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.45204816 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.708935468 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.450478578 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.695366767 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.451450881 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.45766713 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.471621236 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.869607863 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.451979145 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.139774579 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.46948786 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.451104836 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.603180483 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.698133522 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.066712489 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.469334942 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.713062972 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.984277573 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.542147274 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.45361296 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.007026207 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.546161611 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.453041924 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.451854226 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.453366014 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.453466893 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.503562084 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.526215633 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.074096497 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.150886107 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.080481083 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.549212804 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.460747432 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.450740286 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.057249972 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.469173589 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.454265975 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.864811972 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.139001776 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.465481525 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.456886027 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.141180116 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.473465978 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.532517343 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.461486398 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.877451129 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.452477233 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.506943071 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.455645351 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.459237485 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.478987978 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.530650364 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.458475262 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.452282751 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.115453162 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.629102909 seconds)
  done (took 190.320702799 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.447396775 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.4463207 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.449373287 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.44565963 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.447002272 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.456481807 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.448855229 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.446382045 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.451668499 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.447452848 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.448322631 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.450633892 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.447831326 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.449590116 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.476902292 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.455774635 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.059613649 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.446943535 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.458579274 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.446525705 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.242896519 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.450107102 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.463698812 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.446227614 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.448845811 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.44860627 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.457102955 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.449511544 seconds)
  done (took 155.382515639 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.45484314 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.018763069 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.469720677 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.588040391 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.482426358 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.455506032 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.587306429 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.510559548 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.472656304 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.452784448 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.455610389 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.760201366 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.456947161 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.968382116 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.6467138 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.605622833 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.971043074 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.471010311 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.454013942 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.454984239 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.590709333 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.460016028 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.759818873 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.017751878 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.473224268 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.022940276 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.439773754 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.460330921 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.456566451 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.026206104 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.469744596 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.761234232 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.532177128 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.514717974 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.038564407 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.989290671 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.985647015 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.60435616 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.452343298 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.457238618 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.454136064 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.437188432 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.024755887 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.475288719 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.459785403 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.012302305 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.475825314 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.456534236 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.46325101 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.457069311 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.516771285 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.532791985 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.780804373 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.029925412 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.548569674 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.468954719 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.591063961 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.824775573 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.462501326 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.977126474 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.436517815 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.047674392 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.482738363 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.438123577 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.460472344 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.464849596 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.609372035 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.588973804 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.975528335 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.473892878 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.976486206 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.626457445 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.455093813 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.459818574 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.46055507 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.045953862 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.996946477 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.623426419 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.59360658 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.654630312 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.443314364 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.458132647 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.442455468 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.539096281 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.456897613 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.05092556 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.995477243 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.475072595 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.462126343 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.461931096 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.462563692 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.639911286 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.067033667 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.556011872 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.961988087 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.790793073 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.779155042 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.465347514 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.519831282 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.474786011 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.778047876 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.465256349 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.520006903 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.88851084 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.776819596 seconds)
  done (took 172.856389995 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.698536368 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.657543794 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.554032679 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.601594669 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.064164713 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.033354407 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.78989459 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.599293267 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.569394922 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.713701729 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.633946721 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.572760195 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.673424503 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.537350056 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.227013736 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.551380702 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.56905916 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.608860017 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.612456027 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.47943372 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.164369423 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.743624434 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.64831507 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.392467361 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.56237951 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.217199276 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.021745861 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.023964227 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.639658608 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.757218915 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.993533072 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.575328209 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.457046248 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.171725735 seconds)
  done (took 69.474699103 seconds)
done (took 723.634309664 seconds)
SAVING RESULT...
DONE!
