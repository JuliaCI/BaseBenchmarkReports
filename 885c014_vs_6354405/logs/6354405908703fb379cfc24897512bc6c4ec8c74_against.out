cset: moving following pidspec: 590
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.369426275 seconds)
loading group "string"... done (took 0.492755891 seconds)
loading group "linalg"... done (took 8.14123103 seconds)
loading group "parallel"... done (took 0.177519027 seconds)
loading group "find"... done (took 1.325767241 seconds)
loading group "tuple"... done (took 2.011257062 seconds)
loading group "dates"... done (took 1.360465583 seconds)
loading group "micro"... done (took 0.256024913 seconds)
loading group "io"... done (took 0.689517977 seconds)
loading group "scalar"... done (took 42.852189288 seconds)
loading group "sparse"... done (took 12.785823926 seconds)
loading group "broadcast"... done (took 1.134414055 seconds)
loading group "union"... done (took 14.424051812 seconds)
loading group "simd"... done (took 4.855254053 seconds)
loading group "random"... done (took 9.80883893 seconds)
loading group "problem"... done (took 1.987964348 seconds)
loading group "array"... done (took 22.836792811 seconds)
loading group "misc"... done (took 1.461678353 seconds)
loading group "sort"... done (took 3.653681176 seconds)
loading group "collection"... done (took 19.84625002 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.545362313 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.149727379 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.15857354 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.16092055 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.21617072 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14593168 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162122586 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.116682492 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.987321644 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.191148043 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.161603791 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.52283728 seconds)
done (took 5.237959546 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.229162342 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097969596 seconds)
    (2/2) benchmarking "String"...
    done (took 0.109843861 seconds)
  done (took 0.873653593 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.081497689 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.15130867 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097833143 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.098528949 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.08304329 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.099960813 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082369077 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.098644994 seconds)
  done (took 1.376528184 seconds)
done (took 3.232289989 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.748463861 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.290330211 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.226316132 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.484468514 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.186063915 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.219668415 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.706949855 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.39055111 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.272053795 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100128573 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.152468459 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.41359202 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138093097 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.666261212 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092441145 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.129819507 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.194361304 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.507264018 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084812619 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112696665 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118700813 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143842351 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128866841 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093912647 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.188167938 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.099451686 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191051511 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110584998 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082904093 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.292093573 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.206018433 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.71982345 seconds)
  done (took 11.192899638 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118258496 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.140903609 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100532123 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15884548 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13984722 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087369776 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.104368433 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083659461 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127970433 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181694628 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135240636 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.145983124 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096899647 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086144468 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.122327739 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248429204 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124582495 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.107963473 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103138559 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108381939 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125680331 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.117908014 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.114452059 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.113770952 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167684794 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206611816 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111930794 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127802535 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097720172 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.118135178 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14668218 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146565393 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096647607 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08465585 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178667993 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126393253 seconds)
  done (took 5.284934065 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194149353 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12530851 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.17494232 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.166677064 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145673669 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163636181 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119254841 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256839753 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.124199245 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182965049 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.147521815 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.117359174 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08412176 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.105253357 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083834692 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.752734585 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.169004459 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.139149118 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120928836 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104603657 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.091099301 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.385348157 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104162435 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083244119 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102392533 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067596121 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165699173 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102883043 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.210521494 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.104536812 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105204467 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136524559 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207290046 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113768702 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13746144 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099072306 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08173478 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181313228 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108493468 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.132100544 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.10069375 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.110790071 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139830548 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.139608031 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101490564 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098152999 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.215430493 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097469184 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101899568 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.984942841 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183760882 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095896855 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099988105 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.345087259 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100583945 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100603402 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097483611 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081129785 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.271942512 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.141681922 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084403366 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098318492 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083208627 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.101508915 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.390998754 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10425004 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.678284737 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086849715 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.11070373 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09944498 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083969471 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106720423 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090813645 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117831524 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099822692 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085938421 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.099556381 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081917224 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102676124 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109139607 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088387864 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097975074 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151995168 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.093122054 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101388079 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131432321 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101451337 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098397091 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117634279 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099713436 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.102686388 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.12258271 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101388067 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111043996 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100008495 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.12970001 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097352161 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.128419402 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.20155722 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083185174 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.130532902 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102967872 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131919204 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110846757 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081123809 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101369887 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089857607 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097565666 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097366328 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149412939 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.093260121 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083440211 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101655865 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114036016 seconds)
  done (took 23.195478623 seconds)
done (took 40.336331209 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.350929875 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10793478 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106236129 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106996174 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104691764 seconds)
  done (took 1.516031362 seconds)
done (took 2.229525864 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287462379 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.178673609 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096306493 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.173746678 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095852343 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.181452604 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.179482124 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097892883 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204220298 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.081423357 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183806462 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080577458 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09549721 seconds)
  done (took 2.675407807 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097328973 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119073478 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087871854 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11332313 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095846243 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098849672 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112622889 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1047683 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113311933 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104025496 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079737022 seconds)
  done (took 1.837048019 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097181902 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116397677 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085437298 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113323357 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079367702 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113168682 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112697154 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103635819 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112894876 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104573499 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079976778 seconds)
  done (took 1.831702799 seconds)
done (took 7.04942643 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.097513843 seconds)
  done (took 0.804972542 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.022609108 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.777519022 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120099107 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.162754344 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.332561823 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.205590077 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.579819279 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132852594 seconds)
  done (took 15.264385455 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.134733698 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.105197428 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.105611731 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.089589883 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.102619168 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.104027639 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09011001 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101788515 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104273254 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087585085 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100690414 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100630192 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08651212 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104148234 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087907613 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101732385 seconds)
  done (took 2.384664825 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138193106 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.139183744 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092337281 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110436069 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.107547954 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090777439 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109196496 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.108490403 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089478721 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10526719 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.110847121 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107584291 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090642979 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098695485 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107529219 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.094905232 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.104220316 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108246381 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.093944767 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.109778881 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108968211 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097670829 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091080092 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109346689 seconds)
  done (took 3.330208421 seconds)
done (took 22.497989562 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164736114 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111334533 seconds)
  done (took 0.99626416 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.105148544 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121837399 seconds)
  done (took 0.947594711 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111306768 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095640757 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138149263 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118688443 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.098782349 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083690701 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.133724029 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098816925 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083783379 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098277835 seconds)
  done (took 1.785115111 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08930244 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.116467997 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.109751742 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.12109751 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.097394565 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.102349169 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.11377741 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090081334 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.120419804 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.099036866 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093830013 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117275228 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.10821691 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119616347 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.113713107 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09212689 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109511811 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.105895621 seconds)
  done (took 2.648601348 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082535044 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.103046963 seconds)
  done (took 0.913139021 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.087867223 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098713051 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087511263 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102797004 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09901448 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084864535 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09918567 seconds)
  done (took 1.387555969 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.487488249 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137943773 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259934188 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104400548 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124307137 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.329615904 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082888371 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10496549 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105167443 seconds)
  done (took 2.503672261 seconds)
done (took 11.906672122 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095818105 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.120703853 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.135702437 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.473968802 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.124332955 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.082903898 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.163340932 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.261053635 seconds)
done (took 2.189122759 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.154780488 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.331746088 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.118852526 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084397646 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083932629 seconds)
  done (took 1.354915421 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083017834 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101682083 seconds)
  done (took 0.917721176 seconds)
done (took 3.159976334 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084491148 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.133728913 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099794161 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.081357721 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100995743 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.079922615 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09736311 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081277676 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098455513 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082822833 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097671767 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.098383058 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084007279 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097557043 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080740244 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098578595 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.081590439 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095207024 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080568379 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09805468 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081090232 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098470132 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095552535 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081424249 seconds)
  done (took 2.975018656 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113407706 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099309647 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105860811 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09038675 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10346689 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104954951 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089988366 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099680633 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.105182774 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.086178307 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10322722 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.10294821 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086014393 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.102995872 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101280351 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.08757439 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.105101068 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100465267 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085832686 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104071268 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104776419 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085728193 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103405015 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104173646 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.089211611 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10448684 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.101974607 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085356401 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105854696 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.103248831 seconds)
  done (took 3.702448116 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089342593 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095787052 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081158434 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105428619 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.08019243 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.101833119 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.09644939 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081078361 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098664357 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.080123106 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098570422 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081598515 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096755854 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082566535 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.097964044 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.1001192 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094826778 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097050478 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080369754 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.098191838 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083723522 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09795563 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099511882 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080528238 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096044182 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08040059 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096992224 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080869365 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097108393 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096915522 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084641134 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.101313345 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080838964 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103628714 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084736195 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09655291 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.0851976 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096657182 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096437723 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080876248 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.097302237 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.080493556 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.096939593 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.089203574 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.10084819 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08345116 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.096586333 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098799381 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081972805 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100335096 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081131605 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097501632 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084135908 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099012731 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101788481 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081442464 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097706053 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.081408033 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098445669 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.082172344 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096417713 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.096355372 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.084733884 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.098403778 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097820201 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10410789 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082285092 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098902163 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.10092476 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083908536 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099583697 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096164637 seconds)
  done (took 7.366405072 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086990802 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109168548 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083415765 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099929401 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09593121 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082062369 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101043831 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083158683 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099457 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115110129 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082354671 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099417438 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098994584 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086072461 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097862208 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084429223 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.107563699 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095940637 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081482617 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102252957 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082488417 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101529775 seconds)
  done (took 2.823448434 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.219291186 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107328514 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145701994 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.126048577 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119131934 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098041252 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105123194 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106287007 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088717408 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103319581 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103650651 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089364802 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108505069 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102791707 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087996005 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105048123 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10490858 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089061251 seconds)
  done (took 2.756063366 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09829609 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100893513 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.123789972 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084876867 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.102120901 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087984735 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105812625 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116814702 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102569271 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.084933933 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110745305 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103012704 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.087201745 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10115311 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087667489 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100010403 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104786908 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08442514 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110035799 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106843446 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09038929 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110055161 seconds)
  done (took 2.954579014 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101564226 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10366538 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120322333 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088671634 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099319559 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085744888 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107103054 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.100436997 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093034628 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102291815 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101027435 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08557738 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.107459236 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099791979 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.089704019 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100219886 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086628579 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101522177 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102546767 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08362232 seconds)
  done (took 2.712177905 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125511557 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103007691 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.211139127 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108843892 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102901203 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102211197 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126317514 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086477611 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102947571 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128502317 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.086801435 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101686754 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126329549 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121475642 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086445743 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125573341 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125698688 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125228009 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086669887 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101476117 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128798963 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102441387 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109181734 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101995923 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102253344 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086395584 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103037313 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12183303 seconds)
  done (took 3.89433377 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084896562 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101187864 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082099697 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098881522 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082281552 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098730937 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082167351 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097523248 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084523697 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097287142 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.099251139 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083850077 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100118913 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083407482 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100557033 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.084374487 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102165056 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.081835773 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097299273 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097866126 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084013941 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100712738 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084186575 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098161943 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081958124 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099867099 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081558465 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098262876 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09983179 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082215392 seconds)
  done (took 3.504513971 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094813501 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109810303 seconds)
  done (took 0.962123143 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.082240727 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117429463 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082239061 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104652579 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10698982 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084870834 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110475088 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106560113 seconds)
  done (took 1.550346322 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.102454794 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.120314003 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090880305 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.118399129 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.115793459 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.118130186 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165490773 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090787537 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107527264 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099431739 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.10129415 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.100779827 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089935108 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101698655 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107384409 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090734212 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.102347169 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101681867 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.1080235 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099622017 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088362046 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112576475 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102409506 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.082461633 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102932207 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095236235 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.10978638 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103193665 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08852359 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110625398 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.106439611 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079414408 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101249944 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.090726421 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102828287 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.114689365 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098186425 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104703601 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110377388 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09064228 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.128753854 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.100132147 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090810264 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107247423 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096456138 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.106022427 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.106874195 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.083586573 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098756189 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087513171 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099202406 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101258102 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079486082 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108933901 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090142065 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114570417 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.103194916 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.08642922 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104615059 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088251862 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108623618 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10392111 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087238209 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100213416 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092586504 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105313821 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108968946 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.083959115 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095000167 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.087433771 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109947171 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124723174 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111420538 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.090482089 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107875915 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.086424167 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105866335 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107623926 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092882401 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110643687 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.105013616 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106010367 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109613025 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085503627 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.103566857 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.115612303 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083577546 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104185258 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099340589 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101682326 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100371551 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.085477249 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098145761 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110551317 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088587949 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102535831 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083224547 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10916849 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095301612 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.090367609 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106998981 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086020107 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11151863 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113191362 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112302079 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09293815 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.112347048 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085643462 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105100973 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098413368 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090501151 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104311087 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092879651 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095285811 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105002395 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088171134 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.107555995 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093180808 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.10012819 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105827551 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094374904 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109334236 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08444252 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098932475 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.10467258 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089234242 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110913699 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.109733073 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.084805262 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.100091142 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084452023 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106453465 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.089869532 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10731653 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112654402 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089748725 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096106878 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102747068 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.095065371 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110710701 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101294935 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085955326 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108377665 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086572512 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.10245541 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108545097 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087758689 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101216617 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089504352 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104711175 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.084773883 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111732498 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105296186 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083363566 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106110906 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111346883 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088338362 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.108892561 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085039147 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108906248 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107417553 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084842788 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102821082 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08466574 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111802593 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104622692 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.084498812 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100065483 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.115300496 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083200485 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106156549 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084871012 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104602286 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090588777 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103385199 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101820947 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086640223 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133381658 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114789597 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09109314 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108603874 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111996913 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.089535774 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104115301 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.089880515 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107758958 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.107069921 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092350622 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108207255 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1131206 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089008107 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098335322 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091875817 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110675511 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10107246 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.087301942 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101484513 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089345775 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109588879 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106545041 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.090562493 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100674137 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086436907 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111646444 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105626647 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.089017953 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.102143797 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107705686 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084847321 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.115926507 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091676999 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111995782 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106092214 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.084015591 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110669345 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101172341 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091982581 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100675046 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083760036 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100892402 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.091184144 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102446111 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105099669 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079897167 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110657127 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11069422 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08581066 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.1019712 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08986664 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111576569 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104352636 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089228969 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105946646 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091779714 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116616692 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102146547 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088957901 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11216275 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.106354591 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078875197 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109204839 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.08534017 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102231513 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085613084 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100776418 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105608654 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100527669 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108011658 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096870813 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088499364 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101224925 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084995681 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100750387 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109305305 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089383116 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103983624 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095154622 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108439827 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10774113 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08921666 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.106072 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.091487814 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.107861058 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105597351 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.091071691 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104499307 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101290816 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088598635 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101646315 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.087205553 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104869052 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.091668634 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104074008 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109159891 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087493757 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103684885 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08898221 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107397612 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103783357 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085899063 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102208782 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089093145 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103212635 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102754705 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088793471 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.10212049 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093792811 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.10701503 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110548042 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08622671 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100297438 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091833578 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105711691 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.113189422 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.091799646 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.108941791 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104216207 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.09029667 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105960629 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095708635 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100206058 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112810231 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091181385 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104618667 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088473288 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102796389 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104347597 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085495164 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105544128 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.090932783 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103747263 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103276843 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090848408 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105987071 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085675991 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105665268 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108893063 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086121417 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10536925 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080718524 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102640681 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084924629 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10691647 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111056088 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.091516543 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10603582 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102184902 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092253008 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10216805 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082837372 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.118206803 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119296517 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.092055563 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111589875 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102466536 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087658565 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113350946 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097100613 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.085000212 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.104005161 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083524043 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111233469 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.091590175 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112260688 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103486808 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085646993 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100218947 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.091821091 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102339825 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.105888082 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.087096214 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107340172 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08841122 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10262602 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.090661366 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105679694 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109444866 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093881004 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101887643 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105227057 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.090211233 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100874992 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085604227 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103498359 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088604544 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108191639 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101106426 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082736877 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.107575055 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088005295 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104751297 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103906292 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087706292 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112329541 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086118469 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107106271 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111969928 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080906948 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107587784 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086986807 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10779296 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103600663 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090650197 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10825027 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093492782 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11114909 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10763298 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087637234 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103787269 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087126046 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10666674 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.108465533 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.090939303 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102495278 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.092159593 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112574901 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.104083235 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088609308 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10351894 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087426572 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108793543 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.109136593 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088472288 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118171182 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106099011 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087572928 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110349467 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091163358 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10746424 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109562517 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088136464 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109873783 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085845981 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11134734 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.104576437 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.09241311 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106404062 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084279835 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103956513 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103126073 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085231905 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108955779 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.091570409 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103163766 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103433157 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.087376162 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106536985 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095501682 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111428598 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105901937 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09044132 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.10202872 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083748583 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108990841 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102110167 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088900135 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106401601 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092925584 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105627823 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104179927 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086213804 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112079308 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110560976 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091259302 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101736619 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092124415 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.109852404 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106213187 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088122923 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104694846 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088900737 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110247503 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.1058033 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086293738 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113189628 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091967272 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110440579 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105593049 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087703868 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104191713 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.085370235 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.109619066 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106849424 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093181329 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107431998 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087353404 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114715927 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103199188 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08702276 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114317073 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103523525 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.093723804 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.102822008 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087966955 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110154132 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110289405 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.085113717 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103474345 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08441469 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107055185 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085529219 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.102158368 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114365992 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094705117 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106370267 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103735162 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085862039 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.102836475 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.084453016 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104272878 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091776587 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105864267 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113312778 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085808516 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10311333 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.085390897 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104729572 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107698787 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090264933 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.102047181 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.085318823 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103917968 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107240271 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.094747028 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103305806 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.090702269 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109168653 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107409536 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.087186812 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113184582 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083733259 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10818837 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115237026 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.091743125 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105579011 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109588051 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095634894 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.110219643 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.085444246 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.111630884 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107794387 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087231432 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.109857856 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088574525 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118882892 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108270518 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086258858 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103094334 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089485084 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103373593 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112297498 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092226748 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.110872364 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109675211 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088751697 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121386002 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08970738 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111644258 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107354431 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090321478 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104389699 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087590193 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103150261 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.103868096 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088759112 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.110280939 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111470975 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.099984082 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.10467557 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115725199 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09585452 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.11033998 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083882105 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.105105178 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086430509 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103872234 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.111326876 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08559477 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10423125 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085436771 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105440872 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105086573 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093660745 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107496088 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.092645569 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106101699 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099086452 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089558765 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.108371358 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087964429 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101862506 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.090925448 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.111308021 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112142325 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098042969 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.106579476 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089031887 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107406036 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106071742 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.085819136 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111400542 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086167713 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.108033142 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105166024 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087447011 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.111341674 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090658663 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11635328 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108741011 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089776285 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117671465 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113452525 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084983146 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10382834 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093367764 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.107578319 seconds)
  done (took 60.352111813 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15321713 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093095257 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101293754 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082094655 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120032235 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105435415 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082758851 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105479739 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105462729 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090680221 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100749258 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082720314 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115523001 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130668962 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120801454 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110561246 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082050192 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105994816 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082876081 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104657336 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115969046 seconds)
  done (took 2.99682801 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109661383 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121337839 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117911755 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123978118 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111460181 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100587837 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118599274 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120526393 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.123773805 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114018953 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.103036522 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119722241 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.11305301 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114438786 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094277779 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116509466 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12347695 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111479912 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.101991009 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.117348184 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116203031 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118317791 seconds)
  done (took 3.315814411 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09607975 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.108552317 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.091073855 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.100047256 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086287871 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.10169405 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.113331823 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084285738 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109772745 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.085505102 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.105011106 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.085981162 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109569542 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.101203844 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.085653566 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.104063057 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.158728391 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109735602 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.090690417 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107197587 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.084291657 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107912668 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.104244323 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.085219221 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.104578523 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.099422672 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10800642 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.089013113 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106387662 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.104640661 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.090601869 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.104049973 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.087973154 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.106642379 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085433797 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103957848 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106454959 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.090723533 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.103497055 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.087898822 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.107192796 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.085579394 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.110357809 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107399227 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.087973502 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103957496 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088287717 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106409857 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.082331067 seconds)
  done (took 5.681596368 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.120707162 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159555132 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089109702 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129954358 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126191463 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119938614 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.112344209 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148353433 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085350158 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.109677186 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126739029 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.1240182 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091105525 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.116267611 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110963054 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091142857 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.11138603 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105756723 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.096474275 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105640048 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116121389 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.113050467 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10445598 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121406277 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115446837 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109408853 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087235286 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.115357185 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.121376109 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.1167871 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.096521189 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.117035781 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125159347 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108784915 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086523314 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112358223 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12702967 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.091064141 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.113342365 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105084146 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.094372748 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.115704852 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114169841 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.125657086 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09247153 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111531939 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109964588 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084390581 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120535955 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.113691526 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.120826337 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.105188555 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114361676 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.112029181 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.096792569 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124766995 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.110613198 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.108878206 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.095694365 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121240368 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.104781252 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.095888743 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.12417446 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.11113754 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.119012926 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.123109976 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092584435 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114656605 seconds)
  done (took 8.535462426 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118072804 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.118042172 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128852583 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130288401 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118087489 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.099198626 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.117361203 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.117814163 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117789236 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105250671 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117733112 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.165785642 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.112134156 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12222254 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.098584407 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.118155872 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119547509 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118129939 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099449604 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1170593 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.118252048 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129490321 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.117319554 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128699479 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12791594 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.092278816 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.118497512 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118098951 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129041238 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.098246256 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127701985 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.118880411 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118721892 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.129004288 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128787446 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09871766 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109242003 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118409574 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.099168359 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118050445 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.11315552 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129551519 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.098581111 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.113122708 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11944664 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11882487 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.129717851 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.109383534 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123119533 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124895035 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.118047247 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.129891434 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119186164 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099465836 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.130175502 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.135071446 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129666057 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128831628 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11861915 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128165659 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.1299783 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13583788 seconds)
  done (took 8.206875642 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.139170614 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101931142 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.129340365 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.102734624 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084742619 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115547134 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104572943 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085725047 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.12203211 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.120913339 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124191423 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095071925 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119314283 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124298045 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115106814 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118011439 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095565867 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115652745 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122180266 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.115828412 seconds)
  done (took 3.075599722 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095707666 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128152543 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.10920971 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096567595 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.11104125 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.114516136 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091018443 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111483932 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108061985 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092205946 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.120524083 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.120940975 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089979127 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.115147629 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120538306 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11463685 seconds)
  done (took 2.564058826 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099744273 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.129158323 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.127535919 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.108407009 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.086041562 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10482845 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.091125634 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.103830637 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104159901 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.103060677 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.108751473 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113092691 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.091344656 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.106547294 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.084996605 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.114042024 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103189154 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085622174 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110950973 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.128967775 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.099733028 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106651026 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111503436 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090460947 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108700382 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.114290605 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.088545647 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.106022804 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086820863 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110491211 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.107924755 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.096619247 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104603082 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106907418 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085695849 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.10553781 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.090611432 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.111439781 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114273393 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.090597083 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.106555306 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107166899 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.090656818 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110268569 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084568743 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.110908627 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.104042969 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094401549 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10749154 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10882889 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.091318269 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110675459 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.088875862 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119364439 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11205626 seconds)
  done (took 6.516857161 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102251849 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112411644 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083610202 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105253284 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.111216279 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.090523555 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112711381 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090832358 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109280881 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.106171635 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090725715 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113603915 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109048851 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091791084 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110712963 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091622513 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102956029 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109742174 seconds)
  done (took 2.674237516 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094176941 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108400921 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09604738 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109534703 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.108736909 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091045899 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104575338 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087181513 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107032713 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088530977 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108188299 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.111092843 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087428802 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.110622845 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089642702 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108077133 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110735924 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087340852 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109208471 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08476756 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110809387 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106563585 seconds)
  done (took 3.0497218 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.124831972 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.128398938 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.11677314 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.219256459 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106837691 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.135086013 seconds)
  done (took 1.66182351 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113675717 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14713371 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109577107 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092755769 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122560665 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11381358 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094262582 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113362847 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125497325 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12740969 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114003367 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105390968 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125945348 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125374417 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121995176 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121437338 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095509327 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115988395 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109286174 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133329208 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094956272 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125072413 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114039215 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113456674 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094514901 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126173955 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125442407 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126946855 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113585539 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126716237 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101215034 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114772873 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126865643 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126664247 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092133486 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125032827 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11412837 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13371939 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122167945 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123724145 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092599487 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121723791 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126370571 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119851015 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105508608 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11449232 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120627172 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114789488 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095717419 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14106057 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121175527 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124987041 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122819233 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125385059 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106096007 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.159625034 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126886403 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105323317 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122029174 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127841606 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125439474 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122114894 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123539538 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128033873 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10253679 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125371275 seconds)
  done (took 8.63052002 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130318928 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111168983 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11583053 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12823688 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125282303 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094486782 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11407713 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114594212 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094166129 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110857664 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157078429 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116140057 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125243362 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125009213 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094191822 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114890718 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114767405 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124924096 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090427356 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142777259 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115459791 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126048053 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125601165 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126472461 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127127122 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101926179 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115732681 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115800235 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093936029 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114630112 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121302157 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115008825 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125555919 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09010112 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126291969 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116030881 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094883529 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120906895 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113788891 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122484118 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126743611 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134281377 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094459221 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115544325 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12807571 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115208418 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095011117 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111713916 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115214829 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091076987 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128169092 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128868961 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127530387 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126036949 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115012849 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095346463 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115316037 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116342392 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09494381 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121077438 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12713481 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115221461 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141874122 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115871337 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094672546 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126733464 seconds)
  done (took 8.512124475 seconds)
done (took 161.70619361 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.104332662 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.143284289 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.122772991 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.153108519 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.109998192 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122873486 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.142023087 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.124145229 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.089290057 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.109074488 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088787432 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.113263189 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.15528179 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109073356 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.109825849 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.090562841 seconds)
  done (took 2.726398814 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.204720325 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.275714166 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.127126283 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.087601839 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.11496422 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.089201199 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.108609895 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.116791244 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090109972 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.109127674 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088916807 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.109582868 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.087838286 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109914762 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110536415 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089391876 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108977432 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089097151 seconds)
  done (took 2.965505937 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116640339 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149888943 seconds)
  done (took 1.113305873 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.1246136 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187496841 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304412712 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.160204636 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.145382332 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13186306 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15976278 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.114590525 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.231036024 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129130241 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.107920087 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.121612341 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146803696 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.119943252 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.097671663 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.1212549 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.148841042 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117103789 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097996253 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.121079219 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141840361 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088201424 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120591007 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11734926 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.195467131 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124349091 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088396441 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108177566 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.101222426 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.119452144 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115824948 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128665117 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.103382517 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.194183294 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105953926 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.186397611 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.122151659 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094688361 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118079319 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.115311621 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102352029 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.12360096 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.1303529 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.122225173 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.090709596 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.122346401 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088223522 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10867105 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117204777 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101982458 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.118811329 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11525534 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.165551862 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122761425 seconds)
  done (took 7.850144702 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.827635399 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.160021415 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117144495 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.923115617 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142095589 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107217343 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.819739619 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137512789 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.241593159 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.807003965 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135181237 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12507672 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241977375 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.246979623 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.021533908 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.330382783 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.718933947 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105898845 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144655321 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163016746 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121870454 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141413234 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112664027 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.459778393 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.097961583 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115387737 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121208929 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102528415 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191331511 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.094615811 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118399268 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190622155 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.28158126 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.217178259 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09877896 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114983442 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092709289 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.203000684 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278016876 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.228666765 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.186009345 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089839943 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114844458 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124814353 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111728005 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111111212 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.173974993 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.20519471 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.18315025 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118843545 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124433186 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101070932 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124884828 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176312653 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.126701094 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.335641125 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.331275978 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116226068 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124054176 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109227663 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278608468 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12918231 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239960165 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141644354 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.226077059 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093062279 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794444026 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.201520097 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092885058 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122268389 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121743833 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098624949 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124061604 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176825402 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.416898895 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128808646 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118718339 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092063549 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.241003604 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093683541 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115181041 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.173028714 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120394824 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122433896 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106448134 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126033451 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.180993648 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.26786975 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126489367 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102685415 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119156021 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127078451 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09782835 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.243391042 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.233498658 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173208244 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.243769349 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102849181 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.197377047 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.179066886 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125141495 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.184076248 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121474324 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130178681 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125511212 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.209936811 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.173465014 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107024436 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118036452 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122837184 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155367887 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096689881 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121904266 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.181695254 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.493820161 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.179460209 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.112294573 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11844651 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10133941 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.193127851 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099468144 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276290887 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124779592 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.179543502 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121935439 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.112175705 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100263908 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.195657543 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104993735 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122272092 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125846738 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123852661 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.243378913 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.231787318 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12686716 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231236773 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.209101874 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10075707 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.204037025 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101528335 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19931979 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101923963 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123795026 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119737126 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.828044845 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106699181 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121902207 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118937687 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.19563005 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09308299 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128614762 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.115601938 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0906283 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797135541 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.118086232 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.124577572 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.108297408 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121875247 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122602393 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099032033 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118436189 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.173803064 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243256441 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12346603 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12158001 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.094207306 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.191172207 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.099010824 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.115273662 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.115723796 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.093693429 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123783088 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118492762 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107589265 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.200214155 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.172462942 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234954864 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.565938296 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094460068 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.114913347 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243461032 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115387278 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299548611 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100918606 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.240661061 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.195943344 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10445851 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.326318501 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.195753551 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195411669 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096656673 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.205383667 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090873817 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120247911 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.198441665 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092948628 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121703437 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.172762856 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128349735 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126838532 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.975283499 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093396744 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256637416 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08997646 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.202385346 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097130615 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124307826 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.310498127 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115759735 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10984518 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.19815514 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097699183 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.11545313 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.884292952 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.093946386 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125694445 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123042566 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234594714 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.17477088 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123128204 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100724763 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123628642 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.196289222 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.218336562 seconds)
  done (took 45.861567187 seconds)
done (took 61.360406572 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282612336 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215757663 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.257476736 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169124294 seconds)
  done (took 1.874308486 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180673974 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149061648 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.148390088 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086905192 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.1563113 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.108676075 seconds)
  done (took 1.701690637 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.371229048 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.280894423 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241631279 seconds)
  done (took 1.769602067 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.254296825 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.273959718 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.332387199 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.418771071 seconds)
  done (took 2.255022273 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.23879217 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.143523809 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131036783 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.127408798 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.22250321 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.265476111 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.160465615 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.216471084 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.141744083 seconds)
  done (took 2.566338058 seconds)
done (took 11.045457611 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.158419064 seconds)
    (2/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.256924501 seconds)
    (3/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.130816339 seconds)
    (4/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.246343493 seconds)
    (5/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.157348856 seconds)
    (6/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.14245874 seconds)
    (7/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.120352738 seconds)
    (8/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.156703262 seconds)
    (9/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.256738236 seconds)
    (10/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.230556851 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.131091596 seconds)
    (12/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.227910267 seconds)
    (13/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.10075846 seconds)
    (14/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.242986103 seconds)
    (15/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.26240565 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.12695431 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.152169595 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.098757992 seconds)
    (19/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.185088694 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.111378415 seconds)
    (21/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.103393535 seconds)
    (22/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.196917886 seconds)
    (23/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.219835971 seconds)
    (24/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.112028629 seconds)
    (25/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.21686628 seconds)
    (26/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.149961533 seconds)
    (27/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.103140337 seconds)
    (28/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.213796657 seconds)
    (29/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.247757543 seconds)
    (30/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.216038765 seconds)
    (31/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.24664717 seconds)
    (32/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.156667998 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.138701119 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.116601109 seconds)
    (35/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.24306234 seconds)
    (36/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.096286448 seconds)
    (37/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.175733285 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 0.239003351 seconds)
    (39/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.210824645 seconds)
    (40/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.137880525 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.121612169 seconds)
    (42/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.230455294 seconds)
    (43/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.120480061 seconds)
    (44/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.103632661 seconds)
    (45/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.187230563 seconds)
    (46/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125778026 seconds)
    (47/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.13429354 seconds)
    (48/286) benchmarking ("sort", Int8, true)...
    done (took 0.233092385 seconds)
    (49/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.141500903 seconds)
    (50/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.11983978 seconds)
    (51/286) benchmarking ("sort", BigInt, true)...
    done (took 0.24774419 seconds)
    (52/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.124652013 seconds)
    (53/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.091193003 seconds)
    (54/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.100108118 seconds)
    (55/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116414997 seconds)
    (56/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.172584657 seconds)
    (57/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095516513 seconds)
    (58/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.119328149 seconds)
    (59/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114654858 seconds)
    (60/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.097165193 seconds)
    (61/286) benchmarking ("sort", Float32, false)...
    done (took 0.184098729 seconds)
    (62/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.119306298 seconds)
    (63/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.118465201 seconds)
    (64/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.120987889 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089366605 seconds)
    (66/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.172595204 seconds)
    (67/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.125250851 seconds)
    (68/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092463766 seconds)
    (69/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.192510879 seconds)
    (70/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.093861657 seconds)
    (71/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097202341 seconds)
    (72/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.092525551 seconds)
    (73/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.098621705 seconds)
    (74/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.1192176 seconds)
    (75/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.100642914 seconds)
    (76/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.160434792 seconds)
    (77/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.203426275 seconds)
    (78/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.171129581 seconds)
    (79/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.131639922 seconds)
    (80/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.159717114 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.114025622 seconds)
    (82/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.089349943 seconds)
    (83/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.153218808 seconds)
    (84/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.153602988 seconds)
    (85/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.094697259 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.13862921 seconds)
    (87/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.118045972 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 0.112478389 seconds)
    (89/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.173489901 seconds)
    (90/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.104389292 seconds)
    (91/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.111881857 seconds)
    (92/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09820718 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.137954398 seconds)
    (94/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.127161609 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.140933398 seconds)
    (96/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150907442 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.11153042 seconds)
    (98/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.143976409 seconds)
    (99/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.1016395 seconds)
    (100/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.224082051 seconds)
    (101/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.141203564 seconds)
    (102/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.093724577 seconds)
    (103/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183970401 seconds)
    (104/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.168554491 seconds)
    (105/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.171004231 seconds)
    (106/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.07232081 seconds)
    (107/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.143720371 seconds)
    (108/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069634287 seconds)
    (109/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.12046102 seconds)
    (110/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125198067 seconds)
    (111/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089160305 seconds)
    (112/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.147458956 seconds)
    (113/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.098932477 seconds)
    (114/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.100189593 seconds)
    (115/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.127583349 seconds)
    (116/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.183204952 seconds)
    (117/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.122844119 seconds)
    (118/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.070962936 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112845766 seconds)
    (120/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.070488785 seconds)
    (121/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090020031 seconds)
    (122/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192969303 seconds)
    (123/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.1754026 seconds)
    (124/286) benchmarking ("sort", Bool, false)...
    done (took 0.192087903 seconds)
    (125/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.121140033 seconds)
    (126/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.099710765 seconds)
    (127/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.09260218 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.097303638 seconds)
    (129/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.121388938 seconds)
    (130/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.0782609 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118265813 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.097483754 seconds)
    (133/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.101270438 seconds)
    (134/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.158598024 seconds)
    (135/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.17412792 seconds)
    (136/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.122905419 seconds)
    (137/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.090371907 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.121136711 seconds)
    (139/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.127909762 seconds)
    (140/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.084100114 seconds)
    (141/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.124050784 seconds)
    (142/286) benchmarking ("sort", Float64, false)...
    done (took 0.18196867 seconds)
    (143/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.069681029 seconds)
    (144/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.070303186 seconds)
    (145/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.141639906 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112296672 seconds)
    (147/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096900001 seconds)
    (148/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.125365521 seconds)
    (149/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.098391614 seconds)
    (150/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.113516655 seconds)
    (151/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.09180658 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111130113 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.123429041 seconds)
    (154/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093973518 seconds)
    (155/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.114270819 seconds)
    (156/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.071168627 seconds)
    (157/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.120853695 seconds)
    (158/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.072087916 seconds)
    (159/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.073281063 seconds)
    (160/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.121054431 seconds)
    (161/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.119626864 seconds)
    (162/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069663522 seconds)
    (163/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.072140606 seconds)
    (164/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116223655 seconds)
    (165/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.152447251 seconds)
    (166/286) benchmarking ("sort", Float64, true)...
    done (took 0.243296414 seconds)
    (167/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069898335 seconds)
    (168/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.069179872 seconds)
    (169/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.093753628 seconds)
    (170/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.078645205 seconds)
    (171/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.208473799 seconds)
    (172/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.139582476 seconds)
    (173/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.188091993 seconds)
    (174/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.118315416 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.120345344 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.08963126 seconds)
    (177/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.339210392 seconds)
    (178/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096860047 seconds)
    (179/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.159840185 seconds)
    (180/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119604502 seconds)
    (181/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.071853097 seconds)
    (182/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.174417481 seconds)
    (183/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08968532 seconds)
    (184/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.11137959 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.123378041 seconds)
    (186/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.071842115 seconds)
    (187/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.149252421 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090866345 seconds)
    (189/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.092341765 seconds)
    (190/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.078035677 seconds)
    (191/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.069773067 seconds)
    (192/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.139096689 seconds)
    (193/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.127443992 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 0.234044727 seconds)
    (195/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.091406892 seconds)
    (196/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.112648104 seconds)
    (197/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.069623948 seconds)
    (198/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.118644306 seconds)
    (199/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108639389 seconds)
    (200/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.113505972 seconds)
    (201/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070961992 seconds)
    (202/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111280878 seconds)
    (203/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069930319 seconds)
    (204/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.110899572 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090099835 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.12033338 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120359801 seconds)
    (208/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.078583388 seconds)
    (209/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071666164 seconds)
    (210/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.09265039 seconds)
    (211/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.120921857 seconds)
    (212/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.091244449 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096563585 seconds)
    (214/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.113719641 seconds)
    (215/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.069596931 seconds)
    (216/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.096279024 seconds)
    (217/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097164921 seconds)
    (218/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.113803604 seconds)
    (219/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.124424886 seconds)
    (220/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.143294295 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.111663783 seconds)
    (222/286) benchmarking ("sort", BigInt, false)...
    done (took 0.229176051 seconds)
    (223/286) benchmarking ("sort", Float32, true)...
    done (took 0.243478647 seconds)
    (224/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.093827004 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.0893192 seconds)
    (226/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.092962465 seconds)
    (227/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.098992554 seconds)
    (228/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.149086386 seconds)
    (229/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.070320577 seconds)
    (230/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.092205455 seconds)
    (231/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080568561 seconds)
    (232/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.112582564 seconds)
    (233/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.0975723 seconds)
    (234/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.125204151 seconds)
    (235/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068954356 seconds)
    (236/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115463263 seconds)
    (237/286) benchmarking ("sort", Int8, false)...
    done (took 0.199396088 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088620076 seconds)
    (239/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116026364 seconds)
    (240/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.115970462 seconds)
    (241/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.072117083 seconds)
    (242/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.114199534 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095836596 seconds)
    (244/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.116600677 seconds)
    (245/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.068907472 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121644477 seconds)
    (247/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079055021 seconds)
    (248/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.07016862 seconds)
    (249/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.183613551 seconds)
    (250/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.070632306 seconds)
    (251/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.093222262 seconds)
    (252/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.069902764 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.112372101 seconds)
    (254/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.116725476 seconds)
    (255/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.131601332 seconds)
    (256/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.092762059 seconds)
    (257/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.092621907 seconds)
    (258/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.121811059 seconds)
    (259/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.167117309 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.097501459 seconds)
    (261/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.128662004 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089450571 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.111639766 seconds)
    (264/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103632703 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120551133 seconds)
    (266/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.072967574 seconds)
    (267/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.094549594 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089845713 seconds)
    (269/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.101037414 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089135597 seconds)
    (271/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11913066 seconds)
    (272/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13718153 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.101258858 seconds)
    (274/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.115002583 seconds)
    (275/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069015372 seconds)
    (276/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.071036669 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.11191007 seconds)
    (278/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167549115 seconds)
    (279/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.08928707 seconds)
    (280/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.093158403 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.096857155 seconds)
    (282/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.095389162 seconds)
    (283/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.069624287 seconds)
    (284/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.069591203 seconds)
    (285/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.09603847 seconds)
    (286/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097672918 seconds)
  done (took 37.339910736 seconds)
done (took 38.221032096 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104798203 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.154185373 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.122640116 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.120160504 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.126943771 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.117091466 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.098592137 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.124927788 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103321611 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127669882 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.12527452 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071595331 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.123839887 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.099974792 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.122893081 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.144798186 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103305637 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.120712609 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121827159 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087970889 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.122273369 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08948469 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11476151 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071476612 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.124442029 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.097461327 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118382583 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.123039071 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.089772932 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112245263 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.0953155 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.120367414 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090019029 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126128563 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.119538907 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.098131637 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.123094422 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.100011185 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113744972 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112996696 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.097881808 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.11362313 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096521625 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.120328008 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096805612 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.118516178 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.122193475 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103113653 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.144849595 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118918194 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.098256402 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124078588 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.100539307 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.12004792 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093610735 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121194038 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118089375 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122448167 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121964674 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118661777 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.097958249 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.121911821 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.094687543 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.121886242 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.122102255 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.099616929 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125420424 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.0951738 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.123895322 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119433695 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089744286 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.12291369 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.093461507 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112420426 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099176602 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.124079074 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08989951 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118733808 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.121838243 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09555179 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.112907536 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09287461 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.115307273 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096078433 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115542505 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072070749 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.116878648 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097470382 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111847426 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.12270581 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096409668 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.120181002 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091947645 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.12471395 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.089941289 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.118320903 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.114131674 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.089968732 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115721907 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093644195 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.113621748 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092674665 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121691634 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.092201894 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119557965 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.126123354 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089780428 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.120213159 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.090085291 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.112560237 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.129273988 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101166167 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.114125754 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09549639 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.112384697 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.098425923 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112428791 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090072771 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112751075 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114165442 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096489079 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113151807 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092355454 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.120687803 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.105393802 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.113724022 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.094464458 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114972699 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.113120811 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09541813 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113901194 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090702134 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11586107 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08031897 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117689244 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090178737 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.121912874 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09298451 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.121647792 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.115977056 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099430833 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.118089014 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096402967 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.119641503 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.090402331 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099679349 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096743317 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116578794 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.092092769 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.112964757 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115911312 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.090382373 seconds)
done (took 17.518372105 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090825984 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188598488 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.158980673 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.150657692 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.135411045 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.090421069 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.125528538 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.146544227 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092655788 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146502102 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.136531687 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135273841 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.130238499 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.114003732 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114407546 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.094456111 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117037372 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.106942327 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.152448379 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.136306763 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.169983047 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.113546783 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126824073 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139224419 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123575482 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.141383315 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091491617 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.118327508 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.094524544 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.131490551 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134916978 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.09436915 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.115708586 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.112139588 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.131787506 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.123063799 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090615974 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121089321 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.091379899 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.114671384 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.144836417 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13633496 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.096785492 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.12073906 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095059075 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122712971 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092798983 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122220025 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.125900496 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.095299098 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129598529 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.160706291 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.117454208 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107784998 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.113194113 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125651071 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107170205 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.121983784 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.09119411 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121607594 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.114353701 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.094774894 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130007387 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.146163788 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.095350014 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.13082471 seconds)
  done (took 8.935606193 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108413319 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.144198028 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132928212 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109937959 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114770483 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.091984561 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115808593 seconds)
  done (took 1.760850015 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091906 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.141730139 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135914183 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141402726 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.140364194 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.118362583 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120418262 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.116252108 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.111093925 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.116659227 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.140753595 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.133012176 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116771838 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.123711906 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119783799 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.11497667 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.142560895 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091443882 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119368374 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.118511016 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118606348 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134473097 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.093447799 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.117085874 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110406693 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116296582 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165814727 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097639068 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115381522 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.120013189 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090308343 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.155818506 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.134288848 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.100111141 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116564581 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111069658 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.133417938 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11445271 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.108338994 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.121875251 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.134024038 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091976534 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117485147 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.089767094 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120676956 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.105816122 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119744647 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093633623 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.119069682 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.140463684 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093418153 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.13427984 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092363018 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119640435 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.118768449 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095663145 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126782814 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09325575 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.139750145 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114259361 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112471007 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135578161 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.13406098 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112874193 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119024248 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.110482821 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.134550686 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11918989 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093900547 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120637846 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112508404 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113889944 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.095451332 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.129755586 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118031773 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120141366 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.144163211 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119421788 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103103287 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.118804344 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.09308178 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.116060272 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.144492081 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096696744 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116664233 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096928368 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11888939 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090917243 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.115451929 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119944885 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090907419 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118369247 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09641975 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117135375 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095809404 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.137082484 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.118322567 seconds)
  done (took 12.292391147 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093846228 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117915449 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098218096 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.118536582 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.094432778 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.118006167 seconds)
  done (took 1.595221945 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.120363477 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119618345 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.132792388 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099350326 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159516958 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.136550835 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.113336155 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126937301 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.136160031 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106214557 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.135141282 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.136028628 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.143154899 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099702284 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.135443032 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123151477 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.112745516 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127173915 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.131140195 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100617224 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140764937 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123611169 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101047099 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.137765123 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121545364 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099447841 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128262049 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130850073 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.106054599 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126687516 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124034595 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.097306629 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.124463439 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126749524 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.112820346 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124355604 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123517177 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.098841857 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.1282519 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.122199002 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.113067487 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125481647 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.130873765 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097971614 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.127059574 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124517989 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09852949 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128904821 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135729004 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097699277 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122736049 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.099885149 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120333665 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122901726 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.10031041 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12631479 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122992589 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.113138037 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123966885 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124365829 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096020073 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121996622 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126664629 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096649625 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.13384417 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122395039 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.099983587 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124112922 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125586986 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099263065 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123246029 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122077329 seconds)
  done (took 9.601146544 seconds)
done (took 35.124567424 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.692503792 seconds)
  done (took 1.647221701 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.84704836 seconds)
  done (took 1.803455656 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.669287331 seconds)
  done (took 17.65713708 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.50226238 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.583097672 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.024290585 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179501059 seconds)
  done (took 3.244449634 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.952416508 seconds)
  done (took 1.923990306 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286573282 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261697924 seconds)
  done (took 1.509732615 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.827309159 seconds)
  done (took 1.792801139 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.464219403 seconds)
  done (took 2.433478989 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.330280927 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190407386 seconds)
  done (took 1.498447869 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.567375086 seconds)
  done (took 1.540773281 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.186329753 seconds)
  done (took 11.163018964 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.276752462 seconds)
  done (took 1.260108584 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309122866 seconds)
  done (took 1.284331555 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.451193844 seconds)
  done (took 4.425596284 seconds)
done (took 54.144726011 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102409287 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.130538455 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10588527 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.127574535 seconds)
  done (took 1.434787373 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.108807568 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124462726 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108505091 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124504435 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.135400952 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.100476268 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.127080107 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.13076157 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099913577 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.126252437 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.100770402 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.124710867 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128573185 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102455704 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122140115 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.128170349 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104763552 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.124504306 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128048128 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.101060081 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.123075831 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.102590207 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.129045429 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122899786 seconds)
  done (took 3.807294883 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104179942 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.122581216 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100900144 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.121514484 seconds)
  done (took 1.426782583 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103412544 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.135639247 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.109736877 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129585762 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.136659331 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109650967 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.121118054 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096162201 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.122428643 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128578755 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094668968 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.144025673 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136883165 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.103405855 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.130713404 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.09333776 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120114519 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136005811 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.10373061 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128584366 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.097174138 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127598065 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119760189 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.114570946 seconds)
  done (took 3.824129893 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.177217977 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.131347334 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.14310807 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.099395822 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164415165 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.144372715 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.092155394 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.144463603 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.116786212 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.109064828 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.122595796 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.164814662 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.108342357 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.116439385 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117222817 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.092011017 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131693261 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.10599208 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.119950088 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.132237395 seconds)
  done (took 3.520625095 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.101936614 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.121108726 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092313397 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.120041617 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.102886474 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.124830081 seconds)
  done (took 1.647308328 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.100387346 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.118142195 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.097049536 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.119787009 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.097564787 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116982873 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.092559627 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118108905 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.11797487 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.091520837 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.120101442 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092440397 seconds)
  done (took 2.268236699 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.515914903 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122957407 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.124526911 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.092448413 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.127623862 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117561564 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.109734134 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.121770355 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14675654 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.092122154 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.119502648 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.095590232 seconds)
  done (took 2.776737432 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235588693 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129195968 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290366292 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.362414021 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201787432 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170087162 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281535674 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170096849 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20816679 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161853491 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233257181 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183659427 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157798394 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208927564 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143351302 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.147732632 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197635254 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.270703583 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157880788 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244941735 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173595733 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169976929 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184906191 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155975885 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14372182 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177493534 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099599525 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135144523 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190320511 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208416162 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195691294 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169009939 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161669931 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.458373382 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263899829 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198370132 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289582857 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139571761 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.173290004 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.173352762 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265234316 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143212263 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211601415 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166181566 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134815942 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207899007 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.350787338 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.183488535 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.14940993 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145140337 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202201323 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225954728 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199163171 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14212711 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330025665 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156907012 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.165740635 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197893243 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214060161 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233879971 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196855436 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123024709 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195955995 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224957757 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191940797 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.160284521 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.1860859 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154589822 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177463058 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222860399 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179561104 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175138162 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.209575299 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11787965 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170351521 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200435539 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174818331 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263838708 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188835348 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124275679 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172270237 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152848186 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111418272 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198486195 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127585467 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219484139 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144003932 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.167050612 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215657989 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161914764 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163044266 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215911601 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179346024 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150937832 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086724284 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159422991 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15987381 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177308005 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14212237 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161939368 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155731389 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.137085163 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179623788 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101092252 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215664599 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09472354 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.35761428 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188295892 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129946709 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166906356 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152528374 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15497115 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18775588 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203994267 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145010016 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137503707 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215741456 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212441875 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.119714601 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206074073 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208464543 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147415777 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154210482 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206560526 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245956467 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146031793 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208133319 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153560265 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139169959 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.110567118 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214679791 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161604341 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164586573 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113280656 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.214837132 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206144227 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.129106256 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141992574 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202843019 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137805124 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136896348 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150305645 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151192297 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.113692001 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146697694 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.150892076 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180564132 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182459026 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158696595 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168575485 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149308657 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245811132 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145214489 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.15318296 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149478449 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.098284511 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.228500615 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205288701 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134652124 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206406978 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.175460458 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239504751 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173410538 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13788631 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180895067 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107786078 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.125003365 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198865369 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192790973 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16306169 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198704299 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230330767 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187759847 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.188010386 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169781148 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205902847 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.145557376 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153020254 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140604651 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164183907 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160442799 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12731417 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144603225 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.111698867 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152841293 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146973401 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139805406 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200973096 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203351703 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197545193 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163476953 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154910966 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186960894 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.132236642 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176801945 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.403676862 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153615759 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201527492 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224616498 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192565439 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145560637 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205983589 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123891308 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128872602 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.123056482 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196668651 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113942319 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138429366 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166798191 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186638192 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.355554361 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178433327 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242825733 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184336682 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196331514 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.126556477 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172825559 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186694406 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183814384 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181588363 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145050676 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126967018 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209044874 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129807571 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239117258 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172937607 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177623525 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228003413 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153053929 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11036543 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152501388 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174721275 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158124318 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206101354 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122995004 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141830378 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.339225419 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108287679 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166141927 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213626266 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167177051 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183096938 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154560273 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191907585 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13124312 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167297121 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163206524 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168102498 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111408584 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330593701 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226070677 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12090379 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.340706784 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187354835 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134543532 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.317488749 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206149423 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.3613675 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141593732 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160405548 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164816375 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167809951 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.318117354 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182075241 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162949292 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218294973 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160119887 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113084021 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142856586 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154449109 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157380906 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.110173581 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.155440347 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.210267923 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112903986 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214976777 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151095009 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160349351 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176392094 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.154656553 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.121451644 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155583177 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247032972 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190794483 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194741636 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152394289 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179817879 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234675224 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130548515 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110021578 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137241354 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182414484 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141926022 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198252882 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.219847649 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20715234 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215364201 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175815829 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116103592 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124866347 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163781127 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174029496 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237765804 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149591889 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152533638 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203096269 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.139297804 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108095096 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168390912 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317866693 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123000612 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219943741 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082492616 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.290322573 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129123151 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137433514 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166382741 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191123761 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.140977703 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15597013 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197644756 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156728673 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141035026 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152394533 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225106061 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21768722 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233425391 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187917643 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.137568506 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163281451 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.325830771 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217679881 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164098241 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.11265897 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190761513 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22701793 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197864618 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.147393402 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174824318 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172325141 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163699291 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221202138 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114466949 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236805687 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138848389 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202154315 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159306676 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148625833 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179684853 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.220732267 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118056661 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213193485 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189784771 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137997192 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110154108 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189932811 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184123876 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154033336 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104242972 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210983855 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101850391 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227226295 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240775696 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138470546 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159167198 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149546321 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140586103 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160007092 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164658406 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142993922 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.142344404 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22559002 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.111942635 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217055556 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208508887 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176979177 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.341525763 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145811863 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.71111833 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107768407 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229442888 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151715401 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183563893 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154031772 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178483087 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164049283 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171710942 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20134901 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162213107 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.235428579 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229734193 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.186288985 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136464238 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165322092 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152129265 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.150250837 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155951208 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173495319 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163065435 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.149851095 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.185954082 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161110644 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110061856 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144895691 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231504978 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125550509 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213534934 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183284039 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143288129 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178599214 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195690113 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137293326 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.187678506 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218948354 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118638483 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152900229 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.141075109 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157009643 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272278756 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101961634 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216283137 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193210764 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164880386 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174015483 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.153056352 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198937597 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189578651 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193173241 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147826851 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161932968 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161522173 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143864082 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107159405 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159553546 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172494906 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.155842743 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166423786 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.169343221 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201845604 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12675037 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149544679 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295727142 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179390792 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246736762 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.111930891 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139171218 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164489527 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149965922 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.185652839 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185613009 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.140026164 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139587872 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139849762 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.134537092 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141434198 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161555323 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202267055 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318746738 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236946391 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.141799213 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.286498152 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116207107 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159135769 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118363764 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.110494015 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155679944 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150871327 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155646926 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.226337243 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271258562 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.12458397 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.137903898 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155937841 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129691836 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114268645 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169535315 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165857463 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213522101 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119271747 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110835909 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161388368 seconds)
  done (took 86.693105686 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205546605 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.144408349 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.153286223 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.207475287 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.184122084 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.297561781 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.214860916 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.261964476 seconds)
  done (took 2.74646858 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096980195 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.156399774 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.161084699 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.138549273 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.094427183 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.123806966 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.388539288 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.135044536 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.094239351 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.154080363 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.151969033 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.121934735 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.647877084 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.123394715 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.122908276 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.159170115 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.119624296 seconds)
  done (took 4.059895135 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.200222193 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.49561254 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.009065782 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.197769019 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.16226047 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.119513558 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.712626006 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.123082715 seconds)
  done (took 12.097018504 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.12810845 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.149091034 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.166760927 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.139409247 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.154640296 seconds)
  done (took 1.819311363 seconds)
done (took 129.090371024 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.101181766 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131811988 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102697336 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.133433011 seconds)
  done (took 1.537485113 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099165072 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073554878 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10317008 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077040423 seconds)
  done (took 1.433116054 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.198103651 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.173834042 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.400437795 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074430209 seconds)
  done (took 1.587725942 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.119238516 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135789034 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.136380397 seconds)
  done (took 1.478524479 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.110278625 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.133387484 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106624444 seconds)
  done (took 1.42745879 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.110494946 seconds)
  done (took 1.195047184 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.115013201 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.144195386 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115815142 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.141918185 seconds)
  done (took 1.602422202 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102014287 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131440151 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115397245 seconds)
  done (took 1.433938599 seconds)
done (took 13.146755555 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109315941 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.428814271 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.421621243 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113821935 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729107692 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.412537937 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.016410143 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150460885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172905828 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124595425 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114954612 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.703689512 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.035225525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348697923 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.022515386 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.468486553 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678292836 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12282413 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09625918 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123686853 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.00057709 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123259181 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124462631 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095971482 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705243712 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.430095464 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098706402 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.468547441 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095749221 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132391299 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384245867 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125643067 seconds)
  done (took 17.250736157 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102400986 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185704313 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134153409 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098052804 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.132091248 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098033559 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127703913 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125574536 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189126534 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097346584 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146893824 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.096843761 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129431868 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12582595 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117641456 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124255028 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124302484 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096706555 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124033913 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097928548 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143647481 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096681617 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124835557 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12297609 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097653819 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138896563 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124678023 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096045869 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124211935 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.106031267 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12750788 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099706325 seconds)
  done (took 4.968297377 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148598911 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193633155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136223742 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15953831 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178560418 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099238905 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.203675652 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151615088 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191708459 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124582599 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116016461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124623423 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.159637918 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.099425165 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146237375 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097208547 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126841558 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123899266 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096502412 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125423596 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116365395 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123074702 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125323934 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096282734 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125330104 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140734052 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098493007 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125334027 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097114365 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134114402 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127593962 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09896469 seconds)
  done (took 5.307448915 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.100037635 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129747677 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113038577 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.142273455 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.127652991 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100223833 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.128801532 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099958254 seconds)
  done (took 2.039756486 seconds)
done (took 30.649523343 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114488066 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.130812321 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.111356005 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.137692159 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.134929699 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.109483267 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.123804789 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.108687879 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.137874717 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.105587714 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.140775663 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.122601623 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097902417 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.122770261 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.111613435 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.1297859 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.137862532 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.106710448 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13962032 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110044024 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.126152089 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135914406 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106755787 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138931282 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.110086329 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.137854536 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.140962433 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103574292 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12582817 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098231828 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.128798327 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.109278086 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.127526488 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.140396098 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.101612509 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.129651827 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098360554 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.129151318 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.137492454 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108229212 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.131841445 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108368285 seconds)
  done (took 6.19450718 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.114393932 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.145743827 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110089973 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.112854626 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090883613 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084723124 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.143621062 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082141097 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111466035 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11253635 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.10527893 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080068418 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.108749257 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.074961355 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079061912 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.10648927 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.08184965 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.078043334 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.106480851 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079566325 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.109665361 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07542263 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082479448 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.108764182 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076863922 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110146963 seconds)
  done (took 3.674733518 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.104018564 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145298377 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117162639 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.179981614 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161056323 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.133356969 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109080271 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.143795438 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113349795 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.124550745 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128373446 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125624938 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142770707 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103581999 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.128093024 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139333516 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.111816754 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.126695804 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106378086 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.145893825 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.142074089 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.107695283 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144188344 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.136369281 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.096701601 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127250149 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.103893043 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.138688367 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.103927737 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13468382 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131330056 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.100029999 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12691076 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.135879745 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102802022 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126205356 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.115777454 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.139335504 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.133750656 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.097347212 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.132885389 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.098995974 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14642906 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.164469027 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096004774 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.133404226 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.099208883 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.135448967 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.125227232 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114599623 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135020016 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097016027 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.128205134 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.12471904 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097491293 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140855193 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097924458 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.12716954 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.105159048 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.129558114 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137534036 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.100946345 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141186282 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.09736223 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.131972899 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.125484278 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.097520668 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12293804 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.120328891 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130764677 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.166600415 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09747129 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126245722 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106364457 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.133242224 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131814247 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.096706781 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141913388 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107374914 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.128598033 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.136441225 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.10011709 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.128691633 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.114288128 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.127185365 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126705543 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.098707628 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132314248 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.098615604 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125979939 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111915519 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.124038731 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.128434939 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110404425 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.125252363 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.098656347 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.131747428 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.130594549 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096250098 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138723005 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102089422 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.126291812 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.135418397 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097061954 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.128260716 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.106440727 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.130287396 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.124420716 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.102592301 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.132073843 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097355334 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.129862719 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099105239 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.126366284 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135185191 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.103565557 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.13038009 seconds)
  done (took 15.400505944 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.237544101 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.225437612 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.193755564 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.302710379 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137722368 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.151049643 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.222437185 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.165478919 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097301074 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.165056237 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17494719 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.189869871 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.175415401 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.186401788 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.17630425 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.126357423 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.144849626 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.14354126 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.253158556 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.272810626 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.146963673 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134458568 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.166952125 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.165338953 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.111122035 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135791933 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.144457668 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.10963202 seconds)
  done (took 5.966408248 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114391417 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158233188 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.131711585 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.119205537 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.153632564 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125908935 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101848545 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.127632178 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109734877 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.140770152 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.125509331 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.103114045 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.132259681 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.136041203 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.098200198 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.136214678 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.107693374 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.127334638 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128137954 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.102764228 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.136921388 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.106113314 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.130560666 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.096338155 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136279915 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.126131098 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090924071 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.148600583 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.126409302 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119881177 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.124922686 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105311693 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.139438341 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.126786216 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09655605 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.128428457 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099799107 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.128870868 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.099452819 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.125303283 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124563034 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.081225546 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096015455 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.142004163 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.132921688 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.083397836 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.13690602 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103650903 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127230119 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123934777 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09962793 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.128655042 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.100480683 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.134482508 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.100411032 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127944044 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100522954 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118708885 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104139493 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.127964779 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.087157961 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.125321192 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.13087472 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.093302375 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.13569045 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103027166 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125855694 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.099827515 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.130900992 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.132468417 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.099324524 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.132899267 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095274118 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.128981463 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100517402 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.131632315 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.101952749 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124885962 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.126059502 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097329565 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106851203 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.096918465 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077248525 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.129066868 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.123707629 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.096115098 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.128691509 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.104057311 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.142539203 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129233759 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.106755497 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.127982678 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.096517404 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.129758875 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.085882771 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.128637112 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.143044168 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.117583951 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126835612 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.125061726 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112343305 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.130688096 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096571379 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.108387321 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106004359 seconds)
  done (took 13.470929888 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13576198 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.15738783 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128648901 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.116709946 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.160796526 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162475469 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104849517 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.134350666 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.12843322 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116579632 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126443331 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107133127 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127333881 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.111600482 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161015063 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.138960668 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099003611 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.141491142 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130663644 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.173249846 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.116434508 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.146104729 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.115621633 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12674102 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133050867 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.115469746 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164895612 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.141772541 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.111555506 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14702828 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.112331341 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.16524165 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.146973166 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102440285 seconds)
  done (took 5.63845319 seconds)
done (took 51.44290015 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.20056592 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.431028188 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.189728736 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.039893631 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.23136446 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.214521462 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.218294613 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.200367182 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.203395304 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.186963087 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.462398661 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.682289482 seconds)
done (took 58.37473408 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.278586675 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.337708403 seconds)
    (2/2) benchmarking "String"...
    done (took 1.471858457 seconds)
  done (took 3.920210678 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.74781363 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.134718354 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.44863051 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.20750765 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.191049432 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.478809459 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.877887035 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.544901779 seconds)
  done (took 27.995188917 seconds)
done (took 42.054374026 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.199937973 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.221518593 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.229187312 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.166462196 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.317261411 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.239378496 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.586477377 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.22961472 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.212753969 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.171145539 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.196738328 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.189630505 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.194699083 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.554748667 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.194315322 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.190865378 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.248375125 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.703164903 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.604021825 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.191826035 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.20864644 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.230801961 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.21278373 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.206336928 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.212385415 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.188726481 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.189211053 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.194146349 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.714294848 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.191249011 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.200893482 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.189868267 seconds)
  done (took 189.893631548 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.18954316 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.293373958 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.353291812 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.242393206 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.813476231 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.399896028 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.343967236 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.867364926 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.209282653 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.221165816 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.303882541 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.189882745 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.37059431 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.202754562 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.218951241 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.235158275 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.498854991 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.395691421 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.226648304 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.355284095 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.197377858 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.178935057 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.123219316 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.298551355 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.210825956 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.213828122 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.202911195 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.228998963 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.388577097 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.431502391 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.250715255 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.200437441 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.806091322 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.052526033 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.203405843 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.217072477 seconds)
  done (took 149.252278911 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.191397512 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.191756017 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.191372949 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.224951508 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.192667055 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.752233743 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.766690797 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.69870878 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.421636079 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.611160188 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.44894874 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.193245863 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287769602 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.209470469 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.193124569 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.208045829 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.238811674 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.19315189 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194241973 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.768874077 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.20814485 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.196348951 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.385287465 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.209710682 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226274188 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.580936666 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.194098947 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225572474 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.524008224 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.242255114 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19381173 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.584798924 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.63364802 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307138704 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195847267 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225332586 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.193578492 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.474420913 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194734012 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.193716373 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.193477706 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.196859436 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.88421098 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.19918908 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.755598836 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195345715 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.146875414 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.195219497 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195209622 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.805999485 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.82739436 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.21104201 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.194431923 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.196567818 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.194702027 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.194153207 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.194974973 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.227434446 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.757434746 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.292728962 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.212398387 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.198203658 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228240867 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.195685915 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.416042212 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195781607 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.259642881 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.255443404 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.301260684 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.761921584 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197715754 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293677762 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314852636 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.194916509 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.193829129 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.193912381 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.194743508 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.305127525 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.195654111 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.598356771 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.369033266 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.213311204 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.592889487 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.29549329 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.194109446 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.60606893 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.198267104 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.194144609 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.94023815 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.29063092 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.195623618 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.19600036 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194824731 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.598510996 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.764731592 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.457003753 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.198537093 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.19465676 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.829399555 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.197774701 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.612845748 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.736409052 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.85021083 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.197943011 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.19472928 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305904834 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.368165872 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.212316077 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.194998191 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.567620238 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.198307945 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.254229178 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.194787797 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.591782166 seconds)
  done (took 365.457999239 seconds)
done (took 705.716838047 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.818775877 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.810132722 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.919741811 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.80250152 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.762563767 seconds)
  done (took 10.23113354 seconds)
done (took 11.34938131 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.382040389 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.380559225 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.253986527 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.383149202 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.225314945 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.400075206 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.360735158 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.216550163 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.298874279 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.275142007 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.296312291 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247107061 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.229424542 seconds)
  done (took 18.067504939 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.51166726 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.532960154 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257643188 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.514056052 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234280986 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.506771971 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.395323831 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.417203803 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.409770081 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.228832746 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208800409 seconds)
  done (took 16.337030505 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.52029552 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.534827116 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262055714 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.528351089 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23612598 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.516341282 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40661801 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.418054511 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412952569 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.228795712 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.207973363 seconds)
  done (took 16.391336652 seconds)
done (took 51.914445941 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.205035406 seconds)
  done (took 2.324428484 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.239765703 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.402923488 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.22224809 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.209263605 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.206200284 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.207217617 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.211180869 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.206168275 seconds)
  done (took 11.025651391 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.202262222 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.20441298 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.204015183 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.203569462 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.2015449 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.205210605 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.20549005 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.203120598 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.2052919 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.202480788 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.203020394 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.203131222 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.202900051 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.205106512 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.20502885 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.202011163 seconds)
  done (took 20.379488303 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.205478573 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.202304797 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.203147763 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.203688246 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.20270543 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.203106568 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.20342129 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.203372325 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.203127506 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.204537773 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.203414411 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.203352301 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.203235813 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.202612835 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.202700729 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.203832567 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.201991195 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.203437881 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.207989828 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.202731031 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.203268932 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.203193534 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.203495757 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.203586647 seconds)
  done (took 30.007305638 seconds)
done (took 64.857476918 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.804511998 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.691018639 seconds)
  done (took 6.616947082 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.264145064 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.268062553 seconds)
  done (took 3.655849042 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.20726794 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.205331352 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.206781836 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.206867197 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.205883925 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.205738259 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.206330038 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.205711533 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.207109561 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.208074881 seconds)
  done (took 13.188368479 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.206955807 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.207597814 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.204045228 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.207573513 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.206706916 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.203968739 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.207448036 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.206319983 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.206365507 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.20493761 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.20826873 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.20540516 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.207894234 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.205093601 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.206885868 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.204511489 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.205913756 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.204076354 seconds)
  done (took 22.832767952 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.2073148 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.228844465 seconds)
  done (took 3.560262431 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.337471632 seconds)
    (2/7) benchmarking "second"...
    done (took 1.249404487 seconds)
    (3/7) benchmarking "month"...
    done (took 1.31664344 seconds)
    (4/7) benchmarking "year"...
    done (took 1.303009293 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.247465778 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.226141798 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.248060293 seconds)
  done (took 10.053337071 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.209339565 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.382119892 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.484808238 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.804747598 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.209917917 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.212711537 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.047100374 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.213090072 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.216526151 seconds)
  done (took 13.905377747 seconds)
done (took 74.935023189 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.203385539 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.219136492 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.425591188 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.224984125 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.219120629 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.501858404 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.219072465 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.331428131 seconds)
done (took 37.470718906 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.217030504 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.182753931 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.967080378 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.203890029 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.28141379 seconds)
  done (took 18.761080603 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.227162513 seconds)
    (2/2) benchmarking "read"...
    done (took 1.540732566 seconds)
  done (took 4.89311806 seconds)
done (took 30.997397483 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211378796 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.211409854 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.211632278 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.208232232 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.210622004 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.208514904 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.208308055 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.207383124 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.210574741 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.210176777 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.210652342 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.210900677 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211545865 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208368173 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208610391 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211755226 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.208751739 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208318513 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.208720191 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.212581305 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210295142 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213593454 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.208572717 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.209811467 seconds)
  done (took 30.168611066 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.211954328 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.210737557 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.212239247 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.213228031 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.209697519 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.214965709 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.211221263 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.20971052 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.211876117 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.212155242 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209484759 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.209261395 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.213048615 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.212740919 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212487798 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.209694015 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.21182837 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209629562 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212240273 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.209769237 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.212674638 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209566096 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.209895488 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21240437 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.210007941 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210095876 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.213626979 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.211523755 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213122844 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.210144848 seconds)
  done (took 37.469462771 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.21741445 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.219807804 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.214064595 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.213327151 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.212185297 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.212160026 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213359306 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.214547437 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.213676838 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.212708692 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.213786381 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.213869875 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.212921296 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.21377802 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.213811805 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.215983358 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.213587906 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.213324365 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.21373097 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.212745128 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.213271624 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.21406047 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.21300105 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.214158744 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.213398966 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.212684342 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.213598705 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.213164817 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.21381368 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.213005091 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.214819915 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.213966834 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.21439757 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.213625662 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.213633127 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.212776352 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.218167408 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.219543443 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.213425033 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.213707833 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.214688567 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.213150112 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.213593354 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.212654982 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.214394081 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.213486681 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.213194394 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.21499672 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.214085028 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.214440142 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.215137943 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.214667697 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.215500516 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.214891406 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.214800822 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.213902476 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.213378922 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.214123328 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.21492521 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.214384591 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.214550124 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.214810535 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.215239652 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.213702611 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.214996166 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.215053213 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.214381117 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.214416239 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.215004531 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.215427581 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.215460851 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.215797339 seconds)
  done (took 88.557874717 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.214688244 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.21261247 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.213377847 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.212792911 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214165809 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.216111253 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.213192701 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214206724 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212993364 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.21653608 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216209425 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.21367061 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213673378 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.216687116 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216137487 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.213845098 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.21619969 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213102124 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.216289595 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.216773085 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215595878 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.21349878 seconds)
  done (took 27.853554316 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21641206 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218507589 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.21871422 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.217051178 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215704549 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217801574 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.216939513 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219232195 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217947632 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215439466 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213650631 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217617609 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216856172 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214527592 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215123334 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217650632 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219132395 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217756655 seconds)
  done (took 23.038359309 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.216738144 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.215681003 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.217337239 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216186886 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.216008426 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.21901272 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215553247 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.218581783 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.219534332 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.217460625 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.218854024 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219072545 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.217854578 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216755416 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219526212 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.21653093 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.217938168 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216497068 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218944577 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217841081 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217419502 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218986414 seconds)
  done (took 27.921410889 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219555389 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219616814 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.217048042 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.217382338 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.216592214 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.219919265 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.219840236 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.217315079 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.220751155 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.21920269 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217330424 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.219844894 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.218856823 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.218389983 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.217253497 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217714042 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220176462 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.218215349 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221340134 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.217215197 seconds)
  done (took 25.508004853 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222080067 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221877112 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.222242235 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221426833 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2214015 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.22211562 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221733346 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.222439603 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221667649 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.22251053 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.223014195 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2217214 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22340312 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.222965815 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221941428 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221914671 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222385541 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222403177 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222327489 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222587365 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.222981228 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222441322 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223199729 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.22323275 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.222166688 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222098397 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222241229 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.222644994 seconds)
  done (took 35.36074606 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222605374 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.223375875 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.219722196 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.220606942 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.220943317 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.220234063 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.220899176 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220574459 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223809892 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.220489611 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.222972861 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.223302039 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223582377 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.223556546 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.223462418 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.223492212 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223976899 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.221220983 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220693096 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220911952 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.22382637 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224589134 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.224034502 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221707533 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222960566 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.224727763 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222054245 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.222214402 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224762525 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222423933 seconds)
  done (took 37.81193855 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.242674296 seconds)
    (2/2) benchmarking "in"...
    done (took 1.24241615 seconds)
  done (took 3.623807609 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.221551531 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224309756 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.224162793 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222536675 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.222628888 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225766228 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224382058 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221376588 seconds)
  done (took 10.925143673 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.2255674 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.225176204 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.225356782 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.226221019 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.226312616 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.224895495 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233753358 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.245033307 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.226141587 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.226152575 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.231741521 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.233054978 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.227721256 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.226272826 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.226433457 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.227561785 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.226484468 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.226782807 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.226898321 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.226892385 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227143424 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227848506 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.22994351 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.224250326 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.227957652 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.237509668 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.249361153 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.228396648 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227105485 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.231559738 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.227225024 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.224390559 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.227877571 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.2275878 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.228136494 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.228269222 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237589907 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248973288 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.234488024 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.247225773 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228791295 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.225294364 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.228622791 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.229908599 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.230082058 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.228763197 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.228071464 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.225604505 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.227892859 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.232158033 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.233560293 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227989438 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.226165256 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232548617 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.23093441 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237236619 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.248610577 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.232962347 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237911939 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.24101613 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.261581945 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.253499529 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.231053006 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.230434805 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240367968 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.25295204 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.237553536 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.245685515 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.227468299 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.230901867 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.237820894 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261882779 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.255957015 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.230444048 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230428562 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.230045211 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230402465 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230439164 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238160922 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.251667963 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.230843377 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231049698 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241590349 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253314153 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.23109275 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.231247505 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.231165525 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.232951498 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.233253764 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241306293 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.250673348 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.231110766 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.230605534 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.232071933 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.232818151 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.231916704 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.231579915 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231150277 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.22823721 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.231408066 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232349245 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.236593006 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.240881073 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23243292 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232537075 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.240380836 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.251339165 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231664654 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.23993374 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.251295582 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233023623 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.235494398 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.237696626 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.230781602 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236449149 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.24030968 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.232995107 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.233391761 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.233812566 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.235166513 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243306339 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.259820302 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.234584442 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.234055777 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.239748874 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.24690178 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234112339 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.236528124 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.236167648 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.231070099 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.232015956 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.234223944 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.234489456 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.233561896 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235462373 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235066266 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.231827555 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.233640485 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.235461135 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.236083276 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.236418539 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.23461262 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.23498876 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.236830293 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.23509081 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.236381852 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.243135015 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.252665982 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.236531343 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.236489571 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.232703739 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235446367 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.236254254 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.236377134 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.235554551 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236016055 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.235634503 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.236458304 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236525591 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.236301836 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236630972 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.236862795 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239994297 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.237527394 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.240758381 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.23595922 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.234138261 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.235488995 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236367879 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.235674828 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.236612852 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.235989991 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.239851245 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.243161864 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.23716166 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.23747021 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.239359264 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237794862 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236747839 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2374377 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.240367528 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.244855306 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.237669861 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.244773908 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.257190382 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237977 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.238849628 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.237231206 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.237484114 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237857819 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.241566122 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.244389247 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251475142 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263422588 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.239752403 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.242620052 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.239330893 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.242501043 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.240826417 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.238416606 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.239020911 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238459515 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237639341 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238592702 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.239788907 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.237705221 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.237710108 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.239551138 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.238736465 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.239007463 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239065939 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.240261044 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239339574 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.236624444 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240452046 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238563662 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.239617209 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.236170147 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.238700949 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.238923864 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.239618881 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.240432018 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.247168366 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.255572948 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242153614 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242188148 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.239847011 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.238317685 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.239761474 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241806347 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.240619396 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247402089 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.258004418 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.240655765 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247162849 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.2586722 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.239391467 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.241918583 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.241307618 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.237889527 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.243616347 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.249172165 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.240808138 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.241851163 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.241811414 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24166673 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241723938 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.249242211 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.257524237 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.241759609 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.241500905 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.242748031 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.239519851 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.241527631 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.240641002 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.241288721 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242970883 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242827116 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.2420431 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242605105 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.241842073 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.242373947 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.241995846 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246602022 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.249393 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.247770736 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.260751675 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.244013553 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.242970252 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.246459052 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.242595567 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.243985969 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.243182769 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255626578 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.268457172 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.250450344 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.261932653 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.243078951 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249071241 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.263862021 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.247764002 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242808027 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24438504 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.24320122 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.24358018 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.242213653 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244152995 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.245323673 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245332532 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.245770688 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.247791746 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.245901473 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.243668838 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.244180322 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.244514858 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.244440056 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.243803893 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.245787318 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.246438749 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245875869 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.245477269 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.245427553 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253688932 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264389643 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.245739681 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.246061197 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.24561873 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.245201579 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.246307639 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.245370797 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.250976906 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.253119795 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.250247093 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.254387558 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.247519728 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258807447 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.265044726 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.250192334 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.253893614 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.243885946 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.245556562 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.245089601 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.24697404 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253914908 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.265767953 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.247714808 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.250439635 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247214212 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.247528293 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.246659015 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.245144152 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247265892 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.245992592 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255865038 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.269513294 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.250954048 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248510749 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.244101989 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.248117171 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.246918057 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.246582569 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249871519 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.247580218 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.247914476 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.246896165 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.247026452 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.247225854 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.248537217 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.24807651 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.245543384 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.248067187 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255018244 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.269225005 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253657646 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.247931526 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.256134902 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267765668 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256591589 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.267973241 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.249041996 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.248702526 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.248365747 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.249299573 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.248743501 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.24846251 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.248917733 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.250549532 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.252890721 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.24990876 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.250712506 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.250099044 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.250414405 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.250139381 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26052537 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273091038 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.252359316 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255110213 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.247548076 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.251604778 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.254014272 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.251431781 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.249137454 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.253954514 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262160984 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259138853 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.250893001 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.250722582 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251651546 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251589148 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.251216295 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.251073759 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.251333961 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.250519199 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.252440823 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.252073624 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254048852 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.250841906 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.250437884 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252833965 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.25284532 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.261875287 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.270290661 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.253646297 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251525011 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.25254366 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.252394448 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.251918833 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.252416107 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253273918 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25223045 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.253298726 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259331802 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.259286661 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.255369418 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.251929206 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.251946312 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.252702988 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.253403189 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252686846 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.25326325 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254032726 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.253835474 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.252786532 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.253405235 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.252282358 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.252401724 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.252929341 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254174482 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255573243 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.260182717 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254076718 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.251104753 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.253478535 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254188315 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.252138024 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.254896247 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.260325546 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275797621 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.264355503 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.261966947 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.258971086 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.254375288 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257101213 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.2610474 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.254666257 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.254336094 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.254704298 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.255356301 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.256306435 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.257551045 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255280659 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.262704395 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.273977969 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.254926925 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263820308 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.277865901 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256273792 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.257717261 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.259292893 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.254188803 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.252306534 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.255663352 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.255215302 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263047035 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.275724857 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256198445 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256978643 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.255080734 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.257660476 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259781615 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25648275 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.257722418 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.253240338 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.257659992 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256763065 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257545824 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.252848194 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.256297517 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.256309043 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.26010343 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.263222867 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.254291928 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257507359 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.257090119 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.257223738 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256506487 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257934586 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.254915338 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.255667223 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.256637687 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257585115 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.258599428 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.259741255 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.257707347 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.259208594 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.258848861 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257968322 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26201953 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.26806724 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.264905066 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.254562064 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.257233001 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.258342092 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.259833441 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258583353 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.258897166 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258924298 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.259408476 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.258366399 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259029777 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.25884115 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.262321011 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275608223 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.281297499 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259105193 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.26011076 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26252782 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.259792572 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.257228151 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.259164766 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.26192611 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.262698089 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.266523782 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.259224741 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267177645 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.278870004 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.260604498 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.264502131 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.262921374 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.267683431 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.262296596 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26068644 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.261941353 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.265251144 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.275695954 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279626287 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270586471 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.291005133 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.279431013 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.261380766 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.260872057 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260060891 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.260790632 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.262944639 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.261917502 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.261825169 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261470704 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.261018694 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.262812959 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267333442 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.262728301 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.263565155 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.261746176 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.260919837 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.262074077 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.259239982 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.262790478 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.261568776 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.262802609 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.262443421 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.262410401 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.261843963 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275542352 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.288712204 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.262495369 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.263136008 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.261756043 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.264590779 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.265936486 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273825788 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.2698478 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.26271062 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.262608759 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.263202946 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262775948 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.261231861 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.263069513 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.26323092 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263672729 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.261508134 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.276234578 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287713821 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.268671475 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.282947007 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264008277 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.264255669 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26370881 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263742826 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264012246 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.263662463 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.266914507 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268035423 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.264241607 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.264842781 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.267778261 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.27187018 seconds)
  done (took 745.046221479 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263126979 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261958571 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.261966888 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.26253938 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262482856 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261494482 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261917063 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262684442 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.261771414 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.261534431 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.262657849 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263119261 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.26165574 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263424722 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262865429 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.262497597 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263234139 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262486196 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262880861 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262612923 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.263329023 seconds)
  done (took 27.688688962 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.26531455 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.263822221 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.262940193 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.266206446 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26297086 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.265708899 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.263653713 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26649876 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.266671825 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262972533 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.266114415 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267063139 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.263691005 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.265010563 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263392278 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266682163 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.267956639 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26465645 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.266783043 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.263948569 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266849253 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.26461994 seconds)
  done (took 29.011468185 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.266922007 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.267988658 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.267351887 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.26468569 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.267352517 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.265165366 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.267396998 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.268196853 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.267094031 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.267764227 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.266942269 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.269555416 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.274595264 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.27218649 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.269202333 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.267329676 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.411891127 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.26942664 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.26853426 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.267684572 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.265813175 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.274225337 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.284897639 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.265247318 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.267668975 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.269083781 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.268752467 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.268115082 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.269807497 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.270957436 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.273856061 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.269244128 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.269096008 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.269480361 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.269667715 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.270652777 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.273785374 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.273800873 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.27039582 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.271587943 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.28214308 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.290511455 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.271674013 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.27858515 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.288776574 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.269901689 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.273194241 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.276964518 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.268996636 seconds)
  done (took 63.603507073 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.271366468 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.270593538 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.267416952 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.270742795 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.270605113 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.270302354 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.270453448 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.271481256 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.267410792 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.267867551 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.271204895 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.26959 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.268270115 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.271813507 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.271023348 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.269145169 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268465534 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269241723 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.269718371 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.2692621 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.270763408 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.273586172 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.272809872 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.270458992 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.271499035 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269454444 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.26934123 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.272440277 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.270173384 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.269347323 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.271767203 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.27176087 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.273054744 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.270797851 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.269807282 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.272181729 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.272468592 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.270765686 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.273004358 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.271211568 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.273257978 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.27327824 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.273794659 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.273871124 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.272188832 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.270628148 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.270932615 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.270830617 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.270967329 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.272863288 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.274049916 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.272202076 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.273999872 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.2719553 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274112905 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.273298966 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.271903927 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.271112679 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.274637777 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.273136032 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.270531628 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.273897111 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.272261426 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.27538834 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.275277535 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.272753293 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.272283257 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.273686034 seconds)
  done (took 87.644521323 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274362233 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.274993666 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273712955 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275256112 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.275581994 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.274252063 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275190814 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.276217058 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275244931 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275500316 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276163125 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274860707 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.275020446 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.275472561 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275631923 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27503526 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.275877195 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27718743 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276285149 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276052067 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.275660544 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276138147 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.27658247 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277112102 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27715802 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276663999 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277139709 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27696054 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27715271 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.27614213 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.278192192 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.277372458 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.277231347 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277962249 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.276336145 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.276522075 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276720797 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276483719 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.277217219 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.276829858 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277176644 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276274323 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276769669 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.27671519 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.27744424 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277595489 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.277627727 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.277653639 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277168564 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278101057 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.277361064 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278644031 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276940469 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277761792 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.27768936 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.278256464 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27898386 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278147372 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276819481 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279299669 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2773673 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.276650255 seconds)
  done (took 80.338688083 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279099521 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.278622692 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.27687051 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.276123804 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.279576202 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.277711415 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.27968549 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.278273784 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.279532755 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.280037339 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279198346 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277733762 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27930698 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280251557 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277465971 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278998379 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278852879 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.276664532 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279595934 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277467132 seconds)
  done (took 26.759133312 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.277140547 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.280609159 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.278496489 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.277201432 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.280013542 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.277843033 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.280217077 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281569508 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277609081 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280980507 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281418387 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280205754 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277608916 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.278311969 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.280789178 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.277924266 seconds)
  done (took 21.658600421 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.278848626 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.282953976 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.281307826 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.280667445 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.27754163 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.277533269 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.281807682 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.27848664 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.277618404 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.281399504 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.281626694 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.281691313 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.281954372 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.280783134 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.279293493 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.282471527 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.279161589 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.279243174 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.282458937 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.28166568 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.279619925 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.278851266 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.283357542 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.2824895 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.279012021 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.281300326 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.27972723 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.279605596 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.279365602 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.282181995 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.279750328 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.280244279 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.279144937 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.280470129 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.283551171 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.279797574 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.283850789 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.283418492 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.283077303 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.283277854 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.285059257 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.281643569 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.284835813 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.28515713 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.282137525 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.28407915 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.281168786 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.281414827 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.282429214 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.28251731 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.284752674 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.285055325 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.284913975 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.28552534 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.284452504 seconds)
  done (took 71.678730916 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284276539 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284680277 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.282465154 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.285338172 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.285803045 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.283101737 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.286229862 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.286206532 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283792236 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.285368332 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284553324 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288234958 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282906367 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.287214192 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284929409 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286448229 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.284511841 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.284663721 seconds)
  done (took 24.325644379 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.284427171 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28529871 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.286993748 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284494838 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.285193474 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287723433 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28429139 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.286435375 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287121236 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.28481213 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284786447 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.287913602 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287807579 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.288810893 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.285606031 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284490864 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.287437635 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287944606 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.28548935 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.285831849 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288794118 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288186598 seconds)
  done (took 29.496724706 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.28578867 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.287320578 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.287455582 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.304093453 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.305789119 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.310249417 seconds)
  done (took 8.978163814 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295487031 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287485251 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285613104 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289280912 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288310243 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286462677 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286484725 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287522907 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288803783 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286481735 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2867286 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289811311 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289246983 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287617061 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28943032 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290261723 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287539148 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286599367 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287416773 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288692335 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288153037 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290315976 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287848092 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286549923 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288015825 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288215378 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289819352 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288361704 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288043113 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289494596 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290364078 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288569593 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289349398 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286975549 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291853436 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289673754 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287905766 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291131277 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291565492 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288369284 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29146649 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291349755 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291486693 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288089747 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291668784 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289201414 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28851293 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288647838 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290382772 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292266171 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292394878 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289746529 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291497493 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291433827 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29219779 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292407091 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290839519 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289922587 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292080905 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28879005 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289939059 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292686834 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289773379 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290262864 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293904109 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290692928 seconds)
  done (took 86.329692142 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290473244 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290381585 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291516867 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29156292 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289564263 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289831402 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292113962 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289474863 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289700293 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290876717 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293078238 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290730569 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291252568 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292010253 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29075239 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290964063 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292242888 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292405648 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290728391 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293518659 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292243683 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290599946 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291215433 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292693224 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291910535 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294410915 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292659119 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291873318 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293447846 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292590347 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291877546 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292165792 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291596179 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29255313 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293677341 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292014881 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292881612 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292929593 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29228528 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294517397 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29177507 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296244814 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293218756 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293127701 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295999584 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29632865 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294076803 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295054116 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298370595 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295012142 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297039636 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293612019 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294898477 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293313625 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295198648 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294559533 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294700969 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295395887 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293784893 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296900774 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293155539 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294170481 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296990072 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294570317 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295167695 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29497788 seconds)
  done (took 86.546063651 seconds)
done (took 1738.472470426 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.459684752 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.411321895 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.296343653 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.293036696 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.296131483 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.309844426 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.302426292 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.295461017 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.295448187 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.294306287 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.295400655 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.483995781 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.350716644 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.295848675 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.295982358 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.391880835 seconds)
  done (took 42.575175175 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.324296855 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.302396001 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.418147308 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.318885852 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.324764459 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.493098665 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.3567226 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.301761008 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.474229278 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.340462141 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.896691208 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.324012397 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.301966639 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.436897594 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.319713892 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.493821904 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.550089654 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.9023837 seconds)
  done (took 30.087214989 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.76179895 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.314995605 seconds)
  done (took 9.284689054 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.322189902 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.302867846 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.303242924 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.301454973 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.292503652 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.293762679 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.300209688 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.295098565 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.076696308 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.431622828 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.320515482 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.311345579 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.320743334 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.302692517 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.298438234 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.340287047 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.446668997 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.301061839 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.297236912 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.307393106 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.299832917 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.402311067 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.360558977 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.298809186 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.429835392 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.105310013 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.307559348 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.309317461 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.443577488 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.300229304 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.30248272 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.302108426 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.303811674 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.205181683 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.825144947 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.29607505 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.327913635 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.311163849 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.299871666 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.446721662 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.304363394 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.30910736 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.295080879 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.80771519 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.436201833 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.418911601 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.52205901 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.320835341 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.305304868 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.365418011 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.304740502 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.304386807 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.349161198 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.108521838 seconds)
  done (took 110.418420117 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.350442279 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.69045633 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467754194 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.318308288 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.123613826 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.095899974 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.314362384 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.594358673 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.378166732 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297539592 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.594237518 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.817198784 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.318281743 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.334480876 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.788237748 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.326827412 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296713301 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.175027178 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.312230756 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.3032884 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.798461082 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298292665 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.299107401 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.460562388 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.336612211 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.762114894 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.728778376 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.798379481 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.318068994 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.298677549 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.777685094 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.314844022 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.311340814 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.298646944 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.564805454 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.665100721 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.655213737 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.318927591 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.330072141 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.301971265 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.305643554 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.757757198 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.665789647 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.317848049 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.299399021 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.761842607 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.316336051 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.301152289 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.303744898 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509298209 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.949262 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.302104315 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.769231978 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.308019805 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.593343178 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.364846733 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.322946229 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.790718101 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317340522 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.423551837 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.343447868 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.303439346 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.300889718 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306309216 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305630884 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.657303153 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.435734449 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.302660492 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.65414237 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.790741204 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.316792644 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.841640814 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.233814928 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.326779038 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.40158043 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.301566762 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.955657621 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.80107013 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.326112789 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.302931544 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.643039184 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.32210397 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.585617673 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.318255785 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.303290338 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82723136 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.308746449 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.322837807 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.301914076 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.318608192 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.060220272 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.303745646 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.592470207 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.36740283 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.303191273 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.303730879 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.319185911 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304304336 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.302311627 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.309005518 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.84155845 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.323612129 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.280877909 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324400072 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303307196 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.305514189 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.305412067 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.305491384 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.529935934 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.73473415 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.326463324 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.305122896 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.304588283 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.329696057 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.466080981 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.306878967 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.619785178 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.323870497 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304560197 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.310921431 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.048845763 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.347804668 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304539638 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.30489227 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.201082266 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.510104389 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.322622571 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.321544902 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.305502015 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.325259392 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.574951106 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324416111 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.378542203 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.305508221 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.022607611 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.321098382 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.325408145 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.601350579 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.310082175 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.18961429 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.330634413 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30748758 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.595601726 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.577100934 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.361052976 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.307175905 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.325755165 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.018323742 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.348933063 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.444323176 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.32648934 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.334358849 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.504515862 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.733736395 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.308076036 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.901514032 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.307251517 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.527947262 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.307488677 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.60775955 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.810734181 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.323059196 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.309048175 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.027079084 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.005724351 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.093088833 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.307683366 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.587860056 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.284393191 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.791750553 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.307474554 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.309708997 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.891913422 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.311470747 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.313377631 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.308134033 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.307961691 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.618795973 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.481313626 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.900206214 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.312552376 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.768819436 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.333720055 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309663734 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.315583392 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.311805456 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.660441604 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.366933415 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.314430634 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.355350868 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.310739446 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.312278173 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.789650681 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.276901601 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.311258644 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.460987298 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.95445283 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.326361811 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.310584807 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.901463298 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.523286323 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.869827224 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.331540259 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.627710499 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.329414269 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.349377443 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.046190844 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.389159075 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79242002 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.32856908 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.311237178 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917225517 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.325481457 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.662791107 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.311606207 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.311058172 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.874363661 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.326918948 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.312007429 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.598541637 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.330367935 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.566815187 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.312543073 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.336922258 seconds)
  done (took 1106.115460298 seconds)
done (took 1299.686329932 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.312770472 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.317162446 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.296112052 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.314730866 seconds)
  done (took 26.46637042 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.329619555 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.316765001 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.317385893 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.316460242 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.319077115 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.317308649 seconds)
  done (took 9.141392516 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.34653341 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.31785168 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.316906753 seconds)
  done (took 19.205721775 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.528087285 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.627770539 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.661662013 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.554946263 seconds)
  done (took 10.598386393 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.317461654 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.317937898 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.317709084 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.319119489 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.330394143 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.330780998 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.321373329 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.32003005 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.329806735 seconds)
  done (took 13.127117593 seconds)
done (took 79.765324094 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.614109354 seconds)
    (2/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.342156275 seconds)
    (3/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.789917048 seconds)
    (4/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.402521446 seconds)
    (5/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.413491941 seconds)
    (6/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.32171341 seconds)
    (7/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.839614346 seconds)
    (8/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.188500065 seconds)
    (9/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.8230286 seconds)
    (10/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.28946945 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.592738442 seconds)
    (12/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.940956224 seconds)
    (13/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.312211173 seconds)
    (14/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.840790925 seconds)
    (15/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.364963329 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.353562407 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.258869266 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.337794578 seconds)
    (19/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.550438789 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.207137498 seconds)
    (21/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.293670783 seconds)
    (22/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.290560312 seconds)
    (23/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.331409468 seconds)
    (24/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.317521446 seconds)
    (25/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.275270479 seconds)
    (26/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.957338258 seconds)
    (27/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.32684472 seconds)
    (28/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.294667317 seconds)
    (29/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.321137158 seconds)
    (30/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.73327857 seconds)
    (31/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.921029531 seconds)
    (32/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.67276651 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.977005677 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.730295997 seconds)
    (35/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.429714388 seconds)
    (36/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.313494566 seconds)
    (37/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.30640747 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 6.313878783 seconds)
    (39/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.805903303 seconds)
    (40/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.992658225 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.422701786 seconds)
    (42/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.244920857 seconds)
    (43/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.412185945 seconds)
    (44/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.399388688 seconds)
    (45/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.29097488 seconds)
    (46/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.441688915 seconds)
    (47/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.670968481 seconds)
    (48/286) benchmarking ("sort", Int8, true)...
    done (took 6.315661466 seconds)
    (49/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.414141622 seconds)
    (50/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.446755276 seconds)
    (51/286) benchmarking ("sort", BigInt, true)...
    done (took 6.314316136 seconds)
    (52/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.953407734 seconds)
    (53/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.18139138 seconds)
    (54/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.448665757 seconds)
    (55/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.33214576 seconds)
    (56/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.411433158 seconds)
    (57/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.767593767 seconds)
    (58/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.4255886 seconds)
    (59/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.432103505 seconds)
    (60/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.575017192 seconds)
    (61/286) benchmarking ("sort", Float32, false)...
    done (took 5.313665658 seconds)
    (62/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.348275486 seconds)
    (63/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.329393124 seconds)
    (64/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.324846714 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.672782533 seconds)
    (66/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.72499897 seconds)
    (67/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.315350809 seconds)
    (68/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.403607999 seconds)
    (69/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.833670468 seconds)
    (70/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.302185339 seconds)
    (71/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.343763149 seconds)
    (72/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.29498783 seconds)
    (73/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.34319694 seconds)
    (74/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.122931754 seconds)
    (75/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.438171761 seconds)
    (76/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.294945147 seconds)
    (77/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.327700785 seconds)
    (78/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.352255124 seconds)
    (79/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.698464522 seconds)
    (80/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.35352179 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.360355831 seconds)
    (82/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.330627067 seconds)
    (83/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.798402762 seconds)
    (84/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.314172005 seconds)
    (85/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.313581665 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.243891656 seconds)
    (87/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.344639929 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 5.566881042 seconds)
    (89/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.295333411 seconds)
    (90/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.47179601 seconds)
    (91/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.414958669 seconds)
    (92/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.343898835 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.729140231 seconds)
    (94/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.359472953 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.030627385 seconds)
    (96/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.295282727 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.982197722 seconds)
    (98/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.888886303 seconds)
    (99/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.32432916 seconds)
    (100/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.136443781 seconds)
    (101/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.784293982 seconds)
    (102/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.499352215 seconds)
    (103/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.407979165 seconds)
    (104/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.320260138 seconds)
    (105/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.088395448 seconds)
    (106/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.297499198 seconds)
    (107/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.330124327 seconds)
    (108/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.229525165 seconds)
    (109/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.186308436 seconds)
    (110/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.648531749 seconds)
    (111/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.085467434 seconds)
    (112/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.526351307 seconds)
    (113/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.55778783 seconds)
    (114/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.711720345 seconds)
    (115/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.707137469 seconds)
    (116/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.141153176 seconds)
    (117/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.338848404 seconds)
    (118/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.553334011 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.747333064 seconds)
    (120/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.335503332 seconds)
    (121/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.128938506 seconds)
    (122/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.413939093 seconds)
    (123/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.298828283 seconds)
    (124/286) benchmarking ("sort", Bool, false)...
    done (took 1.840575559 seconds)
    (125/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.363534344 seconds)
    (126/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.342706378 seconds)
    (127/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.166948255 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.596960992 seconds)
    (129/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.344371776 seconds)
    (130/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.650037676 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.105717612 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.582886761 seconds)
    (133/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.701143197 seconds)
    (134/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.10594114 seconds)
    (135/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.632695165 seconds)
    (136/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.446679236 seconds)
    (137/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.321999575 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.423072974 seconds)
    (139/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.039947296 seconds)
    (140/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.316337335 seconds)
    (141/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.478373286 seconds)
    (142/286) benchmarking ("sort", Float64, false)...
    done (took 5.634167646 seconds)
    (143/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.543045815 seconds)
    (144/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.297474814 seconds)
    (145/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.792829521 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.128288724 seconds)
    (147/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.348133847 seconds)
    (148/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.330202934 seconds)
    (149/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.348572504 seconds)
    (150/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.320892205 seconds)
    (151/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.405796425 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.92101133 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.343735858 seconds)
    (154/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.384346404 seconds)
    (155/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.380502688 seconds)
    (156/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.301915869 seconds)
    (157/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.154452762 seconds)
    (158/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.300535454 seconds)
    (159/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.3317968 seconds)
    (160/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.444062447 seconds)
    (161/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.586360837 seconds)
    (162/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.39717429 seconds)
    (163/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.301285437 seconds)
    (164/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.387414505 seconds)
    (165/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.54625912 seconds)
    (166/286) benchmarking ("sort", Float64, true)...
    done (took 6.345723331 seconds)
    (167/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.31890533 seconds)
    (168/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.509660655 seconds)
    (169/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.558511617 seconds)
    (170/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.107275172 seconds)
    (171/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.301271328 seconds)
    (172/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.887195101 seconds)
    (173/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.304059249 seconds)
    (174/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.18121061 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.365700896 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.284800119 seconds)
    (177/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.349387693 seconds)
    (178/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.34999924 seconds)
    (179/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.301401637 seconds)
    (180/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.3488223 seconds)
    (181/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.30106943 seconds)
    (182/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.322368196 seconds)
    (183/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.324940859 seconds)
    (184/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.21845785 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.366299273 seconds)
    (186/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.301841885 seconds)
    (187/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.972809415 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.328174349 seconds)
    (189/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.84412386 seconds)
    (190/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.669998759 seconds)
    (191/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.282203957 seconds)
    (192/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.325420701 seconds)
    (193/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.441785974 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 5.347432086 seconds)
    (195/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.364634865 seconds)
    (196/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.38638267 seconds)
    (197/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.302810533 seconds)
    (198/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.8332229 seconds)
    (199/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.836629015 seconds)
    (200/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.409138085 seconds)
    (201/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.302669956 seconds)
    (202/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.795015398 seconds)
    (203/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.818704063 seconds)
    (204/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.406876441 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.042384604 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.965604953 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.539699886 seconds)
    (208/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.685585784 seconds)
    (209/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.42178553 seconds)
    (210/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.620572683 seconds)
    (211/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.645604906 seconds)
    (212/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.921904846 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.365300453 seconds)
    (214/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.375961 seconds)
    (215/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.588797599 seconds)
    (216/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.304185248 seconds)
    (217/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.430249114 seconds)
    (218/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.339209682 seconds)
    (219/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.340419801 seconds)
    (220/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.344612176 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.367556424 seconds)
    (222/286) benchmarking ("sort", BigInt, false)...
    done (took 6.325362996 seconds)
    (223/286) benchmarking ("sort", Float32, true)...
    done (took 6.343504848 seconds)
    (224/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.316688846 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.284424419 seconds)
    (226/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.961352223 seconds)
    (227/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.411421516 seconds)
    (228/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.708020298 seconds)
    (229/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.311484579 seconds)
    (230/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.563168821 seconds)
    (231/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.894865824 seconds)
    (232/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.358989671 seconds)
    (233/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.338158077 seconds)
    (234/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.32891343 seconds)
    (235/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.366002426 seconds)
    (236/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.544994083 seconds)
    (237/286) benchmarking ("sort", Int8, false)...
    done (took 4.429598534 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.561475434 seconds)
    (239/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.407616417 seconds)
    (240/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.451273722 seconds)
    (241/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.313631953 seconds)
    (242/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.327984151 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.370836439 seconds)
    (244/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.392867726 seconds)
    (245/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.511000428 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.73231541 seconds)
    (247/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.184067153 seconds)
    (248/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.305870272 seconds)
    (249/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.361939501 seconds)
    (250/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.307395789 seconds)
    (251/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.306946023 seconds)
    (252/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.307605333 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.999479666 seconds)
    (254/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.344852088 seconds)
    (255/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.529380223 seconds)
    (256/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.788803029 seconds)
    (257/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.425492835 seconds)
    (258/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.458889424 seconds)
    (259/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.363051926 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.413224744 seconds)
    (261/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.749614129 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.410685223 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.439358566 seconds)
    (264/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.052226946 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.148330976 seconds)
    (266/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.307290515 seconds)
    (267/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.308485605 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.750930271 seconds)
    (269/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.126535116 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.275771233 seconds)
    (271/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.355666516 seconds)
    (272/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.345783788 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.372590651 seconds)
    (274/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.414576715 seconds)
    (275/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.938088044 seconds)
    (276/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.313333191 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.689902541 seconds)
    (278/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.334365555 seconds)
    (279/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.802777114 seconds)
    (280/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.302049384 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.369175731 seconds)
    (282/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.794007179 seconds)
    (283/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.110138995 seconds)
    (284/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.174253039 seconds)
    (285/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.312374123 seconds)
    (286/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.356563116 seconds)
  done (took 939.475689692 seconds)
done (took 940.702031254 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.362969977 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366492478 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.340931384 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.361686011 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.458438259 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.363684373 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.351353665 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.34414267 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.389141831 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.389592577 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.345919732 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.361540578 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.349197293 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.348717123 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.34468474 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364028542 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.427392696 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.351093269 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.367132912 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.352616643 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.367548524 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.34935491 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.393888319 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.364072979 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.349339018 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.346859854 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.353098012 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.370615388 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.463577793 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.353644248 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.347204952 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.363720882 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.449553333 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.349665805 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.340339863 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.371587451 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.364720499 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.355069588 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.349595321 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.384828736 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.852493776 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.369792861 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.354603333 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.346896268 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.347126742 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.350582647 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.354334716 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.351942177 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366488332 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367488319 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.839092584 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.384618747 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.355324375 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.348170593 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.357549904 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.353316395 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.349906321 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372207554 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.371658369 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371290687 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.464256541 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.359313701 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.348666286 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.371412528 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.361905881 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.881939078 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.360649808 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.352581808 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.854747804 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.370311081 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.879207471 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.379550212 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.348997774 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.366528495 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.385402786 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.466331766 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.348867431 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.347960019 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.360600728 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.352318522 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.357733016 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369344414 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.354170578 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.349097922 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370026893 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.370824305 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.358571171 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.356542641 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.358806751 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.374580079 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.363615621 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.366743777 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.35384634 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.344540542 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.359245785 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.353016588 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.357786272 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.358543794 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.354255661 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.360594682 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.885063899 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396333425 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.347135455 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.345499174 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.348337136 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.370822686 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.854005994 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.376132174 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.372051318 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.398200447 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.351804397 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.475160802 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.366519672 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37521008 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.359851138 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.354474864 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.346083858 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.464004194 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.854790097 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.390009627 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.35193819 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.357137615 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376400318 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.352470894 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.348097988 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.486095196 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.358978074 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372812089 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.479564652 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.362900013 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.389210331 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.356378896 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.356239472 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.373773122 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376507536 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.390182344 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.354794983 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376381414 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.374473404 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.347475045 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.370297763 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.363477703 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.354170833 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.358656405 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.347742188 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.3741969 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374515891 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373005677 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.37508082 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.480450927 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.350318101 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.464387704 seconds)
done (took 229.457493648 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.411913867 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.349364644 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.435787092 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.349570714 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.450674678 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.459843124 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.34672696 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.347775656 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.347103371 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.728478865 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.347885733 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.348852706 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.346719232 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.348092943 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.432505332 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.350200342 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.346694151 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.698825106 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.350310931 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.420952549 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.347662369 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.349839289 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.352111626 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.741998033 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.346293021 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.34678233 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.423114853 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.351738255 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.701215857 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.345219571 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.348737981 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.705598148 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.443388579 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.369522408 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.360683633 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.359418659 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.45861747 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.371294222 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.442071648 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.433435684 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.443915524 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.390556006 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.354468991 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.354326404 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.354203087 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.354530475 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.349601244 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.378598233 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.352749191 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.35089548 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.693988849 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.361974387 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.360460876 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.351849778 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.350784787 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.373257214 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.352200372 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.351860858 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.442390381 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.355500126 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.417610844 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.735593346 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.740213584 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.353206839 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.353384761 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.351058471 seconds)
  done (took 149.702395667 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.420965535 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.42483666 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.46731195 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.371287426 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.402855924 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.471477316 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.372884154 seconds)
  done (took 11.18895715 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.360281594 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.355290879 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.403747211 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.403563008 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.354704688 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.534983395 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355873934 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.365620529 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.353680213 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.40590349 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.35690074 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356181479 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.362339934 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.351620366 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.403620882 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.368362434 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.46955033 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.355511969 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.356610121 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.516798578 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354778405 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.362998016 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.408821997 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.367340416 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.358428735 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.361544665 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.174367161 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.355448621 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352658503 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.355562309 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354142685 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.43233056 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.355966876 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.350281624 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354227417 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.47071675 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.356262393 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3546936 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.35724793 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.351838211 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.356228849 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.35732288 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.357171804 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.354078285 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.356679755 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.379790226 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.357044775 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.357470691 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.35720718 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.356571441 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.407788374 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.358464841 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.355587212 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.35628259 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.411547741 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.364782811 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.358914161 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.356995498 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.357732315 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356373319 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.518808631 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.406008447 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.359098551 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.406313906 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.359101131 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.359553117 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.358903695 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.358863907 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.413037693 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.358642299 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.40820962 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.356766124 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.539117844 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.382280403 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.360862651 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.361709141 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.361389828 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.359743385 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.354319066 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.364837644 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.356365524 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.361188826 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.36432413 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.357698425 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35715758 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.528608684 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.465759358 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.356804156 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.370981583 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.366387831 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.358164754 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.412020291 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.359745152 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.357811416 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.412227605 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.474137835 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.414697269 seconds)
  done (took 155.940278941 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.365687627 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.368571575 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.363998995 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.384236982 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.379815815 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.360429588 seconds)
  done (took 9.486363051 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.363320081 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.362308295 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.360904418 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.36169381 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.361968329 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.363347032 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.362045841 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364260417 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.36562223 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.363080833 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.363322349 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.366138543 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.364105772 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.362168762 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.362127973 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.362629611 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.363943997 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.35919679 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.362663241 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362344932 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.460067052 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.364565709 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363465235 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.366222202 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.368615608 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.36324753 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.371172329 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.364543335 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.363360469 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.36839707 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.385072033 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.365163908 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.365698692 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.369910887 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.367810503 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.364431029 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3676112 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.368231166 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.361088298 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.364781095 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.369074825 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365416503 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.364152761 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.367871381 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.366150007 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.370743075 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.372427051 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.371515587 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.36488142 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.369237722 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.368529379 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.364552112 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.366318255 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.368830855 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.367343447 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38591038 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.374390197 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.365466547 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.365171758 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.36687163 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.366321904 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.366259649 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.368396615 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.369896082 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.373417809 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.368829251 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.367453015 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.369454224 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366750489 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.367282522 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.369874605 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.364403775 seconds)
  done (took 100.75147299 seconds)
done (took 428.324623247 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.85947354 seconds)
  done (took 8.129369302 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.492281527 seconds)
  done (took 7.76367612 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.717912325 seconds)
  done (took 23.993434076 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.428629265 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.409746126 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.381896903 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.370340225 seconds)
  done (took 26.861710552 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.926032827 seconds)
  done (took 8.1948364 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.359626929 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.374377229 seconds)
  done (took 14.005615458 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.456370848 seconds)
  done (took 7.726818748 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.36085652 seconds)
  done (took 7.636506022 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.363841045 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.384306671 seconds)
  done (took 14.032142332 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.338192419 seconds)
  done (took 7.607939867 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.954642158 seconds)
  done (took 12.226149766 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.362737398 seconds)
  done (took 7.636443744 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.444697885 seconds)
  done (took 7.715792229 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.956751208 seconds)
  done (took 10.227277015 seconds)
done (took 165.028864694 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.3600011 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.362079614 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.360451281 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.361476156 seconds)
  done (took 26.714864322 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.403274339 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.403320837 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.402900612 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.412180769 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.405499905 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.403242932 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.393846666 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.39384486 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.41340906 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.405696119 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.403887483 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.403926018 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.404102357 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.394546794 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.403976996 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.404783572 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.414251946 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.403935037 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.394174026 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.405543902 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.369767958 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.413793558 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.40684647 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.370948007 seconds)
  done (took 34.903943222 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.894433426 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.441961759 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.526148643 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.42371401 seconds)
  done (took 7.559227325 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.422474357 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.422847186 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.439194955 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.47325875 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.501946642 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.433748746 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.397066393 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.392941783 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.378386977 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.427099343 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.501406349 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.441160643 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.509841143 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.371222697 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.620966751 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.370476817 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.370624377 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.422708515 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.479803908 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.498407588 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.370808072 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.422727753 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.427458348 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.440609639 seconds)
  done (took 35.810466862 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.370446687 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.389079939 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.370553649 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.369837873 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.37882758 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.370895198 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.370513294 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.372339719 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.371513304 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.377184949 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.371141831 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.383599697 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.370086808 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.370166191 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.378008219 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.372804053 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.378261864 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.371221498 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.371458846 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.377839218 seconds)
  done (took 28.759893336 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.366207196 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.221111906 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.716866313 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.621432532 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.366048722 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.372194244 seconds)
  done (took 27.938392041 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.448195122 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.604115993 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.373683746 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.754056577 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.846135916 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.392360811 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.374088045 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.625780817 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.976513747 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.970210316 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.433432093 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.444386571 seconds)
  done (took 20.519592816 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.376623036 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.373395969 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.374582833 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.388778803 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.432485177 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.397075518 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.380748729 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.368361881 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.435627792 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.45314777 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.3937362 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.432534335 seconds)
  done (took 38.084485057 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455446617 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416562107 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.426336247 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414737983 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.094845564 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581180291 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.387134532 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.117240834 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.391793955 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64135966 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374219185 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458091085 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626103912 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369890911 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37625752 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.371159245 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616636705 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874441934 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37111598 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.568967595 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397162543 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373494471 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.639419962 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.619133955 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602508222 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.353758483 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.631925226 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.148050153 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673422226 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385285137 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38161647 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371402925 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644442085 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.36762035 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46720364 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.597371586 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392898458 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.00304208 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.348300285 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.591627652 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374385441 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374013056 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380831706 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37292601 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.306108785 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37560005 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.481884016 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.37739151 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.083283418 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371944374 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649134406 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473318926 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.375766666 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.945672616 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406734174 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.398269518 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.37634496 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469546758 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960810671 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.819723061 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387850318 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.313257854 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372435006 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.576975798 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01391259 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.398799517 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.376737569 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377140993 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31136662 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.847277764 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390933409 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51330716 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.399919218 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.036784983 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107601084 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.405099914 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.306152473 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942414753 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389683088 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.314434192 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603778231 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.150407522 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31622719 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.32244897 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.308362009 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107770636 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38296635 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.978407224 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397469986 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.141944038 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.625614208 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412271275 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398445343 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599839842 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.253972504 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376434076 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.384233011 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492126763 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397425959 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.116792104 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330363543 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.380106694 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634648684 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.589425396 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386361418 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.382287642 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231137603 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376668591 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.396432755 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.377472709 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.613768931 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.004382411 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410133879 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.929686488 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397275197 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.155148332 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146644087 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383572482 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.386724271 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.38652633 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652589093 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.1585391 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.260506236 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443072445 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382096649 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.377631685 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.597961477 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.228403259 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.260348835 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.588748534 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395775705 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.412798564 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.379842141 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337238906 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.384926279 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39409039 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.155129763 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603554818 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3784538 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657110745 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312824924 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516520325 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394366779 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.602851747 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.663042979 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.407208053 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640891928 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381521246 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387574243 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395783161 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396575133 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479348256 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401158489 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.392948922 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642801397 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.382759509 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.383212782 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.609422784 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.159018312 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387767636 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.383525669 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386410401 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010988739 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3691867 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384334131 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.274186769 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.393671871 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449403342 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384776937 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611069622 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.73746437 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399849741 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.402616443 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.378639775 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623165083 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390571027 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.588331428 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458623656 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.886595419 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014966756 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412807972 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.315782688 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.090795368 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.075359989 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381727711 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.563544423 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382287331 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.610449282 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41480358 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382962746 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.012416282 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402454735 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.59431053 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.387095022 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394094853 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.700484156 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403193697 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.722613391 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.894519449 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39396759 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.399454865 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526715316 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.396677268 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.317867416 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.899081199 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388326108 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382322481 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.160801011 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417593041 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.610217289 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.721911723 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668946826 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384993627 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660174867 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.694058367 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.417378018 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.404147591 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390782974 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399426257 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.397542619 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408393638 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.39452579 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.603426454 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.832089664 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949518747 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149124481 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959283005 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.720435391 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.4058045 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.289057847 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.138790237 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339557504 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.042969413 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631253867 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145433609 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362962499 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239567374 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.621686751 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21502167 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664319575 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617302966 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.698359884 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.422000159 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665680665 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598881356 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419482527 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.386863009 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.318075877 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.66439537 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.418297583 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389045377 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464108012 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.518925883 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39046033 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.162925134 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.392003837 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.155952188 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.12690952 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.934837036 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.779943255 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391383452 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394546973 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.750273951 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.414718214 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916111521 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032001948 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.415431257 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.893904724 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349242116 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.620376911 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.418475269 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.382044219 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.056878273 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.403691716 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.644694109 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667044062 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323164759 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402852349 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944982096 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.267702155 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.393074282 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389360304 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.626016835 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395860188 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695506545 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.390847448 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.740586369 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407804013 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.322418595 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322766181 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.080228037 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39834144 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357539469 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900014213 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.406282388 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406213857 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397030728 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241469119 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646791978 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.403426565 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.999398525 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632047477 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388842318 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41164882 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.392626293 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394447806 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.369644354 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.272121061 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.626046414 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45073378 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634363434 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.424146477 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.286603207 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.438453539 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600888733 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.26958641 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389483126 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633387201 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.117939555 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.410300668 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152747866 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432738213 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40260797 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.408665446 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.392149939 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430526594 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481323007 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623433407 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.420795007 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.401199545 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.102197639 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406084729 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393309488 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.402868646 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484270391 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.987517693 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.7493532 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.181860404 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008844313 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184573039 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.02935981 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688669608 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392810244 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39331564 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326229105 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539549942 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.921597332 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666065415 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512655497 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.39076508 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414687029 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391136431 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422868548 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60976379 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667762384 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.267079977 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395034516 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.056743716 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.273913064 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402171843 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.603020806 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907547595 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968332828 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.77536009 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391715134 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.140925596 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687391212 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.48549926 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394092491 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.988387649 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.400972614 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.168458437 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.398968048 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393474933 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558789688 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673509699 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.424266695 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.403559369 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.549889299 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.1671419 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.733350012 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.65337181 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.915489904 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.633312924 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037356795 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.166283798 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661466028 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46468555 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630991453 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.521597201 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540697707 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.394492025 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.290664848 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396361954 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245548715 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.104648424 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.405167338 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017778946 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676694383 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.397852789 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.395323543 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418296852 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.405694226 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.620128436 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141737615 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621111951 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406640538 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405272667 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.967549332 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018845941 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.697446307 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336083571 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.399749675 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63684691 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.652876622 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421141569 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.848495135 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.108073517 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971901452 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.373746084 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419445227 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41216947 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157582765 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022942472 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.775838464 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940449692 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.06255926 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398703924 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674526316 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.401819704 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398166359 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676832368 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.401800954 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.399645212 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635259694 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.044315409 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235165274 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.414985173 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.771800885 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.337365246 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.626139545 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413088885 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335085734 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399290779 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.841449876 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.420283146 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519048679 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410361535 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.398995057 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397724272 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.160371887 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68755634 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.403180589 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.411278524 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.382694898 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402858878 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497379563 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.475354511 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404410536 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.073179876 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.752069263 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.657787624 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.402980468 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.381677117 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.403275524 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400707507 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.112657018 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.378902226 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.420989777 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97652786 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.403720342 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.413443444 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404645741 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.618050037 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613153653 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404491549 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637840404 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434517403 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419530026 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.29933843 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.173620847 seconds)
  done (took 1707.099955603 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.423539898 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.429704762 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.442625088 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.441832762 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.415870726 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.54364274 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.453451013 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.421187136 seconds)
  done (took 52.878393925 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.413718145 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.562694327 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.432356056 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.401744578 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.410513586 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.401173865 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.881077853 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.42215167 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.410375613 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.412193065 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.407273979 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.404407261 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.0620387 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.410816387 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.411861236 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.411141681 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.409492619 seconds)
  done (took 66.580532385 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.896605249 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.663572039 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.830771321 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.408760046 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.441310496 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.412711227 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.847866114 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.419250195 seconds)
  done (took 55.231507945 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.412742418 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.414274757 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.414955552 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.41359647 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.413776998 seconds)
  done (took 8.378998359 seconds)
done (took 2111.73395043 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.407577491 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.409792123 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.406550914 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.408809896 seconds)
  done (took 6.942183758 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.380698958 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.08199454 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.384583771 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.403033963 seconds)
  done (took 18.560873022 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.414478442 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.435841856 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.137838219 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.027612732 seconds)
  done (took 5.476631749 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.154567471 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.166241219 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.151066449 seconds)
  done (took 7.782825336 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.403845265 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.407674177 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.406552029 seconds)
  done (took 20.529465665 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.712552423 seconds)
  done (took 3.024316533 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.55299055 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.607412767 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.76152507 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.758646634 seconds)
  done (took 7.993693861 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.796881719 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.776926607 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.595344194 seconds)
  done (took 6.481094842 seconds)
done (took 90.950592181 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.467489064 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.426025442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.622873926 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.476509675 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.642882611 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.623630269 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.722757261 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.443800735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.147776144 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.932634115 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.435188437 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.639415065 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.681207052 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.426820107 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.681430946 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.808836162 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.640505736 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.778158815 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.364976465 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.325251378 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.735559553 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.075800792 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.265453024 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.307069645 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.651889734 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.572175351 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.653591575 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.809825142 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.300189254 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.887317042 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.576514515 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.406528875 seconds)
  done (took 197.843088415 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.413837873 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.406987529 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.422184009 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.406893735 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.40717554 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.411078241 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.407039656 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.424250569 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.423703688 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.431703756 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.408757351 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.419709294 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.408389817 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.437208444 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.406573248 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.439544826 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.411491665 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.419795497 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.409488795 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.407752789 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.427214831 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.429533642 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.408788713 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.413134517 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.40950177 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.426309381 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.408744173 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.425630035 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.408750118 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.408466298 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.42780138 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.411219825 seconds)
  done (took 206.644294774 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.407774259 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.408447432 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.42768612 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.428164152 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.41184011 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.414025168 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.426584411 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.425401014 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.443338748 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.412627297 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.410290088 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.426772736 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.429105312 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.426754123 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.427671544 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.426697139 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.419885738 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.411753887 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.412994098 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.420731076 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.412050647 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.434878901 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.408830122 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.427978394 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.431282294 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.411634403 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.410329897 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.409671378 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.429276323 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.428621107 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.419566134 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.41332934 seconds)
  done (took 206.771581338 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.614308962 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.417932856 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.419853534 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.378150298 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.420446823 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.418484574 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.417127188 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.610736602 seconds)
  done (took 15.014128024 seconds)
done (took 627.585857529 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.804240055 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.512106755 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.620520182 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.439027887 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.287585983 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.457515535 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.440505996 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.616285035 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.358482391 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.624748908 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.740349966 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.456977294 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.886535638 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.438461985 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.702810711 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.539748397 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.361413768 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.485662732 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.767115182 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.028752976 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.705666474 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.932852691 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.636572291 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.366927251 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.903583543 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.973551795 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.277967395 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.349869342 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.455790289 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.775107984 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.246804055 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.584124606 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.487254138 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.503508565 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.561635027 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.541500416 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.526972259 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.504298171 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.641832055 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.708128092 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.058594283 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.173418787 seconds)
  done (took 96.804115242 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.401493326 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.402111467 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.401574582 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.401714671 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.404733492 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.402715678 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.401135432 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.401386933 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.401892913 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.402059748 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.402114877 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.403895602 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.402229086 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.404758622 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.401227135 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.402668393 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.403218871 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.40457514 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.403202678 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.402950546 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.403969638 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.402752332 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.40394552 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.4029341 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.403085179 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.402801246 seconds)
  done (took 37.792459147 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.42328734 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.674445167 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.854702934 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.429282152 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.423700133 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.427722544 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.507997339 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.424422047 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.428383396 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.427907356 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.581187904 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.427321206 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.460493835 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.878818177 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.426845507 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.426309374 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.425451828 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.424838517 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.685703617 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.432877829 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.528431025 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.426411477 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.50818752 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.434608706 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.448285805 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.426170296 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.429114959 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.001422733 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.445745958 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.582892646 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.285799549 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.508974051 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.956759321 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.884689558 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.289228803 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.429922127 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.426973075 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.585439358 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.428645023 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.425867169 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.50786224 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.42546231 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.86636272 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.124201315 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.44686985 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.426638923 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.021572008 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.604547153 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.694344263 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.440006974 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.899495778 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.435919654 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.429927378 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.429318286 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.694716819 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.434985203 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.427602928 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.051217948 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.450307838 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.510483154 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.427899825 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.427706234 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.692410852 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.42757546 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.68259659 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.428875143 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.436513602 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.450842434 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.866291288 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.431274674 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.155176015 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.454276219 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.430082704 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.583176774 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.6852919 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.064943162 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.451893198 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.701456151 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.976911799 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.532224547 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.436980916 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.997401024 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.537326088 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.437106556 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.431458765 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.431894263 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.430758585 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.480999067 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.512026611 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.09581124 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.164970352 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.091608329 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.537234813 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.442138195 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.42950924 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.06259908 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.453284578 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.43043838 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.872301928 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.154334757 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.453067751 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.439172239 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.158549295 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.456720186 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.514454912 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.438243125 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.884487556 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.433995736 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.482630557 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.431575486 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.437038683 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.455675754 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.515777726 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.43954563 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.431377652 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.12434611 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.618074874 seconds)
  done (took 188.746616991 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.437754272 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.425920549 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.433574838 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.426096993 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.424949007 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.432816479 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.424504806 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.425412295 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.430690515 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.426135769 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.426190179 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.425521436 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.427699225 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.432885558 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.436420695 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.432761612 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.037450459 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.42598902 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.426331166 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.442602389 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.252550228 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.429857969 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.427230843 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.445163366 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.425854053 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.426262602 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.432672906 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.447276673 seconds)
  done (took 154.820413585 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.434047902 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.055541245 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.455492902 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.574993854 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.460627597 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.431756777 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.571568108 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.494307876 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.451698884 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.432482031 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.431772541 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.75576168 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.436337659 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.982477349 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.639978913 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.59309947 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.989354672 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.45215342 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.433166766 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.432693676 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.578384013 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.440783045 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.756425614 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.036226965 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.453851541 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.037192302 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.417459502 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.435993555 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.433833688 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.038744457 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.450652755 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.75810187 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.519062857 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.504523349 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.057257783 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.002723781 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.000903321 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.591003014 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.435571124 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.433372034 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.434131153 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.416704537 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.039922236 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.455591354 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.436911468 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.027708153 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.456394331 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.43586192 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.441425292 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.435021661 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.498042724 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.517148275 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.779789511 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.045714233 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.536929832 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.453936753 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.574811809 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.816527119 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.438430861 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.986822035 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.416236451 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.07591298 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.461590122 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.41865415 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.435921735 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.441613214 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.598102308 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.578848242 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.987794685 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.452227978 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.987846525 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.616342443 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.439415719 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.436499515 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.438927963 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.045534102 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.006913185 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.616144415 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.58677226 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.652981561 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.427344224 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.436928305 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.418875463 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.521070314 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.444065937 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.049263556 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.006312479 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.455404042 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.439491514 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.440404907 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.440055768 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.630005635 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.097288726 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.54209649 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.979218472 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.78982472 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.780389471 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.443289148 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.500880678 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.455896446 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.765070985 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.442120293 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.499583477 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.882834433 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.779426361 seconds)
  done (took 171.817161818 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.700809398 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.666024774 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.52900755 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.598386268 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.077012591 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.015151383 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.821472851 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.585363544 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.550044516 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.709080065 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.657151042 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.546612532 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.669871524 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.520860652 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.204971697 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.533062409 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.548874374 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.592998899 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.607856863 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.474249864 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.156833399 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.731997036 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.640575889 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.432607866 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.53272398 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.272028474 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.031124321 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.970008385 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.633982047 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.810375502 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.992669172 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.58728062 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.474312905 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.193851843 seconds)
  done (took 69.407744031 seconds)
done (took 720.707268721 seconds)
SAVING RESULT...
DONE!
