cset: moving following pidspec: 18496
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.386367093 seconds)
loading group "string"... done (took 0.56819628 seconds)
loading group "linalg"... done (took 7.204066623 seconds)
loading group "parallel"... done (took 0.161744443 seconds)
loading group "find"... done (took 1.141811894 seconds)
loading group "tuple"... done (took 1.758447995 seconds)
loading group "dates"... done (took 1.229877276 seconds)
loading group "micro"... done (took 0.218577305 seconds)
loading group "io"... done (took 1.022985363 seconds)
loading group "scalar"... done (took 37.626233042 seconds)
loading group "sparse"... done (took 11.858625686 seconds)
loading group "broadcast"... done (took 0.947503577 seconds)
loading group "union"... done (took 12.164743833 seconds)
loading group "simd"... done (took 4.495886936 seconds)
loading group "random"... done (took 9.052944461 seconds)
loading group "problem"... done (took 1.834954259 seconds)
loading group "array"... done (took 20.831452612 seconds)
loading group "misc"... done (took 1.684179969 seconds)
loading group "sort"... done (took 3.330844278 seconds)
loading group "collection"... done (took 17.31942062 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.527066121 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126198485 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119416466 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120017997 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148060751 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112745854 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125751172 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086752023 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.835379902 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148714261 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118724982 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431726024 seconds)
done (took 5.209604384 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176246799 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083508258 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083550563 seconds)
  done (took 1.305887278 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065369354 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122370751 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066478444 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068066496 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06760093 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066969694 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066633583 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066338034 seconds)
  done (took 1.661186612 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072499388 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069955959 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066995005 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06902212 seconds)
  done (took 1.410453247 seconds)
done (took 5.768039203 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.788511709 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203749272 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190939578 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.414929626 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131348254 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160004684 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639466692 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.303156429 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.189093943 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080734265 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10947039 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.329150102 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111271337 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.63595123 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074485563 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090674783 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13811856 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.419765687 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067172874 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08260757 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089773429 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127749354 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085139159 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074799612 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.147704686 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067662454 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13742409 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080611296 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067369116 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213561764 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17235067 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651801189 seconds)
  done (took 10.247759484 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097219235 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097306683 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068275337 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123750818 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097008032 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070036087 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071779702 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067689369 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087718087 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12897671 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089036352 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102696478 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065739113 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068863297 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086154713 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203516718 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080273659 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081856597 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07084899 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075601311 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105443598 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078464219 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077012429 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077001041 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129545366 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180466832 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096698755 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097764475 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067721335 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.0797107 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115695811 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12525625 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066172843 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066470825 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124318765 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094487559 seconds)
  done (took 4.586585631 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.005884826 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144140099 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090480412 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135167738 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085125163 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064790301 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109806146 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065829844 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081462048 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210224345 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.384990272 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.588014137 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111842234 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104244341 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068021911 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068708865 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067529023 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.503571209 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095313484 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108481796 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082224608 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070095711 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069244746 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.353180904 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068384576 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064506413 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068840289 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057509099 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126062044 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069290932 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.955478484 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.128198697 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067332036 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101272048 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163394333 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089095463 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.277377534 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068927905 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065047056 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153832098 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071265128 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065985882 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067229637 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084584348 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104250694 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114331114 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065932196 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068163906 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166010519 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065794341 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.0804572 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.634988142 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153352026 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076878993 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064831501 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.25542503 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088956934 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070116387 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06531184 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179079207 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132354203 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068271911 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06738249 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068285222 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06964432 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366249082 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068941999 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.869168037 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070553491 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076409993 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069553956 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070145458 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07372602 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072851527 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08796339 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066514118 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075660614 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066361483 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066392233 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066945923 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083752932 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.376749787 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067873428 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069007524 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065280911 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089932978 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096869476 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066655795 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066106332 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10080984 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068696719 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066244732 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107648198 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06657934 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091767077 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084065104 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.06955861 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113508427 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064854272 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066311595 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.191270124 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067560587 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096874081 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070438296 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098808815 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079997429 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071710861 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.415366602 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065032568 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065380593 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068611257 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065730931 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.0674545 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067361557 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079484635 seconds)
  done (took 21.064831332 seconds)
done (took 38.036900829 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.236088051 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079288098 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074583403 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077380271 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074120594 seconds)
  done (took 1.767248012 seconds)
done (took 2.972775705 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124189312 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101082206 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064926769 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099047314 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064859853 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102781376 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101998697 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08211038 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101606662 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064806484 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098026051 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064833745 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065133175 seconds)
  done (took 2.361469083 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083979911 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084327159 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069798949 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083436905 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064128801 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084387969 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082077095 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089424197 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082099789 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073346203 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06411251 seconds)
  done (took 2.060876301 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082896148 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085080062 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070249801 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083157387 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06413817 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082569451 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082340152 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086587192 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082811924 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074516048 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063625827 seconds)
  done (took 2.052621301 seconds)
done (took 7.670488642 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07802293 seconds)
  done (took 1.265420432 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.59497177 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.106865764 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08250724 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112296428 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19049951 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119397753 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273138646 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08767975 seconds)
  done (took 8.938820404 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091148068 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07003489 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068515276 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069320464 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.082269696 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072352482 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069776282 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068975951 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072221131 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072341052 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071890009 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06898587 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071265901 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068864641 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071686915 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073386326 seconds)
  done (took 2.424668793 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092618033 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091552635 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074801249 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074883234 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073312496 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072290638 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074012736 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073748663 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071000634 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072622144 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074671304 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.0739181 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071671652 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066430837 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074267618 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075351342 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070959916 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074235041 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.0743867 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075170175 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074865873 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064352785 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072271082 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075215153 seconds)
  done (took 3.08748484 seconds)
done (took 16.911836504 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114785999 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071960757 seconds)
  done (took 1.38363305 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082123622 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08225625 seconds)
  done (took 1.367839102 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082081607 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065599437 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090932735 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078119251 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066350291 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066185109 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088693757 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065847013 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066386472 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06668179 seconds)
  done (took 1.940757181 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068018667 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077063956 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070633015 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082203251 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073747228 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064189139 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072188521 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067471536 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077639325 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063040187 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071499666 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08268645 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070898565 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084714131 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072385247 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068766095 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070801136 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067255938 seconds)
  done (took 2.511423352 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065384484 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066641327 seconds)
  done (took 1.343688711 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067342713 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064299452 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066475889 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067036978 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063275536 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062526935 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063581506 seconds)
  done (took 1.663622317 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.384732124 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11348547 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.31270857 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070975233 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082678447 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257644598 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065943583 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071219897 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071254484 seconds)
  done (took 2.683827647 seconds)
done (took 14.106001882 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080477586 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086719104 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09650454 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.377410181 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091952824 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06697415 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115221999 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189096164 seconds)
done (took 2.323373117 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214427852 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.640763385 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404372431 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204906154 seconds)
  done (took 2.463133151 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.345066341 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088918258 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059577113 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06718897 seconds)
  done (took 1.78186737 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066223865 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069951955 seconds)
  done (took 1.354406666 seconds)
done (took 7.03529085 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06699568 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086984888 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065590175 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064021146 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066257853 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063474576 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064059193 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064151198 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066616093 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066185658 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066674559 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066775439 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.066498831 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.066233342 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066284363 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064413474 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063718471 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066732716 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.0638748 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063903356 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0639007 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066502467 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064603911 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064166439 seconds)
  done (took 2.844246903 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085126422 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066386089 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07170859 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071840883 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069398207 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071575851 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071696657 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065989955 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07182161 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068516613 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069898476 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069626507 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068880663 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06996577 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068885019 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069720156 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071615757 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066436659 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068692006 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070063554 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071595462 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066737934 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070010337 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071529764 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069372722 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071352288 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068516762 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066644604 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071422261 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069731352 seconds)
  done (took 3.33269542 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06967787 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064534795 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064341836 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071691068 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065400579 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065015899 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063612865 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064370834 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06488309 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063858565 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065941056 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063462009 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064551699 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06448268 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064333569 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067561225 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080195355 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064244246 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064278889 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064695457 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067663851 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064105817 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064018713 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063895631 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064147869 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064336366 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064434738 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063863294 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065299758 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063640872 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06748214 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067850482 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063713015 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070958702 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06799377 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063486055 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067993457 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063565363 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064563058 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063561111 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063544076 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063540477 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.0637774 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071250372 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063890777 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065721889 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064419615 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064810386 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064662463 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.17904915 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06341471 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064143173 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065899059 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065150797 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067722263 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063160966 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064329028 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063059416 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064625315 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063308402 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063737186 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062905689 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066275429 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063939499 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078136527 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070367642 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063323074 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065146927 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064227725 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.0664168 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065639788 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077879948 seconds)
  done (took 6.075391086 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090437781 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087190689 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065971144 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065457441 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061891612 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064263092 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07030102 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064952414 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066027817 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082034444 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064411987 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065696218 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065845842 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067739452 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064463958 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065317391 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072699992 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062370984 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064392119 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068618801 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065067675 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069801119 seconds)
  done (took 2.754318276 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156546294 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070699248 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106436706 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075707468 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07096317 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075293044 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070142848 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070181854 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070263818 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06776079 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067775793 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070703194 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070132039 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067499234 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067560127 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068013255 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070402519 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067599698 seconds)
  done (took 2.61726155 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07730711 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066453511 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087713508 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066648238 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066939353 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068507355 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070577793 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074830726 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068490141 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066404041 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074381086 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068689379 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068554323 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065901102 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069182064 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066196882 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068870606 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066285055 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073977473 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070408015 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070577876 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074084504 seconds)
  done (took 2.785817397 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081212667 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067912145 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082088208 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068623168 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062331687 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064870883 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.07045447 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065864572 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07098198 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067800631 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066233971 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064298726 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068894845 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065816358 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068701812 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065865448 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068780075 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066076675 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067780374 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061485302 seconds)
  done (took 2.601809285 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086845732 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068043269 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06823122 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076939922 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068443851 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068116848 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075391635 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067693278 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068106266 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088757537 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067676708 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068063122 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075686147 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072553196 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067464438 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075291966 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075904469 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076170491 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06780532 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068172078 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089127361 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067871175 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075436106 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067894368 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068365426 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068134452 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067947043 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072728567 seconds)
  done (took 3.265634403 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066914246 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065976352 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063947077 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063845316 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063538652 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064015419 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06375382 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063906375 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066322134 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063877009 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066257312 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066346978 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066208398 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066704765 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066398665 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066193579 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066342877 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06384141 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064206475 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063769579 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066501296 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066309396 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06628298 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063984351 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065068634 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066305959 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063719933 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063969667 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065853462 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063701959 seconds)
  done (took 3.195015242 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07608077 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073763562 seconds)
  done (took 1.390795893 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063438934 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080540911 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063168 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070713114 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070050021 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067438362 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073846767 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070117399 seconds)
  done (took 1.79778325 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083357927 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078318016 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068383153 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080559086 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077176382 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083936992 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136546465 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067671705 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073600319 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064568333 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081746818 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066788701 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072889117 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067525984 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072865883 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073466088 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065019453 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072474284 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068737572 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064740666 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06775291 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07610613 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069099787 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061822207 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068161714 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089279352 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078268808 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066021804 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069573 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073702329 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072661266 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060521703 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065985138 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066973381 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064344148 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076762417 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080989672 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069051635 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075978735 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066883616 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075733701 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061053728 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070860792 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07263574 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076260187 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066604572 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066895529 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061207713 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064527911 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06882035 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061803663 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069594356 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061181252 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073393233 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070392472 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077653362 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065739611 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068252402 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069301586 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069724525 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073648256 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069024662 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069438971 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066422771 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076478186 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071906963 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075084482 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061787723 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060809657 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065050745 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075978203 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089367151 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072998995 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067000535 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067836017 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063761864 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070329745 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067030878 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072254068 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073034378 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066906786 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071994441 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074488288 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067141851 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069795656 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074309127 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065014053 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069579032 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064422216 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082543106 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065734674 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064393419 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064529305 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077357435 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069941372 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066275854 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064656605 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073843193 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060238087 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066494551 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06720769 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067585759 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076703255 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070498621 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070522174 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07398714 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073083147 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065767032 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068430402 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062476716 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066034368 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064828052 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072552099 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059742101 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067989073 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066746373 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065885507 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07363423 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064148897 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065676477 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073059514 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071193462 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.191892996 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06383986 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069913506 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067293596 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071168218 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075152411 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065966293 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062514818 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06254451 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07152455 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066543159 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070528787 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07174527 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070103492 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061173449 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06562138 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072669618 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076113492 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067928333 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067769267 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073174586 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068566772 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066510475 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073288169 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069483089 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066070651 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07278961 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067870283 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061967224 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069876938 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070436261 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065174545 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071046447 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070479906 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069818479 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066966437 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065326044 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074087886 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066991761 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06620981 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067825396 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065664134 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077357257 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069001624 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061857921 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064782316 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07555395 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065797171 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065741127 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066202462 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069479562 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06690616 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065101961 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065671964 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069071149 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076203634 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070802912 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067627081 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072413613 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078480479 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066455753 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069710219 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066494502 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067663984 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067868881 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075959233 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072966009 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071497821 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069224697 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063596118 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073073164 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074158234 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065707578 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063681508 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065622089 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070200532 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072611759 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070594316 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06707188 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064762903 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067136766 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069232062 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069232026 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066627237 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066014875 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072140916 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064768449 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073659405 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067080965 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07644225 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069668998 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061079032 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069457593 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06457316 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072610978 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061301007 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064581277 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066365605 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067673193 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065710782 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068643528 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060427919 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074074133 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074435693 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067077575 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066207398 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065987484 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073733211 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067776856 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069982836 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069345401 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070928029 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075603423 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065637254 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069005635 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075721721 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064862226 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.05943175 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070601622 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064074615 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064102503 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064897933 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063876386 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068407974 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072760082 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071964543 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.189413191 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069750576 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065627491 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066466369 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06193666 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071396689 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069807982 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068623367 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074323119 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067672952 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067571522 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071763925 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066670999 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067023872 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068458442 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069500779 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067236775 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06951172 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06617919 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070666212 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066198762 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064562014 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069008907 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066779054 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067824696 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072654178 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066513432 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066952576 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069581976 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06783002 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067911949 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067922129 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066983608 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070304329 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068073989 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067380234 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069332216 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061770943 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07494083 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066574446 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075090209 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067882339 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064170744 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.0734656 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06968354 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072585978 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068075091 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068275563 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068669544 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066338905 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069645757 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074627857 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064694683 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076978628 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074296855 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067956543 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069900909 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067368873 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068858285 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065430713 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067720363 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068004923 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067563957 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066448722 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071369374 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068745038 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067574529 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068757411 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067671063 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067199252 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068304579 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061175976 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066623737 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06653942 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066466347 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076326214 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067547573 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066490265 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065689608 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068037122 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065905615 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063353023 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074373432 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075204402 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067271814 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073509988 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066089207 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06869041 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07726354 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061158203 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065661378 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064793195 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064674934 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074289291 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067292806 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07626925 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066895415 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066215057 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063787503 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067664342 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065353236 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061232456 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064565467 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070469026 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066308786 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066921954 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06699202 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06955739 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06793292 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076115926 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066158182 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068132105 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066845145 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063690036 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065655909 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065386633 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068493666 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066129215 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064503612 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063254383 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065441544 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066807968 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067328874 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068273105 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067195358 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072556127 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065746059 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068389499 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068949997 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060189603 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.203271237 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068486121 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068561763 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067182341 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071457592 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0718117 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068359311 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07588188 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067306542 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068617171 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068129541 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065368424 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067282073 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066380482 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067505769 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066492788 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068505046 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075232566 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065342713 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070360596 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068237914 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06879403 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073555696 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068950944 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06988476 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072969658 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06846147 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068548407 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075903968 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070848155 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070970399 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067844262 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069149975 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073337809 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066794011 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073685008 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06820247 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068389298 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069162889 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06568968 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067413531 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067481683 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066440858 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073426582 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067845247 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066355062 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066469821 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065059879 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067818609 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069759231 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074662102 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069547526 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070556085 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061760826 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063667276 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067990446 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065164402 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069072282 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069892137 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073003365 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069728847 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06756774 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065463622 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076071095 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073074186 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071578568 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064690656 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.07133412 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067831255 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069187373 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068318847 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067645653 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068508005 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071363211 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069430573 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066610921 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073694405 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069918067 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068038394 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069160964 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067845001 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06776531 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061996128 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067149619 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069041258 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07299373 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06944589 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067655516 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077592951 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064929781 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067388531 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07005488 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066080488 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072017527 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062125998 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068351985 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067797957 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067696208 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062027285 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066263393 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065259398 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069355608 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066281148 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062256837 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077625664 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076140864 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070091613 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066033877 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065451818 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062211879 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062045234 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066506573 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068055088 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068060596 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076771903 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065395387 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064968848 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060801925 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065631545 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068203663 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068330026 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063189799 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060308096 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06491098 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069397979 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070727729 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064430928 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065303349 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068595794 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067665444 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.19702006 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071433208 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064192082 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071397767 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080449433 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067277851 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067702311 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074253799 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074820915 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06718771 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062793465 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06766817 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07046876 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068476152 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06772601 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068414039 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082626941 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069883906 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066957297 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066162347 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06955075 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.0673837 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07556196 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068070835 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067607467 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071946822 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06970643 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075835747 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070032253 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074923399 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070849507 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071335461 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066482851 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067539542 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06563746 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066381722 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068123887 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067830559 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072070482 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075415391 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067454467 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078132287 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077332472 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069646264 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064140711 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066938566 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066746592 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062714201 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068339147 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066112943 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066017618 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065861614 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066918547 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069654279 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073011828 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068806545 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067659083 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067562835 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061044449 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069937978 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06887114 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067783117 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064214426 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067145828 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067335825 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071630986 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070423771 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065330859 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069517811 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068836708 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067841119 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062957972 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074462583 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065578573 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068672235 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066350272 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066430788 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067227034 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070627828 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071493296 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067465021 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069169142 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070153488 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06917833 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064367898 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063676447 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071979213 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064451908 seconds)
  done (took 42.832651114 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100937686 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063088393 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061849716 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061809719 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073186506 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063173971 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061948453 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062955291 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063374332 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066148408 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062072118 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062036938 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070566041 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077641387 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073545104 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066568991 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06208678 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062997516 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061803814 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063169497 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07046257 seconds)
  done (took 2.745721097 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073729884 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077260035 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074937295 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081468483 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070689114 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070710718 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075215926 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0705545 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078951381 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072611141 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079036993 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070236616 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072758271 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072647434 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072131473 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070801279 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078458012 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071944106 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070315976 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075648825 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071065446 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075270777 seconds)
  done (took 2.944442999 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067608423 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066038453 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069117297 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062071685 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066740065 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061667589 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069334178 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064164435 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.06907802 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06600162 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065258831 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065500401 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068429181 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06129871 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066763054 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064370621 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10821572 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069879291 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065988847 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067832595 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06159987 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067806816 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061780053 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062158932 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064845095 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069695041 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06652358 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064360768 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06568761 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064985381 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066466841 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064300233 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067745547 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066337391 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065417306 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065871429 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065547933 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066197285 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060934176 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063726579 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066224075 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06136812 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066036304 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066813603 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063760185 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064177433 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067056606 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065624328 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061064806 seconds)
  done (took 4.56961833 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080354279 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109774286 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066945216 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091537053 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080050643 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072816624 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07045054 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090277759 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063413907 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064226684 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081836512 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078365127 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065384022 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069874755 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072163023 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065757169 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066819662 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064470565 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069047217 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065089323 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069327084 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072076257 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079689747 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07831331 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068908109 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064355455 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064495807 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070161215 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077231565 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069608561 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070176331 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070827366 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079494381 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070633267 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06451124 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067908872 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081113233 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065257448 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068178078 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063178061 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067235693 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069439274 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071826046 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081562889 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06520109 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070242456 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065293113 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062947405 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078018275 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067884684 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074016589 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079396319 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069826352 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065854647 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070201496 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080174644 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066045905 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06386955 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068173962 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077118861 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063168604 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068950125 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078297009 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067013471 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071921261 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078822426 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07046088 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068976892 seconds)
  done (took 6.347099309 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076297855 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095319972 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084121906 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08339176 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07537805 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076169476 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075749483 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075867825 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075048908 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079941482 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075455583 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115465046 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071128828 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07808122 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075711599 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07559555 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075575335 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075875982 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075462329 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0757906 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075411141 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082717941 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075443369 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082568538 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080249139 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071202551 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075113406 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075819989 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083509246 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075278994 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088305852 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075430292 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075504886 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082631196 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079658318 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075226637 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065693065 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075638605 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075143625 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075361581 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071345785 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082872133 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075175994 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07074273 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075378316 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074995977 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082768722 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079378631 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077570219 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07991975 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075239627 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08354136 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07523331 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075300728 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082803169 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085825444 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08263032 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083210068 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07578233 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08289111 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083541218 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085359242 seconds)
  done (took 6.221534086 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082787493 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073881611 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081839178 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061612374 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064247886 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072502321 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064335371 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064233457 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074179564 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074001398 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076060439 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071990019 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074420682 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076088582 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072172986 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074658265 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072488163 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071806411 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073800426 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071549083 seconds)
  done (took 2.791484624 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074834158 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082991784 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06644556 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071754896 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068918724 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071200919 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068716425 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069593211 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066809962 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069489411 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076634489 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07583973 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06677687 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071291655 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076381044 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071264746 seconds)
  done (took 2.485000584 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084001242 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073909089 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079962524 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066102737 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066339515 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062550234 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065522389 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06140858 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062217238 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078074026 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066229645 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076121497 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066154901 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065421605 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062901768 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071186021 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062981999 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063422434 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065416585 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078507805 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069476965 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064740575 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068697118 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065631352 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068631501 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070565758 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065301429 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065951699 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062939291 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065889758 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068359407 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069753556 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062560916 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063424884 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064611202 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063082851 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065425227 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065932885 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071548249 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065558784 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063648128 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067481738 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065271973 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067036029 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061693 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065860369 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061913851 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067455126 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06340827 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067986063 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065869357 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068149735 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066281194 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072482248 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068566192 seconds)
  done (took 5.037044055 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07883164 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070600894 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062243419 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063441987 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069502844 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066950041 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069133836 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06760779 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067262776 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064439405 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067228 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068720816 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067550077 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069311595 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067320299 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069338512 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061942451 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067473306 seconds)
  done (took 2.566923681 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071417734 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065421849 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073475979 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066623005 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065888899 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068742572 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061931685 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065214545 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065316327 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065565903 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066112598 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068918244 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064533757 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068079737 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065916753 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066076771 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068331418 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064886925 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066084204 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061977498 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068149388 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064316653 seconds)
  done (took 2.805481336 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093825255 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.0832942 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140748522 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079503457 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084695126 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072562355 seconds)
  done (took 1.898697894 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090558722 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100357869 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067093716 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069235255 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075685321 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069354737 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069969382 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069692787 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078387277 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075736542 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069658157 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078638764 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078309011 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077244 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075456404 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075797408 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07021408 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06995816 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066277453 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083233314 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069944187 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077989202 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069849755 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070478819 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06967782 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076972347 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078212931 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075622073 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069374784 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078128177 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075727905 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070163316 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078112159 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075796091 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068881955 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078082461 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07007702 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083308076 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075267365 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077311389 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068934761 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07568821 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078859044 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074943961 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078391855 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069991892 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075121068 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070162096 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071018528 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086349306 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075811275 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077618112 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078529192 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07869541 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078818372 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085818662 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076133351 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077412332 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075983698 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076181767 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077675188 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075695703 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077803429 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076048895 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075642969 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077679894 seconds)
  done (took 6.339366185 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102819557 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067214123 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07011411 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076588146 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077358988 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069892671 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070623385 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069948234 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070354078 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067766092 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109085217 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070332368 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077628927 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077502491 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070119123 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070478991 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070389424 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077980965 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067024394 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085439308 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070674279 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07742007 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077692158 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07743512 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076098722 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076293803 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070335756 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070014016 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070211281 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069872414 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074719277 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070068318 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077535054 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066776028 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077797046 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070776631 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069592 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074256182 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070499553 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075757082 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077599626 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083495984 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069836811 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069653567 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076047592 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069791085 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069802549 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067051338 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070298634 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066597059 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075758009 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075931598 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075824187 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077049928 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070431812 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070538601 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070024879 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070355453 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069943253 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076477032 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07713903 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07017968 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085777204 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070254102 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070242126 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077959819 seconds)
  done (took 6.248840118 seconds)
done (took 129.71176819 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.192156466 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165911899 seconds)
  done (took 1.700538398 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069647016 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098778083 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076816419 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129587319 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067812405 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100807436 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099201456 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077971918 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066133381 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066188939 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06633794 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068730795 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131792393 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066843526 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066839811 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069478713 seconds)
  done (took 2.678431834 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09957196 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.16260664 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102604005 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065713266 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099571064 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073200324 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065414431 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075732856 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071406551 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065590186 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072835381 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071298894 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065958374 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071116641 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071393847 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073134958 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064999115 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073133925 seconds)
  done (took 2.802531149 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099472233 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091548372 seconds)
  done (took 1.549401124 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156746519 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106252415 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.147818224 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352773843 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164966856 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148459644 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143575642 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143836328 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117133324 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139453776 seconds)
  done (took 2.976208425 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099280714 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15466025 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267354943 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117658263 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072842128 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09409817 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119436672 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078643056 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080427981 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080218902 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080269374 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076688194 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100106722 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073528906 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074314972 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076696504 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104528247 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073015152 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074488435 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07672487 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10141775 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06599843 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074158454 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073826936 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077308199 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077514386 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066664368 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066153539 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076745582 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074846836 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077424901 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093303694 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077066356 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106391542 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071035303 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107292426 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076550958 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074203719 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07438566 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074192459 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078326379 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078845179 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072887969 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076862704 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065542161 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076918726 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066164587 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065552649 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078178438 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066776307 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078080129 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077071825 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106175763 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066992326 seconds)
  done (took 5.994584644 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102913886 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106835115 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071765869 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112448313 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103033814 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072234614 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103268772 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095894409 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104197884 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070428036 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068809038 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070187597 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081717574 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082764978 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115131483 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106931241 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074609746 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071432536 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107985004 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105277214 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068479622 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097087097 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091537037 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103372603 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068009084 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071080384 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068401763 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070264232 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076990996 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07843249 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070206592 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08055524 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085134914 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078866475 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06702446 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068174767 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068806856 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080033564 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079938744 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079408548 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077795404 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06775707 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068067249 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069684527 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069968533 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0676958 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078709492 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080627617 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078884626 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069673093 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070316577 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068204997 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069863454 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080069671 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077854996 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081372044 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080221844 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068418517 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069059104 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072614655 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080610188 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078777205 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079548981 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069706709 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078645838 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068526637 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080311184 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084369268 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068556793 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070090472 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068582026 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070285372 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07000381 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077600849 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07871204 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069955414 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069726683 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0685125 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08075205 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078211845 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068537406 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076672585 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067283599 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068536158 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07005258 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069803839 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078091835 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079885278 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069922639 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068458351 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06957483 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068704602 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067601033 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077184495 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080435164 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079785941 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077852438 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069157214 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077610013 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077467565 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069205499 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078192425 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067507333 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070292882 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068476854 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076727606 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076024431 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077279992 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.198375422 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069358518 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079058832 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081115289 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069159166 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078659327 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08027192 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080710074 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069344075 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082946809 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069572806 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08054228 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070394508 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081499809 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069171954 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08101284 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069426173 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068755738 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069385998 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080390221 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073132594 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069666994 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070455683 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070228081 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079658111 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082578028 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071305485 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07850408 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079129703 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070489052 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079363493 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070111554 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079298061 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070038854 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069860535 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06794017 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082060542 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069477873 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069402526 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070463069 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080267605 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068692034 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079983007 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078286232 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069108201 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081088183 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081259112 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077188167 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080015231 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07093858 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068484054 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06917191 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070227609 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079100653 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080100401 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071790409 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069633977 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078961064 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.0790879 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068410189 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079123806 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079740656 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078802922 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069305518 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070467764 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081222828 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080968948 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078640062 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079560715 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078460059 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069193114 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077543899 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078382394 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068479641 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084876133 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068807419 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083142723 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079538855 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077010618 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079332849 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080313587 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080369262 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08037974 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083669903 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068634292 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069248716 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080170419 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069047093 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06968809 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078578845 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070493474 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069672714 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083363098 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069878821 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079934508 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068465282 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078973377 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067675585 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069760301 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082194942 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067791627 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06878144 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07770191 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068936792 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075949923 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078403693 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076397068 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066825599 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069015852 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210059609 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079730181 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069457099 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068829219 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071664442 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078736588 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077719851 seconds)
  done (took 18.716920919 seconds)
done (took 37.782974313 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211521913 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154792437 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184656747 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120349303 seconds)
  done (took 2.132909439 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118189526 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102114082 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094237973 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066271079 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100264785 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06591918 seconds)
  done (took 1.9424719 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316336515 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214003822 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.193884379 seconds)
  done (took 2.117443596 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.204677356 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190268133 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.425142714 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.265719006 seconds)
  done (took 2.591226821 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145802672 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089390223 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068159825 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085595538 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134674805 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162330249 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101187479 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127205016 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080067076 seconds)
  done (took 2.441981946 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149929775 seconds)
done (took 12.778168311 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.245092401 seconds)
    (2/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.097132015 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.171343307 seconds)
    (4/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080341248 seconds)
    (5/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.218346773 seconds)
    (6/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.117259637 seconds)
    (7/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.210941836 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.128040586 seconds)
    (9/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112657933 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084148488 seconds)
    (11/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.201851227 seconds)
    (12/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07781587 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.106412315 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078815563 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.126369205 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074744884 seconds)
    (17/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077532257 seconds)
    (18/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.204811899 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.09088385 seconds)
    (20/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.184784263 seconds)
    (21/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073629175 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.093993928 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.231154769 seconds)
    (24/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.180716296 seconds)
    (25/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081010948 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09017044 seconds)
    (27/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074570469 seconds)
    (28/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074620899 seconds)
    (29/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.214764194 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075121166 seconds)
    (31/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077223004 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.094473272 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07178424 seconds)
    (34/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087208503 seconds)
    (35/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.134031937 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.230322073 seconds)
    (37/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05101565 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124683632 seconds)
    (39/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072380308 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050879812 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05329477 seconds)
    (42/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082291013 seconds)
    (43/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077811155 seconds)
    (44/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076675493 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.168822556 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051249504 seconds)
    (47/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070286957 seconds)
    (48/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.208435503 seconds)
    (49/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065643288 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074142731 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072938578 seconds)
    (52/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.119630987 seconds)
    (53/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.1955223 seconds)
    (54/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074412904 seconds)
    (55/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.162788552 seconds)
    (56/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.081232384 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.162155975 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.091408723 seconds)
    (59/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079203928 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067854166 seconds)
    (61/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.185777536 seconds)
    (62/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.228770534 seconds)
    (63/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072601168 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072333842 seconds)
    (65/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.092429454 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073594847 seconds)
    (67/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.15804674 seconds)
    (68/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053671426 seconds)
    (69/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052763921 seconds)
    (70/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.201856135 seconds)
    (71/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109312751 seconds)
    (72/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.155154 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065879534 seconds)
    (74/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079969351 seconds)
    (75/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080494049 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073161098 seconds)
    (77/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07577983 seconds)
    (78/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076859906 seconds)
    (79/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110489789 seconds)
    (80/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066150588 seconds)
    (81/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087542021 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07314394 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089784271 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094973542 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.066206462 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.1432547 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072441246 seconds)
    (88/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.302863716 seconds)
    (89/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.171876011 seconds)
    (90/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.20854331 seconds)
    (91/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.11261035 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067124485 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.179133429 seconds)
    (94/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.157942873 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077220288 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14361531 seconds)
    (97/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074947489 seconds)
    (98/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066735916 seconds)
    (99/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075536923 seconds)
    (100/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111535275 seconds)
    (101/309) benchmarking ("sort", BigInt, false)...
    done (took 0.191029435 seconds)
    (102/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.161869603 seconds)
    (103/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073375839 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073679279 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077177844 seconds)
    (106/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.167547964 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068348568 seconds)
    (108/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051854067 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149610092 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.101251321 seconds)
    (111/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073815725 seconds)
    (112/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069432042 seconds)
    (113/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053583133 seconds)
    (114/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076975203 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073766996 seconds)
    (116/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090630905 seconds)
    (117/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06819435 seconds)
    (118/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.116395383 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.155187118 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092371252 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.188159408 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.13953058 seconds)
    (123/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061856787 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093905385 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075138828 seconds)
    (126/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.202933549 seconds)
    (127/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.103428593 seconds)
    (128/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068503024 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073465489 seconds)
    (130/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.156029744 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.183406784 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066361303 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071934593 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073054457 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088828268 seconds)
    (136/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090194877 seconds)
    (137/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052562662 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072429037 seconds)
    (139/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073157784 seconds)
    (140/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07377923 seconds)
    (141/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052844121 seconds)
    (142/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05122696 seconds)
    (143/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066154333 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125446726 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065257062 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065946482 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073293156 seconds)
    (148/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076111051 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066777829 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090083728 seconds)
    (151/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051288723 seconds)
    (152/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067143965 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066348445 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090700918 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065964739 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074753775 seconds)
    (157/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076952517 seconds)
    (158/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051154145 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065686659 seconds)
    (160/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052081161 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.142023272 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069675712 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06618596 seconds)
    (164/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.111258632 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.41233209 seconds)
    (166/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053196858 seconds)
    (167/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.196765083 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.091537453 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093005264 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.141317592 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.178203102 seconds)
    (172/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.179653706 seconds)
    (173/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.102945991 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092082483 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090873061 seconds)
    (176/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12181799 seconds)
    (177/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065910026 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11369262 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072609502 seconds)
    (180/309) benchmarking ("sort", Int8, false)...
    done (took 0.142587999 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065331115 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065235964 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090762667 seconds)
    (184/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072355958 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050739111 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074437637 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090166949 seconds)
    (188/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065163836 seconds)
    (189/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050821764 seconds)
    (190/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064916366 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050989616 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142156697 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067020694 seconds)
    (194/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.195025938 seconds)
    (195/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.05079142 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064836115 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063265868 seconds)
    (198/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.263137853 seconds)
    (199/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.157962075 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.116168563 seconds)
    (201/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067318772 seconds)
    (202/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051787827 seconds)
    (203/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091506041 seconds)
    (204/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.153382179 seconds)
    (205/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073462141 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075673276 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074088742 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066825889 seconds)
    (209/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066487564 seconds)
    (210/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069533119 seconds)
    (211/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05211003 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070572886 seconds)
    (213/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052796281 seconds)
    (214/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063764945 seconds)
    (215/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052644767 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089050693 seconds)
    (217/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053044862 seconds)
    (218/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070136412 seconds)
    (219/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06854334 seconds)
    (220/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052255172 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082523485 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072267212 seconds)
    (223/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051176413 seconds)
    (224/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051533809 seconds)
    (225/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.05179839 seconds)
    (226/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051890972 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064702937 seconds)
    (228/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068844866 seconds)
    (229/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052685305 seconds)
    (230/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052675141 seconds)
    (231/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074754302 seconds)
    (232/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.110506358 seconds)
    (233/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.182244321 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143461636 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067916016 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098946611 seconds)
    (237/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069798135 seconds)
    (238/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074858507 seconds)
    (239/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053845655 seconds)
    (240/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073350665 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051287006 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.208530266 seconds)
    (243/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064892618 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127566446 seconds)
    (245/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051452526 seconds)
    (246/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052857488 seconds)
    (247/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052640578 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.098887504 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06609869 seconds)
    (250/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052272867 seconds)
    (251/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05182561 seconds)
    (252/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100434556 seconds)
    (253/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051182995 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087525111 seconds)
    (255/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052403996 seconds)
    (256/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053000375 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072679383 seconds)
    (258/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06648152 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172539256 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07411077 seconds)
    (261/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060980714 seconds)
    (262/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072789596 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093022402 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141597436 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051252841 seconds)
    (266/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05348103 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090705822 seconds)
    (268/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066568846 seconds)
    (269/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069817143 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091246842 seconds)
    (271/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05081225 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065425878 seconds)
    (273/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062008153 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092823699 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065398692 seconds)
    (276/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065089008 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128988546 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100887193 seconds)
    (279/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062611758 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051216802 seconds)
    (281/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050944769 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074062929 seconds)
    (283/309) benchmarking ("sort", Float64, false)...
    done (took 0.13156365 seconds)
    (284/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05319141 seconds)
    (285/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067211733 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064516049 seconds)
    (287/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052603671 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064153825 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149497482 seconds)
    (290/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06873948 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073076315 seconds)
    (292/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074383042 seconds)
    (293/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051746448 seconds)
    (294/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050745244 seconds)
    (295/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062008171 seconds)
    (296/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052697944 seconds)
    (297/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052151751 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071626633 seconds)
    (299/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064700284 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087256853 seconds)
    (301/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079012307 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071069673 seconds)
    (303/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062000139 seconds)
    (304/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.05192431 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051412507 seconds)
    (306/309) benchmarking ("sort", Float32, false)...
    done (took 0.132909188 seconds)
    (307/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052389407 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05149583 seconds)
    (309/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071018879 seconds)
  done (took 31.200580881 seconds)
done (took 32.606111409 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083779195 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093862334 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075323067 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094606017 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081537586 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076482549 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073177744 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079325184 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080275816 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082187847 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079197442 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054872514 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074751096 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074920233 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075099435 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0918856 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.0792578 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073132667 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07373005 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064718363 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073362375 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066367339 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067587208 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054587554 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078629632 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072572129 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072654064 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07415333 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065900102 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066595849 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069885977 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07388523 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065243766 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078598689 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072656458 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073018067 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075521282 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077327999 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067873218 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066697157 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075430908 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065954919 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073802668 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07463156 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073060348 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072032319 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073858954 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078871934 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091713925 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067786037 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075068483 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076808249 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076580676 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07344388 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06990548 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073536331 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071202272 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09162899 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07420997 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067994962 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074991497 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074425559 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07206117 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073909556 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074102282 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075648954 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075853356 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071867614 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075019098 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072094295 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066165369 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073690292 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069421105 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066273575 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076584409 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077777725 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064327217 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071606955 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073091644 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071565665 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064861197 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067691351 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067751039 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071831266 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067379133 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05416531 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069513734 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072754402 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064471247 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073532025 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072438969 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072598374 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067259123 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076127203 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065118856 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071131789 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065550322 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065525971 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067139536 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070109203 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065487136 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067609003 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075201189 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067450974 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072181691 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07950839 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065949903 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072242481 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064644161 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064417855 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079837117 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075214063 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065730518 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067618746 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064353323 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073568988 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064468659 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065258782 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065886637 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065390904 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071823705 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065614424 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067744817 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072642155 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078151603 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065131351 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068399839 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066856402 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064527298 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070252599 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064816751 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064428641 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066308066 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06120544 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066530706 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064303826 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072271284 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066420136 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.207249728 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067543716 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074810607 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071006979 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072803956 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072085241 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064277989 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059114922 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068242462 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067803865 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067375166 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066449195 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067936839 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06583629 seconds)
done (took 12.504776199 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06707497 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140557333 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097654809 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096532263 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.087024298 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067310226 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077043302 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102463039 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068518111 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101980735 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088667483 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086375132 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114888561 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064727164 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065897019 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069934159 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067784601 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082305131 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10234674 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087550966 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116232562 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065619967 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093594833 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090486845 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089365411 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095110518 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069780295 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070900375 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.0704498 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103251129 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08922329 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069972629 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067558326 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099022596 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094298053 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084264328 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066726475 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083525993 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066543722 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066646005 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068049468 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09990946 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08120401 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081456614 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070292187 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070160973 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067975378 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084885424 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091019343 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079816766 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087244053 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101809614 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069429044 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065747074 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064828442 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087439691 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065283956 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069765363 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066452062 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068821839 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066148799 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069593526 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081623935 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081310445 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070261632 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079704084 seconds)
  done (took 6.848801932 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084519071 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091806641 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083987669 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08396184 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066062048 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066644336 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066508096 seconds)
  done (took 2.042978985 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067425336 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088051555 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089834614 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089406036 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081657842 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088434087 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076061935 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066985046 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088936828 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068157721 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088136376 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101108376 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070302805 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074128687 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091007395 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067060255 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09139279 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066848282 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07005991 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090890866 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069308801 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095851334 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070092374 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067407894 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081488089 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066846896 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113914604 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071925186 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068114367 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069336878 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064898019 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107417646 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080377456 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074472206 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066466347 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081294691 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080862666 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06513021 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083787652 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07618593 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081079422 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067324762 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067831012 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064683527 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07130958 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078064327 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067695324 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068069737 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069673705 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087057289 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068068643 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080738447 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069774753 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.0731091 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06873288 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073820037 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077144507 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067893777 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086942301 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068090569 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083981914 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083128414 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080970244 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083327846 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068726457 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080437244 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080177547 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06924578 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068511688 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069936987 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083384972 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064877147 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068438237 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077375963 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068828026 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090085797 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089995046 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068236831 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080492884 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067305088 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06666462 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066945328 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089692862 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072434274 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066741163 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070560073 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070030727 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065396076 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066594973 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070995979 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064310487 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06842863 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069745664 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069563744 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069749293 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083650731 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069880125 seconds)
  done (took 8.846999798 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069494595 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068216476 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071260369 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067546192 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068082726 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068500904 seconds)
  done (took 1.93445869 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093492045 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069635674 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08037965 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071716367 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105165478 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087690792 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087329106 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078442912 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084161691 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079346045 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087239816 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088931076 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092545612 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072536871 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08729319 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071641001 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087429978 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075182458 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078395513 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073011519 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087055168 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072867699 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072816424 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082190449 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076623633 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072467438 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067765033 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079246639 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078869249 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078854394 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072315348 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076532576 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070810577 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078459935 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08722892 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07099327 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071769665 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077847853 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072552588 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076241535 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088571815 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072833256 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075115133 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077045736 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077999202 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070909265 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077238589 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075435849 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086454127 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077317847 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076924189 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07138092 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07572746 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076929858 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071136757 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078531639 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07721351 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087168334 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07169598 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071181054 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068694563 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07617744 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07787812 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07688142 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078934364 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077365598 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070474702 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072384376 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072480809 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072039774 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078074172 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069347112 seconds)
  done (took 7.102562873 seconds)
done (took 28.265500777 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.534072782 seconds)
  done (took 2.025062816 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.619831709 seconds)
  done (took 2.135221882 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.419941771 seconds)
  done (took 7.930194362 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401850019 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.526860388 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.724041111 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131640883 seconds)
  done (took 3.330203209 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.704539626 seconds)
  done (took 2.225209629 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.213387765 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.203177653 seconds)
  done (took 1.948888089 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37603399 seconds)
  done (took 1.887670454 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.141111071 seconds)
  done (took 2.656444902 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.258663739 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176097973 seconds)
  done (took 1.955013174 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.475728955 seconds)
  done (took 1.992662765 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.863601048 seconds)
  done (took 6.382477612 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212222462 seconds)
  done (took 1.77567162 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240387551 seconds)
  done (took 1.7594704 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.725586447 seconds)
  done (took 3.242134244 seconds)
done (took 42.764996243 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081321393 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082570175 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082116996 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078767688 seconds)
  done (took 1.835899709 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077673911 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073719622 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077317183 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073640225 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077575535 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074418402 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075008925 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076549541 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073448721 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074540132 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073843162 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073351568 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076051324 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074966433 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072283715 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076288294 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077372069 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073478964 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076307052 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073260419 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.0711881 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076006571 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075982031 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073175575 seconds)
  done (took 3.322983084 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078485816 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074103838 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076892983 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073188427 seconds)
  done (took 1.834372549 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078836043 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095981935 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089710741 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079237415 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093783866 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08756236 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069648818 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070347306 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071498467 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078697631 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06906223 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097344712 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089443382 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077849694 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080556015 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066643715 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068994959 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088304089 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079371417 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079400012 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071058463 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078648245 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068866603 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089101137 seconds)
  done (took 3.447910601 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087182665 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105661859 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082224075 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089500033 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092045203 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065998161 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088764772 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092405254 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127980065 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065958131 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07132535 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066790314 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07414423 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065835838 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082063617 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108927017 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113115855 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069528728 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097433598 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065994679 seconds)
  done (took 3.250722881 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073664678 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070975875 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066051587 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071106877 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077669201 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073321627 seconds)
  done (took 1.971790611 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.0695219 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069353554 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068680801 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067865726 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072783493 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068598466 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067274355 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06845751 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068271254 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067999728 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067709437 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066542971 seconds)
  done (took 2.356415112 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202813449 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069209865 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069692776 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066820191 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07151096 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066975363 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082243922 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068774003 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092687934 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067080544 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067399753 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069221334 seconds)
  done (took 2.529641066 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209875994 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077162426 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241726263 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151864688 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111496415 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116452086 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112907707 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11521246 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14343678 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101286912 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169427055 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167975498 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108144747 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138857443 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089705162 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.101824457 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155156007 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164553884 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106073676 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168538887 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147082975 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126873025 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149888106 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107788184 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106638792 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123623869 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071998869 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080788424 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17135331 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133775615 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144889952 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111866099 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093190481 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178364439 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173690341 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141951673 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148218235 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085036326 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105805847 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135014569 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201317163 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089054451 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161481298 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109449466 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222263823 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135028371 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121326954 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122860463 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107102766 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091229433 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148383557 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185565131 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139424221 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089035552 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125675508 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114774736 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115686266 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11470867 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184265487 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163638963 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129386607 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072160345 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10874531 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155176565 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13534864 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110405272 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126124827 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093053113 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136013102 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15737591 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121303819 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145599746 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118408354 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089411672 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120796153 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141533746 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128546309 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162282707 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125563154 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073631663 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124939012 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102419523 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081706988 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147584299 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075884097 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178663957 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099975585 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109816007 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125991465 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11068594 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109698384 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15962114 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145588116 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103150674 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065717862 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247670143 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123691105 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147532672 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088266337 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111116723 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118491101 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079110833 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138974764 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075967003 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125028335 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078386412 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13023846 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132077002 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078194685 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124716485 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104378575 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101370801 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133396946 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1622638 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088820631 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082234197 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171516684 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123069404 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104674907 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145904887 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158546383 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10217926 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102626024 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150484745 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180686665 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089990924 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165265448 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107377198 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084581224 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08881678 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124690889 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112995622 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124754062 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082206778 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118991493 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170608003 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075596319 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096801606 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136099883 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080047233 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081832268 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106712921 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105700345 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096293574 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100770611 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103421463 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136580905 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124633796 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106100056 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124670594 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099083521 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317402323 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088960914 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103232765 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105771682 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071766112 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137339214 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159788407 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079739093 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16576255 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124434703 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117962378 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120962163 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085165134 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143060247 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080103797 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070668124 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145408177 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112259722 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111588512 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152847694 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118025136 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12666715 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120469305 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134854125 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132974655 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132090661 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1059754 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089827194 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113147003 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127749343 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07356947 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091540333 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08073878 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105485635 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096988116 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083692367 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142329169 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125249543 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110417811 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113327696 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097214214 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149487327 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076792148 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128841076 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.121011277 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096367051 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154885948 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153625791 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13251122 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099531766 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137723817 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070677984 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074367495 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088551907 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123255551 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082825504 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083354386 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261178521 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150821021 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132082415 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137913062 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12525047 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12170426 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157790541 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071028894 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119547305 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149258515 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123237543 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.106230734 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091314798 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100440247 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14521267 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108752706 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184315182 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117914831 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125958127 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155620235 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101566598 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080718899 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104136826 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137052464 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105016894 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145596668 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100893802 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089142388 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110608224 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075084692 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099462236 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128095245 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119822587 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136161391 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117072789 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133900862 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078152565 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117010442 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122918619 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123178131 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064973006 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121751929 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163519058 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095754159 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119519137 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154680259 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079556496 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134770474 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176185796 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1449468 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085261117 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10841325 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.267173474 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131322397 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122395638 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142642659 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108657013 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140140512 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112380302 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088044537 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089196121 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098585242 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105217282 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097065595 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107742286 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115787044 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096196972 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133311335 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104766927 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111302527 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118693108 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098515211 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091618878 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096588485 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178755285 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119482 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172347676 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101375953 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146532835 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165885414 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075370126 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079346477 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079069152 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141356537 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085108459 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131444152 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107814879 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118528749 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124605775 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144380316 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096511565 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069037261 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110077209 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134211639 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125803506 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099292904 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104661961 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166397324 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102425426 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08025641 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114394358 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116627468 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103640411 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172469507 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062131211 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106324574 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076783298 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08091655 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128022047 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295397744 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082314942 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104738742 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121005946 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112795888 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130866912 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104955927 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109061449 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127535801 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1507309 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130226041 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09079651 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112937301 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130445976 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157711785 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10677711 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096768835 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174951131 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154585867 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162856422 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088324055 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116095958 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115647492 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110258566 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139295657 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084091516 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164752891 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082381471 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137868439 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104344177 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089644888 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130239447 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109154235 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089104622 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149829241 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118312339 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083366775 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07832876 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119055746 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121209069 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107097641 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075849037 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1403616 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074976753 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133464495 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161168838 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081474926 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108743015 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096891833 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079721109 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106715847 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102356867 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087479288 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099460582 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.322963885 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089278376 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152622898 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135394823 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114856714 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138590089 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103769062 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641284981 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079221418 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155566742 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118929506 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174742622 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101641139 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120687563 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111536518 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124086278 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147985671 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105546955 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182842922 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13290769 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117640408 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080449274 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102955662 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104508919 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089354087 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108741131 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114504029 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116772148 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093881829 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117360168 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125747184 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083127081 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096387256 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158038149 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117843144 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144963862 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141644079 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086164622 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119183967 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139445497 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080897611 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122025215 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15310996 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106123423 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10053901 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081353932 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101056244 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159621399 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074349652 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159024868 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118636631 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.255679699 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115331848 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113833102 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132188285 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107780587 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12366808 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093778826 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111606375 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115196338 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083635749 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078015542 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107355991 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112804 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099048118 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098311123 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.101139091 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154106783 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072947069 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100962058 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117530831 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146436727 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174871103 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089812029 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083701673 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119796671 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114920954 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113316441 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122581108 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079513683 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082187124 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081300165 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.079034906 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109803224 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114676417 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115565656 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112083682 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164282277 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084032651 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.23523164 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096673233 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106013864 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070817112 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079092034 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097285436 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099426574 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10861989 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111094065 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160778598 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097141848 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090829812 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092530794 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074941172 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084308006 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130026568 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110484628 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119200869 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099462228 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062653817 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107619008 seconds)
  done (took 59.521698514 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110467525 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084171097 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096030988 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145963418 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124209547 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203476473 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155243414 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189661096 seconds)
  done (took 2.767667174 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069568466 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096630529 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104324872 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085306804 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067461665 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070422363 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.235682415 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082360092 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067833861 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099929274 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079932317 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069527388 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.432382373 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066781455 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068217404 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062245348 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068136952 seconds)
  done (took 3.457793854 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.392824498 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613172476 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.355718173 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073280161 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.493582018 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085686349 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.161328785 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.12931231 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074731917 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539826686 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.405434175 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125376356 seconds)
  done (took 18.092442512 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077039162 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069961815 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084548022 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083735125 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073731689 seconds)
  done (took 2.030403616 seconds)
done (took 107.998777799 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081900188 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.605546337 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053472938 seconds)
  done (took 2.329509978 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084389826 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086503834 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086557756 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084741843 seconds)
  done (took 1.988415085 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075386 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077361184 seconds)
  done (took 1.794369988 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.235662117 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165804418 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096834961 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083649794 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079924212 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080742596 seconds)
  done (took 1.887433163 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072496541 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076502739 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073388198 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077046097 seconds)
  done (took 1.938164751 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077599817 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052954307 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054955212 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058646153 seconds)
  done (took 1.883814119 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088292146 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080196274 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079353604 seconds)
  done (took 1.887909601 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103126205 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088650486 seconds)
  done (took 1.830846211 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082984641 seconds)
  done (took 1.724108609 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101344268 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102724362 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13276449 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111950719 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14160384 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110088536 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085980925 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086780018 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077403199 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088024324 seconds)
  done (took 2.678595602 seconds)
done (took 22.164430322 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080317567 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.464066911 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360696554 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091151208 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674135787 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357369311 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.989331526 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094283353 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116147793 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068638008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085952917 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650952039 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.015476367 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.414865702 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.003879087 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.41869166 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649400301 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069281634 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068654795 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068787626 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976421378 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068915087 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069274779 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06926936 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648870199 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373135701 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068979766 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.419014392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068921026 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070976331 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356015783 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069305888 seconds)
  done (took 16.628951459 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070509005 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122498161 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074180941 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085689297 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071446747 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07093001 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072577097 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070253608 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123138641 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068785608 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086483511 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068947732 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.090278586 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069129337 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088605468 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068883258 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070207704 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06930078 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069185961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069351789 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088370062 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068652019 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069644652 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069817579 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069026575 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081832259 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069062125 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068615316 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069382307 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07139172 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071955916 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069435131 seconds)
  done (took 4.100384766 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121121665 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130133965 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075450093 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106453848 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115658978 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070819674 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149698102 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095424136 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131262233 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069197007 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086487668 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068854759 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103720339 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069775555 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08922557 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069786075 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070032414 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069639174 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06906017 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069368512 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088810764 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069699755 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06907284 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069651037 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069238381 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083103702 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06902534 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069152949 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069447931 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071319301 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.0723888 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069682011 seconds)
  done (took 4.357815147 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073704238 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077150789 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083886444 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085277025 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071200579 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073458877 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074652797 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070504215 seconds)
  done (took 2.267721249 seconds)
done (took 29.002367619 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080134147 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06971567 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073617061 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083159852 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074519164 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079847268 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06846393 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07610158 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073294326 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073883976 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075869714 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068609388 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072307972 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068165274 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074820636 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068483983 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080255976 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073204607 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080513792 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080966646 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071067007 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074313757 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075718639 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079790717 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079710786 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080107475 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078622042 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073875218 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069683478 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070901156 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078137681 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08475343 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068919654 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080251605 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068357074 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068468405 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072441011 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068197152 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080603293 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077213002 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069955884 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076935901 seconds)
  done (took 4.780343237 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088738485 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094143845 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085973757 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062863426 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067354864 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067013952 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090366332 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060980907 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060472888 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089226541 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056017048 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06023328 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066525516 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054082815 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061252908 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057176671 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062378384 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055980846 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061110631 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060865262 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089887787 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054200834 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.07864526 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064131652 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056644074 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062703667 seconds)
  done (took 3.437332596 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075490533 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086885795 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091938167 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133393903 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107722358 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080476378 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080498105 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096557608 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09011595 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067871833 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071903293 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09391562 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092005961 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074680942 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068677781 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087619125 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085028296 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070659673 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074455488 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095962261 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088106867 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087004597 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097530986 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085321963 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068148748 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071778623 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072864206 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083407175 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073727724 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077941189 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072780251 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.0724532 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071946422 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080509536 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072870991 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070701876 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094364895 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078703859 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080741267 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069788161 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077050179 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070016421 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094871959 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129004459 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068693993 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075332387 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073296122 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078649637 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06871753 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090116722 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080821908 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069078037 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072037454 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067863866 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069064953 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082860852 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07107 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071169331 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078937753 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074712365 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094726338 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074180877 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085295452 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068779766 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077099234 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068711349 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069897757 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068322786 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098276484 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071322234 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113111478 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070800696 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070186054 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078120323 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07733375 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075710351 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070202297 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085147601 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081026551 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072549484 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078222182 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07210042 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072250045 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.094261474 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071591264 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071587017 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070071368 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075310892 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071932101 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071756178 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082431705 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068401108 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072524094 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086372406 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068998052 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070362033 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075096804 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073469412 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068383112 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080375343 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073521657 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069873639 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078930701 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069330796 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072188364 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082121018 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075617429 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067746558 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073309961 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07460722 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069654266 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07032662 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071958051 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070849242 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078611898 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076293968 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073411571 seconds)
  done (took 10.845099565 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16735382 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159878279 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071066464 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150384705 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077762308 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080285731 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153442348 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096215006 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069493749 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069869248 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069744908 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112372752 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107952027 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117909826 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080266524 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068685487 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085604348 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116685765 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154790191 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149050992 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086342434 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078770963 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071140509 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070298774 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072096547 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07966195 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086569452 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077941397 seconds)
  done (took 4.480539935 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081692723 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10726323 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076914646 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092827416 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092810692 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069081445 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071996716 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070987456 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082881301 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079425667 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069228951 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07424162 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076556628 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072314019 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069653618 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076215641 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076711086 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070168544 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072841131 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074600982 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079579707 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093430592 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072823611 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068428066 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073852194 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06822491 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064404539 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085218599 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069246415 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096723559 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066516938 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073674886 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083759826 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069785925 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068900488 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068631011 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068861584 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068899826 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07079612 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067311276 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067307341 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058817968 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068221122 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080005789 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075712006 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057144166 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073551697 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074266497 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074388327 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066227686 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07253971 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071390408 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072399082 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076270617 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072968833 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073808074 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070129889 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075214113 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078963018 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069137872 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065878454 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067781308 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073601221 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066010212 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077827614 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073915971 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067107599 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068901919 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07061368 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075883529 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068610527 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073642627 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066226981 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070812702 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073801403 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070726762 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070360018 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067849328 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069139742 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069831554 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056638614 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068568611 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054874033 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07182485 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067059087 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067353399 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068899469 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073412198 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080921369 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070670517 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074585098 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069654932 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067951386 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072017653 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061033343 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07193494 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085005446 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083776929 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068640197 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06660318 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082695184 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073361059 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067675551 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056751966 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074139775 seconds)
  done (took 9.324076698 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092496835 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070885208 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08588364 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093412687 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089090166 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07587365 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078775989 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070506001 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084461167 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075179939 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078190671 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068908813 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079616277 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079742889 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071206856 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079350704 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073643318 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086385399 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084367229 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069606042 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077362927 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081888824 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092232555 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084355568 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082579384 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08424644 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091986423 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079551248 seconds)
  done (took 3.969497393 seconds)
done (took 38.489062181 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.752010699 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.921218732 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.743365634 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.103851928 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.063072733 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.768040724 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.948608318 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.737090718 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.195647165 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.777256951 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.938414647 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.858854246 seconds)
done (took 65.485594689 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.758455868 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.878902335 seconds)
    (2/2) benchmarking "String"...
    done (took 1.982729496 seconds)
  done (took 5.539689982 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.095659912 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.301590397 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.986581847 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.738003654 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.743663318 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.078830187 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.546968645 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.266132161 seconds)
  done (took 30.340071707 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.874773498 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.979208246 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.424700114 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.457748905 seconds)
  done (took 15.471556798 seconds)
done (took 62.973393807 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.750516291 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.775753533 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.749969957 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.723783402 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.799558863 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.755163999 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.226979899 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.793985087 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.739754319 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.729686876 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.74295378 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.188595326 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.75401631 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.203862833 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.739296488 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.749509332 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.813820491 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.296299401 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.897215835 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.758219432 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.745263179 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.795585797 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.740483425 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.7500933 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.772009369 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.738710615 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.187456089 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.744895333 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.365247425 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.741540273 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.767380481 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.239250494 seconds)
  done (took 203.454417649 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.739937053 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.741557353 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.82943339 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.77745359 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.242279475 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.923065347 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.861931808 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.287351092 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.745414639 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.752559635 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.957323365 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.741947178 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.981973978 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.690043974 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.770649459 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.744363277 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.881591426 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.998708911 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.779503497 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.913832204 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.766070201 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.780624811 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.733110488 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.949172196 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.764528617 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.830430479 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.893093659 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.759956916 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.936208128 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.864111025 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.776975894 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.744703574 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.963800252 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.614746797 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.748589756 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.766695126 seconds)
  done (took 168.934123161 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.133726078 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.740250698 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.739057396 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.739778056 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.739942537 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.751533836 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.740139399 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.865784204 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.866454961 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.351925929 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.31305203 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.788904787 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.561902436 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.736806805 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.802770904 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.747557341 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.736406377 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.752244111 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.763221541 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.737471046 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.735533575 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.862069 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.747867158 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.93977077 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.739663327 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.7330807 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.736678467 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.102326545 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.731526685 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.736761286 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.991918036 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.731693629 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.729440596 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.626301428 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.3748642 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.822439299 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.729183097 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.734746785 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.727374385 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.946876922 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.729309938 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.727688394 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.727358775 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.730648839 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.907377122 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.727986727 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.855254904 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.728776946 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.233251478 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.72895861 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.728176486 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.401243713 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.403227732 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.727914136 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.72844446 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.730834535 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.728477546 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.72848144 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.734906509 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.342623466 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.803116478 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.730023031 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.731284727 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.734213183 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.728473885 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.764116851 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.728351327 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.939365144 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.789505843 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.857448002 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.852043264 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.727885754 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.791968694 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.81882707 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.724438273 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.725601738 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.725081696 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.722919632 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.803995255 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.722326429 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.845343435 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.729912021 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.723912995 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.773207839 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.79143368 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.723080534 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.61420362 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.723744754 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.721149304 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.036474685 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.789113311 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.721434133 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.721954709 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.721083547 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.722025567 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.845819667 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.843676348 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.517166076 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.723863258 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.721791208 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.341222424 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.723123624 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.872370504 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.7229965 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.904980485 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.724713164 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.803273339 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.727333001 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.723236499 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.723295343 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.754825436 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.722680136 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.781236787 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.7230276 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.096337666 seconds)
  done (took 396.777087688 seconds)
done (took 773.03493406 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.404911488 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.362339478 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.472251222 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.387905447 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.351995673 seconds)
  done (took 13.63951469 seconds)
done (took 15.300320075 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.809274421 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.817024302 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.744903648 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.812685456 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.743384804 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.81253145 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.79325635 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.747915776 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.778076013 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.746222345 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.78015035 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.745932424 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.734318427 seconds)
  done (took 24.724502413 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.947540485 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.954481571 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.793897507 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.948769648 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.769022041 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.947346894 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.88200349 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.869609184 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.871001345 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.73664129 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.732716803 seconds)
  done (took 22.11249613 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.955326009 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.963985111 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.798396019 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.97154636 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.769323618 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.951623181 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.883598489 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.870642689 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.873331516 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.732008563 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.729635145 seconds)
  done (took 22.156449899 seconds)
done (took 70.651655263 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.724516425 seconds)
  done (took 3.378827116 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.749985021 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.913669944 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.731131024 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.728079364 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.724988822 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.72527425 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.727393707 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.724079342 seconds)
  done (took 15.679254157 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.720993366 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.721065229 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.719868419 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.721482113 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.722480283 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.723719647 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.721250721 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.721605839 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.722617436 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.722558838 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.722681343 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.71947646 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.722130109 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.720296628 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.723073843 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.72265158 seconds)
  done (took 29.203066156 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.720922046 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.720002188 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.719499407 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.719457255 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.720160304 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.718699653 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.720399737 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.718959808 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.721431428 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.719082239 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.719578824 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.718885047 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.720688021 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.720041179 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.720411415 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.72035492 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.719738637 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.719621925 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.724729163 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.719960196 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.72038768 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.720342173 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.722004939 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.720986417 seconds)
  done (took 42.942841861 seconds)
done (took 92.857922353 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.617790901 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.158410243 seconds)
  done (took 8.431306996 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.723618241 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.723316796 seconds)
  done (took 5.139736878 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.72218646 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.723747743 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.722679349 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.722424683 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.722405594 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.723761837 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.722077728 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.7224388 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.723024671 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.723995437 seconds)
  done (took 18.882329636 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.722117416 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.721718507 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.720111043 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.722421394 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.721132849 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.718865628 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.721654172 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.721307283 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.721233852 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.719427218 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.721765515 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.719844403 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.722472864 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.718674719 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.721514815 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.719812848 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.718727783 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.718314765 seconds)
  done (took 32.624674077 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.721446276 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.722358071 seconds)
  done (took 5.096126359 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.718137412 seconds)
    (2/7) benchmarking "second"...
    done (took 1.71888001 seconds)
    (3/7) benchmarking "month"...
    done (took 1.719427475 seconds)
    (4/7) benchmarking "year"...
    done (took 1.718685394 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.718912547 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.729300204 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.719020316 seconds)
  done (took 13.696213512 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.722375082 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.882791855 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.950482976 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.360781416 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.723993903 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.724304642 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.657398243 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.726148293 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.727201499 seconds)
  done (took 19.128018422 seconds)
done (took 104.650802942 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.540431524 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.717287623 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.068786853 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.813771936 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.734078974 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.057446368 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.732825202 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.02313336 seconds)
done (took 42.34141809 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.784981673 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.270325224 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.530893688 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.7200527 seconds)
  done (took 13.175269408 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.708687395 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.268257986 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.768918115 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.383685565 seconds)
  done (took 19.844463114 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.095547294 seconds)
    (2/2) benchmarking "read"...
    done (took 2.080878303 seconds)
  done (took 5.840671671 seconds)
done (took 47.298941939 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.728006243 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.728302469 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.730368784 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.727933073 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.730003208 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.727161895 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.726401864 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.72695279 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.73056954 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.728788666 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.727109354 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.728200979 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.729605362 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.729552755 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.729255729 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.726921103 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727077773 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.729396393 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.727472304 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726319509 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.727125966 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.730227205 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.72767047 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.726871057 seconds)
  done (took 43.136638342 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.729843913 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.72997044 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.728749331 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.729782529 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.726558532 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.729239059 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.730577801 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.725948325 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.729646833 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.729852271 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.725848506 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.726224596 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.729999345 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.725975835 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.728775192 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.727839473 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.729146439 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726167864 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.729980174 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.726598633 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.729930478 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726832415 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.726938641 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.729359941 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.727568244 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.729113819 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.72970612 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.728660029 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.730506117 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.728249616 seconds)
  done (took 53.514536221 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.734754497 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.737447341 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.730231177 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.73001591 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.730680973 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.73039966 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.729888707 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.731410085 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.730077032 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.730086935 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.731337702 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.730422029 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.730652544 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.731519598 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.731201644 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.731412254 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.731211043 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.730925226 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.732248489 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.73106985 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.730953018 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.731854855 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.731357395 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.730888838 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.731149488 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.731431931 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.730303889 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.731000423 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.731348748 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.732171387 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.732598155 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.731496687 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.732184677 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.732277552 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.731668072 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.731721058 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.737104507 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.738215497 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.732270202 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.733126153 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.730700964 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.731286395 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.732125206 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.731302885 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.73183908 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.732314788 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.732033977 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.73280446 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.732498781 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.733335209 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.733085144 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.733071997 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.732128535 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.733300604 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.732576702 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.732869048 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.734537225 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.732655086 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.733318976 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.733385388 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.732432809 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.732736526 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.735833071 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.73228094 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.734022846 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.734250712 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.733604192 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.734284583 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.73421119 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.733504464 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.733311855 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.735326202 seconds)
  done (took 126.391913494 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.734464725 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.732079827 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.73103218 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.731799695 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.730628669 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.734782422 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.732646257 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733156618 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731615242 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.734642411 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7336219 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.73172854 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.731316555 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.733906514 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.734782236 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.733987576 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.733744426 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.731130614 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.735565748 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.734614998 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.734213443 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.731390305 seconds)
  done (took 39.79195111 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.734681861 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.735505326 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.731640121 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.736536527 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.731809435 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.734907462 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.734243092 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.734381868 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.734510766 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.732346033 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732172922 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.735023983 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.73216077 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732452986 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.73250244 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.733099886 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.735135345 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.732950296 seconds)
  done (took 32.871858266 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.732753248 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.733747659 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.737153194 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.733048423 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.733081351 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.736657001 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.732895917 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.735668526 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.735900671 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.733511946 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.736049888 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736830671 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.736147892 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734525126 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736120106 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.733462456 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.738284898 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734205652 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736674311 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.735893491 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.73425609 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.73658464 seconds)
  done (took 39.840413646 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.736728962 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.737342216 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.734745641 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.734136645 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.733779551 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.737318657 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.737323742 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.734466292 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.736838478 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.737456923 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.734559322 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.736660453 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.734879484 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.735674376 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.733208626 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.735409046 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.738276983 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.73541077 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.737542261 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.734916678 seconds)
  done (took 36.384579667 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.73847828 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.739367455 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.73867167 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.73769784 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.739140154 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.738573019 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.738764013 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.739167401 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.738744348 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.739136945 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.739340434 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.73830958 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.73994139 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.738838054 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.738339598 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.738581883 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.739927997 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.738906549 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.740132336 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.738579586 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.741138238 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.739646702 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.738921697 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.739359957 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.740661848 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.739437907 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.739545018 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.740352206 seconds)
  done (took 50.367196611 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740037848 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.740686759 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.736231826 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.735776105 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.737258821 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.737126144 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.73648426 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.737617627 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.739004211 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.736812469 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.739762089 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.739069527 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.739459656 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.740089208 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.739673141 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.740739157 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.739035208 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.736067911 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.738287273 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736920973 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.739880801 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739888661 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.740431498 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.737381731 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738274821 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.740254522 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737875886 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.738075519 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.740061311 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.738279626 seconds)
  done (took 53.826882935 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.758603194 seconds)
    (2/2) benchmarking "in"...
    done (took 1.759270196 seconds)
  done (took 5.188589221 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.736976833 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.739877621 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.740711551 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.736647497 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.737545131 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.74075104 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.741061522 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.738459156 seconds)
  done (took 15.582713526 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.740119301 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.741035589 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.740904189 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.740949369 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.743584112 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.741611663 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.74768581 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.742067578 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.7426596 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.742303251 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.748548684 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.748656313 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.744263778 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.740911661 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.741825903 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.743187225 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.742318226 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.742045151 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.742071211 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.74237633 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.743089866 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.744278981 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.742851629 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.73957623 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.744354719 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.750740267 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.745687797 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.743029854 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.742503382 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.745582407 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.740736159 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.740323756 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.743712018 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.742487655 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.74366803 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.743399947 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.750803879 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.742584986 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.748167661 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.742087803 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.743665876 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.740604868 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.743936353 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.744620235 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.744659591 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.742167161 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.744248484 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.739992589 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.743672836 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.74572677 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.747626479 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.743150967 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.74030785 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.746611829 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.74449033 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.749819251 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.744344126 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.744897368 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.751439696 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.753348641 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.75604117 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.751189861 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.744953858 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.745032886 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.753227664 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.766053179 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.749366514 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.742867461 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.741470415 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.745372876 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.750650183 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.7561613 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.752798283 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.747376072 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.745916118 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.745831281 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.744831621 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.744943114 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.751189298 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.748452173 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.745431246 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.745975658 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754357959 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.765261333 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.744624015 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.744874318 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.745262029 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.746575093 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.745957874 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.755311578 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.746509345 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.745257704 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.745309419 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.746563994 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.74676279 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.747172776 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.744598342 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.746471705 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.743732802 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.746033387 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.746511428 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.748964962 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.75211574 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.745708572 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.746356605 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.752550219 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.746461539 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.745676792 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.75220674 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.746270642 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.747282869 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.747040661 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.751888654 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.744587022 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.749595608 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.753797685 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.746638031 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.748358772 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.747610271 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.748494878 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.755036058 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.76968448 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.748388426 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.747487177 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.75257151 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.758201777 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.748252234 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.750347331 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.748240249 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.744781483 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.746692494 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.749074845 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.747660783 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.748534692 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.749112417 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.749130622 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.747132117 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.747882533 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.748430594 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.74841771 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.748515212 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.747832734 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.748527456 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.749687767 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.74810569 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.749172162 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.752848583 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.747846893 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.749464553 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.750428575 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.745753968 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.748483092 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.749802005 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.749849891 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.749047883 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.749013828 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.747737776 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.749013662 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.749714631 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.75003226 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.749403044 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.749078198 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.752275802 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.749297316 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.753402048 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.748353632 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.746679957 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.749188042 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.749555729 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.749111213 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.75006499 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.748027815 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.751749108 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.756498272 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.750105628 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.749782571 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.752118317 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.749109305 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.750671258 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.751841787 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.752491422 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.755998915 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.751448574 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.755902859 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.750713577 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.750398126 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.750656006 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.751378362 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.749449896 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.750879372 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.752739061 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.758096044 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.762209053 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.758758591 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.75143311 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.753381828 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.751692558 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.755601024 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.753863382 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.752250171 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.75089954 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.750795835 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.749509699 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.751979981 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.752989134 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.751647184 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.750283712 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.751181634 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.751107281 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.751904086 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.752812361 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.752370822 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.751633957 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.749590217 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.752549598 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.752301079 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.751626619 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.748676999 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.750958245 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.751822118 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.753420876 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.75396565 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.757880746 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.749103741 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.752255513 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.752257513 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.752701993 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.752671649 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.75312602 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.753462508 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.751901331 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.757963862 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.752877887 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.753263385 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.758769241 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.752111704 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.75263855 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.756360335 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.753992719 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.751184489 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.755723382 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.76047842 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.753067453 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.754446152 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.754615467 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.753049993 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.753589876 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.75874023 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.751607789 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.753424216 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.753606484 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.755381128 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.751071297 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.75459922 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.754176053 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.754213991 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.756213944 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.753739081 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.754354511 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.755968577 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.754914742 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.754972501 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.754953228 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.756390678 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.761045003 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.75878475 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.754142447 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.757053246 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.754407166 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.75804783 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.754022587 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.759174631 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.759371974 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.770055947 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.764551194 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.763570676 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.758882811 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.758095948 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.763633759 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.757456643 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.759724488 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.755352609 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.755898983 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.754060419 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.754204413 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.751660056 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.756049731 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.75615536 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.757678994 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.756362094 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.759404876 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.755544111 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.755437192 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.756312087 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.756357597 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.756735083 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.755193445 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.75580014 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.758001068 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.759085725 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.756649111 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.756645885 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.761245182 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.757208721 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.7572874 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.755408293 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.755943004 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.755818999 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.757353796 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.757291511 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.759217774 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.763507722 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.76055524 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.764824035 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.757299266 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.76452496 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.757762879 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.759773455 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.765065901 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.755554597 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.75561445 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.756954697 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.757901475 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.763712729 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.758298952 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.757614421 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.762018143 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.757977199 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.757944826 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.757342981 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.757564892 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.758169109 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.758790308 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765280016 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.758493408 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.76077352 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.759386325 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.755254224 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.759411292 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.758145295 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.757427199 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.762434191 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.757335796 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.759460497 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.757741718 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.759448151 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.758655356 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.760095697 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.757643391 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.756451476 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.758204563 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.765126226 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.759879306 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.763195921 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.759298419 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.766995965 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.759408654 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.766306223 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.761915126 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.759013151 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.760939537 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.76094346 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.75918494 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.759208667 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.760132546 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.760179031 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.760582573 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.763524073 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.761576791 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.762467053 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.761252262 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.760160827 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.759543737 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.767705133 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.78119136 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.761815136 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.763479391 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.756988887 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.76099843 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.764300109 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.760533054 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.758953595 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.762296244 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.770107456 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.767711675 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.760583375 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.762439579 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.760555859 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.76125038 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.761224453 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.760740757 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.760864645 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.761482246 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.761089177 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.760949157 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.764615138 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.761651095 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.762184496 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.762313211 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.761892685 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.770411647 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.761567234 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.764043844 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.763611302 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.761261935 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.761797046 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.760885391 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.761562581 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.762129116 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.762950472 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.762393793 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.76830094 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.768530655 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.764420637 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.76232684 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.762223868 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.762699064 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.762700216 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.762331125 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.764421038 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.763616738 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.763484437 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.763504786 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.762393998 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.761120672 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.762138353 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.764126974 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.761765503 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.764774143 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.767655946 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.763573427 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.761292164 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.76286622 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.7633938 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.761470235 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.762730925 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.770139921 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.765105225 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.772419711 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.76973959 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.766326657 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.762026103 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.766338132 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.770555723 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.761114815 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.764486057 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.763353799 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.764366115 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.764607128 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.766458942 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.764264775 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.769725964 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.763219973 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.76392932 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.770949827 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.76490161 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.764348857 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.764667838 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.766804846 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.762970224 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.762789048 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.764836107 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.763037847 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.770219304 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.764832558 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.764558631 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.764571753 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.763012423 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.765369228 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.768192731 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.765449131 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.766583307 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.762308331 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.765598042 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.765945456 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.76554721 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.762935936 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.766051184 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.764214576 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.768274595 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.771090484 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.763102226 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.76724152 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.766501901 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.764966172 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.766423319 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.76669704 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.763234939 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.764103399 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.765144118 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.766847102 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.765048565 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.767678567 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.764769124 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.766878743 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.766744702 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.76574496 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.768941531 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.7746294 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.773604785 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.763835553 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.76537999 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.766654958 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.768467853 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.766882587 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.767291555 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.765712645 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.768273275 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.767127336 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.766991665 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.766258737 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.769496118 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.781362406 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.767705087 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.767279243 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.767103205 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.770778702 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.768269288 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.764346387 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.767139939 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.768974805 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.769296902 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.773512508 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.767720056 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.774297142 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.768515228 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.768918951 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.771900539 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.771696113 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.775052923 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.771226324 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.768942743 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.768637824 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.772887241 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.784580185 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.768169012 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.777080856 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.794049402 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.769093203 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.771333685 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.769311175 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.768770031 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.769178984 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.769660702 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.769089346 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.769379176 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.768750574 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.769592806 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.769307741 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.773204077 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.77003563 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.769559466 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.768912768 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.767954042 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.769114123 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.766266722 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.769911679 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.769133381 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.769418647 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.769646508 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.769262496 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.76881471 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.780725113 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.777380814 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.770055654 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.770025236 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.766827065 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.772176664 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.772475748 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.77853045 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.776832124 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.770347741 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.769964912 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.7715115 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.770999745 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.767044185 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.77075921 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.76899135 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.769245092 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.768458022 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.782164039 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.778318714 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.775309114 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.769929944 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.771153658 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.771083108 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.771724428 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.770789263 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.770062418 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.772324189 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.772032414 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.774535727 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.769923642 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.770947395 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.773520059 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.778097868 seconds)
  done (took 1049.345717288 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.769353949 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.768354028 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.768640379 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.768334171 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.768637074 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.768350727 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.769767709 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.769989023 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.768905956 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.768640282 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.76992658 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.770086535 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.769238033 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.76926438 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.769747243 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.769247284 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771425443 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.768166891 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.769138121 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.768115314 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.770053839 seconds)
  done (took 38.855024752 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.773034475 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.769601404 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.769761947 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.772655247 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769727803 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.773331315 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.770472216 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772645783 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.773569444 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769130665 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.772577593 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773843953 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.768981224 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.769298883 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769907128 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772407544 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.774368978 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770250207 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.773612152 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.770594208 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.773654969 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.770793025 seconds)
  done (took 40.676888821 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.774310761 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.773183781 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.773406972 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.771237116 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.774920427 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.770995043 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.774078683 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.773713243 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.773560054 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.774361487 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.772817552 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.77410693 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.780499627 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.778248365 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.774912765 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.773671401 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.919867486 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.774256198 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.774943727 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.773988007 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.771234728 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.77908186 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.77315007 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.772119029 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.772616563 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.774335372 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.775089406 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.775713396 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.775389173 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.775153446 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.780210724 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.774968939 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.774110116 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.777532587 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.774257587 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.775721878 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.779318148 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.775928767 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.772709091 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.776497443 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.784169231 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.792768854 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.775559082 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.781632823 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.775973301 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.775305975 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.778319099 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.783611561 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.773740492 seconds)
  done (took 88.862993413 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.776589053 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.776331148 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.773457376 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.776114778 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.776811987 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.776696353 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.77736137 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.777369909 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.774262011 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.77402787 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.77726316 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.774230006 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.773609379 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.776671869 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.775054854 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.773158187 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.774257485 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.77406511 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.773101814 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.773132168 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.773808082 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.77648535 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.777088128 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.77419603 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.776985171 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.773397546 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.773616304 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.777051941 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.774080646 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.774304203 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.777044778 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.777271257 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.777352754 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.775683412 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.774248559 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.777756838 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.777727125 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.774727869 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.776783152 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.775519241 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.779439341 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.777575665 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.777398126 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.777882519 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.776111731 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.776143809 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.775842243 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.775937041 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.77536402 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.778302686 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.779446526 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.775768416 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.779495242 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.776108535 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.777994094 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.778853836 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.776520386 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.777130171 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.77822374 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.775785611 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.775338734 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.779275932 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.775570583 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.778921004 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.779246196 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.777225674 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.77674662 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.77927156 seconds)
  done (took 122.493337646 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.781072361 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.779835519 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780456448 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.779664873 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.77940857 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.780988009 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.780837502 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.77964771 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.780248182 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.780021269 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.780125135 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.779917279 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.779822771 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.778742233 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.780311918 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.781039927 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.779738486 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.779862922 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.781522195 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781392616 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.780447539 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.78009161 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.780350464 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.781742256 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.781323238 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.781523707 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.780530226 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.780422349 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780731544 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.780603462 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.781063787 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.780733075 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.780951929 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.78076924 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.781446337 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.781110011 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.781080329 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781475859 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.78222291 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.781961277 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.78190586 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.781308183 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.781656977 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.781560236 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.78092382 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.781462342 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.781255548 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.782613861 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.7824035 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.782856034 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.783144651 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.782002883 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782220712 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.782600522 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.782669612 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.783448166 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.783918187 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.783146111 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782185679 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.783611468 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782935721 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.784170441 seconds)
  done (took 112.150479026 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78142771 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.782995346 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.782152027 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.781412591 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.782589345 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.780394654 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.782245384 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.782990651 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.783068725 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.783678747 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782454656 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781673776 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781410516 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78286561 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.780896565 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781200384 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.780051488 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.780249482 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.783085531 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.780663743 seconds)
  done (took 37.349214569 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.780309622 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.78390705 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.779641041 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.781175883 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.783597372 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.780806206 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.782880996 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782858416 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780112832 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7839777 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.78429694 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.783750094 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781034517 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.780738202 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.783944405 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.783005838 seconds)
  done (took 30.231008419 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.781568734 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.784372045 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.784118016 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.784010195 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.782636095 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.782155759 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.783980118 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.781456011 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.782205566 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.78430898 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.785104705 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.783833267 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.783741501 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.785748226 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.781934039 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.784258607 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.782924736 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.781185196 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.784450384 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.785272849 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.782355849 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.783018551 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.78537389 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.784721383 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.781444095 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.782943475 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.781921201 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.782957221 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.782945682 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.784895513 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.782910211 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.783231793 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.78320128 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.783160639 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.786041534 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.78271132 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.785360854 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.785844263 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.785777763 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.7863513 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.786855096 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.784263587 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.785747613 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.786004169 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.783011957 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.786364903 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.784192858 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.783857388 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.783699907 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.785403149 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.787861334 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.78572337 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.786477589 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.786405992 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.786570945 seconds)
  done (took 99.844268197 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787985939 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.78727866 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.783692803 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.786671208 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.787492998 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.784637588 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.787928039 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.785170625 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784949619 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.787741491 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.786756367 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.788585435 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785626074 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.78838062 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.786710672 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.788474088 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.785967779 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.785436031 seconds)
  done (took 33.876011615 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.784749071 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.785207441 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.788469989 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.784946436 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.785394944 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.788932172 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.78564071 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.787814998 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788679426 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.785788242 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78501621 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.788192734 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789337632 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.78873218 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.786151295 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786442949 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.788644708 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.78774427 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.785678333 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.785732658 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.789163485 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.788965578 seconds)
  done (took 41.033592256 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.787536352 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.789088737 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.804788837 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.807670503 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.809402881 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.818360398 seconds)
  done (took 12.534807879 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786685664 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790032703 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.787021896 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789953946 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788354032 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787569189 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787827448 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787204139 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789796391 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787419077 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788021977 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791456274 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791272859 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787464657 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791597164 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790213909 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787323407 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787918572 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787037164 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79034682 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787921673 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790121806 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788448597 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78773399 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787713396 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7882238 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789823915 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788165995 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788327389 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790890353 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790757769 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788064408 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790912856 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786946005 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791202735 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791932596 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78794124 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791691916 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790883809 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788470345 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.790162801 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792266859 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790756037 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787583701 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791567899 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790008307 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788660431 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788134641 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788873271 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793041912 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792577679 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788730008 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791537854 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791497229 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790846214 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792480656 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79021937 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789896646 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792865704 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78962013 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78967145 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792432771 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78963552 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790409609 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793476397 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790355102 seconds)
  done (took 119.838379821 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789810796 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.789192896 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789814247 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790274014 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790377698 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790700689 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791204806 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790867826 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7908023 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790929203 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793205452 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791067613 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791193529 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792112471 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791766292 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790477461 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791668296 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791693244 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790643775 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794110505 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790419652 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791517187 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790814185 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790624747 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790543404 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793541132 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791479957 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790308454 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791724877 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791231226 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791831366 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790966786 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791701686 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.790988069 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791440796 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791476643 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79247743 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789775475 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791564545 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795276883 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79204026 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793261808 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79207084 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791884214 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792600161 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7920184 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792743028 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791989267 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791456278 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791869674 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793301686 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792328262 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794085695 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792365092 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793137669 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792955814 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793896226 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793285588 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792764176 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796064206 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792597708 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792246425 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796473185 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794116197 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792946725 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793446654 seconds)
  done (took 119.992687238 seconds)
done (took 2445.64116892 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.829528403 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.848518609 seconds)
  done (took 15.40295107 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.959618762 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.912582154 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.796216643 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.817907377 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.796630909 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.808785781 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.80547545 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.796526028 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.79599284 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.796259299 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.797042611 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.98300192 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.813651948 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.797064961 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.796801209 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.888815601 seconds)
  done (took 51.094736784 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.800199372 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.801296548 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.813015617 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.802940081 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.800625237 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.8123533 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.835333292 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.803130398 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.835725104 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.813044246 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.867813007 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.809668267 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.799655119 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.849655341 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.813953853 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.81530869 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.895184228 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.873260143 seconds)
  done (took 34.571063993 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.876283163 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.800055898 seconds)
  done (took 10.411124054 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.824792036 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.819002151 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.815928514 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.813091465 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.792224525 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.846906839 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.794719128 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.800349542 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.800243083 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.815972811 seconds)
  done (took 69.855700997 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.807155746 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.801847742 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.801646094 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.799258602 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.794156625 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.798381308 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.800824867 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.794607693 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.475847224 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.835798187 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.80714663 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.807814852 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.800709701 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.803343568 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.799906524 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.825772031 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.941356312 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.799780149 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.799623751 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.806915829 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.802248107 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.867563702 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.814555337 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.803492286 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.830937663 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.478062579 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.80903096 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.807235308 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.913158513 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.799849412 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.801621827 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.80316755 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.804204849 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.19387164 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.085698057 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.801220442 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.809609417 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.810504033 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.800915995 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.935968047 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.802873619 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.807909217 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.71376507 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.067653326 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.91251014 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.846253864 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.160625315 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.806685558 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.804592816 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.833133632 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.805464816 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.804199859 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.816525941 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.311522794 seconds)
  done (took 128.902832729 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.799752062 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.063335432 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.95482926 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.797701831 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086818956 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00543586 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.799624249 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.846644382 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.79884628 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.029059309 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.962919343 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.907829981 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.799624322 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.800145002 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.800333158 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.797246334 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.959564879 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.872468516 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.800925774 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.79855688 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830542453 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.044077599 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.926135165 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.799844281 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.820988555 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.01253918 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.924323529 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.906489281 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.082354713 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.798824433 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.86422902 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.801414314 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.799274937 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.797794862 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.956848065 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.895427739 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.888190115 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.800581178 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.797824841 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.799080231 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.476579845 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.996626943 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.896625498 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.943193904 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.047475976 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.004895134 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.591831778 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.799294586 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.537900493 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.961804669 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.033490513 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.031366363 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.92472137 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.80264536 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.055317066 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.799282489 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.798380836 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.034703912 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.029734861 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.901770514 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.800842755 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.799567571 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.79859787 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.046534787 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.802095799 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.895667993 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.803300985 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.800747585 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.897155961 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.906092903 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.032298308 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013630082 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.834839424 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.112440396 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.286269679 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.051135794 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.87056548 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034340817 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.804090758 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.80068842 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.887328986 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.648269506 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.962074366 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.052458393 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.057524348 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.840008778 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.532085642 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.800933531 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.03035969 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.025254266 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.101888784 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.04468567 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.953498177 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.01345858 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.801045136 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.800759624 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.053859467 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.939751483 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.804682787 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.163562544 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.038370101 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.364903058 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.83353078 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.113828391 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.937902152 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.805811942 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.449286844 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.80287621 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.030146459 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.845725404 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.80355027 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.801916142 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.025683732 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.880425713 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.80367833 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.428126137 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.866490836 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.805424322 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.03958326 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.804758843 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070199263 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.805820821 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.042229552 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.045435374 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.838718382 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.975364698 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.04637102 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.807066308 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.066885778 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.049462446 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.921893847 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.025811246 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.428982442 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.802824746 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.094782358 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.80566258 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.803892122 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.976749258 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.805083121 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.974385722 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.806635957 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.138948714 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830108076 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.959007632 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.804908463 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.062052796 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.841822535 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.857845648 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.80822623 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.934083734 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.807084108 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.683273066 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.959272583 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.805685656 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.804382168 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.360414611 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.805062219 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.963071707 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.03915462 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830185743 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.88088471 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.480531008 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.805077819 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.892507869 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.832061951 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.150209432 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.806478688 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.962259548 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.807222268 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.345556602 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.805346343 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.050070369 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.988952925 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.809463474 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.80655698 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.72572509 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.805764648 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.806545728 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.968439629 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.146502916 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.806980438 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.01008013 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.80908047 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.937884443 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.810825398 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.889250232 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.159959111 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.806637747 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.807086799 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.806696232 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.805962402 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.806273611 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.014786068 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.83805196 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.344158045 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.944882047 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078285538 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.127406547 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.057956111 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.854037409 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.807376295 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.056709994 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.809850292 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.872853208 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.810153062 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.831104537 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042795669 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.809316402 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.018941661 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.089514079 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.738058304 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.858281241 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.810015469 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.808554438 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.769122345 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.959712376 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.90087242 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.809309603 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.808406881 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.926146374 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.934449589 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.024681183 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.810124771 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.016868992 seconds)
  done (took 888.431828979 seconds)
done (took 1200.394723487 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.809255594 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.809779912 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.796430625 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.808079797 seconds)
  done (took 28.967760232 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.814904007 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.812554734 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.813171005 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.811296396 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.814795977 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.812768606 seconds)
  done (took 12.621425061 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.88391816 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.80584647 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.807765553 seconds)
  done (took 21.239766429 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.880443036 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.21586888 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.92499312 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.248819509 seconds)
  done (took 10.012112219 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.814842063 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.814035217 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.814391533 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.814961344 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.81621978 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.816601615 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.814814662 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.816179082 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.817865465 seconds)
  done (took 18.083492315 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.15817907 seconds)
done (took 96.827395828 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.11554269 seconds)
    (2/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.773992852 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.983530497 seconds)
    (4/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.807319391 seconds)
    (5/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.163182094 seconds)
    (6/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.636219299 seconds)
    (7/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.739751754 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.797733258 seconds)
    (9/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.895753802 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.942885806 seconds)
    (11/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.991064021 seconds)
    (12/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.895869842 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.192613252 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.852877306 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.794018689 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.878421997 seconds)
    (17/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.175408613 seconds)
    (18/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.396980235 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.112343589 seconds)
    (20/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.940461966 seconds)
    (21/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.836199829 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.503764296 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.822243158 seconds)
    (24/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.313625022 seconds)
    (25/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.705850843 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.831217863 seconds)
    (27/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.83427942 seconds)
    (28/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.834351128 seconds)
    (29/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.268376332 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.895604619 seconds)
    (31/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.809247444 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.864066385 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 3.434036686 seconds)
    (34/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.923610132 seconds)
    (35/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.941326647 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.797331117 seconds)
    (37/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.114525171 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.435735167 seconds)
    (39/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.925523278 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.100026832 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.799320701 seconds)
    (42/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.381782687 seconds)
    (43/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.818277007 seconds)
    (44/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.943151737 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.847914472 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.741844204 seconds)
    (47/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.893656484 seconds)
    (48/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.096133465 seconds)
    (49/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.813530308 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.973631474 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.060103137 seconds)
    (52/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.871028364 seconds)
    (53/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.238678904 seconds)
    (54/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.747013709 seconds)
    (55/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.066541207 seconds)
    (56/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.977245947 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.285057177 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.142038041 seconds)
    (59/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.899400852 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.868938232 seconds)
    (61/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.004136552 seconds)
    (62/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.362276924 seconds)
    (63/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.920089684 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.952523595 seconds)
    (65/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.328442082 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.844623719 seconds)
    (67/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.035567216 seconds)
    (68/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.908753612 seconds)
    (69/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.366621103 seconds)
    (70/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.812283251 seconds)
    (71/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.040199442 seconds)
    (72/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.906395336 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.151941707 seconds)
    (74/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.501124742 seconds)
    (75/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.329680727 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.068871887 seconds)
    (77/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.899315925 seconds)
    (78/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.821992478 seconds)
    (79/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.017360458 seconds)
    (80/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.801507823 seconds)
    (81/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 3.233571832 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.03119545 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.05640243 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.813715681 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.47095586 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.814310716 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.150740617 seconds)
    (88/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.909136992 seconds)
    (89/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.070238939 seconds)
    (90/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.232140257 seconds)
    (91/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.747883226 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.973965742 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.038550436 seconds)
    (94/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.963957991 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.917784726 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.812231928 seconds)
    (97/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.824579108 seconds)
    (98/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.812396664 seconds)
    (99/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.479297609 seconds)
    (100/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.409875892 seconds)
    (101/309) benchmarking ("sort", BigInt, false)...
    done (took 6.814253572 seconds)
    (102/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.916495204 seconds)
    (103/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.842379048 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.020478902 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.944745122 seconds)
    (106/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.012089652 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.815036801 seconds)
    (108/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 3.37949104 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.81609611 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.958086554 seconds)
    (111/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.91354637 seconds)
    (112/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.951316683 seconds)
    (113/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.141694515 seconds)
    (114/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.825411737 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.900342766 seconds)
    (116/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.84455588 seconds)
    (117/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.891279748 seconds)
    (118/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.017409802 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.985829064 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.9247859 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.819246492 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 2.263883592 seconds)
    (123/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.985078127 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.463490575 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.841650234 seconds)
    (126/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.374966792 seconds)
    (127/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.959237146 seconds)
    (128/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.5762989 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.193405035 seconds)
    (130/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.882542229 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.188651792 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.089354662 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.040110466 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.068658775 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.717974075 seconds)
    (136/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.821545953 seconds)
    (137/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.221087592 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.934515261 seconds)
    (139/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.841971147 seconds)
    (140/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.824898976 seconds)
    (141/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.370016661 seconds)
    (142/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.978839156 seconds)
    (143/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.421275885 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.009859528 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.05477223 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.461797891 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.84317698 seconds)
    (148/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.816346876 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.8595894 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.523986216 seconds)
    (151/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.434376895 seconds)
    (152/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.824443861 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.603827093 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.0256084 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.10611182 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.838892007 seconds)
    (157/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.833605132 seconds)
    (158/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.106311355 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.147871351 seconds)
    (160/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.972864243 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.938051353 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.882815197 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.116070981 seconds)
    (164/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.952275296 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.822392934 seconds)
    (166/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.805737906 seconds)
    (167/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 8.340127399 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 3.611908464 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.61632023 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.827069187 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.821181908 seconds)
    (172/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.822739327 seconds)
    (173/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.964445348 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.511158463 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.811063958 seconds)
    (176/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.827626373 seconds)
    (177/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.094181093 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.898952304 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.846474975 seconds)
    (180/309) benchmarking ("sort", Int8, false)...
    done (took 4.827624377 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.144557823 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.061106909 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.030660767 seconds)
    (184/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.2227044 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.107559499 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.856086364 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.461785374 seconds)
    (188/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.163781139 seconds)
    (189/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.426263538 seconds)
    (190/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.222929411 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.034052499 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.826713829 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.897513197 seconds)
    (194/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.809733709 seconds)
    (195/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.09644879 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.117721538 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.884314341 seconds)
    (198/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.990648355 seconds)
    (199/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.132696025 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.895963392 seconds)
    (201/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.821962958 seconds)
    (202/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.047238676 seconds)
    (203/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.986405492 seconds)
    (204/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.449662078 seconds)
    (205/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.908996944 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.615756303 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.027847492 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.207360468 seconds)
    (209/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.824302415 seconds)
    (210/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.988224456 seconds)
    (211/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.956061802 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.893715526 seconds)
    (213/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.294031696 seconds)
    (214/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.118777675 seconds)
    (215/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.809334975 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.757901518 seconds)
    (217/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.217616916 seconds)
    (218/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.845565894 seconds)
    (219/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.946475497 seconds)
    (220/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.168089665 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.653998009 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.850939578 seconds)
    (223/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.13454888 seconds)
    (224/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.018342205 seconds)
    (225/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.949203804 seconds)
    (226/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.160271323 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.867890338 seconds)
    (228/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.930691415 seconds)
    (229/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.807611747 seconds)
    (230/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.353118261 seconds)
    (231/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.936463762 seconds)
    (232/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.992541158 seconds)
    (233/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.817431419 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.748831948 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.883926329 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.889855111 seconds)
    (237/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.887673303 seconds)
    (238/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.841949101 seconds)
    (239/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.879689172 seconds)
    (240/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.930452236 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.18801017 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.810125059 seconds)
    (243/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 3.603588093 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.852910484 seconds)
    (245/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.210982948 seconds)
    (246/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.301701097 seconds)
    (247/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.837843505 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.812506359 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.95038995 seconds)
    (250/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.786622172 seconds)
    (251/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.525678577 seconds)
    (252/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.96918717 seconds)
    (253/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.009883844 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.75163875 seconds)
    (255/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.814604404 seconds)
    (256/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.807703113 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.851535324 seconds)
    (258/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.538142338 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.920683125 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.195461166 seconds)
    (261/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.001786324 seconds)
    (262/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.916445859 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.924732866 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.84408016 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.069418538 seconds)
    (266/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.810928421 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 3.301468556 seconds)
    (268/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.914278721 seconds)
    (269/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.934954429 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.217477857 seconds)
    (271/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.926999477 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.049843733 seconds)
    (273/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.123122497 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.621285601 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.216674299 seconds)
    (276/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.959590102 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.924934094 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.898731398 seconds)
    (279/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.039319864 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.004359811 seconds)
    (281/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.931927427 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.91135136 seconds)
    (283/309) benchmarking ("sort", Float64, false)...
    done (took 5.595303839 seconds)
    (284/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.188460292 seconds)
    (285/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.956456642 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.908909217 seconds)
    (287/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.192639667 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.95064997 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.827502397 seconds)
    (290/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.894246795 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.580105174 seconds)
    (292/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.849592743 seconds)
    (293/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.9570758 seconds)
    (294/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.023094336 seconds)
    (295/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.132140565 seconds)
    (296/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.276718737 seconds)
    (297/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.911507096 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.895552584 seconds)
    (299/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.909172818 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.756775234 seconds)
    (301/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.529837261 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.85687793 seconds)
    (303/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.119920814 seconds)
    (304/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.038114103 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.190172223 seconds)
    (306/309) benchmarking ("sort", Float32, false)...
    done (took 5.594415629 seconds)
    (307/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.29987742 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.204776094 seconds)
    (309/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.853362308 seconds)
  done (took 1003.528326792 seconds)
done (took 1005.333109321 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.860353902 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.853551533 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.83709429 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.859565538 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.949604401 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.870663743 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.848837376 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.840457462 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.88487481 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.886745125 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.836278957 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.869157238 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.839742045 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.839505001 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.839043824 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.851989285 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.144012653 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.861710801 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.855008776 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.848136122 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.854980928 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.837469466 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.888612595 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.868999094 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.842651706 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.841278526 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.842081068 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.859958029 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.951160592 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.842509402 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.841655074 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.850303667 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.144839679 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.860624996 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.833770361 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.859964459 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.851293453 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.848009592 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.845415654 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.871134059 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.282704774 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.844733381 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.842541608 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.841366018 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.840644992 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.843569734 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.841833603 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.847898799 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.853043698 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.854789812 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.280423447 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.860862662 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.844089902 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.84149006 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.85236342 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.840550187 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.8477322 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.857375877 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.861591662 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.858091149 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.136815047 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.867209941 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.84349724 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.858356178 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.849857379 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.317040764 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.842602799 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.845221885 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.283307071 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.851176435 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.316549128 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.855522642 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.842871399 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.856420496 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.874226097 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.147563194 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.859765172 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.842125123 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.849507486 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.841684883 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.85139426 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.855556606 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.847453117 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.844216873 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.857171002 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.87397862 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.852338183 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.844778447 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.851860211 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.862626215 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.851143441 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.853773328 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.845500252 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.838409368 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.851907759 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.849845582 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.847056998 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.846000159 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.848456356 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.853876178 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.28271876 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.864626694 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.840985061 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.841017999 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.843590828 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.85713242 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.283581508 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.849912748 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.865160284 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.891636422 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.847348393 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.140572122 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.871377066 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.860775081 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.853409002 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.84909377 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.839437642 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.140816064 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.305733943 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.864681022 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.84677317 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.8442233 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.861113893 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.847580044 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.840768786 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.151117863 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.86851608 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.858547896 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.966176199 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.85392809 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.876083595 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.843657838 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.848507399 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.878139525 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.860975455 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.876259811 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.850191442 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.860385239 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.861323175 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.841802934 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.856632966 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.855367253 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.846977897 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.851825252 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.840342547 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.87797898 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.859135206 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.857732138 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.867288731 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.967869665 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.843307449 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.141219989 seconds)
done (took 289.724581015 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.913667939 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.835158845 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.942538973 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.843242465 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.92496241 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.930320118 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.840892127 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.8409202 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.840993333 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.216159513 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.841024486 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.841208937 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.84256339 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.841855387 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.927390981 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.844015846 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.841525793 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.180097985 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.844975673 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.917400516 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.837854747 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.842471048 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.843963152 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.217591381 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.836855984 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.840485729 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.916654318 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.843986406 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.182672176 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.840339959 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.845312758 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.182825311 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.937492857 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.862767601 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.855055992 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.852284681 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.926942878 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.84930185 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.926989353 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.926599687 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.944615452 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.884991008 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.844052645 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.844979993 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.847969815 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.847150754 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.842602083 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.873077935 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.837093654 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.853159428 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.181775328 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.856051492 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.843189824 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.843449771 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.842713972 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.877623543 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.842918124 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.847559478 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.939467522 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.847782378 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.909254839 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.219215081 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.21828121 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.845253624 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.839163531 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.844076876 seconds)
  done (took 182.609422607 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.913665944 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.919196176 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.913932815 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.849842417 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.895756411 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.913065578 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.848836045 seconds)
  done (took 15.028174602 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.851323717 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.846159279 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.897250857 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.897565955 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.846850775 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.996666417 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.848116072 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.85898542 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.844556605 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.89981084 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.848185184 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.847050836 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.853595403 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.847182286 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.894565506 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.858831784 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.962733414 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.848757443 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.848629666 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.999078008 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.845429178 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.855160823 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.901730749 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.858797685 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.847997606 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.854609967 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.431672124 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.848633948 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.844522677 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.847534655 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.845947625 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.890516333 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.848703679 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.84702199 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.851869965 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.963811382 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.84836825 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.846224088 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.849138815 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.841884521 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.847347267 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.848885251 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.849305241 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.8465801 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.849286238 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.872083638 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.849355721 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.851055101 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.849237006 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.848944591 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.900468905 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.849692625 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.846414607 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.846899437 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.905173773 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.85667191 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.851186337 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.847294272 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.850841431 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.846739489 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.000819137 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.897958036 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.850039788 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.898316296 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.849681307 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.850354719 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.849573281 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.849602868 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.944327568 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.850307298 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.897976615 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.848346952 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.007848684 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.874653281 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.851982375 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.852774484 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.853100981 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.850932973 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.84414887 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.857311198 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.847941705 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.851596688 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.856311043 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.848297832 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.847935613 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.962201918 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.958018728 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.848169415 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.864057295 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.858683243 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.848053387 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.902861198 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.850897705 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.849853983 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.90525811 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.967247284 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.906468279 seconds)
  done (took 203.809592883 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.856787584 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.860060528 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.853245472 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.867755813 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.851980253 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.851487857 seconds)
  done (took 12.92016019 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.853739176 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.851769953 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.852908564 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.852749951 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.85219689 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.853889622 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.852365929 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.8534844 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.857075833 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.853412363 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.85267826 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.853643888 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.852550047 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.85280272 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.853811049 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.852306735 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.852958932 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.849663471 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.85234179 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.853089285 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.00192727 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.853136371 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.852428875 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.853131958 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.856891341 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.852628428 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.860320456 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.852421026 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.852244696 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.860637857 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.856192833 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.854965813 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.853918229 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.858156838 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.857452034 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.854138499 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.856564838 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.854619338 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.851499811 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.854294949 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.853941645 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.853265344 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.852552871 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.85513717 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.854872185 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.858409495 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.857913225 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.862030937 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.8558622 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.85448077 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.855112628 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.853690312 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.854989901 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.854798531 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.856465786 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.859246559 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.858837546 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.855154877 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.854978573 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.855462692 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.856081555 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.856393666 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.856151831 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.85920327 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.861721751 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.855805805 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.854881187 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.858450065 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.854652441 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.853900447 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.856431873 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.852842159 seconds)
  done (took 136.482909573 seconds)
done (took 552.633259594 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.961739662 seconds)
  done (took 8.743336156 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.039980051 seconds)
  done (took 8.907660581 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.173512028 seconds)
  done (took 9.956320079 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.849991197 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.87385936 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.853211522 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.851296992 seconds)
  done (took 29.219225384 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.944998036 seconds)
  done (took 8.727737388 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.863321845 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.848642408 seconds)
  done (took 15.530772798 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.855174597 seconds)
  done (took 8.639274843 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.023673827 seconds)
  done (took 8.809209554 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.863853678 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.888957206 seconds)
  done (took 15.549506293 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.834901007 seconds)
  done (took 8.617605406 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.531727875 seconds)
  done (took 11.321014737 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.860224008 seconds)
  done (took 8.657381482 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.916281495 seconds)
  done (took 8.700251507 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.01073177 seconds)
  done (took 9.79335565 seconds)
done (took 162.954046655 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.852456099 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.848758269 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.848477276 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.849547036 seconds)
  done (took 29.182530531 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.906943537 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.906418052 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.905192339 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.900951671 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.895305579 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.908191573 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.881518349 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.882278302 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.901638073 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.89365758 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.892232513 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.892981638 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.890660667 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.881711111 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.892433212 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.892695093 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.900667357 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.891997786 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.883421856 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.893581436 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.85775131 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.901346826 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.896873399 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.858977742 seconds)
  done (took 47.193250139 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.05848264 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.929142162 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.010809459 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.909582255 seconds)
  done (took 9.692553596 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.909220405 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.910923847 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.922455578 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.961779201 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.985681569 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.920889656 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.885557749 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.879868852 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.866627652 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.912404105 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.986910728 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.904896525 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.006539955 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.858382297 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.046548485 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.858202669 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.858397295 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.911224934 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.961998974 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.97556718 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.85884864 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.911563732 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.915298111 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.906941458 seconds)
  done (took 47.902449123 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.857118236 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.86570408 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.863449397 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.858957537 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.858104759 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.859229062 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.864879758 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.859174407 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.881027665 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.859553336 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.857385253 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.857470682 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.856790151 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.859314786 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.858673443 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.870797206 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.872583606 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.85943857 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.861592718 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.86560276 seconds)
  done (took 39.032887241 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.852377997 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.706946523 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.205144468 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.108532869 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.852706486 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.856355918 seconds)
  done (took 31.368513412 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.872451396 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.864121344 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.860170441 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.916163208 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.994040917 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.86440225 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.858948416 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.87161018 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.902666786 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.921989836 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.877785856 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.885635768 seconds)
  done (took 24.477392917 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.854673082 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.85422971 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.862316458 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.871855718 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.870857629 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.865664029 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.866802355 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.853454619 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.872657062 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.877889376 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.867098271 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.871947824 seconds)
  done (took 44.179600971 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944107514 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.744299356 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.926546999 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.576249679 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.328585258 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.068163467 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.370365384 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.195915333 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.859482235 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129808785 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.948160304 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962701998 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.111517193 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856529227 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.880288613 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.336882272 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150699937 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098591818 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88484714 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.623577131 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906450479 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.306158542 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.690881486 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.915100306 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069227565 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.989743411 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.117889203 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.815927279 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994240072 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.896084698 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867664774 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.85773272 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131593644 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238067841 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956867778 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867426619 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.548809086 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.576205608 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.842570634 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.646560329 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.665330436 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.977939554 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866358098 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85850187 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.792906649 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301778397 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232210792 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.863515036 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.569595288 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.858758135 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870134132 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946518393 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.862093306 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.674075858 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811898081 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.139283148 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.855131772 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864868187 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.431739049 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.97278761 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344901984 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.828642913 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.052251184 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.628950103 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25849926 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.008398631 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.864062397 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863647352 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794630206 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.634997647 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912447757 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439190981 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.879455998 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.509762109 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163896355 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.000156205 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.802743115 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163174349 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.590863641 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.829303816 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088947653 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.817661601 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795297588 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.720223774 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.795545545 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133837315 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898588156 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.523928262 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90155552 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.196858141 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.872518952 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878511508 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868956378 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.084098093 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.615694797 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85993027 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.703079109 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005618743 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882885456 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.198055625 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795982544 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.86467428 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117477387 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.07377627 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.039172137 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.373158827 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01614397 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910383571 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.876043256 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.718827985 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.905095758 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.140490515 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920820346 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.974900072 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920888357 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.82622093 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166920509 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950411652 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.96299157 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.956656072 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.990420774 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.19143625 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.156825855 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926987248 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.862869062 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.862773614 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.690698597 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.416010993 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.129514149 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.864643111 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295830959 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.905313905 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.863919925 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798617098 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.48730866 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.946496324 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.835055149 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.088376872 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.759203077 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171233513 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797397293 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009677602 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.976345678 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.086154295 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.511268547 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.93478373 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120732831 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294661002 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.060275913 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908319876 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882383318 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957713297 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887264594 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.217303104 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.151453758 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.86936379 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.868865689 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.724796933 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.860810487 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866387005 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.86960592 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.660939397 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15476349 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.892080449 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.868633613 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.753184919 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.878953713 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931777384 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870707893 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.876377772 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.407765218 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.614431875 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.875719892 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.489112675 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092692508 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87608206 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.619937464 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97698516 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.947221386 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143115272 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926903515 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.802058337 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.577288305 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.560450652 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866581158 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.802075556 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.867148862 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876170205 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877464659 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.245470134 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.150729499 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911491108 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.753100613 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.908421934 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877945945 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.871442692 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865988064 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.410378083 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.993270315 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3686779 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.908652453 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004729991 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.880791542 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.802422645 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.87038171 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.87288157 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.867966514 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.832331022 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921032493 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.638572074 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244822084 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125178392 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.515098196 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884629313 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.773745461 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.926081775 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.940310031 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.734310136 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.746030279 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.902742848 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880240544 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.879362632 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.649134801 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.576693748 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.436640798 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19731451 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188862196 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318085006 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.281715405 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.169026088 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.207380029 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105003513 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.398887225 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929341451 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.21166574 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814574209 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952942546 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.518052376 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213905288 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883912805 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098727303 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272100406 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.826080589 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894968408 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081694775 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90441433 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.718856446 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.827012895 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.07454601 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011381166 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.645591704 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066450368 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204595735 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.594423239 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.981482034 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.869682359 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.577585686 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955748804 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.584127636 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.232275242 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335598631 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.877395639 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336177163 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.87463585 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.317396374 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229351801 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.128017295 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.98654222 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806534354 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.881433298 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.881786381 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.871009253 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.865361188 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.743674518 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.124897444 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882100624 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107429978 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.082536147 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170288587 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.853059405 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.877888166 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871697287 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176415751 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.612390707 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038266391 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.261963839 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.396985174 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875170534 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.805831027 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806311456 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.56468356 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.881882825 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.848084112 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107466275 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.059282921 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.859155506 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311090486 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112604621 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.127916918 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.886766581 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.158270791 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14848847 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.609477128 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90252315 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.974863002 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.59389445 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.977100634 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.141949733 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115328349 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.683416922 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.111029789 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.937991902 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.693208909 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.873805916 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087774827 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.142632836 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.836407887 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10159116 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.596950962 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.879012251 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203364234 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930918122 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.818386941 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.01943549 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.068029946 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883741718 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960846746 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885870569 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.884997201 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.884957105 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922724924 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.825716086 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.993381843 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.887701932 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962379706 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.003540733 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.406100087 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.879570937 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161972303 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231908831 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.222243607 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934454406 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.875987171 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875052398 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809002954 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011878618 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.322500478 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149256886 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.005668794 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.176681061 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899952581 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.599048065 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.184023486 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113448349 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150037931 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.77272479 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876112172 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.905802855 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.143722818 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887434693 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.087848445 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110854408 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204579076 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347897658 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.059225132 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.240873467 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151177801 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.246115161 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.876795351 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.465441057 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.90151847 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.581873637 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.919773627 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.851283456 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137683143 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888359342 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261299472 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.900555569 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.078781474 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.394519088 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.656221143 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166914242 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.86684556 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.937079387 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163236207 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.27356996 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189496374 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950831938 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889226027 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.59363038 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02072465 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.753612917 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.150907514 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.881287405 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088282359 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.590714751 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.888533235 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163546309 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187049362 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.875891291 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.755701015 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887240001 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.888489673 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.103231463 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150954045 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13265641 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888578182 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.888311621 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.695275233 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.161020515 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937969701 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813652724 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.883680749 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980458306 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.12830529 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901557413 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.396110918 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.591664856 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181916162 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.798103731 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901633347 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332925729 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255110336 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.210686562 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.431188044 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112762661 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.439474521 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.782415409 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179410543 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.883978048 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339541979 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183679896 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.883777213 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.441913054 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916881806 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.16113205 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1978625 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.95585933 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.652107688 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.848934143 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104458961 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.474727796 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822782611 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.883291649 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.941835321 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.882976493 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.009744809 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892656087 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.76125245 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.757249398 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.627454733 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374353995 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.885640091 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.868817449 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.69302513 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.46456186 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913517177 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023848011 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889697807 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.591236368 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.174136491 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.135274899 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.444280348 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.887205954 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.88640671 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881212616 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.810304815 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.07909037 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.261108909 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185039313 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.276169284 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.91848629 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.886582676 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.098139775 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093744825 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.845620837 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01660239 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309170329 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919454956 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.62037467 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.563515351 seconds)
  done (took 1685.109543986 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.906556545 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.92661194 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.935685165 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.949094439 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.931623311 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.954479539 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.952321896 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.966032505 seconds)
  done (took 57.338711473 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.881683192 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.077119953 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.892635545 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.883569795 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.893099809 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.883190882 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.050938888 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.891659452 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.891721428 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.892647965 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.883799007 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.882532395 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.19279868 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.90490645 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.883292597 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.868607048 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.892609776 seconds)
  done (took 74.598491476 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.886010149 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.097020675 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.920723796 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.90238927 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.845542287 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.896600233 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.874080964 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.941387799 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.887366271 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.109797237 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.215370141 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.899844779 seconds)
  done (took 90.294446577 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.894536798 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.890920441 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.891154025 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.89039202 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.892044268 seconds)
  done (took 11.279251729 seconds)
done (took 2193.459132665 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.155262939 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.115261692 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.112326933 seconds)
  done (took 6.043992275 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.03475787 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.082882984 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.205506373 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.207383533 seconds)
  done (took 10.349978837 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.178419948 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.255998299 seconds)
  done (took 6.252435038 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.296248014 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.887275383 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.279986754 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.883204739 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.886618187 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.888583434 seconds)
  done (took 22.481345302 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.888808992 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.892780199 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.89015547 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.893256464 seconds)
  done (took 9.382842907 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.869878118 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.621279668 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.872275469 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.887861449 seconds)
  done (took 21.070275222 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.644094873 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.289012021 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.632752005 seconds)
  done (took 9.384395627 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.580451091 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.778269477 seconds)
  done (took 9.176417338 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.160254033 seconds)
  done (took 3.978784261 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.918527045 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.160859381 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.432720603 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.432683707 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.512866576 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.737036124 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.202635633 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.127106459 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.317111802 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.321783044 seconds)
  done (took 24.981888096 seconds)
done (took 138.538017613 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.267748271 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.253516554 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.091630685 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.277728676 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.122194372 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.091299219 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.097162369 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.265030766 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.737229307 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.731985332 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.278247025 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.124532636 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.250996199 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.249193869 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.250275262 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.250650497 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.107134321 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.293992969 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.93312059 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.176795113 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.109511315 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.869077779 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.124092567 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.883388704 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.109607535 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.048879279 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.444075483 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.252713375 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.086773649 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.453933048 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.050329896 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.326012619 seconds)
  done (took 170.428929137 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.629995558 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.891077366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.887688612 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.888703535 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.060187912 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.890170883 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.8900744 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.891075308 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.175742487 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.160256967 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.890088331 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.050037425 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.891587816 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.889102582 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.891912079 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.889323096 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.299320526 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.654178819 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.890045751 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.890987317 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.890997715 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.938071807 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.890637286 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.961902637 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.289469013 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.900991096 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.856823418 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.901271208 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.895593794 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.868822572 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.899182787 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.890239248 seconds)
  done (took 207.608212639 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.890594145 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.892443736 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.890035568 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.891734667 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.891555988 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.893355453 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.890326862 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.891131218 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.581425574 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.577025432 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.902214658 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.900736919 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.900289467 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.890954227 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.899936504 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.891107239 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.891895937 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.901625169 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.898789181 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.905034848 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.907091981 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.613316252 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.905540863 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.62950038 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.90207144 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.901787845 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.893554623 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.905707337 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.893346172 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.900482901 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.902172472 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.892650402 seconds)
  done (took 221.355031047 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.087250921 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.899276499 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.900250796 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.841972633 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.900380634 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.898454562 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.852369088 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.096800272 seconds)
  done (took 19.319690064 seconds)
done (took 620.543552772 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.377135362 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.2170754 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.076063134 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.923360335 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.172930015 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.956754883 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.918587291 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.983956008 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.660890595 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.987953153 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.607391518 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.934692592 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.710310615 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.93949583 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.041916221 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.97600394 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.51231307 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.607446522 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.093281077 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.001732357 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.093471851 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.889532622 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.997276451 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.683899398 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.718858501 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.921278151 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.090187539 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.518590202 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.927738627 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.081190827 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.682141122 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.306005839 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.929079937 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.916459602 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.975368603 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.952576976 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.271364003 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.927392242 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.038084682 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.688960083 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.999983128 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.544140167 seconds)
  done (took 104.678850992 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.891325586 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.890109055 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.889799922 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.890597646 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.891078701 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.889739032 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.888373303 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.889780661 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.891748184 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.888529924 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.888382196 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.892321226 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.888605043 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.889815317 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.887875719 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.889154867 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.890218813 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.892113481 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.889044763 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.889861989 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.890260914 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.88912785 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.903809506 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.889597573 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.891235237 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.88978549 seconds)
  done (took 50.991976539 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.902947199 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.067881129 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.16356769 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.919403095 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.903056364 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.906496065 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.922300437 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.907073381 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.905396012 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.905662587 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.013021299 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.908378323 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.923655807 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.166573222 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.91529125 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.902427116 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.905087976 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.902924613 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.077106026 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.919131697 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.922326432 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.90790825 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.921911216 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.916943847 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.9046095 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.90257254 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.907084697 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.366488241 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.910738281 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.012900217 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.945147217 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.925386325 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.323751805 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.176046802 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.954622488 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.910454013 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.904775567 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.015765686 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.908868731 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.904327147 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.923334064 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.908626603 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.165163281 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.399200235 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.916887778 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.905670248 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.377067088 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.023231903 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.944769397 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.915698244 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.169231972 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.918474372 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.906682544 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.906716055 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.941738316 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.913417348 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.904915112 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.230334219 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.915142525 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.922859416 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.910089545 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.906139747 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.081317564 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.91230168 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.069701798 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.913415297 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.913978531 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.906139844 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.169486378 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.918861751 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.406526596 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.91718944 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.906688053 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.013588016 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.072889359 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.406180223 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.918365924 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.08305181 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.340504706 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.929171281 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.913130649 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.354668504 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.932979201 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.915619314 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.90916592 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.908331502 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.907278701 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.952942974 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.923474445 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.331033177 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.410003704 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.245177624 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.933842444 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.922340679 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.908643187 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.230533173 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.914612682 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.907937047 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.164297509 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.413434813 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.917835045 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.916166849 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.394473964 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.920127134 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.927042849 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.916511746 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.175900749 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.922113574 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.954569778 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.909161328 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.915876722 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.911608025 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.928248731 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.91653702 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.909017984 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.383942916 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.034507577 seconds)
  done (took 236.57050821 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.902529188 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.903421602 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.902604392 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.902762486 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.901793411 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.908128581 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.90195913 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.90163408 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.909827847 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.901868991 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.904776213 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.904631859 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.905489896 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.91173074 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.439587846 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.916181632 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.519397573 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.909012404 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.909732021 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.915370456 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.593535908 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.918133338 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.909306524 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.921344516 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.909835079 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.908612964 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.915013257 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.955316248 seconds)
  done (took 169.144771683 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.916301693 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.1003266 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.937269513 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.95556953 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.927290937 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.916570202 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.940232407 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.938750599 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.921978449 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.915004775 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.914712086 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.977564825 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.931622401 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.064451108 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.947911375 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.95094151 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.029262762 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.926117841 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.915109761 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.915022895 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.947228059 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.912982139 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.978742128 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.048512355 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.934743506 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.035524557 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.922747312 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.917037933 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.917073968 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.03536222 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.93492993 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.978567599 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.9479875 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.937499839 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.040775497 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.039487435 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.028260947 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.946954227 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.922777097 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.916086192 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.915710677 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.905632137 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.036695797 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.937017633 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.919615147 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.02616355 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.937056996 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.919271841 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.926764446 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.917137271 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.93177976 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.936775905 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.987226073 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.055281315 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.953485204 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.947579832 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.944548943 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.206872558 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.928968874 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.02201901 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.912060986 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.039420129 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.93944264 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.906320457 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.918921266 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.925220985 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.947809658 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.955346252 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.028132458 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.925828605 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.022983386 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.953572161 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.928197681 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.918850546 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.921440487 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.038329144 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.043207768 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.954232634 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.959360284 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.95317909 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.915467459 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.919151693 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.908451351 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.939842097 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.924890717 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.03907045 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.041585058 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.927356503 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.922589112 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.920858193 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.921241087 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.945468873 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.047977635 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.956940213 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.022527358 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.987794223 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.996686719 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.937353727 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.933025867 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.924215611 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.984526906 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.938405052 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.931451469 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.256423766 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.993317745 seconds)
  done (took 208.015858255 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.399441913 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.977526418 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.980034643 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.252114938 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.358361199 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.819422472 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.971069909 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.971780475 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.993853975 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.159849122 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.044385424 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.991155808 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.959000583 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.944592333 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.970106206 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.990410608 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.981388173 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.297044526 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.102904873 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.082759822 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.951635424 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.262333804 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.294838618 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.373300474 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.009666083 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.312228731 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.660571999 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.115882399 seconds)
  done (took 63.081214933 seconds)
done (took 834.307137124 seconds)
SAVING RESULT...
DONE!
