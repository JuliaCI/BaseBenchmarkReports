cset: moving following pidspec: 27082
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.245871832 seconds)
loading group "string"... done (took 0.639398793 seconds)
loading group "linalg"... done (took 6.741382268 seconds)
loading group "parallel"... done (took 0.155198264 seconds)
loading group "find"... done (took 1.167892154 seconds)
loading group "tuple"... done (took 1.770252448 seconds)
loading group "dates"... done (took 1.205757121 seconds)
loading group "micro"... done (took 0.295933451 seconds)
loading group "io"... done (took 0.911024647 seconds)
loading group "scalar"... done (took 38.015344034 seconds)
loading group "sparse"... done (took 11.181778066 seconds)
loading group "broadcast"... done (took 0.914189448 seconds)
loading group "union"... done (took 12.248108967 seconds)
loading group "simd"... done (took 4.140979273 seconds)
loading group "random"... done (took 8.520859367 seconds)
loading group "problem"... done (took 1.85946501 seconds)
loading group "array"... done (took 19.904202847 seconds)
loading group "misc"... done (took 1.68136375 seconds)
loading group "sort"... done (took 3.108975094 seconds)
loading group "collection"... done (took 16.626458695 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.479803961 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121496744 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113392715 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116806457 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.139265877 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113732489 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121899284 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082538076 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.768449833 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.138798899 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116427539 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.408605929 seconds)
done (took 4.880697626 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173065725 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080995536 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080185637 seconds)
  done (took 1.279559981 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06495729 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12011921 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065349055 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066271012 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06593646 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065419089 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065413417 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065021899 seconds)
  done (took 1.63334409 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071731954 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067374749 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067769627 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069945576 seconds)
  done (took 1.395079943 seconds)
done (took 5.674072986 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.759226019 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200665892 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181169504 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.390239489 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.126132423 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.161566321 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.636293903 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.298513311 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.181290639 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079478666 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10187942 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318808955 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105383968 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.631363514 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078791608 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089148579 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135976186 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435829195 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066257735 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081588382 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088250702 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127880509 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084498889 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075036444 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143108638 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067254739 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128243162 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079606855 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06578107 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205288396 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172218994 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.650823171 seconds)
  done (took 10.101069976 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09545657 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09625399 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067680223 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12198971 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094664904 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068751408 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070078331 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066485887 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085475511 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126311702 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087233568 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099471397 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064444559 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068045177 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083175726 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203179161 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081027755 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081312741 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069599047 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07428726 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104118818 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07681608 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076722663 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076209808 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127210404 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179817729 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097377876 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096856874 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065815865 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079220771 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114587079 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124722663 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064909429 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065547814 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122750459 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093734978 seconds)
  done (took 4.530490003 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.896195686 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.137431398 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090123836 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159188578 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066769777 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105033165 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064622052 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08275714 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.197065904 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.03557132 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110674614 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.427173012 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109493725 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.083382932 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067273229 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067646894 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065643986 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.345584436 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108409841 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111195504 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083287734 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073575533 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069174506 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341744538 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066245717 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065680377 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068068033 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057183481 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111385432 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067398253 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.967471499 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086182597 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066037202 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099366512 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162860828 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087300916 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.132878925 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064038107 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063627922 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.14485809 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071974066 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064273941 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080885752 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100834263 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.100614632 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067252665 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.195145423 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162592685 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065782532 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083217055 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.714474354 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152860921 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075679025 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065858515 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.24206653 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084104979 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065641039 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063499714 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.180221212 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125933168 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066770657 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066167258 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064700415 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067069024 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.354732821 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06871433 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065874364 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067708243 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075255016 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.907666365 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071469283 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066058385 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071419532 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071400059 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.083709471 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065307323 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.06717398 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065750001 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065341467 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067417044 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083599181 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.18813525 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066106742 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066366665 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063584334 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064177079 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085494326 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096837152 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073055067 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064228702 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099192453 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063456546 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066258985 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066865465 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.099606386 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065678738 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082865903 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067880296 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11197019 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065399093 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.087032 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063860716 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.094161798 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069791015 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098833217 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.169058579 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066407293 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.223577618 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064265213 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064308177 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065485471 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067557921 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066521224 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067590078 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078438001 seconds)
  done (took 19.859081986 seconds)
done (took 36.5018304 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.274266595 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073499441 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073536552 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073609163 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073959815 seconds)
  done (took 1.774454381 seconds)
done (took 2.961660577 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.117572498 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097568589 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063340972 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093838515 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06311858 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098794954 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097458496 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08083795 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097927168 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063599816 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094605553 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063055536 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063258398 seconds)
  done (took 2.300606606 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082054598 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082151251 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068935464 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081327391 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063341915 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08081869 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079801717 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087043875 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079523338 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070628226 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063515914 seconds)
  done (took 2.019415227 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081190489 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081982655 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068569398 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080175219 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062786475 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08016711 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07959009 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084350321 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079911624 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072189413 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062824628 seconds)
  done (took 2.012809186 seconds)
done (took 7.509441454 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076683421 seconds)
  done (took 1.247733445 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.577961419 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.019670928 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080581576 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110830878 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181552516 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117220013 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273372765 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085350711 seconds)
  done (took 8.797084291 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088010873 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.080584776 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071736226 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067547702 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.0708025 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068099567 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067560338 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070180871 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068672479 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067735328 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070080112 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071420768 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068852678 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06810824 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070412292 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069587851 seconds)
  done (took 2.381919943 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090790024 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089398024 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072230041 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073741098 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070946445 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070896933 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073709305 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07214732 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069783726 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071151982 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073661691 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072050227 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070578295 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064182734 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072812588 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074485474 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069937888 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072844164 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073538682 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073589393 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073479235 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064005033 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070453568 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072665705 seconds)
  done (took 3.029334531 seconds)
done (took 16.635552634 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109624738 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071112599 seconds)
  done (took 1.359569074 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079674395 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081450401 seconds)
  done (took 1.347095414 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080297913 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066075035 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090718971 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078539003 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066474494 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065609803 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087836138 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067205798 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066863546 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067157364 seconds)
  done (took 1.923212343 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067604515 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077561731 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068537042 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079809673 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072501449 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063466875 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071260312 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066557848 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076527657 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061926517 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069503051 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081009571 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069856182 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082084181 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07105436 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06711195 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069427893 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065910889 seconds)
  done (took 2.469668427 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065117796 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06538405 seconds)
  done (took 1.321036347 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065600616 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063093908 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065624683 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065217642 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06250318 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061553497 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062677247 seconds)
  done (took 1.632894999 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.378799313 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109624412 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.293863882 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070354799 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080540176 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248473136 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064913864 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070151897 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070398526 seconds)
  done (took 2.615499675 seconds)
done (took 13.861683289 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076918112 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083845429 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093954618 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.337838513 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090643553 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065479855 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113061389 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185361243 seconds)
done (took 2.24784459 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.205237694 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.560176047 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.364580418 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193180773 seconds)
  done (took 2.310634047 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.312974891 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091906928 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059107961 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06568542 seconds)
  done (took 1.728410207 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065045722 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068034478 seconds)
  done (took 1.330689799 seconds)
done (took 6.775436236 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065623626 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08175066 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064806407 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065452377 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.062906789 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064847628 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062492963 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063794378 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064868627 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065052102 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.06782715 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064870997 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065060446 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062413036 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062615822 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065189828 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062648966 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062614 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065060529 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062583544 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0625381 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064739543 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06220243 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065783041 seconds)
  done (took 2.789032449 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081866271 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065408465 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07071112 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070114646 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068894079 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070024681 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069982389 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065077271 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069929743 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066901803 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068614654 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068812251 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066990956 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068898235 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067251504 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068692806 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070035888 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065499028 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066853186 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068834692 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069869857 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065778267 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068419122 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070312242 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068698006 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068433572 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066937358 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065342183 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069984212 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068504487 seconds)
  done (took 3.268747305 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068290835 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062506591 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064523718 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071449993 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064415198 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065029186 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062605997 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063103501 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063724451 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062709621 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064129953 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063176795 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064226369 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065601438 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065313165 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068282628 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079004046 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063628731 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064429782 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064121156 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065728749 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062827259 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062852824 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062557454 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063084889 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063441347 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064658316 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064566082 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065188033 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064633468 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068041608 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067800837 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064227764 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070858622 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068212497 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064205156 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068013854 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064428718 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064906058 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063825349 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064861258 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064097881 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064327737 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071407871 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064406801 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066024527 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06481327 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064072304 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062851209 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064948864 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062175351 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062753179 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064211695 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063991978 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066498364 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062093646 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063761442 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062102071 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063986581 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062420381 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062149839 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06248731 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064778568 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063418759 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07706441 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069204366 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062857119 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063986472 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063377577 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064872432 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06523937 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075410132 seconds)
  done (took 5.906034299 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089775327 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085363044 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.17669694 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063943703 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061714831 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06503401 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066399371 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063310631 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064447095 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068870073 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062953364 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064422224 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064253059 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076328859 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063585894 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064502336 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068558589 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060877076 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063124596 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066220737 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063619822 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066248715 seconds)
  done (took 2.809896402 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153304876 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0694521 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103298021 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071550799 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066570948 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071290385 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068983021 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06859856 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068566265 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067287402 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067010215 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069181801 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066719272 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066836913 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066949386 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067071155 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068860448 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067506731 seconds)
  done (took 2.563745442 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075930314 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064982316 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084827284 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065616312 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064694873 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066956243 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069407311 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073044065 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068575168 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066754323 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074993997 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069099449 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069193334 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066869291 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068955141 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066961076 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068826821 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065943451 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073870004 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069503186 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069489869 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072847189 seconds)
  done (took 2.753137563 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07899073 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066269368 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081441769 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067691525 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061001994 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063396776 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068907659 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064988828 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068911883 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066488272 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065227936 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063287785 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068203583 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065236237 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068093761 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064750061 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066878832 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065102724 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067313383 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061174769 seconds)
  done (took 2.561313714 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085303153 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067457315 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067305691 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075008171 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066798054 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06645054 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074313059 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066494588 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067141985 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087475013 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066971177 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066147226 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073744095 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070556384 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065927064 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073581159 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073598391 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073464354 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066434193 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066098992 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085330782 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065987436 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073402711 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066124754 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066313201 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066238243 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066041288 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070909613 seconds)
  done (took 3.200012709 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065653145 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065111592 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062554275 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063081763 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063024131 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062352365 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06245074 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062657942 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064978447 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062638454 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.0651468 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064862581 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064788087 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064784006 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065168924 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065135634 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065178377 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062476838 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063031548 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062362409 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064827221 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064712967 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064751856 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062459507 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062404099 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064930402 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062678789 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06234278 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064881552 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062600072 seconds)
  done (took 3.137084358 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074725718 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071781246 seconds)
  done (took 1.370527748 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063060461 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079854715 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062176795 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069695191 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068739665 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066366229 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071784333 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068465966 seconds)
  done (took 1.769453213 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080221026 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076148233 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06659618 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078380601 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075268212 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081455865 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130443049 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.0661022 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072049392 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063451336 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078658842 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064650579 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071338662 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065344546 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070849276 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071311586 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062910092 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070770096 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067637434 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064182189 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066353025 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07372523 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067401369 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06058182 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066210949 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086460931 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075487081 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064631364 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068109058 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072649656 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070681783 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059711786 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064753473 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065285866 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06347381 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074429564 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079643271 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067955021 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073796294 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066065393 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075986948 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060996746 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069683901 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071785281 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075367345 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065742763 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065511313 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060855045 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062913245 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067502624 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060873487 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065423885 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060423584 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07457588 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068632869 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075771434 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064159802 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067072963 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067890441 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068580937 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071635683 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066876921 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067900718 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064917103 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074778381 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069507768 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073864476 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06059466 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059434686 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063298464 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075107413 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087355705 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071244471 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066264039 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066045787 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063899429 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068675089 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066599109 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071656385 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071585763 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06558035 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071646027 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073422068 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065815834 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068555965 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073937125 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064200631 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068403536 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063916344 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081289785 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064189312 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06336339 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063516119 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075605057 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068706732 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065098636 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063423297 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07225816 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059549235 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065640878 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066199754 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065637045 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074172672 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068359758 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068664004 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072705278 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071530759 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064978001 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066948337 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061185594 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064684752 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063627431 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071077656 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058679037 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066802655 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065208093 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064233253 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199094822 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06446568 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066049856 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073048269 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071357128 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064662321 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062839609 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068162444 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065646606 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068348141 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073537426 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064297187 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061283931 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061423965 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068909039 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065514672 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.0697137 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070529272 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068835974 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060772534 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064023265 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071129088 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074088146 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066299312 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066639506 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07177866 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067604492 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064803651 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072019327 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068369015 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06511717 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071714412 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066762482 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061316557 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068918899 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068411673 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064581088 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069207595 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068674013 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067952815 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065956393 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064472429 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072641406 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065969596 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065234538 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065469941 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064476524 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076284179 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067160067 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060868054 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062930813 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074469856 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063662828 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064660617 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06499696 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067701595 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067139523 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063734671 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065243853 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067711954 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076233742 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06978412 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066245735 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070218672 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077497938 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065811693 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068018071 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064842874 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066448606 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065880626 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074559436 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072561811 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071927429 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069498251 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063894792 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073269734 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075059197 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066402027 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064937975 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066322075 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.0704827 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07213499 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070418983 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067198265 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064209509 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067871141 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070527178 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070246439 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066122794 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064565024 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072021944 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064039899 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072595114 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066457721 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.074884938 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068925769 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060916854 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068303444 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063476934 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070946968 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060792193 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063382965 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064340761 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066010984 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06427846 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06776065 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059529614 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07125549 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071847286 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064840759 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063588881 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063801954 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07102957 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065707049 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067512608 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067736506 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069783442 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074324418 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063668232 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06736617 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073723678 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.19234627 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060622502 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07150236 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065175169 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06492299 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064735069 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064227693 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068856243 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074137454 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072686773 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059993804 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068150494 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064655566 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064580164 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061488046 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.069649314 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068779954 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066624438 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072662577 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066563324 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066084195 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.06931938 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065164067 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066956905 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06699396 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068172292 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066651793 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067716518 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064873516 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069585809 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065945604 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064578544 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068295932 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06658358 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066570061 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073063819 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066641176 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068278157 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070614113 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068568417 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068776267 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067840896 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066891674 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070952205 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068282954 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067910551 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070315452 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063296075 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074784889 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067017382 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074078402 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066391274 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062395235 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072254216 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068152274 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070968351 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066927947 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066469316 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066653058 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065385513 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068646806 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072720675 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063747188 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075720409 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073653327 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066866453 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069096377 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065953116 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066854043 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065382118 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066226259 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065939169 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065950798 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065069843 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071130808 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069474945 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067121754 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066913324 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06633334 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065732736 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066149927 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060233203 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064818957 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064867535 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065184726 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075146087 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065445212 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065408292 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064404608 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066171715 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06410324 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062083849 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072935677 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074274375 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06581251 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072553118 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064723695 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066873089 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075567318 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059912946 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063606831 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062961479 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063279059 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072715443 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065936779 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074035941 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065698821 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065217946 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06309096 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065463087 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063508266 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059984502 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063264348 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068364406 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063605128 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063481777 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064991342 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067237634 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065362684 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07349862 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064051256 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065147289 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064599474 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06202932 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064385772 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.196214346 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069659421 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067385893 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06417011 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063554179 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065488052 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067161326 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067694148 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065121863 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067392846 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074951591 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065491424 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069120335 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069907422 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060962396 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068710247 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065646247 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065397395 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06540518 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069642223 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069216771 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067282244 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074231517 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065801359 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066753421 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065927365 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064031737 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065791278 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065289684 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065551642 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065238189 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066486801 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073884458 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063595194 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068134401 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065699639 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066584242 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072631215 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066219546 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068609654 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072544918 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066537212 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066966038 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07334843 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069978629 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069266937 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066847981 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068209418 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071204976 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065406125 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072202135 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066402044 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066625094 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067357904 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06402851 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065076039 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066128218 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065004711 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071313517 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06663728 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065031626 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064988718 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063552406 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066742379 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069068179 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073642161 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067927303 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068487748 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060985376 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06271072 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066462235 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063499639 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067009154 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067761337 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0708862 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06759786 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066852474 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.0654781 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074553887 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071138098 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069240168 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063507847 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068987849 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066173628 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067600124 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066231574 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066131123 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066655213 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069202958 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067205673 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064763178 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072048995 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068514614 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066287755 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067185553 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066322987 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065660477 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060633743 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066019031 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067900574 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071155814 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067521125 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065483343 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075453316 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063856666 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06561036 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068360921 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065244025 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070211389 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060509545 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066694026 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065713481 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065835297 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06053111 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064696236 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064869887 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069194196 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065925534 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061829417 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075752776 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072696954 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06717853 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063165156 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063165192 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060132837 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.192250828 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06559422 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067974383 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068281538 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075758134 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064937608 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065457063 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061433917 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065953178 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069227314 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.06884267 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063365578 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06127375 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065077744 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069366671 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071451428 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064922351 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065477376 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069060201 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067937545 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064035057 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069046711 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062646913 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069330331 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078175003 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066048486 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066589859 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072622624 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07325927 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.065922635 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061200562 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065859708 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068917485 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066914789 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06673655 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067269792 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080717258 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06863157 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065064273 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064329092 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068506322 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065121116 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073751804 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067214079 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06619507 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070386169 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067391312 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074269739 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069035651 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073753726 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068684203 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068406508 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064564877 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06691844 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06387626 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065105168 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066749594 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066191409 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070565128 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073243654 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064872604 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07541813 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074057267 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067336654 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062386883 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065003514 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065044746 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060716643 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066611851 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063641414 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063585465 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063707164 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064429158 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066496763 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070787962 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066891916 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066491386 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065928428 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059847851 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067858867 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068218043 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066793803 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062711469 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065559642 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065919454 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.06950167 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069028937 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063525299 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067539256 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067133268 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066196316 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061399587 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071627667 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064409997 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067643726 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064817796 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065791516 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066353818 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068728636 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069942512 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066566731 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067827147 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068724479 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067103268 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063363546 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062745735 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070682044 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063208653 seconds)
  done (took 42.061984199 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098236531 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061980219 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060678177 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061048151 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072098058 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061995735 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06107414 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062034154 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06217892 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064399874 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061174388 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061318387 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069677714 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076434254 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072195895 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065687913 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060948434 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061766058 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06106696 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062250018 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069550178 seconds)
  done (took 2.710956972 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073174843 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069633307 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071798294 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073832884 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066225555 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069451086 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071427342 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069429402 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074386908 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065946864 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074945411 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069525309 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.065938248 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074302056 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065692662 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069363054 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074142172 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066249614 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069059649 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071094225 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069515626 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070968692 seconds)
  done (took 2.845121731 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066261576 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064616217 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066965876 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060909393 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064784743 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060299212 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068142526 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062715501 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068190491 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06428523 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064102317 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064198251 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066546952 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060365007 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06495653 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062771877 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106633342 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068324974 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064590933 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065789398 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060582109 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067186877 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060620599 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061365709 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064146564 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068353796 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065597315 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06311639 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064729461 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064111213 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064532071 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063171326 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066282062 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065284966 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064533677 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064340093 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064290664 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064667944 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06071346 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063510792 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065060271 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060968766 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065125998 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066308561 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063030021 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062707657 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066277289 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064495127 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059944691 seconds)
  done (took 4.492660961 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078237965 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106167094 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066308758 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086907566 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078401422 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073997633 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06819579 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087928675 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062335564 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063369255 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079895539 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078123768 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064894736 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069101641 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070911193 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064386558 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065665332 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063600431 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06828883 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064559113 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068561658 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071324167 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078750642 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077149787 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068266847 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063855403 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063823082 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06885889 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077026255 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069202156 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068853415 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069791608 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078796804 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066320619 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064103344 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066617341 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07952566 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064476607 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066627468 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062896875 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066720245 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069065848 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071200161 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080166021 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064916113 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069930437 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065179033 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062119895 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076887184 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06697301 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072333732 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078577727 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06815714 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065053454 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068976301 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078872272 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064785592 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062772105 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067372922 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076615675 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062422786 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068019803 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077570845 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066197732 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071474861 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078346612 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070012238 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068256744 seconds)
  done (took 6.248633682 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073257675 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071717929 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079146498 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078587976 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070894114 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071622952 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071321764 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070648852 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070533084 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075194636 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070941185 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091033287 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066817266 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073482942 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071287706 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070864049 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070990458 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070822329 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070944659 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070805641 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071238841 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078109335 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071045391 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078591156 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096670651 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066394594 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070874236 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070960975 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078473266 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070833332 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077882738 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070962269 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071197798 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078717405 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077696756 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070577447 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064017989 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070838793 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071007119 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070986331 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0663785 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078107214 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070577334 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06625025 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070659376 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070522354 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078070816 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077773844 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073300072 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07549343 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071099752 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078555483 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071024537 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071273208 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078496439 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103646734 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079123574 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078630904 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070926498 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078349141 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078675493 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084765158 seconds)
  done (took 5.933136583 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081263559 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073217369 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075356548 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060763557 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063059475 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068672671 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063572339 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063034043 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073238797 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073265799 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075406201 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068573093 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071145687 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075204265 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068920305 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071085122 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068283456 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068385003 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073156831 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068208981 seconds)
  done (took 2.725566601 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072916661 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081623577 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066901909 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070959889 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068139782 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07029036 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067439612 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068167774 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06602315 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06825634 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074979175 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074773217 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065683726 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070815578 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074716927 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07043787 seconds)
  done (took 2.445467791 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073767705 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071525004 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078515109 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064936273 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063352954 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061629646 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065272817 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060811817 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06164858 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076811113 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06507685 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067141004 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065026307 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063768186 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062174686 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067845864 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061788768 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062438148 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064865056 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077309722 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075751899 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063673633 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065715004 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064907267 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064748387 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069921446 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064487051 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062973568 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062838692 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06554222 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065528665 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068622946 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062281805 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063079426 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064115257 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062720389 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064903679 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065644661 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067742883 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064686865 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06299704 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064947061 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064563543 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065689378 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06122533 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065061176 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061447213 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066779767 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062774139 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065018636 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064575527 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06696114 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065247139 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071260572 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068069382 seconds)
  done (took 4.936600304 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078372948 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068590511 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061574027 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063136593 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067965623 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06686394 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068375507 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066420248 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066734083 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063283434 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066994408 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067754562 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066708543 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068706354 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066521943 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068699478 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061292297 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06691818 seconds)
  done (took 2.530956481 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070284886 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065703959 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07200846 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065479314 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064796292 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067415481 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061614016 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063847505 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063794938 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065035019 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065057741 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067067299 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063779656 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067573485 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065028078 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064965761 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067052103 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063668184 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06490179 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061013369 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067446347 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064018688 seconds)
  done (took 2.760568641 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071131624 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091188813 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136503835 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082475871 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080144023 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077621486 seconds)
  done (took 1.860102965 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089431895 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077951262 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065931725 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087162879 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071965165 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066572779 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066625152 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06734263 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074471662 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07499914 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066487568 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074535065 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074507093 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07404368 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072135172 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071987317 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066294889 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066582762 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065142808 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08241396 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06651529 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074416278 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066288015 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065985071 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066448103 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074297269 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074567021 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074833923 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066153653 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074484961 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071619082 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06651925 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074545051 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075053506 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068386637 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074625649 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066549621 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082322715 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071663535 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073763407 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067600701 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072157416 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074607656 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071382803 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074364862 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066482164 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071086174 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066639693 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06640286 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084440651 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071704971 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073732665 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072350041 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074890801 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074741556 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084450146 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075197403 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073957379 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072264102 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078191368 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074386169 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072035934 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073872455 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075239891 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072489356 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074227319 seconds)
  done (took 6.119709131 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079715751 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084493052 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066306251 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074564195 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07403281 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066724041 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066460816 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06635856 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066419332 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066202903 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105929685 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067072649 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074063489 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074365762 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066473188 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066276019 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066439158 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074284774 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066100242 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084332984 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066875975 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073695853 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074073975 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073642227 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07493738 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072134557 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066656091 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066416884 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066626251 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066678797 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070921726 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066510756 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073847739 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066229263 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073961109 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066644936 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066426763 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071099082 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066814706 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071989045 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074258964 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082496731 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066339425 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066147461 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07473858 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066209887 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066004789 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066063008 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066227765 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066219489 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074890169 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074858045 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074745493 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074034779 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066493641 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066563516 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066665348 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066523199 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066561992 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071713367 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07426704 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066635756 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084452808 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066695956 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066842895 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074831986 seconds)
  done (took 6.026086314 seconds)
done (took 127.023037351 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183286128 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.1683823 seconds)
  done (took 1.670139466 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.066914277 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094591029 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076092763 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127101525 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065925232 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099000296 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097395665 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077328964 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065348009 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065208736 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065540616 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.066735771 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129951977 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06566793 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065545517 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.066840716 seconds)
  done (took 2.626262358 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095072496 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.171255599 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098526888 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063709346 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095547249 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072061595 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063809475 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073944725 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.06982491 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064191956 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072095231 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069654659 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064434581 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069487444 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069478767 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071664019 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.063899613 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071703324 seconds)
  done (took 2.756448086 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098919018 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089525124 seconds)
  done (took 1.52497999 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153201159 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103345402 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149449963 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331938635 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158849552 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228111478 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.12555634 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124330145 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116031604 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120790876 seconds)
  done (took 2.944661089 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096168694 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.145087069 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.252990482 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115750546 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071525545 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09045616 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115424908 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076585415 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076923082 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076233177 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076748627 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075162966 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094736697 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072941146 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072664952 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074543401 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097730252 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071680109 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074331997 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072759086 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095533234 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065408981 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07274691 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071724754 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073666779 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074102252 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064712877 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064777188 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073190655 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072534296 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075898181 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088406158 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073329445 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102939025 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069244033 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104063644 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075034194 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070534209 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072400562 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070346079 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074406681 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07451008 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071575391 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074665324 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06488113 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075881278 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06453568 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064263859 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07734686 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065444967 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07684315 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075977518 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103253577 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06623037 seconds)
  done (took 5.820598502 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.657513632 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101588181 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069068671 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.10621376 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094911767 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070975004 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.680749112 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.088928507 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171892288 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090706509 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087022382 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069080643 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07963531 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081891062 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108104659 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.099785265 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092426464 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070259066 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.09934127 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.097176499 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066888486 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092224815 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088378482 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.373746737 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066128231 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068479698 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066786986 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069001707 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.108730375 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076591229 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069445557 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.11956801 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083022065 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.119350961 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065726807 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066730155 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066750214 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077758964 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.178363286 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.130822082 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.129360881 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066496781 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067494695 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068206116 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.088092602 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066533639 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.109305905 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079253194 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.117237466 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069516733 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069265008 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067355633 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068215065 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078805134 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076686889 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079887929 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.228345261 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067501952 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066843318 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070247341 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.17770337 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07733709 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07773711 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090100705 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.127292643 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066565986 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.690303236 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082245197 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066543876 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067518382 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066163416 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067107381 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066348569 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.243487273 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.340680092 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069670984 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069076209 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067644748 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.162361139 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07720616 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068266381 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.111543782 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067156054 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067907503 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069575836 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069424557 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.11570149 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078912789 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06938503 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067190388 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.0694324 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067967712 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066485998 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.161170256 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079461707 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078214328 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.157001572 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068383432 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109993633 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078450133 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069233876 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079717201 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067854805 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069470282 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068423917 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078484049 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.094532438 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079056777 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069161593 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067035649 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.096886222 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079606777 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067177042 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076835085 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.395101671 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078842901 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066848876 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079991845 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067528097 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.109992848 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069157708 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.174371238 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068419333 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077895648 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067790485 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066460837 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067480159 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.108950738 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069087907 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067742634 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068804255 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069104549 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078284681 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.131794515 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069502328 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.160152432 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.132166434 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069537497 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.11837 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067523565 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.114576936 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068655965 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070108215 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066223615 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.711958385 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06691627 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066838246 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068292812 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.134825004 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066402777 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077297093 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075092315 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065174553 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.686274074 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076414171 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.204425718 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079798707 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069430611 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067580313 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067266945 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069679871 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.107896868 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.143586926 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069369638 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068089965 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077699101 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.110437789 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067023497 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076487687 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077058151 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077542956 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067978236 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069398352 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07959301 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.116160906 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078267981 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.13263653 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.513153101 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067624701 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077345404 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.140620907 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067881759 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084020316 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067566794 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081688913 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.111016787 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075482646 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.225686659 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.111791045 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.137147269 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07937292 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082045742 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066222512 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067588636 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078330669 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067251626 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068849517 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076844063 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068962918 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068621221 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082821547 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067513964 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.172245869 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.072599053 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077778516 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066689483 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068947599 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082249776 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067315714 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068841197 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078030455 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069333417 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076191193 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.635694264 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076709254 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067202779 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069113042 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.134220572 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.111185698 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067487413 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067441977 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068846194 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.108445053 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.155072326 seconds)
  done (took 27.796609101 seconds)
done (took 46.483416733 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.205181522 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148082911 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198965829 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115893987 seconds)
  done (took 2.102317144 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119471435 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09906279 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093471043 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06436752 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099920954 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06439376 seconds)
  done (took 1.913297315 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.302794191 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.205915669 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178552398 seconds)
  done (took 2.055917517 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.19368523 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.184000893 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.389211566 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.248941035 seconds)
  done (took 2.491574589 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141417423 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088644905 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06627605 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082345657 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131940655 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158290053 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098903989 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123405369 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077075032 seconds)
  done (took 2.389655978 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142020717 seconds)
done (took 12.47571367 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.096052931 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069139514 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.223077381 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171567866 seconds)
    (5/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072092195 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.16342938 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070151618 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.188883916 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171177106 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076887759 seconds)
    (11/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073068702 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072854777 seconds)
    (13/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.081337657 seconds)
    (14/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.169044291 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.141749001 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.18806713 seconds)
    (17/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.15573104 seconds)
    (18/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.16863323 seconds)
    (19/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073016901 seconds)
    (20/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155736186 seconds)
    (21/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.15146735 seconds)
    (22/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.087513846 seconds)
    (23/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.061110109 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.108001711 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098967526 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.188066552 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175265638 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175309101 seconds)
    (29/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072213888 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089966006 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065984754 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.146308496 seconds)
    (33/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.154958602 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.16193665 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070383528 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093965113 seconds)
    (37/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.08022149 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075318698 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.109898003 seconds)
    (40/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.154765281 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.062233349 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091438504 seconds)
    (43/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.167471505 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.199224383 seconds)
    (45/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073244075 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093408502 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.0712929 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071468093 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089555852 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.098712128 seconds)
    (51/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052574698 seconds)
    (52/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.070936637 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.134971807 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064740574 seconds)
    (55/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067951242 seconds)
    (56/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.071135597 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066269728 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165650774 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.151449595 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094280858 seconds)
    (61/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.167563668 seconds)
    (62/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.172308128 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064322207 seconds)
    (64/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.185954262 seconds)
    (65/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.137807926 seconds)
    (66/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068882174 seconds)
    (67/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.134667741 seconds)
    (68/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.146466354 seconds)
    (69/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.146418974 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.08762727 seconds)
    (71/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108224221 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100684895 seconds)
    (73/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068957644 seconds)
    (74/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065108125 seconds)
    (75/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.108232088 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.151106228 seconds)
    (77/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073633274 seconds)
    (78/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050376082 seconds)
    (79/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.144311415 seconds)
    (80/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073922415 seconds)
    (81/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063001465 seconds)
    (82/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.098195644 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.093873259 seconds)
    (84/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.352626435 seconds)
    (85/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.134641768 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.124323354 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065469787 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.066250903 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051331778 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089843517 seconds)
    (91/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.146581463 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.13480651 seconds)
    (93/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074841055 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066466587 seconds)
    (95/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050364426 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065364599 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076061598 seconds)
    (98/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086451322 seconds)
    (99/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.137086678 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090156069 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064804477 seconds)
    (102/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.098637855 seconds)
    (103/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052280844 seconds)
    (104/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073302041 seconds)
    (105/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069129952 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.075793397 seconds)
    (107/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06768978 seconds)
    (108/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114376305 seconds)
    (109/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080015888 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072660958 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067775863 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116214567 seconds)
    (113/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.11717084 seconds)
    (114/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050756736 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120333477 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142895414 seconds)
    (117/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099731069 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094081942 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096884801 seconds)
    (120/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052058051 seconds)
    (121/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.291344905 seconds)
    (122/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.107638068 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.162627726 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146489994 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06449445 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134023581 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064011829 seconds)
    (128/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074323336 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.132066375 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072989543 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085351228 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071705818 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086190195 seconds)
    (134/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064258754 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.136951584 seconds)
    (136/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.104998147 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070249914 seconds)
    (138/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073851161 seconds)
    (139/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079515343 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071297163 seconds)
    (141/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050026905 seconds)
    (142/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073057429 seconds)
    (143/309) benchmarking ("sort", Int8, false)...
    done (took 0.136981832 seconds)
    (144/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051222039 seconds)
    (145/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.135185619 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071319454 seconds)
    (147/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050155974 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087904712 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050245141 seconds)
    (150/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066019222 seconds)
    (151/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068339689 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064435067 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064233491 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064024484 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071539421 seconds)
    (156/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.135264776 seconds)
    (157/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067383574 seconds)
    (158/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.050990115 seconds)
    (159/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05018914 seconds)
    (160/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050098651 seconds)
    (161/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075406251 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086808685 seconds)
    (163/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050176103 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071677923 seconds)
    (165/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06822244 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050041409 seconds)
    (167/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050409602 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072297217 seconds)
    (169/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081184652 seconds)
    (170/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077718585 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050643325 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069975762 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051236581 seconds)
    (174/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077941774 seconds)
    (175/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064021247 seconds)
    (176/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087409306 seconds)
    (177/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076405137 seconds)
    (178/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069377983 seconds)
    (179/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.169333257 seconds)
    (180/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071040141 seconds)
    (181/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076801103 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067200236 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.08996541 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111069091 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070575937 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064394512 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05184999 seconds)
    (188/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.065692194 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.049696968 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.123126776 seconds)
    (191/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.049945055 seconds)
    (192/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.073619898 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.131572183 seconds)
    (194/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.049815629 seconds)
    (195/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070360106 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.093160638 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.114880479 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.310298945 seconds)
    (199/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053061661 seconds)
    (200/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064628025 seconds)
    (201/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079752785 seconds)
    (202/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071770997 seconds)
    (203/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071661407 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073731816 seconds)
    (205/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051650505 seconds)
    (206/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051482561 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050684787 seconds)
    (208/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052068536 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140479036 seconds)
    (210/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.108100296 seconds)
    (211/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183581304 seconds)
    (212/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051336042 seconds)
    (213/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065941008 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.147846675 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070207488 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085973603 seconds)
    (217/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.169295421 seconds)
    (218/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052017309 seconds)
    (219/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.147621655 seconds)
    (220/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06348965 seconds)
    (221/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07240113 seconds)
    (222/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052083499 seconds)
    (223/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078350543 seconds)
    (224/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074840115 seconds)
    (225/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051269752 seconds)
    (226/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07199949 seconds)
    (227/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050482708 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087044615 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073500269 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071636685 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.16601058 seconds)
    (232/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.114432829 seconds)
    (233/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072439822 seconds)
    (234/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052351633 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065730688 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167475105 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070873566 seconds)
    (238/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061336182 seconds)
    (239/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066196455 seconds)
    (240/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071395418 seconds)
    (241/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052156166 seconds)
    (242/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118147862 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090017894 seconds)
    (244/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063770464 seconds)
    (245/309) benchmarking ("sort", Float64, false)...
    done (took 0.124726934 seconds)
    (246/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.169940354 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064908878 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137227362 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088951565 seconds)
    (250/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050933193 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064834202 seconds)
    (252/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.0519123 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069979775 seconds)
    (254/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066180869 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066325296 seconds)
    (256/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051417731 seconds)
    (257/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066655207 seconds)
    (258/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065331999 seconds)
    (259/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064293607 seconds)
    (260/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.085917955 seconds)
    (261/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065368586 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054030992 seconds)
    (263/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072751741 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064061631 seconds)
    (265/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087050452 seconds)
    (266/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071245744 seconds)
    (267/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.084802453 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132145106 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064304348 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070564908 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064315429 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050422706 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072058287 seconds)
    (274/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.059797863 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064420677 seconds)
    (276/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061134266 seconds)
    (277/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087961746 seconds)
    (278/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052008258 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087633829 seconds)
    (280/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051627423 seconds)
    (281/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065901672 seconds)
    (282/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051696367 seconds)
    (283/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051407119 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.090755164 seconds)
    (285/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050124657 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.063957493 seconds)
    (287/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052130801 seconds)
    (288/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071778773 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071744909 seconds)
    (290/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051153491 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063313377 seconds)
    (292/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050597196 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063168652 seconds)
    (294/309) benchmarking ("sort", Float32, false)...
    done (took 0.125333061 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071866897 seconds)
    (296/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054208203 seconds)
    (297/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070170432 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064175474 seconds)
    (299/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053946069 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069862631 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06586305 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088421505 seconds)
    (303/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06291574 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064458668 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070041242 seconds)
    (306/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068526285 seconds)
    (307/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.079977967 seconds)
    (308/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070034439 seconds)
    (309/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050534725 seconds)
  done (took 29.907240768 seconds)
done (took 31.290190719 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082456807 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091645503 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074417736 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091595038 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079328676 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075840124 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071485307 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077256591 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079009227 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08055289 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077767111 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054683248 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073285261 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073593053 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0739938 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090729109 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077739249 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072478351 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072614089 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064794799 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072911385 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065506498 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067158787 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054746742 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077187103 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071061135 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071936425 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073143355 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065052731 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065742548 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068589683 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072873116 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065352778 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077908151 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071843792 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072421403 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074194943 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075598413 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067146073 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065066146 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073755367 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065340152 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072019885 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072735778 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070994735 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070760502 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072219457 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077015381 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090127857 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067744925 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074388645 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075783507 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075745084 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071706648 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068744893 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072449916 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070238201 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09036484 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072670889 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067460349 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073347511 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073115414 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070495283 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07224832 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072239585 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074229815 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074404066 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070545724 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074018945 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070506007 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065101883 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071954147 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068227458 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064929739 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074795507 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075994096 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064099562 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070326363 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071571254 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071153453 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064526543 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067294484 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066400289 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070738941 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066704118 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054268481 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068522646 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070932499 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064051014 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072406325 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071107237 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071393107 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066494591 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07468719 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064395434 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070268369 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064976351 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065195475 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066260899 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068575016 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064493381 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066790533 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073161509 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065848982 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070494738 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077803153 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064658415 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070620433 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064122048 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063904776 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078075741 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073888002 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064619715 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066956717 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063559226 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071849112 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063689846 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064553139 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064392512 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064353262 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069665809 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063967376 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065444285 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070475242 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075112238 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063293957 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066778306 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065555758 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063516562 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068339351 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063234929 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063376857 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201463734 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062174993 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067559146 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065577599 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072032124 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067112012 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072485367 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066812653 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072828563 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069705628 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071175708 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070772134 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064301907 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058798769 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067743966 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067297075 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067291145 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066006196 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066311783 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065658503 seconds)
done (took 12.318172495 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066306168 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141158105 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097431154 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094604024 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085101885 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066029442 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075699855 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100615888 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06720855 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101286673 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087023937 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084745491 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111098721 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064132141 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065742827 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069375734 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066862987 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080811867 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100056966 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085838956 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.10820105 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064797737 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093741651 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089385077 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086091789 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100385549 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066640392 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069693453 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068872672 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090460027 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085557782 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069273043 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066181027 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.09934151 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091195973 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082291281 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066178693 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081283358 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066040492 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065327105 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.079732222 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097355917 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07911706 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079702851 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069245587 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068834746 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066724769 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082406273 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08793695 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077840864 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085410612 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101540414 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067700755 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065159602 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064049983 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084773995 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064492449 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068051098 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065491169 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067433585 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065532611 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068698046 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080581027 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085802453 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069024021 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079428123 seconds)
  done (took 6.73966274 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082231626 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089073838 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081782907 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08257145 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065561512 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065689029 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065818586 seconds)
  done (took 2.012556711 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065937963 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087539347 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088255342 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088436904 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083717657 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086036473 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07508071 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066428712 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079839451 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066860143 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087000879 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100557163 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066403333 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072034389 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089863467 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066319897 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089460018 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066114944 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06906057 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089086808 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067899954 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081820168 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070005526 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066472521 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079979113 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066352541 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111625835 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070193542 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067688822 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069071858 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064156223 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105768965 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07974248 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075075988 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065805345 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080453486 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080178704 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064142084 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081474642 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071094759 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079509551 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066864539 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066570223 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063809851 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069997677 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076228302 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066237111 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066516576 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068209399 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084590971 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066619518 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078857739 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070093865 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068328648 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067188497 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069579183 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075376688 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06661751 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085358059 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067072178 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08198394 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081694441 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079601684 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081747608 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068347283 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079281532 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079519992 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068481991 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068070839 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069452225 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081735708 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064811138 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067238438 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.075872803 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067535315 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088319812 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087920674 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067014727 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074752144 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065930991 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065817628 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065709661 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088057279 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067993358 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065783792 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069836579 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068502376 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064371757 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065036608 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069207013 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063905017 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067227704 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068441919 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069181166 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068028464 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081913491 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067930579 seconds)
  done (took 8.671682089 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068049186 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067046743 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06847666 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067795253 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066869471 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067813603 seconds)
  done (took 1.906231438 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092796733 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069011505 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079989191 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071939742 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103283546 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086528363 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086227647 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077720417 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083152159 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078108069 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086033166 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087563312 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091577275 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071998628 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085391022 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071576927 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086042772 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074722596 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077511009 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07191573 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085519392 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072619533 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072450911 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080616148 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074952308 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07145818 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066767814 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078199122 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07773293 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078167725 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07186177 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074660094 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069978243 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077513316 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085928738 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070271264 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071049321 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076474771 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071411545 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074803491 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087343479 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072194786 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073488001 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076699012 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077779264 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069441087 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075959722 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075324762 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085701749 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076442142 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076149223 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070494123 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074137912 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076552422 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069210173 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077380897 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076656209 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085646394 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07164711 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069459523 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068349303 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074416307 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076679174 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074669051 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077910284 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076204379 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.0698351 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07177501 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072095926 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071063253 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076405237 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068364572 seconds)
  done (took 7.008222956 seconds)
done (took 27.804821598 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54712263 seconds)
  done (took 2.015175244 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.614191714 seconds)
  done (took 2.10573025 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.378792246 seconds)
  done (took 7.866400659 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.389985149 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.503762831 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.705732542 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128445115 seconds)
  done (took 3.262398338 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.661311599 seconds)
  done (took 2.1654051 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208306052 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.194778996 seconds)
  done (took 1.91752435 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.365601553 seconds)
  done (took 1.861201095 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.080722419 seconds)
  done (took 2.577603971 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256811241 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160990472 seconds)
  done (took 1.918576001 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.456699692 seconds)
  done (took 1.95428531 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.829668931 seconds)
  done (took 6.329102731 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204449451 seconds)
  done (took 1.747503218 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238051408 seconds)
  done (took 1.739633287 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.70772391 seconds)
  done (took 3.211395316 seconds)
done (took 42.169580148 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078496245 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079873403 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079546017 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076309551 seconds)
  done (took 1.804596646 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075445565 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071952062 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075898118 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071109191 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075319762 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071988979 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073129069 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07555848 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071129401 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072195065 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071180964 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071166426 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073492444 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073202255 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069526555 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073921673 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074594014 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071072952 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074636956 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071868156 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.06967457 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073996664 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07379495 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071246807 seconds)
  done (took 3.25159157 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076468557 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071552852 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072962871 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070681332 seconds)
  done (took 1.80205411 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076506587 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090140933 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088069781 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076348581 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090505415 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084794023 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067767507 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06770739 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072062189 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.0755953 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067198863 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094321424 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.0860444 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075316211 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078188661 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064967679 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067242105 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085442668 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07614756 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076376899 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068718997 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075928416 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066752797 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086615018 seconds)
  done (took 3.366025819 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075697941 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101926334 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.075791746 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.085602874 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088229893 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064390066 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073176688 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087979745 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121022137 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064308489 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06889478 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06424492 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071364791 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064004271 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075064633 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103498565 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107148837 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067262536 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094044853 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.0646883 seconds)
  done (took 3.130360996 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072452588 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069228087 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.064994274 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067778031 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076018106 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07191625 seconds)
  done (took 1.934619268 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067183819 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065823729 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066436926 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066056212 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07082679 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066826405 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065398457 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065789788 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066107167 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066121763 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065897045 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064864861 seconds)
  done (took 2.305638692 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.332862775 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06827352 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067558418 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064885324 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069751271 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065733172 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078559215 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066893898 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089289326 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065585975 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065879843 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068181224 seconds)
  done (took 2.614650866 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202349081 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074862886 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232388561 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134971874 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109736421 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114909255 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102770058 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111657234 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140566199 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09985323 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164216792 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162574643 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105204591 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134588955 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087509386 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096563481 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15247531 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159236209 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101790224 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163251403 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141622645 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122649561 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144692469 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099883242 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103982256 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11946053 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069863192 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078823623 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167384651 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129122532 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143360693 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108970469 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09199198 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173441434 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168028397 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140024194 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131901241 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082335582 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100728258 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130853604 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194019454 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086307837 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158331858 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24474555 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080283691 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137960665 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118489828 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118691421 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104836219 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08940441 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144139557 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180277815 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136963808 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086468366 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11033869 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113651502 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113918897 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101828607 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178723429 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15766002 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12609579 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071034348 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096856982 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150745797 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129474324 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10710174 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124282683 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091598204 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130148737 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151692921 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116572381 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140189926 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126720237 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087485794 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116952133 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137283139 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125682066 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166699736 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122384338 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071504537 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122933729 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101689858 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080156204 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140819899 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074231737 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171542589 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096592043 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.103975645 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111002544 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106795721 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106815391 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156779898 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280897476 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102260811 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065412383 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102356407 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117752982 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144579953 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085864241 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106957821 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114797965 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07695924 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137055157 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073733528 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12107993 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074343062 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122208851 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13056547 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074494045 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118727165 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099156174 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098435988 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130289587 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15615657 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086658927 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081620346 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165294039 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118924903 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102095087 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141609993 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153534548 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097565595 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101066186 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14692328 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176894025 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087950976 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159903441 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105907591 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082685817 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.085959813 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121822312 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110307232 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121273713 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080741252 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116406083 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16568741 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074050025 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093885565 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131146653 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078072801 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079135927 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101143078 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09850988 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093062014 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097696394 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102262891 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135475879 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119734704 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101702774 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266513772 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097300324 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16743922 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086946637 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098207575 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102304437 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069550133 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.133598269 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155393187 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078543155 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160834933 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121628649 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103841148 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117357648 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08126978 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137325492 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077679907 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069070611 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14185462 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108796604 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108871431 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14830643 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103242386 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125169611 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117696098 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131656421 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12941324 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127852769 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103991212 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08676458 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109851659 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123672502 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071845155 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090111764 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079108598 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101980291 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094157573 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081959652 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139551429 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122519527 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098760673 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109930771 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095394373 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144946153 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075168052 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126970208 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116841221 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091803301 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148808322 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148778307 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128355484 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097491581 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140870989 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068635721 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071888166 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.232459851 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122043448 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081657815 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083015463 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115090244 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144645494 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126628164 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13533808 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109834075 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119255157 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152868165 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068859685 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113718115 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14427836 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119139419 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103415213 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088761019 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097049 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139765201 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107232979 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178054627 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111966689 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124900013 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151486355 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098008606 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079015885 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101499662 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133742314 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102746058 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141363284 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103123358 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086560863 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108171463 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073186844 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098321887 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125585191 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117718313 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133364121 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112937431 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130194269 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076308258 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115054035 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118770739 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120971102 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063017527 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117012067 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157600058 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092311284 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116093227 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148781663 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077841746 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.121748012 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318166274 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143085428 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084110124 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107710494 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11670122 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125522815 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118380518 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138196833 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107757381 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13411846 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107563166 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084130441 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086311134 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095092484 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103631284 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09350946 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106738792 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11303821 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093359073 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130271214 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101934146 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107720275 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116036415 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095260219 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088268679 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095206946 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171622338 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1182926 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168480484 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09710866 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141867153 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160829398 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073913009 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078516322 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076816558 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137548349 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082782998 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128685925 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096606715 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103474973 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12215558 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139671325 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093884748 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067710272 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107054995 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13242069 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110694222 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09678107 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10224859 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159670569 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09917132 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078072549 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111647987 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102505595 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100061094 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310977431 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061375524 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096876295 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074906208 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079860565 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125112514 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151074161 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079351382 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101522329 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11814545 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109132903 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12600989 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099877629 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097768971 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11244977 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148091947 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126298431 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088369184 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110200687 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126683112 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170436008 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103856169 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093941329 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169593209 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148925019 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157129607 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086825553 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112609775 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112317277 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106684336 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13725555 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082500316 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160569453 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08035194 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133918127 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105384237 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088854196 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127900068 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.096951204 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086764433 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145633795 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115689638 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081472279 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076572151 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116441023 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118124688 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104512104 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07357372 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135434661 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071998231 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12947263 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165388138 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079371077 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.247856984 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096130141 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079332654 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106183321 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100837402 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089110083 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098178478 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170245364 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087225817 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147826954 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139374574 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111038482 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134269726 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098825525 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.633886578 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.0769341 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148839849 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11460908 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170530405 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095755225 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116119774 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107486895 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120998606 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142032377 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103547663 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.173474918 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130119587 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114313328 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078501877 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100709228 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100434112 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087436089 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103482686 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111314104 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114457282 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09193559 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114535674 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121075708 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080572297 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094076231 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153328214 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115196826 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141866936 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138617347 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08371676 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115840097 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135397867 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078325093 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.11938387 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148349105 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103641626 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095311547 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.223299886 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100948503 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168013062 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072590584 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15990305 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117551348 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108893227 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111491537 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112793389 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128931569 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106888613 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118973025 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092041294 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107969543 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111549683 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080380609 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075419638 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102398547 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110557832 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096773845 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098008348 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097654054 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149203897 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070116379 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094853148 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101418626 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142248699 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171550868 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087027831 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081342099 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117021242 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111030915 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111534832 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118467689 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078489208 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081159434 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080241457 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076404775 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106751318 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11126654 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102263868 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109174137 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160917152 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081556368 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22341455 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093411263 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10292817 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068634496 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077561337 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094292597 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095594183 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106392425 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098906136 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165162457 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092057309 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.08790482 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090498057 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071383591 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080405453 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.269688907 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109208332 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116918809 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095570151 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061980334 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107687 seconds)
  done (took 57.931703628 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107251325 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081569802 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09593439 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.1483947 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120942242 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210401883 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156554942 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197907254 seconds)
  done (took 2.744030244 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066756649 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092366437 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.09805561 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081167596 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065925022 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06752976 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.222194656 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079140545 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065817153 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087421102 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077671045 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067474095 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.397018001 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065377965 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066808944 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060670118 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066733397 seconds)
  done (took 3.344601462 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.370664497 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.361296242 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.369070441 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072155084 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.649006648 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087462137 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.072825643 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095480942 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07024198 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.279049227 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.705174746 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.090613247 seconds)
  done (took 13.846539068 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075678843 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069230376 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083280641 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083128864 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072654256 seconds)
  done (took 2.077001467 seconds)
done (took 101.698146695 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079555352 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.294929864 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053585448 seconds)
  done (took 2.000815066 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082303707 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084358624 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083911688 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082824106 seconds)
  done (took 1.961960578 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073822923 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075552132 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.08360774 seconds)
  done (took 1.856876156 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222576605 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139068341 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086226627 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081726381 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077720611 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077639321 seconds)
  done (took 1.868949067 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071764068 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074205204 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071996129 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075386042 seconds)
  done (took 1.920753938 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075744739 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052660505 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054689676 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.05547288 seconds)
  done (took 1.866347318 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086070023 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078189505 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077892607 seconds)
  done (took 1.870683709 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105606177 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085016506 seconds)
  done (took 1.819011374 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080916875 seconds)
  done (took 1.710561855 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097787189 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112766154 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.12697713 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108480843 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135380144 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107897641 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084565177 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085640557 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076351019 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086468938 seconds)
  done (took 2.650885658 seconds)
done (took 21.678493443 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078078777 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366777939 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360660547 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090443465 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66707364 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356225461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.984329339 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091668696 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120258912 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067243091 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083927925 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651182758 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.970425493 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324119981 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.96408171 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.41717345 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650050884 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067870882 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067354293 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067371633 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966845207 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067366267 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067352353 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067779122 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648939493 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370620368 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067492219 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.416990567 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067493791 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06922866 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355547052 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06791576 seconds)
  done (took 16.296783306 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07016836 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11720033 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073112678 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08348506 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070247098 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069097559 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071076484 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068505392 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124781529 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067456092 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083972172 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067283699 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071374263 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068443672 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086549577 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067957361 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068822652 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068135058 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067887384 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068253632 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086262133 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067380078 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067754105 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068321172 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068248329 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079902713 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068708208 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068143224 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068646968 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069860183 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070889221 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0688712 seconds)
  done (took 4.02567817 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114316444 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125350561 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07356973 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103232476 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111296438 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069616267 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14275069 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092346409 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126736308 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067919588 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083955284 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068188243 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100833349 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068607433 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087226364 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068559677 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068856721 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068675503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068143982 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068432744 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087645754 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067815126 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068018078 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068783818 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068432403 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081568757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068506282 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068450559 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068203799 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06981063 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071584648 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069222663 seconds)
  done (took 4.281936814 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072522799 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074447951 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082695956 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084034829 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069560181 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071474963 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072509424 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069425221 seconds)
  done (took 2.243628636 seconds)
done (took 28.483722019 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078444716 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068922389 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072001693 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080321829 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073027913 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078297238 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067044275 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074110872 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071689198 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072821855 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074932122 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067347957 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070987962 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067211583 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073670244 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067779638 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078892843 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071802863 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080214349 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07920514 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069874323 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072984357 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074155271 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079084004 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078695238 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078975101 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07704007 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072420214 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068729568 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069990933 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07633805 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083776694 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068503965 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078621244 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067714128 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067451223 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071487311 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067521669 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079022445 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07643044 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069161171 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075776126 seconds)
  done (took 4.718922908 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087841405 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090983387 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084785207 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061876141 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067114384 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064956811 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088325352 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059504524 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059552965 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087989497 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056074252 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05910239 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062229281 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053888938 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059072635 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056806986 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061564516 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055931598 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059344225 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059279204 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057868127 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054231052 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060070624 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065440944 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05643117 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061452436 seconds)
  done (took 3.34410465 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073974411 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083955809 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087690494 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126021617 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103589879 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076370617 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07755517 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086801183 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085123769 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066806469 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07083571 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093798385 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088003769 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073695242 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067536801 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.095020157 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082063521 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068771905 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073122308 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090210156 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083545878 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077435663 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092232229 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080271569 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066562686 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069278199 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07059486 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080552393 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072038777 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075801355 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070894158 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070240429 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068910382 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078606201 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070885443 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068689207 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089178592 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076643753 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077415754 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06748779 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070348278 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068233001 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089073937 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12209086 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066514738 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073506599 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074480182 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076319177 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067072131 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085747455 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078450755 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067063968 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070196322 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066678879 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067703756 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079934083 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069188745 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069455834 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076323753 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.0703021 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080165763 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071551591 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082706224 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067542292 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075433288 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06659412 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068234064 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066553934 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092979048 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069075102 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108296575 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068872064 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068537278 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076419262 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074941324 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073540012 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067980412 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082562949 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077498661 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07081552 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076011955 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070752421 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070084583 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088065363 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069934447 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069011243 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068476899 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073345508 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070078384 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068690362 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080399296 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06744929 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070133896 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083940154 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066887573 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068633425 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073320213 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071781407 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066846886 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078479867 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071942345 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068172823 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07669976 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067396701 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070304895 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077562994 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073445906 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066621262 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07205995 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073711671 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068493089 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069128395 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069764058 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068832922 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076370061 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073692873 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071684311 seconds)
  done (took 10.519929765 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.15985328 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152833884 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07020586 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144165885 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076146924 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078824887 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146294621 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094267376 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067856521 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068192667 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068407956 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114393816 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105322259 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121413853 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078166543 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067655402 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083188079 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116761402 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148153338 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14214253 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083050855 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076427666 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069753529 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068916485 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074439118 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081837167 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091460219 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076524673 seconds)
  done (took 4.412962032 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080579354 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100370221 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073543656 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088963961 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089866232 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067399169 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069642095 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069240561 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080622291 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078582723 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067433987 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073414585 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074656472 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074150522 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068677001 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074503233 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074862308 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.0693198 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071039604 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.0731007 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077812561 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080522049 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071873525 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067082236 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074104477 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06686708 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064150429 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083730883 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068075588 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089928402 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065667769 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074886127 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081285237 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068723799 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067548151 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068065434 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067256325 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067420777 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069142531 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066097643 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066017372 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057600521 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06657869 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078837716 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073579921 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056451761 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072241107 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072511234 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07235396 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065050127 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070376023 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070256014 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070913926 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074702998 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072406239 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07306917 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068753346 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065909503 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075345431 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067388427 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064996316 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066200258 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071804915 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065688822 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07536982 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072257762 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066281868 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067202959 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069318681 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073606441 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06733047 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07060463 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065155399 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069162491 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071884637 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069153181 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068675333 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065917698 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067516613 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067517396 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055249983 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067323894 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053366385 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070302264 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065647955 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065952772 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067347374 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07198948 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079300159 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068540234 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073009853 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068413943 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066457674 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070335252 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060407736 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070035764 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082353739 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08215745 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067433993 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065518291 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081336183 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071754265 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066754024 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056236175 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07489397 seconds)
  done (took 9.128675217 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095310251 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08753881 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07012554 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083716191 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090681184 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086618348 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074476246 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076316044 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069094997 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082103884 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073327702 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076387808 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067819867 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077331799 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093901063 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076641322 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069933925 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077021764 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07177768 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100855732 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082703358 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081704382 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074780402 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067963629 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075678173 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079650917 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089635918 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080213178 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078017466 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075314519 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079753429 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089919444 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074228724 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071827431 seconds)
  done (took 4.400191215 seconds)
done (took 38.167236734 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.727720147 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.899589862 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.720712655 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.106535848 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.798255365 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.840325747 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.773344376 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.733903997 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.81789576 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.752974307 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.96135833 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.735534118 seconds)
done (took 64.533148372 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.770311719 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.863260867 seconds)
    (2/2) benchmarking "String"...
    done (took 1.991446206 seconds)
  done (took 5.512361289 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.045296411 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.248057291 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.959036082 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.712850409 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.720382753 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.008164201 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.516404155 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.235718385 seconds)
  done (took 30.060562562 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.881912199 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.914637053 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.374493512 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.410905238 seconds)
  done (took 15.285887915 seconds)
done (took 62.414176997 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.728209615 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.76470329 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.71884314 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.69955941 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.774324343 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.719524321 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.206914492 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.964506637 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.714686869 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.702214749 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.716447333 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.150300713 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.724361222 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.224249724 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.715226716 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.723059006 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.79951316 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.355518678 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.884300529 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.726766174 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.730899416 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.760815877 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.719270607 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.842864336 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.763156845 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.718584578 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.16991399 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.72098533 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.345695527 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.717861865 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.746849562 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.780064118 seconds)
  done (took 203.68868319 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.716285477 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.581494447 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.691273733 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.725075669 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.069154762 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.917627634 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.84131855 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.179963692 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.719484262 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.723170783 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.898197327 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.717595517 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.930539705 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.709271431 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.733221984 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.720651564 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.889110348 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.936640428 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.733409334 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.988306127 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.72940463 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.766818759 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.734163463 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.882498009 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.733912451 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.731299003 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.735674122 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.741570016 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.90857526 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.862890876 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.737248575 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.738759707 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.919143876 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.588779203 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.727015155 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.744611386 seconds)
  done (took 167.366915025 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.113972347 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.718718043 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.718835425 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.719807373 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.725321941 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.718179441 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.846802658 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.844928087 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.177517926 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.914944161 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.720433963 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.766625006 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.545688319 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.719681747 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.78715813 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.732104735 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.722676551 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.734082983 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.745915872 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.722259026 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.71947221 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.848136416 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.73129645 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.765037534 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.727157871 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.720422235 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.725795556 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.0898166 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.721382692 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.726585452 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.965066225 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.727675389 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.721198775 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.614464312 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.544197255 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.809349138 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.722391532 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.727091947 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.720797772 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.940778837 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.722589014 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.720481272 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.724389469 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.893849971 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.720849877 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.848685284 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.721057272 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.221032588 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.721287163 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.72101652 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.539063056 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.649791551 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.721737905 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.72172559 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.724472432 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.721768091 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.721909849 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.734413732 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.530532241 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.800173143 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.723847832 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.724855473 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.72739029 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.722069142 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.90853778 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.723040866 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.721155062 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.776273116 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.832708613 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.063817582 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.849122344 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.724772365 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.790071544 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.816204969 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.723313662 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.722512394 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.722676399 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.722732196 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.804689925 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.722785723 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.88029359 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.730260829 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.724767751 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.773732235 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.723671451 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.791991538 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.724502047 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.640054574 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.724731552 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.722939464 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.049184013 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.722973032 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.789868824 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.723990299 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.72411586 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.723384975 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.856465124 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.848630611 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.526477176 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.724646562 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.462206498 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.726636008 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.868916529 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.846385768 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.915251026 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.723988561 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.805508847 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.728170585 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.725955717 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.724462344 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.755896799 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.724519164 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.782610145 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.727137871 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.094806663 seconds)
  done (took 396.665817732 seconds)
done (took 771.546905036 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.406275468 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.3746835 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.490420146 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.402504415 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.37756901 seconds)
  done (took 13.720138579 seconds)
done (took 15.387355428 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.815304292 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.816470229 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.749782076 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.815249502 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.745895586 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.81496855 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.796111607 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.750487738 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.782990323 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.750898834 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.783871511 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.750249486 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.737864058 seconds)
  done (took 24.779397835 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.965972973 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.967128071 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.79876333 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.95612364 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.77332741 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.97379017 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.894864847 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.876824637 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.885604038 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.742242669 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.738864709 seconds)
  done (took 22.244119003 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.96885246 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.962859024 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.801684263 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.971602361 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.783196096 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.976516962 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.899780015 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.886035732 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.887362254 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.742681913 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.739079148 seconds)
  done (took 22.289489857 seconds)
done (took 70.980856549 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.734541159 seconds)
  done (took 3.404220038 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.756957012 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.893454202 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.740046689 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.738933963 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.734270244 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.737854679 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.73896566 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.733757411 seconds)
  done (took 15.744723952 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.732127803 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.734202523 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.735346593 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.731728851 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.734703536 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.731195505 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.731611067 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.734573206 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.732046621 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.731213815 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.734528542 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.734291572 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.731820407 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.732177664 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.734106872 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.734012133 seconds)
  done (took 29.402822899 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.734233132 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.732057992 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.733173886 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.733114592 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.732806462 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.733127425 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.733582859 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.732912326 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.732784555 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.733154689 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.733185332 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.732634532 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.734252072 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.732781125 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.733431215 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.733434713 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.733229456 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.732825119 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.737680307 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.733109996 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.734309356 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.733758382 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.734495604 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.733263879 seconds)
  done (took 43.278517974 seconds)
done (took 93.50048864 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.445355062 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.177081654 seconds)
  done (took 8.294203914 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.738414636 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.736016767 seconds)
  done (took 5.184979611 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.736106219 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.736527626 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.737303332 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.736432886 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.73661653 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.73729577 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.737112311 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.737266604 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.736514474 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.738016105 seconds)
  done (took 19.042977762 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.737304732 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.736980485 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.73460683 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.737512822 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.737183734 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.734546744 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.73681057 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.737387319 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.737336658 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.734988506 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.737443494 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.734941077 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.737857633 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.734646365 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.737446341 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.735483309 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.734783868 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.736149987 seconds)
  done (took 32.927864909 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.737113606 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.737831862 seconds)
  done (took 5.150052394 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.735460593 seconds)
    (2/7) benchmarking "second"...
    done (took 1.735440673 seconds)
    (3/7) benchmarking "month"...
    done (took 1.735486604 seconds)
    (4/7) benchmarking "year"...
    done (took 1.73521333 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.734743605 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.735226243 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.735795185 seconds)
  done (took 13.82278804 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.738914262 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.896778096 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.967260018 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.41900726 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.739555723 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.742078162 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.68611747 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.74203177 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.743972753 seconds)
  done (took 19.351698707 seconds)
done (took 105.447740637 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.556934292 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.734593509 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.109540251 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.779597973 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.790962209 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.031904456 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.737386646 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.956947346 seconds)
done (took 42.374146703 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.742931417 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.211986786 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.218704571 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.667366692 seconds)
  done (took 11.773686295 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.719546911 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.289351582 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.769445927 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.32957206 seconds)
  done (took 19.795260492 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.114158243 seconds)
    (2/2) benchmarking "read"...
    done (took 2.088667772 seconds)
  done (took 5.88334321 seconds)
done (took 45.871858735 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740346048 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.73734295 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.740275579 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.740145195 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.737696131 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.740173816 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.738052585 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.739620352 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.739882948 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.740929223 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.740362479 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.740162918 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740231257 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.737580498 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737286426 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739927559 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.738086292 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737903057 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.739561375 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.737274582 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.73761623 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.740673509 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.738503405 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.73739627 seconds)
  done (took 43.414127253 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.741048438 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.739688091 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.741523252 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.741082254 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.738930161 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.74103058 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.741538529 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.737816618 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.741521406 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.740888742 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.73834634 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.738993511 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.740923347 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.738767899 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742695242 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.739096379 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.74135688 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738402973 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74144338 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.739155797 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.743487212 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739025229 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.739064451 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.741498967 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.739239165 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.739513265 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.74163969 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.739638704 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.742147941 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.739445949 seconds)
  done (took 53.886965068 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.746653652 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.751714152 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.741480923 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.742229023 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.741650707 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.74266543 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.742005504 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.741962259 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.743093662 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.743663097 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.742596411 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.742893601 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.742901623 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.743017363 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.743096564 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.743233485 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.743355167 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.743228041 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.743503721 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.742976129 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.743490428 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.742382702 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.74306202 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.744005651 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.74316087 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.743998933 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.743412307 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.743429662 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.74418706 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.744273198 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.743586887 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.743501012 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.743818582 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.744236929 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.744345137 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.743824901 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.748507591 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.752787188 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.743931181 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.743792498 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.744392695 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.744132151 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.744210695 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.745063891 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.744250332 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.744520142 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.743804067 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.744936232 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.743780239 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.744340845 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.744602092 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.744540185 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.745289398 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.744940237 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.74466822 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.745442597 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.745081377 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.745216548 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.745898855 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.74638449 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.745619103 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.746240288 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.74545722 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.745229912 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.74563062 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.745896579 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.746243535 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.745796618 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.746476172 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.746466755 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.745664985 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.745863999 seconds)
  done (took 127.283905959 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.746682101 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.74390773 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.743172087 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.743583508 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.743638678 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.746930603 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.744276696 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746313649 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744313237 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.746299338 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748176727 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.744423371 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743909002 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.748125736 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.747273981 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.74416077 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.746566916 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.74390252 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.746846981 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.747062983 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.746960337 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.74505698 seconds)
  done (took 40.085034347 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.74753018 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.747048662 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.744538284 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.747502245 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.744735283 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.748745497 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.748382504 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.747416189 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74752184 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745223482 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745275993 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7483049 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.744610739 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745914506 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.746057146 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.744785369 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748802083 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.746498372 seconds)
  done (took 33.123516993 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.746530848 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.74756186 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.748616379 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.74646219 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.746384584 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.748534099 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.746466703 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.748742248 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.748132462 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.747855001 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.74927237 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74965058 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.750606556 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746918836 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749046766 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.746147246 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.750691516 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746338514 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.750049138 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.74677458 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.74766106 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748956794 seconds)
  done (took 40.143173848 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749916062 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.749150978 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.747781792 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.747838291 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.747600373 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.750085391 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.750239227 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.747805292 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.750265547 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.749591501 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747279137 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.750016367 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.747069363 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.74961342 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.747904958 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748473156 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.751751035 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.74870471 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.749692087 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.747444807 seconds)
  done (took 36.665975817 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.750742206 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.750661431 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.750877444 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.751641315 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.751804819 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.752170594 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.751039547 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.750685296 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.750903103 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.752838484 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.752352753 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.752146222 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.751004362 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.75148225 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.751166342 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.751786948 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.752377793 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.752113874 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.752108678 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.752011024 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.752143365 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.752442932 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.752648218 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.753107523 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.751893809 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.752970829 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753115797 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.75135964 seconds)
  done (took 50.740710867 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.75239114 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.753512289 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.750698811 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.75011595 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.750382562 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.750404985 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.751232676 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.751300336 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.752746149 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.749628021 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.753032675 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.752139703 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.753056253 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.753640951 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.752971336 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.753069234 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753296771 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.751064158 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.751014795 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750554359 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.753055122 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75250939 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.753133381 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.749753629 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751387145 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.753647045 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.753005614 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.75227588 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753705437 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.750452708 seconds)
  done (took 54.249107009 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.771758867 seconds)
    (2/2) benchmarking "in"...
    done (took 1.772394157 seconds)
  done (took 5.233939688 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.749919132 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.754156649 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.753283833 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.750678925 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.750817687 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.754536478 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.754060712 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750679925 seconds)
  done (took 15.707715227 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.753999205 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.755126639 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.755077814 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.753714439 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.754627326 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.755619902 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.763243202 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.755930563 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.75741819 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.756368862 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.763519137 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.764246547 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.759758332 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.75533585 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.755314935 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.756412771 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.754906352 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.755971229 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.755887117 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.75470698 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.75498554 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.757770941 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.758157585 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.753676597 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.75825095 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.770823689 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.762078364 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.754921018 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.756886373 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.760656387 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.756756504 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.751576845 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.755149516 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.75546017 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.755606162 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.757005011 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.765897253 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.757431183 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.763551006 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.75610366 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.755248509 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.752998258 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.75839051 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.76058505 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.758507835 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.75622714 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.755348033 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.754179414 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.758259316 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.763405563 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.761025682 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.757345796 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.754503756 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.763557867 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.759491937 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765073224 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.757634842 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.760466152 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.767327208 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.772368449 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.772192622 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.764987201 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.759401781 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.757584437 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.768071854 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.780908219 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.765901722 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.754548416 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.755556814 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.758466185 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.767448466 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.774659753 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.767965518 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.757499138 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.759490353 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.758183446 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.760112925 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.758185045 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.767510327 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.761762203 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.758725296 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.758388357 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.769521896 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.781849154 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.757738169 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.757993797 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.759068395 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.758483516 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.759840043 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.771998308 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.757519519 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.758546291 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.760063675 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.759427243 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.761168062 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.758426437 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.758844156 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.761635087 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.756983289 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.758810271 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.759828472 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.763457572 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.772092294 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.761044016 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.759921538 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.76801976 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.758915439 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.760276998 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.770435323 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.758880216 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.760416376 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.760836495 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.768807352 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.757119568 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.764001108 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.768986023 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.760047998 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.762494833 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.760534822 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.759081429 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.77293372 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.788879207 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.761614235 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.76108277 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.767273619 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.771885601 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.761060696 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.765552563 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.760352539 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.757706006 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.758509235 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.763424737 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.761205631 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.762682671 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.761098408 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.763580594 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.758545645 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.761643378 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.760877656 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.762896475 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.764146027 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.76231798 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.763675584 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.764795098 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.761632419 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.76395159 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.771317268 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.763438039 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.763520307 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.764269408 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.759391103 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.762386112 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.766988363 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.762478626 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.762911801 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.76213629 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.761613094 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.762335894 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.762102257 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.76216789 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.762245734 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.764212419 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.768414288 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.763417539 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.768921528 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.762745325 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.759930587 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.763143663 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.762812038 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.764168619 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.762958459 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.76267408 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.767114282 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.771285339 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.763284044 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.764528581 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.76895541 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.763537288 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.763844444 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.764169585 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.767673773 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.772563993 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.764732098 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.773184771 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.764103715 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.765080993 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.764688611 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.76545596 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.764290133 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.764113027 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.768744105 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.772683524 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.780700862 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.775803082 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.766692817 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.76903625 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.768021506 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.769923147 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.771260323 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.763821043 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.76462503 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.764981062 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.764016019 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.764827097 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.768216157 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.764565751 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.765783476 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.765339187 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.765254812 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.764919717 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.764813035 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.768027779 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.768409872 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.762204298 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.765220706 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.766054288 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.764801402 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.763313273 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.764940765 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.764740641 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.765163552 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.765197905 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.778092047 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.763929618 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.767038657 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.768142103 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.766985317 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.765947109 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.765693294 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.769071679 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.768501484 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.774588054 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.768378931 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.76815504 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.774841648 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.767164715 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.766335426 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.769526124 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.766513166 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.763756888 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.770872023 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.7754435 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.766923787 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.766664983 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.767633622 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.768161356 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.768231321 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.776778272 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.764457709 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.768178949 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.768844686 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.771078165 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.764354591 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.769577647 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.768539012 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.768515767 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.770986508 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.766684194 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.767744384 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.770378399 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.767566818 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.767593949 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.7685019 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.772021615 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.775454511 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.774883318 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.768359327 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.771533504 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.769814127 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.772874931 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.770477943 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.768337006 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.76846611 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.78455339 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.776572577 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.776685642 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.772038743 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.767926087 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.775514259 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.77085646 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.774152506 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.768799903 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.770036161 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.769789368 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.76810763 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.766417363 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.770440682 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.767617449 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.77027777 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.770172063 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.77363073 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.769037839 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.769229771 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.770002914 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.768435595 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.769142504 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.769947812 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.768901133 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.774821358 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.771634175 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.770406032 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.770394137 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.778364576 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.770691298 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.772499605 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.769775334 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.770903399 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.769118813 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.772308534 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.770567253 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.773644218 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.777881264 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.773531679 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.782684293 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.77173553 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.782875669 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.773640242 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.782843297 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.787873482 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.774895581 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.772114223 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.773867483 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.771111684 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.779235577 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.77019502 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.772161642 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.776891246 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.771407126 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.771856164 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.771372233 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.770638099 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.771044093 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.772240419 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.781966693 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.773519634 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.77621227 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.774092543 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.768690161 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.771590635 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.771750952 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.771967762 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.779838404 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.772203617 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.774610344 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.771915235 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.773041058 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.771489206 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.77304181 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.771605586 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.768990807 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.773155144 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.783450341 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.776371991 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.778028405 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.772410589 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.784869873 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.772731554 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.78098604 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.772684614 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.773944847 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.772528781 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.772119262 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.77726885 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.77277257 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.776138809 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.773871196 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.774643064 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.778238028 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.772624161 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.777505649 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.774305147 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.773657377 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.77484473 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.783843412 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.796956584 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.775182734 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.7774281 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.771393974 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.776114371 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.780043428 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.773876477 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.773645602 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.778034719 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.784713171 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.781415484 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.777488609 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.774539275 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.776384418 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.774051749 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.773766104 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.774203377 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.774393949 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.774469472 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.776796644 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.774605228 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.781898889 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.773498826 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.777012807 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.777863259 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.777313619 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.787844119 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.775598156 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.777268611 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.775588356 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.77546674 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.777809923 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.777353108 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.775709972 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.777936814 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.775215532 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.779007012 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.783751213 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.783032136 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.780356418 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.775454649 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.776243156 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.777240859 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.778014759 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.776091633 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.775711329 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.776847748 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.778265379 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.776205639 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.778975624 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.776447049 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.775927643 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.778254775 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.775958123 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.780008961 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.784017492 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.778115276 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.77373678 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.776240576 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.77591442 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.775996286 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.779171123 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.788790262 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.78032957 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.788227503 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.786632329 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.78191297 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.778164421 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.781428052 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.786644466 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.776160961 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.779664727 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.777236474 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.7810185 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.779544 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.783442993 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.778139347 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.786887656 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.779608971 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.779024984 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.787984027 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.780199055 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.778403072 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.779987537 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.784384949 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.779442072 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.775791385 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.778465052 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.778424951 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.788217649 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.782252462 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.778769656 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.780544099 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.7776398 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.779798141 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78437733 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.778664338 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.780452454 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.77574966 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.780719607 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.779582962 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.778643673 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.777158715 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.780499056 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.781232514 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.783890002 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.787204893 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.776144424 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.783643697 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.78247758 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.779000101 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.777738296 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.777544472 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.774983322 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.774563504 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.779714509 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.777677796 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.78073396 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.781967161 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.779160703 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.779230492 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.780040818 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.778443319 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.781659391 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.789271653 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.785627914 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.774789455 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.778183988 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.779433947 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.782048262 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.778227139 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.777745929 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.780239641 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.782099753 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.777124026 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.777986909 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.7778417 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.781315592 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.796559476 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.778035399 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.77930394 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.780029435 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.785895507 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.778201301 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.776685999 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.779031038 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.782738147 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.783424909 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.786457655 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.781917295 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.789820584 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.780679983 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.783445941 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.787199179 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.786203526 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.793007331 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.787140403 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.781563056 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.78168125 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.788970381 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.800027482 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.774342173 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.784711227 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.805941747 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.775960127 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.776210285 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.774096608 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.774311333 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.772927926 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.777396646 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.773143395 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.775651652 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.771946613 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.77376927 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.775339559 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.781145525 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.775915616 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.773366784 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.772117016 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.773667894 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.775977108 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.768483935 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.773092214 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.77177721 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.7727172 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.770957764 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.772249558 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.772896704 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.788355579 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.784646599 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.770842955 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.772353745 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.768898802 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.777481432 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.77805406 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.783730296 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.778974116 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.772046482 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.771453831 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.776454165 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.772544824 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.768588722 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.772998438 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.77358331 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.774050726 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.769656884 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.788971965 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.780580434 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.778370108 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.773561124 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.773411569 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.772435728 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.774791942 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.772685653 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.772213961 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.77625283 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.774893412 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.77791294 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.773712223 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.772644131 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.777918227 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.780122941 seconds)
  done (took 1057.261375519 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.769221512 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.769447828 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.770962866 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.769724644 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770709233 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.770086717 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770418945 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.769702218 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.769031373 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.769994416 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.771073001 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769555585 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.770093898 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.770281294 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770593336 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.769934593 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772191035 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.769971407 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.770161847 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.770350844 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.770123582 seconds)
  done (took 38.88325765 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.772541138 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.770049055 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.770742179 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.773084731 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769867018 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.774418249 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.770201069 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773256185 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.773544086 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770985057 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.772878205 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773807464 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.770825962 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.770599426 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770470085 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773291732 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.774384793 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770732356 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.774651324 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.771325266 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.773628675 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.771661113 seconds)
  done (took 40.697121433 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.773797503 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.774177285 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.774113271 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.771736822 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.773051203 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.770984077 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.769332536 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.768801175 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.769118566 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.771005497 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.769979302 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.769655712 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.776200861 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.773394471 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.772615693 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.767584786 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.91200446 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.767564248 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.766448806 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.767612601 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.763870821 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.774375537 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.765176715 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.763709033 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.765778872 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.766953185 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.76573249 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.767454154 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.765762496 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.767709622 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.771211075 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.765863715 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.765886715 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.769980363 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.766056922 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.76853168 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.770255642 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.766904245 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.762864479 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.766337669 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.776738156 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.786021162 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.765466401 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.774376836 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.765834025 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.766094103 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.769758233 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.774041723 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.762966642 seconds)
  done (took 88.553412892 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.767299317 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.765446099 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.763119705 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.765714111 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.766676482 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.765877566 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.766238122 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.765370955 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.763500999 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.762632963 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.767238354 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.765585258 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.764089336 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.766480215 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.766949081 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.763219443 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.764345109 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.766813919 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.766657988 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.766985677 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.76405581 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.766694741 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.767212539 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.764289104 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.766425811 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.765540144 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.765843902 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.766702771 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.765748511 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.764169064 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.76682559 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.766686319 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.766804837 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.765475806 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.76619603 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.766432771 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.767231645 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.764343166 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.767036122 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.764956586 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.767622076 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.766340639 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.765790904 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.767196883 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.764628886 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.764989603 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.763817931 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.764524971 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.764664611 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.767138594 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.766513727 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.764525929 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.766767283 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.763096551 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.766468407 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.766355016 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.764016958 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.76368274 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.766296078 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.764891954 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.765880633 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.768384937 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.767880276 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.765144616 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.765707027 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.763413483 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.763160491 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.766410045 seconds)
  done (took 121.768042749 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.765230077 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.765495864 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.765558782 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.765838974 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.766275138 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.765479074 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.764833126 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.765233826 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.7658261 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.765417809 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.765741412 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.762946728 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.763770287 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.763212075 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.764771769 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.763617982 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.76353326 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.762382894 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.762450829 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763060548 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.763005322 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.762405413 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.762954705 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.761538536 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.762175688 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.761771238 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.761426165 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.76254736 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760367702 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.76273917 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.762189402 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.761119762 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.761172561 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.761995216 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.762583623 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.761404316 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.76180215 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.761656063 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.762271803 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.76299182 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.761111159 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.761823867 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.761502092 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.762490605 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.763616269 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.762032074 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.762080622 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.762424615 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.761085128 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.762493351 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.762639995 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.762419955 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.761103742 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.762021572 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.76240801 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.761964979 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.762779517 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.761407797 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76141692 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.761243042 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.761897148 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.763123821 seconds)
  done (took 111.000753173 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.761467706 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.761205026 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.758596034 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.758519198 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.761116399 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.758502185 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.76074437 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.760550488 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.761434549 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.761068512 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761258434 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758710333 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759061041 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761658855 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.758281156 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759720246 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759395758 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.758982657 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761219539 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.759115068 seconds)
  done (took 36.898205973 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.758909394 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.760682654 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.758051418 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.759045846 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.761557432 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.75926758 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.761079767 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760686663 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758268319 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761840606 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.760381744 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.761155724 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759450131 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.758932934 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.762010745 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.75903198 seconds)
  done (took 29.857639322 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.758509946 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.760839618 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.762120422 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.760951101 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.758063265 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.757985493 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.762518143 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.758349539 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.758793776 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.761717642 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.761554265 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.761479895 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.762046981 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.76069402 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.758982065 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.761572232 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.758664013 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.759215436 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.760649382 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.761503972 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.759827767 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.758322392 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.760915984 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.762401321 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.759585632 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.759613892 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.758984732 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.759123092 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.75881322 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.762020757 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.757274886 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.758656896 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.758097946 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.758546899 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.761967031 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.758265441 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.760575484 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.760399641 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.760466502 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.76058039 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.764154903 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.759167263 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.760106722 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.760267569 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.758533108 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.760766289 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.758530741 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.757792435 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.758118513 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.757624791 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.760876666 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.762724127 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.759115329 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.760788404 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.760157253 seconds)
  done (took 98.498027786 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759790166 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.759719679 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.756695409 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.760220528 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.761242543 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.758763273 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.759307788 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.763031911 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757815904 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.760471231 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.759648955 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.760489885 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759723604 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.761070249 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.75852656 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.759970938 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.758632534 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.75749535 seconds)
  done (took 33.368629942 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.757877255 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.75874807 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.759870153 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.758059368 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.757116251 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.762943349 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757087664 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.760451775 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762362478 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.764419923 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766101215 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.769723003 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767696895 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.762598783 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.758038723 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757378932 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.760868135 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.759385115 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.756649278 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.757083313 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.75984307 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76067762 seconds)
  done (took 40.43241588 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.760300956 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.76021207 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.775666329 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.800198795 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.787296865 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.76065595 seconds)
  done (took 12.339356699 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756880349 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759233523 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.757182373 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76220582 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75963739 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757039772 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.757671547 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.757169933 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759692502 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758168062 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756380743 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758757157 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759338153 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757069353 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759899835 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760075701 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757067144 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758564061 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757077878 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.760582774 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757446981 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.758665009 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756080131 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.757832787 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75575398 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756651532 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760518914 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75775757 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757212937 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760076929 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75930387 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.756621847 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760429754 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.758479241 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.760877763 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759623271 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75762373 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761420088 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760370959 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757564449 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.760968099 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760261927 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760694627 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758069352 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760532418 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758129981 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757693102 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75802463 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75760479 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762881548 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761327812 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758171469 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.760723706 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761546781 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761727547 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761823176 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758672158 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.758432201 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761536491 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759484131 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.759614994 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760974227 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758543265 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75962421 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761077109 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75916883 seconds)
  done (took 117.794452014 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759100066 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.760219856 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759912271 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76066881 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75967976 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760547993 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759206212 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759429015 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759397678 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760080843 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762693398 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759699033 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760138858 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760124126 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760074002 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760743687 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760985011 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.759885346 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760398318 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762606323 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759886947 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760206178 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761215839 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759562124 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761344083 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762671843 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760843369 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761042099 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760166867 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761274592 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760618844 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760499713 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760891378 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.762252888 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.760865976 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761821441 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760506497 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761299799 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761247883 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76421018 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761901887 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763840562 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761394169 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762138029 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762550198 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761444711 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762208896 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760917891 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761632581 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761360269 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763418308 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762772052 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76172164 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761554947 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761437403 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761811654 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763039681 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761609155 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762087278 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764762219 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762550215 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763403984 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764879281 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763587656 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762380597 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762475686 seconds)
  done (took 117.951194663 seconds)
done (took 2447.514128443 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.83713679 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.846782099 seconds)
  done (took 15.38590865 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.925904969 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.880203894 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.765260606 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.79456112 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.765524012 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.788092904 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.780390195 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.765239978 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.764783129 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.765477593 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.766201526 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.948717273 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.769257769 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.765146611 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.76456265 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.858072235 seconds)
  done (took 50.571488438 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.768618404 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.770023014 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.778296881 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.771347027 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.768692534 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.779619702 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.801440709 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.773063803 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.802327 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.790985287 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.843739825 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.786081551 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.775384613 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.823862535 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.786815249 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.790350923 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.875427316 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.849477918 seconds)
  done (took 34.036799741 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.851958909 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.779306404 seconds)
  done (took 10.347819302 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.801094543 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.771770637 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.807720017 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.79279217 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.776540224 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.775729096 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.788734902 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.79403497 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.784176269 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.796951746 seconds)
  done (took 69.601740237 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.781769629 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.776161585 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.776259661 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.775236527 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.769584329 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.774321408 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.776026173 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.771561139 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.455697481 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.811152888 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.781594251 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.782162613 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.776575163 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.777939299 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.773806124 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.800773582 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.941782403 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.773773665 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.773963767 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.781688462 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.777240168 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.827221239 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.789245942 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.776616088 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.806717798 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.454553988 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.783201941 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.782424434 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.897605195 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.775663084 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.77699323 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.776843135 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.77928967 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.160430441 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.073010608 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.776313727 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.785110516 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.784135649 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.77430352 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.886408395 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.777438269 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.782918556 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.739408096 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.060856356 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.877544532 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.821931017 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.172466164 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.780900451 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.778955979 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.807787476 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.781012018 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.779036323 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.792403132 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.290162631 seconds)
  done (took 127.633126294 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.798465599 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.257917037 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.927673532 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.773132765 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063782107 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009613239 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.775001897 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.823197148 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.80314849 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.023347828 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.951981125 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.891701949 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.774640812 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.774750085 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.775803765 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.772524368 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.922112495 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.844262706 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.773897447 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.772886787 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.809314785 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.041037825 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.899094857 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.925116778 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.79775459 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.997997158 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.90016462 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.891149711 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.774501347 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.772376513 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.841221944 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.782159801 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.775740249 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.776209346 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.939642035 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.880045313 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.87100166 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.776931017 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.824332447 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.776372382 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.809260217 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.994724063 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.882419821 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.912648671 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.023099672 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.001625259 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.77652397 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.774169305 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.777897764 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.96701466 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.988787885 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.028898967 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.901843736 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.776850343 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.112092249 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.774822924 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.857866112 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.025274725 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005483836 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.886312842 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.809083502 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.776829332 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.775022365 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.089317272 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.776768454 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.88293278 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.1554856 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.77777015 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.882458124 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.888827112 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.007973762 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.015871702 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.807285263 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.79601816 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.818202606 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.058224126 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.846194684 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027067457 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.819200853 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.777095327 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867743482 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.781067658 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.949263156 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.092066899 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.039958089 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.818548697 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.778419168 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.775186049 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.023915399 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.025378159 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.049118845 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.018865095 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.941382696 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.824539344 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.77693683 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.776102391 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.821152893 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.909116135 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.778250665 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.13802076 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.022540273 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.553880201 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.80945928 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.096065223 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.913804471 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.778511684 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.777899278 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.775671289 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.982570267 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.819311552 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.783828729 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.777012366 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.024096201 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.726953876 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.888249627 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.475220343 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.844859223 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.779107292 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.043922226 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.786214195 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.02546247 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.808144128 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.090278982 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.301581369 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.821665768 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.97320403 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.021229532 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.780007216 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.040856336 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.091918391 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.90059644 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.032590548 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.516846633 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.778360203 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.071703914 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.784832873 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.808728033 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.948367717 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.787798871 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.933923944 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.787837229 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.087109015 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.805368254 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.94816608 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.041939359 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.054491002 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.824600003 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.831644574 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.8234192 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.913741466 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.782482205 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.900034105 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.967265057 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.954238318 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.781609897 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.3378326 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.781424544 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.927208442 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.077086675 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.804419934 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.850395153 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.781850384 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.785573084 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.87242174 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.809717488 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.43317788 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.780039377 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.949070567 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.738648454 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.219804631 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.778976049 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.088860299 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.991323216 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.781185673 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.784686734 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.581727741 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.778560811 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.937767008 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.939470558 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.611031489 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.781745621 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.997063109 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.7828921 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.913210102 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.784531096 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.782283132 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.130793477 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.814476828 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.782050669 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.791586548 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.781288862 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.781723181 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.013844109 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.810026256 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.502692829 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.919983126 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.030178697 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.093002726 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.044094849 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.830554797 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.786109337 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.086707211 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.818675643 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.856091108 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.78352581 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.806474133 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.023875773 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.784519811 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.008413028 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.068440609 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.80229201 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.832131877 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.783796443 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.880058422 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.782096364 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.923427581 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.878486561 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.784668665 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.785573724 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.900714995 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.909206514 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.976781353 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.783777301 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.790059644 seconds)
  done (took 934.844484985 seconds)
done (took 1244.121887053 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.783008005 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.783204064 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.773250338 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.785855566 seconds)
  done (took 28.84856819 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.791228286 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.788767041 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.790508699 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.788951343 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.789697994 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.789146558 seconds)
  done (took 12.462047102 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.832855062 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.785931825 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.785524026 seconds)
  done (took 21.128003563 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.857607724 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.187370694 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.898542815 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.22429235 seconds)
  done (took 9.891658824 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.791789178 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.790585958 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.79072667 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.792031275 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.791174643 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.79221911 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.791277955 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.790957312 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.793416837 seconds)
  done (took 17.84926021 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.070642681 seconds)
done (took 95.972296775 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.620183421 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.159127457 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.24934986 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.793256907 seconds)
    (5/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.86835269 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.180980099 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.941664556 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.187153667 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.794071933 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.832666274 seconds)
    (11/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.909312427 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.816618354 seconds)
    (13/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.224216127 seconds)
    (14/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.996866233 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.040307438 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.174082171 seconds)
    (17/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.778498608 seconds)
    (18/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.508692543 seconds)
    (19/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.895399147 seconds)
    (20/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.851075175 seconds)
    (21/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.232192013 seconds)
    (22/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.801975941 seconds)
    (23/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.679233031 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.794101415 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 3.120691353 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.776699195 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.903536551 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.794291172 seconds)
    (29/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.809190992 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.913298336 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.791643589 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 5.050295241 seconds)
    (33/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.972494629 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.981374865 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.899017638 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.120474643 seconds)
    (37/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.79621083 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.866403286 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.602805185 seconds)
    (40/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.987604413 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.81682659 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.573178518 seconds)
    (43/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.002698494 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.785542296 seconds)
    (45/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.258298645 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.929794419 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.90422539 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.132077637 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.057117523 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.880848349 seconds)
    (51/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.783218116 seconds)
    (52/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.481765216 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.914718808 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.823528974 seconds)
    (55/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.958310869 seconds)
    (56/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.869008722 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.851790333 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.790871555 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.819270597 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.163367953 seconds)
    (61/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.285799664 seconds)
    (62/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.188386454 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.045824495 seconds)
    (64/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.206328577 seconds)
    (65/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.160371613 seconds)
    (66/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.862563795 seconds)
    (67/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.887340996 seconds)
    (68/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.172778459 seconds)
    (69/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.813234069 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.673135079 seconds)
    (71/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.118824118 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.866365912 seconds)
    (73/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.809300556 seconds)
    (74/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.79270378 seconds)
    (75/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.103246453 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.308751265 seconds)
    (77/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.796922334 seconds)
    (78/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.710504549 seconds)
    (79/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.985419775 seconds)
    (80/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.887426675 seconds)
    (81/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.874754827 seconds)
    (82/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.936938691 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.461188957 seconds)
    (84/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.686333498 seconds)
    (85/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.831559845 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.872595315 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.089755288 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.520682479 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.084293428 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.059708305 seconds)
    (91/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.993776675 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.780880336 seconds)
    (93/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.016286484 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.2850064 seconds)
    (95/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.116493076 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.802680383 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.928714579 seconds)
    (98/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.810238892 seconds)
    (99/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.098538888 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.706962175 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.098253982 seconds)
    (102/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.369516126 seconds)
    (103/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.703436713 seconds)
    (104/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.90114232 seconds)
    (105/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.387213717 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.098998074 seconds)
    (107/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.786252997 seconds)
    (108/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.345884156 seconds)
    (109/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.304541073 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.02777281 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.857636144 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.892105564 seconds)
    (113/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.924169358 seconds)
    (114/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.983576716 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.785264283 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.814319649 seconds)
    (117/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.944412402 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.124909021 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.481681083 seconds)
    (120/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.872784684 seconds)
    (121/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.827325783 seconds)
    (122/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.073104868 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.962952026 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.799687819 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.394573451 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.897920937 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.062858308 seconds)
    (128/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.799860899 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 2.273373706 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.823692964 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.780558595 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.091357454 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.710620981 seconds)
    (134/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.210589545 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.871698364 seconds)
    (136/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.973454514 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.023180725 seconds)
    (138/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.8837318 seconds)
    (139/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.311542486 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.086557176 seconds)
    (141/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.101312907 seconds)
    (142/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.825011314 seconds)
    (143/309) benchmarking ("sort", Int8, false)...
    done (took 4.75687419 seconds)
    (144/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.956432294 seconds)
    (145/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.909055731 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.903369474 seconds)
    (147/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.890847211 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.058670166 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.172633901 seconds)
    (150/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.354302052 seconds)
    (151/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.473189985 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.174407428 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.139016302 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.022549602 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.826781595 seconds)
    (156/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.948668809 seconds)
    (157/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.804727829 seconds)
    (158/309) benchmarking ("map", identity, Int64, false)...
    done (took 4.591573592 seconds)
    (159/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.175936741 seconds)
    (160/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.111437167 seconds)
    (161/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.816696931 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.70581816 seconds)
    (163/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.424351129 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.824378393 seconds)
    (165/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.304961055 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.170518144 seconds)
    (167/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.403705728 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.820357632 seconds)
    (169/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.726777756 seconds)
    (170/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.4859781 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.093130959 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.037103436 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.019503768 seconds)
    (174/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.824189447 seconds)
    (175/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.735046859 seconds)
    (176/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.531342954 seconds)
    (177/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.010567649 seconds)
    (178/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.920869435 seconds)
    (179/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.784226129 seconds)
    (180/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.897542084 seconds)
    (181/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.479971125 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.894021633 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.455343 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.884371803 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.130712923 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.186517245 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.318491172 seconds)
    (188/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.882805799 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.980503554 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.904535005 seconds)
    (191/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.897787334 seconds)
    (192/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.903194585 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.801318969 seconds)
    (194/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.907261671 seconds)
    (195/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.828898943 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.786057982 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.840140145 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.969849696 seconds)
    (199/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.787845372 seconds)
    (200/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.964807523 seconds)
    (201/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.643457764 seconds)
    (202/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.837033828 seconds)
    (203/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.885811384 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.840063299 seconds)
    (205/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.930292417 seconds)
    (206/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.976166801 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.059750306 seconds)
    (208/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.787572704 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.981885789 seconds)
    (210/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.309661284 seconds)
    (211/309) benchmarking ("sort", BigInt, false)...
    done (took 6.803368491 seconds)
    (212/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.150877804 seconds)
    (213/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.904567757 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.225858627 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.907957255 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.731207362 seconds)
    (217/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.157928776 seconds)
    (218/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.072665845 seconds)
    (219/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.149440697 seconds)
    (220/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.867973241 seconds)
    (221/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.810167115 seconds)
    (222/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.401076756 seconds)
    (223/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.9261741 seconds)
    (224/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.919811576 seconds)
    (225/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.102205551 seconds)
    (226/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.836469265 seconds)
    (227/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.822996987 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.792372197 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.526084879 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.034430176 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.75433034 seconds)
    (232/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.791676943 seconds)
    (233/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.938955889 seconds)
    (234/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.187026932 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.810108804 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 8.219216538 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.827135411 seconds)
    (238/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.0888054 seconds)
    (239/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.908012137 seconds)
    (240/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.826966717 seconds)
    (241/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.379350735 seconds)
    (242/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.806256222 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.198984007 seconds)
    (244/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.843902124 seconds)
    (245/309) benchmarking ("sort", Float64, false)...
    done (took 5.622375139 seconds)
    (246/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.807602119 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.123255208 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.805466049 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.856321159 seconds)
    (250/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.786727302 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.154682801 seconds)
    (252/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.065772163 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.998354948 seconds)
    (254/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.86753806 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.907152816 seconds)
    (256/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.938051165 seconds)
    (257/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.962230326 seconds)
    (258/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.806374741 seconds)
    (259/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.957665778 seconds)
    (260/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.892651933 seconds)
    (261/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.805840996 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.798569222 seconds)
    (263/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.831650139 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.900908908 seconds)
    (265/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.838555173 seconds)
    (266/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.830377759 seconds)
    (267/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.819800037 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.806382474 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.04658912 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.836697642 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.053721442 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.116983886 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.195955764 seconds)
    (274/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.977972011 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.200667433 seconds)
    (276/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.095903077 seconds)
    (277/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.806613255 seconds)
    (278/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.191315316 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.460711946 seconds)
    (280/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.952350776 seconds)
    (281/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.864027264 seconds)
    (282/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.310380635 seconds)
    (283/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.15487947 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.836162992 seconds)
    (285/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.020603816 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.957165384 seconds)
    (287/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.794260801 seconds)
    (288/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.8704004 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.88690692 seconds)
    (290/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.939787738 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.894647419 seconds)
    (292/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.122655135 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.932760516 seconds)
    (294/309) benchmarking ("sort", Float32, false)...
    done (took 5.564090787 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.003794403 seconds)
    (296/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.789497112 seconds)
    (297/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.994086176 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.021956535 seconds)
    (299/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.792781603 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.287695515 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.806344021 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.055690207 seconds)
    (303/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.284907668 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.583239186 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.828913573 seconds)
    (306/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.889597723 seconds)
    (307/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.650720469 seconds)
    (308/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.843157442 seconds)
    (309/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.401698853 seconds)
  done (took 1004.479067869 seconds)
done (took 1006.219886117 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.83889825 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.833221676 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.816627743 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.838067654 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.929285929 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.849720355 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.826933459 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.819334365 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.864773742 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.867083397 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.816464843 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.856143195 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.819981222 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.818777166 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.816586324 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.831880773 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.133702699 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.847100692 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.836384353 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.827551142 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.833796996 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.81699889 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.867524271 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.850622957 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.822611685 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.820230992 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.821526543 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.838972547 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.930541234 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.822696142 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.821346385 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.829818722 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.131354327 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.843885887 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.814385573 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.838403614 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.82972951 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.827390566 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.822594951 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.850661203 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.282763867 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.826955638 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.821485953 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.820300831 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.820415126 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.823941408 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.821326188 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.824419601 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.832932147 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833611727 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.273560486 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.841107582 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.823040604 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.819782597 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.830138272 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.820240418 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.824350423 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.838508835 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.839592844 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.83668872 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.127996106 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.851947486 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.821333218 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.836612445 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.827876779 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.313030918 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.824974304 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.824902142 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.280924094 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.834489887 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.312034731 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.838684445 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.822308615 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.834695795 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.85216903 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.134696355 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.843224673 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.820073416 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.829034515 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.820056325 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.83094008 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.833840316 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.826309225 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.822196855 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.835699929 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.855519986 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.832752072 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.824308692 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.830448139 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.841957726 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.829361656 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.833400354 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.825942598 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.816980364 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.83152588 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.82520273 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.825876418 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.826058302 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.82770083 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.832969251 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.278869416 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.845416744 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.819889279 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.818540505 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.821921751 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.836461089 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.2788526 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.831376205 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.844417529 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.869356416 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.823543745 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.128380779 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.854623264 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.839720359 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.831610507 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.825575828 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.818274824 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.129842019 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.305633632 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.845646275 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.824616349 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.822995183 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.839571564 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.82491025 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.819900326 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.138495589 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.85186269 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.837995335 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.945226705 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.834053677 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.856450725 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.822504381 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.82702255 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.85342386 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.840739114 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.856380056 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.827136642 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.840163888 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.840849728 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.82111306 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.836183991 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.835565585 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.824972408 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.830071475 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.818621283 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.854679845 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.838114078 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.837791673 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.845537429 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.945712366 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.821846516 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.130851157 seconds)
done (took 286.785257334 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.89258094 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.816399456 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.921454212 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.82049512 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.907974987 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.911213978 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.81808519 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.817970934 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.818862285 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.203549345 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.818841646 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.819267517 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.819271032 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.819445115 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.907134061 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.821746261 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.818170233 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.166400223 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.822880526 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.895764126 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.819807303 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.820033299 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.822212822 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.204340578 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.815603437 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.822598501 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.894526823 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.823340049 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.16933706 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.823795012 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.817168786 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.170220121 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.916123569 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.840395458 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.832553813 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.829126533 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.910054915 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.82644453 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.906396431 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.90516103 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.924257916 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.862562601 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.820131873 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.816430358 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.826705848 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.824523931 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.820674447 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.860156249 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.823848497 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.820589481 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.167035874 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.83341282 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.821650006 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.820483851 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.820713367 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.854064234 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.822068353 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.824321648 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.91591334 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.824525009 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.889016277 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.20794728 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.207234703 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.824746493 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.819260401 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.821357988 seconds)
  done (took 181.234719321 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.893530161 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.900004555 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.894760906 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.831493484 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.874136339 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.896962032 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.832191512 seconds)
  done (took 14.879612592 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.832570318 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.824608077 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.876252793 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.875358373 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.825145994 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.976535699 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.824356976 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.83709063 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.822599648 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.87838624 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.827217727 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.824968996 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.831302355 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.821907399 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.875012059 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.837658958 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.942262799 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.826729593 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.827168594 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.983777748 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.823190656 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.832100621 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.88157799 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.838293197 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.826193373 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.832172808 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.413538437 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.826172038 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.822850791 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.827085805 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.823125633 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.865840626 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.825848331 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.822082114 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.822877229 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.942560638 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.826619369 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.82397173 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.826302698 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.823422233 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.825839997 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.825978531 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.826074131 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.824080491 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.825811177 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.854039207 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.826612248 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.827193258 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.827462939 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.827908757 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.879000536 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.82814712 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.823757795 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.824825924 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.883486528 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.834565721 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.827737841 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.824793086 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.827015663 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.824296441 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.98526055 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.87669953 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.826781237 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.876527175 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.826513258 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.827615816 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.827602476 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.828343981 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.883838079 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.827051222 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.877108203 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.824765774 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.987307543 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.853326951 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.828772482 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.831781132 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.832619495 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.82839656 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.824297482 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.83509009 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.826170676 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.829664238 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.837518997 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.826527876 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.826822352 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.938323155 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.938500408 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.826743208 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.843414043 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.83833898 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.826292509 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.884267333 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.828696452 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.826454823 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.884582996 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.945519769 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.887144468 seconds)
  done (took 201.651023037 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.835584431 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.837465163 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.831885564 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.846162909 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.830246933 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.829534766 seconds)
  done (took 12.773174388 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.832332249 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.83154903 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.830180511 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.829664642 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.830574486 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.832368511 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.833400779 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.834343191 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.835364817 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.829790817 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.8309284 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.83180855 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.831178766 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.831015677 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.831350575 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.83026824 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.831827749 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.827676295 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.830165088 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.831948358 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.975514876 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.830566881 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.831465564 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.269329057 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.835970192 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.830692702 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.839452198 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.830780441 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.830754986 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.837873561 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.835450255 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.831954572 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.832973773 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.838517726 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.836475544 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.833374243 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.836915196 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.832966533 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.829640734 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.832918534 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.834073681 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.832300442 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.832082108 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.833824527 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.834282536 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.838925482 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.837848863 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.840006573 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.832430635 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.83369349 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.832948859 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.83226198 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.832324423 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.833654269 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.83665868 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.838071717 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.839312049 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.833815866 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.83193168 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.834705343 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.833921442 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.833411427 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.835876763 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.837762964 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.840439841 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.835211517 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.835177502 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.839132892 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.833313554 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.833338735 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.834604592 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.831295863 seconds)
  done (took 135.364332547 seconds)
done (took 547.672288366 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.099193988 seconds)
  done (took 8.863446387 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.92562214 seconds)
  done (took 8.791111056 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.317097814 seconds)
  done (took 10.084470792 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.848565556 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.859224284 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.843238547 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.835671473 seconds)
  done (took 29.167288056 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.831839748 seconds)
  done (took 8.599806054 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.844525323 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.827361342 seconds)
  done (took 15.476650563 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.926702523 seconds)
  done (took 8.695454946 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.885638338 seconds)
  done (took 8.659029195 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.850569425 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.837134316 seconds)
  done (took 15.469585209 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.816544748 seconds)
  done (took 8.58422097 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.526357767 seconds)
  done (took 11.30399135 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.83899375 seconds)
  done (took 8.621292552 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.833032962 seconds)
  done (took 8.601238629 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.023956731 seconds)
  done (took 9.792641851 seconds)
done (took 162.475234805 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.834013422 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.831549204 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.835337634 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.831454768 seconds)
  done (took 29.100724086 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.870271636 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.869397064 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.871554481 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.880633709 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.873311206 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.870477753 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.862188662 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.862928859 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.882071479 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.874636826 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.871826909 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.873190249 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.870346803 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.863500274 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.872653478 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.871947908 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.881360436 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.872008386 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.863998575 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.874070194 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.838042694 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.881628544 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.874850855 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.838152098 seconds)
  done (took 46.63491011 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.038470164 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.910027546 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.993711274 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.891593235 seconds)
  done (took 9.603621272 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.889732495 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.891216153 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.902989545 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.942720872 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.974831682 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.901105557 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.86505531 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.860088314 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.846582264 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.89197625 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.967048944 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.907253435 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.974653348 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.838515235 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.026960168 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.838940454 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.838204065 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.891573644 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.942191673 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.956461161 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.839132494 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.890920508 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.894410801 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.908627631 seconds)
  done (took 47.451693852 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.837747867 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.847006264 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.844197589 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.838308334 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.838807646 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.838599356 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.845047866 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.840376774 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.860163903 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.839127156 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.838373514 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.838540157 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.837853157 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.838921102 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.838637729 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.85246027 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.853647747 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.838757397 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.843021209 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.845294422 seconds)
  done (took 38.626247838 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.834172481 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.68827611 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.186248547 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.091172931 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.834218785 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.833999483 seconds)
  done (took 31.240066463 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.85478536 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.910457498 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.850353842 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.89716896 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.978962384 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.850246321 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.842225878 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.912081459 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.958408807 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.915764508 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.859699512 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.869209084 seconds)
  done (took 24.471475382 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.83649016 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.836316429 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.837791329 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.854106709 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.852026038 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.851933942 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.847932385 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.835250999 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.856225868 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.863277995 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.851608033 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.853212842 seconds)
  done (took 43.952519981 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931166026 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.879512338 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.852649948 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.521134557 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.214008722 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047172109 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.487662029 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.167578792 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.840333256 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109880834 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.847114678 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947121516 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.091785291 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.365119368 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.872740175 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.292197793 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132481399 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039615296 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864428763 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.508616071 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900072639 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.042006755 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.58065999 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.893907135 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048805507 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.969896954 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.097981348 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.837877496 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969194978 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873936802 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848376036 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.837927714 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112344311 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209643157 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942533879 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848609573 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.455571892 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.554268709 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.82998424 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.672169429 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.56469725 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.966034119 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849516025 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839272974 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.773063374 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.011000848 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214681134 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.844390536 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.549407147 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.838932411 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.849660391 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935161082 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.842127113 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.654388811 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752232979 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.841673032 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.836883455 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845857697 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.41446371 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.939741135 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.060643875 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.816692971 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.933956784 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.511880206 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217407072 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.986464132 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.843231183 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844188501 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773540054 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.590358114 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894642377 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.188884015 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.861019191 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.490031679 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14349562 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.896057857 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.784287394 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102445154 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.411499316 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.817081417 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068322398 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841102451 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776338646 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.789569132 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.774883258 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095488061 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878448862 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.58292977 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882050732 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.16792684 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.851762768 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857425894 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865006474 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.065229023 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.728705093 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842058529 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.630723483 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.99403863 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863736656 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.171033479 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776172276 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.846063516 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098726671 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.054236322 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.938876449 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.333056791 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997836013 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.43978434 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.897970246 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.012408295 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.894392864 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.102817926 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899243206 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.947726307 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895673397 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.84260517 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128905119 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.454227209 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.98326999 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.851834797 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.970956853 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.154695418 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871093814 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925462123 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.852726017 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.843320895 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.591128075 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394078267 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.843859899 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.845571569 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.948391188 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.894536913 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.843714343 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792107732 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.470136511 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.920135335 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.858004931 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.067992205 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.444406378 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159145883 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778665192 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.172933888 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.900318204 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.067044694 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.485447851 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.92214378 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104712515 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.94397967 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.984737174 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89557888 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863645413 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9428113 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866350397 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.012961361 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.141777105 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.849342036 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.848606977 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.615644984 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.879892733 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84493114 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.850364671 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.60015324 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108999941 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.869219222 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.850859126 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.734244536 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.859910453 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911245805 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.853050049 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.855638793 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.385271738 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.560301557 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.85353108 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.430301947 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070393641 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85610906 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.592875306 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959843823 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.926986298 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.109095966 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90440678 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.781354108 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.557986633 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.539680345 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846399843 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.781512135 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.846002435 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855710366 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857510749 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.043946758 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.112567324 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889848501 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.520371508 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.890491783 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858027258 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.852233686 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848232584 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.35741089 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.949571461 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.057572003 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.898549799 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991491573 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.862564971 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.78132294 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.850837164 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852125804 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.849130789 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.848541165 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88787998 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.527797375 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23107039 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112670906 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.462806847 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862324473 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.558081708 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.906240829 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.848256919 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.656523823 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.044151041 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.883685728 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861582454 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.858780146 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.61001259 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.544761171 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.419541422 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163374266 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141635523 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276588366 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.0822883 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.880181273 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.184216776 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78444253 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.4059591 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908623319 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.19210577 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794411714 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932376443 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.492791354 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193270868 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862569952 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078670228 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.231595472 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.716091258 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874890024 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062038775 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884665858 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.023887782 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.815465394 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.374326817 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990483446 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.530475621 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061270493 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181114309 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.508013519 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.017611606 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.849543348 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.516479617 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933945855 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.560648538 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.022276055 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.085343346 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.75511513 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345257788 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.857564385 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.076020082 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189518388 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.031426495 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.975960094 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787627806 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.861674616 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.861396891 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.853168311 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.849347541 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.72552277 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.105226952 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863579764 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785777795 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.998334938 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136686271 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.75508486 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.85724172 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851804706 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137104208 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.414832575 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020805131 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.977222735 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.376474073 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86133828 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.790591006 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787130662 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.546356782 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.858451356 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.830719755 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054436083 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.956512805 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.77382794 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.964265389 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.106296625 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.108809385 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.866698287 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.114687708 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126507491 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.552650824 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878300189 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.953778572 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.516247039 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.965488376 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.853071644 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.08962793 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.614103718 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.080357171 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.888607579 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.813595639 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.854317526 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067807629 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.853859355 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.716650928 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087161458 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.577553261 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.89943373 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164568387 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928945404 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.722679426 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.903659779 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.94782062 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865058727 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932784484 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865142643 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.864977403 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.865660974 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901184245 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.72749254 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.981469196 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.868008665 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95150742 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.961767335 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.375915539 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.861138965 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118389513 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21178873 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.169133405 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912442086 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.85531098 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862641625 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790513001 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00461235 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.080875908 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129607883 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.987429254 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.973274509 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8813677 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.514096469 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.099763104 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103863446 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132339834 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.752244507 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.391671215 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.902667529 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.855982359 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867885514 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.067829997 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059988517 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151262714 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.00353612 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.962310423 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.221034079 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131303682 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.857088655 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.858396564 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.447201703 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.91041095 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.526435715 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.899895457 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.785733296 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136918352 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868063299 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229887453 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880434389 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.014090012 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.631403407 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.571960805 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.147946147 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.842162433 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.920746614 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12236218 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.226399285 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170615461 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92533783 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869704598 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.964541782 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005886618 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.746931752 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.85953124 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859170213 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909457696 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.568895401 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.869438702 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126140289 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167032403 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.856202027 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.752649135 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882748319 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.870066634 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.084106413 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115497091 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112986518 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870395422 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.865545603 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.679734918 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124606203 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91821722 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79567801 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.86407446 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958081845 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.108330484 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883387923 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.344528376 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.571802096 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124954556 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 3.136176452 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883419216 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.047990213 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.222773196 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173603069 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.393136765 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063203849 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.447855893 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.465536881 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169498834 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.86587908 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.035274225 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169456145 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.866348371 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.968613268 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905075172 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.120405254 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17150659 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.867473938 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.53489863 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.830931631 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.203660873 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415528974 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800052208 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.861719127 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.922644917 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.862252387 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.99423591 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.873153017 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.758635041 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.046145137 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.627778769 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.147317101 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.867160812 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.852516759 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.580615739 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.177355213 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901645201 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004658117 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864514935 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.538388061 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.215029645 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.119261925 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.976217911 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.87686946 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.867503842 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863642786 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.850522188 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.060197178 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.061341422 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133906346 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.00621787 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.90603232 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.867929582 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.080424659 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074312012 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.722343679 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002291418 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.973396836 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910648082 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.770405715 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.366582417 seconds)
  done (took 1665.607569408 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.894887343 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.9008652 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.890348447 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.923106245 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.88239758 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.986965705 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.973105584 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.962798283 seconds)
  done (took 57.215728377 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.864358503 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.081972811 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.873566696 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.866093082 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.874434264 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.865695859 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.037750243 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.878675903 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.874649912 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.87538004 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.865893497 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.865893879 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.188477529 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.891876241 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.867279232 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.863861905 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.874747621 seconds)
  done (took 74.333993798 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.864426656 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.895451711 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.898943346 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.881490848 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.908455133 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.868508964 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.711369873 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.883755416 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.868960934 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.999464089 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.504531032 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.891470089 seconds)
  done (took 86.980254244 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.875522951 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.874014465 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.873684729 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.873933567 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.872490357 seconds)
  done (took 11.174836056 seconds)
done (took 2168.189947256 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.121026705 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.081865643 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.105152737 seconds)
  done (took 5.990565999 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.021697313 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.067921965 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.188806565 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.210924987 seconds)
  done (took 10.301578274 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.1557643 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.243044398 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.087479737 seconds)
  done (took 8.294288434 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.274560746 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.882659091 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.987175523 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.869022918 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.870179157 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.871741483 seconds)
  done (took 22.419143619 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.874868508 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.878682392 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.875634374 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.878525924 seconds)
  done (took 9.316575021 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.856590216 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.591767019 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.857044727 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.873142869 seconds)
  done (took 20.985853638 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.623772265 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.634848588 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.618603481 seconds)
  done (took 9.686259384 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.47680118 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.790206727 seconds)
  done (took 9.075989821 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.136664031 seconds)
  done (took 3.945909034 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.008289488 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.139132301 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.340367143 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.372512403 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.433527865 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.756520193 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.189546208 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.121955317 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.269708271 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.316480956 seconds)
  done (took 24.757517803 seconds)
done (took 139.842714908 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.255924758 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.876573052 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.080587059 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.253491118 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.108707731 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.081671964 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.068155286 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.239547342 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.723510147 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.719728241 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.215207339 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.106280559 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.027082096 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.118776463 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.028550659 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.247756786 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.108467406 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.279886837 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.908512407 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.106107979 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.083611826 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.852270173 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.05701956 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.869482671 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.105668319 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.033117889 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.43257967 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.244968681 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.06249241 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.442829921 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.035033389 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.262825032 seconds)
  done (took 169.847160541 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.791747662 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.876088369 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.875022243 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.891101483 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.373554633 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.876454867 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.876477681 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.876490699 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.046365763 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.035870828 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.880472229 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.369900334 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.883410381 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.876523302 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.881691413 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.882367966 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.247907682 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.893510035 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.895935573 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.894782747 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.89883006 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.303678787 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.894985819 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.336198703 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.232744022 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.896958681 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.877403687 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.898653943 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.880597439 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.883872072 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.884980458 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.877494148 seconds)
  done (took 208.905539817 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.877618353 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.877657737 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.879245892 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.877099234 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.881394471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.878862049 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.879838263 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.87783211 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.646789277 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.642249949 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.884424996 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.884713102 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.888069706 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.878054152 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.884024606 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.877850908 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.885292403 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.885532103 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.885438252 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.886884984 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.890854529 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.801606904 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.89173119 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.795396034 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.885862597 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.887619024 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.878510158 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.8892978 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.891216734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.891244508 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.891490556 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.87947648 seconds)
  done (took 221.45632566 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.073072261 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.885044029 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.884957105 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.822423677 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.885821701 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.88550676 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.881874219 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.073973135 seconds)
  done (took 19.221351004 seconds)
done (took 621.252464673 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.326752129 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.171476602 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.063328608 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.910730487 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.14560119 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.946945485 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.905886023 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.966409426 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.108650762 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.979808956 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.560190737 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.923188997 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.648351113 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.929275038 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.031783649 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.960980686 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.481614981 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.571573951 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.086151593 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.991703369 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.080046642 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.847222504 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.982994864 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.134186561 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.667924341 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.893176362 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.063045369 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.488835089 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.917670064 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.072356953 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.636357178 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.286774987 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.917373484 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.907680823 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.962396024 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.942920818 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.236055594 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.915576669 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.03242462 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.646176436 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.971874844 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.998484644 seconds)
  done (took 105.12867326 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.879596906 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.875276187 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.874487419 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.876804486 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.877349698 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.876216254 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.875222855 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.875253381 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.876200278 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.875155052 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.875276155 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.88102851 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.875491912 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.87612264 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.875228232 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.876597715 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.877055365 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.87895312 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.876684746 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.878660091 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.878103353 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.876438573 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.878349823 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.876293423 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.878088994 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.877686002 seconds)
  done (took 50.630124738 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.889796335 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.033885247 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.113957909 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.908611909 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.889734746 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.893306876 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.908215221 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.89648988 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.892258145 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.891834827 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.987620804 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.896622155 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.907798269 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.113334006 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.906293358 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.8992762 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.890897803 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.890481758 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.039994909 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.907377776 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.910790478 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.897255201 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.9087607 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.904843026 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.892244107 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.890744284 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.894091608 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.321230161 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.899538238 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.98940847 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.933568707 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.91194501 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.281251997 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.122327141 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.945336864 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.896067675 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.890581182 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.994306778 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.898355596 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.891817279 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.908626931 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.89660233 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.114647726 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.396433942 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.907545664 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.8918339 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.329509268 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.001725393 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.933036859 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.90488264 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.118756606 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.909090393 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.892080755 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.893508803 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.928401674 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.904012622 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.892480692 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.200458799 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.903809966 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.911462837 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.897484646 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.893810273 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.049660973 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.900897307 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.038485118 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.903491244 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.901013574 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.893832525 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.115641731 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.9083021 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.391639546 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.907893162 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.891909451 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.990277012 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.041951475 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.355887777 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.906344295 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.053321798 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.299298453 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.917442815 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.901307672 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.313142771 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.921734294 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.901314234 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.894939269 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.895077752 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.895460887 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.935566694 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.910230357 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.330755343 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.399093884 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.215547721 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.920638277 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.910076008 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.894814275 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.202563343 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.901611482 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.894457145 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.109413816 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.410705804 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.908337587 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.902033853 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.382518195 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.910400037 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.913128439 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.905216496 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.123116974 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.912227719 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.938022581 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.895624179 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.901039202 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.899239161 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.913700277 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.90512257 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.895600111 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.37003671 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.011811501 seconds)
  done (took 234.398750417 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.891060242 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.890631979 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.89044165 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.89123058 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.888962257 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.895145593 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.888512624 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.887705127 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.895735658 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.888410671 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.888467895 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.89413917 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.890024154 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.897938139 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.914625725 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.897543404 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.503145614 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.890905115 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.890371731 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.89079223 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.537323481 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.900789516 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.892224017 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.891628793 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.894613743 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.893461911 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.891269758 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.908524785 seconds)
  done (took 168.105207038 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.895862549 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.012456367 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.912101775 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.924602154 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.906494078 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.894900532 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.921416857 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.916153209 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.903408421 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.895593061 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.894546442 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.95843492 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.907359118 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.99571194 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.928237032 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.929819051 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.002837614 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.902836667 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.895476459 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.895249873 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.925203985 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.894414449 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.957209809 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.021233865 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.913353952 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.012072668 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.900868654 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.897568531 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.898738246 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.013176051 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.909957244 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.956927488 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.924226616 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.917066451 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.018752855 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.011316148 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.00190176 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.927456849 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.904217449 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.896097252 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.896834709 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.887354392 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.013412037 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.914380113 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.900375414 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.006615455 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.913907228 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.89960373 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.90720772 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.896203445 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.911781312 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.918900149 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.966850676 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.030760689 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.928481392 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.924178654 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.924859142 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.194907482 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.906699439 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.999962338 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.891704115 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.015674017 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.915048094 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.888298867 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.898835701 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.903495345 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.927445102 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.933035046 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.005863291 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.906533084 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.999342464 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.932069789 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.907173615 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.897924135 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.902738707 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.01580468 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.013160351 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.931970996 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.9380293 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.931469784 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.896869086 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.900574546 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.890260267 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.918495299 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.903930211 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.013818571 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.013712525 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.906880456 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.9024373 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.901977968 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.902899344 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.926663363 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.025405634 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.932929127 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.998429106 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.967466322 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.973084951 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.913308498 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.913340965 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.904270186 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.96414927 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.912656758 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.911647258 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.244065239 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.970359342 seconds)
  done (took 205.635088903 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.994387893 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.366848377 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.954326052 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.956450777 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.192652589 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.32669512 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.68403957 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.945828832 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.950358676 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.976493038 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.106840999 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.004775275 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.963909668 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.937349149 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.353072277 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.939697449 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.951865068 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.971464953 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.952406147 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.51553615 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.268063405 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.071072291 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.95220726 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.063648382 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.928508015 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.256324066 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.437109095 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.343776248 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.984015567 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.288504369 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.282461367 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.629651366 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.164167857 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.190514542 seconds)
  done (took 75.744232853 seconds)
done (took 841.456660252 seconds)
SAVING RESULT...
DONE!
