cset: moving following pidspec: 30982
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.529362161 seconds)
loading group "string"... done (took 0.520282534 seconds)
loading group "linalg"... done (took 8.874405294 seconds)
loading group "parallel"... done (took 0.17675565 seconds)
loading group "find"... done (took 1.344025924 seconds)
loading group "tuple"... done (took 2.156951504 seconds)
loading group "dates"... done (took 1.364214963 seconds)
loading group "micro"... done (took 0.214074659 seconds)
loading group "io"... done (took 0.606044292 seconds)
loading group "scalar"... done (took 42.294848567 seconds)
loading group "sparse"... done (took 13.249516712 seconds)
loading group "broadcast"... done (took 1.069168712 seconds)
loading group "union"... done (took 14.537672096 seconds)
loading group "simd"... done (took 5.025698275 seconds)
loading group "random"... done (took 10.022028787 seconds)
loading group "problem"... done (took 2.263793471 seconds)
loading group "array"... done (took 24.784532332 seconds)
loading group "misc"... done (took 1.09892197 seconds)
loading group "sort"... done (took 3.667077592 seconds)
loading group "collection"... done (took 21.394780083 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.62246786 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122559038 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.144699287 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.176359355 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.209458212 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.138978127 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.169123483 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.561071433 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.028802565 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.205149334 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143596451 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.535667749 seconds)
done (took 5.81144523 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.226608232 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.073199068 seconds)
    (2/2) benchmarking "String"...
    done (took 0.127708893 seconds)
  done (took 0.884672754 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075326633 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.174644178 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094727856 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.111292544 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.112181405 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.094481469 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.111824788 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111293394 seconds)
  done (took 1.497839022 seconds)
done (took 3.375449325 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.819755748 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.837701354 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.495169203 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.12478632 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.156512074 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.136383606 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.309817947 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.160339084 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.104110983 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.113985675 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171423856 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.358954827 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.479805035 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.945940642 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092745624 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126411109 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.079662168 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.709393651 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081162482 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.114363448 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.523432662 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.108745571 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114659285 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123752473 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.205035886 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113914517 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.182840061 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.108413924 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.685816518 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103396987 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186639879 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099712402 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.15767127 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.237520583 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.078750756 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.106634901 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679210974 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.189868082 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.110194973 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.094460246 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67335789 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.078954968 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.188581388 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105903377 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.107368769 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191574823 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.101135739 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093744982 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.099205857 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086828799 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.157288737 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.449748998 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103824795 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.144563177 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092852886 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.702533064 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096184696 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155010261 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123596022 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107506712 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095143069 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090913401 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.171055286 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.099347437 seconds)
  done (took 19.671793591 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11467847 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137171267 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.092341346 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139094333 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13827509 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094959394 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082391832 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075735586 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123550173 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181977 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135802435 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140907873 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074337108 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.097263107 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.100099486 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248968408 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121295982 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103588789 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.098788807 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089136618 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141544649 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109886187 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090790904 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108604076 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169917919 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20315312 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108373241 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124166402 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093596058 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099651778 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142575169 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.162708758 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075658646 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094562805 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.181077512 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105253593 seconds)
  done (took 5.101420289 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195294047 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.096055446 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.20480678 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.175343456 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146606688 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.164409168 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114958242 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.26110353 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.140910983 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181263877 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129018014 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095536461 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094567097 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080759649 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077017055 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.734312465 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.174669102 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.147182863 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120341103 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085178522 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096152187 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36800273 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082928054 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094342191 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083182943 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085919022 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.170822267 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082541899 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.334366529 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.084429163 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.115377896 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089643529 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131551394 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.134911155 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127984729 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122696664 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105353723 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080503269 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.233868868 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089813073 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095085703 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103378896 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134781794 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131789015 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098322802 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.092974594 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.23951138 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080245312 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116035556 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.012658598 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196756946 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095144197 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096449139 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.332917836 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095995962 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102862343 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09447548 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.263646252 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132811507 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098567445 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077961746 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102411249 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078300959 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.390032794 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107480817 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.911737417 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080824103 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155802682 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098061174 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102615862 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083709594 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099606213 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098644489 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095159721 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07663979 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.093153342 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077443774 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080645586 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112742463 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098646094 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076375987 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159688888 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.100618 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114690788 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.107455908 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097758796 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076272325 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124526832 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126792333 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095177956 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078872106 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.095991986 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.125537988 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10157274 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111211613 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082038632 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14086128 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094530822 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.15870674 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095188993 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105885526 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098824012 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126556328 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.118336476 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077682875 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097967502 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07800184 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093934689 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077058491 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160189336 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080611667 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.094847971 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.079721557 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108643767 seconds)
  done (took 23.167856332 seconds)
done (took 48.626507213 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.417741915 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109675701 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.109602431 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112050061 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.108086075 seconds)
  done (took 1.614849697 seconds)
done (took 2.345509761 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.3219393 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.195822737 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099167316 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187700632 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085965154 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17728321 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.178600513 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100512279 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206308997 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.081117863 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.165627794 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0996674 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101763277 seconds)
  done (took 2.762042184 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091700763 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114637218 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079285134 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088374339 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09087965 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08863766 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105157723 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108092949 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104900579 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082650851 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090089932 seconds)
  done (took 1.771562807 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089377263 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115421226 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078668661 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088141281 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08982508 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088620441 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105102619 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099389966 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105484137 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082987346 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089668571 seconds)
  done (took 1.763049517 seconds)
done (took 7.019530509 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.045898969 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.706688494 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.101046629 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.169006613 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.329935829 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.187806263 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.536083089 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.135344679 seconds)
  done (took 12.140915443 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.110152522 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.111934653 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.079503196 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096728804 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.078974504 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096374587 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08068258 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.096904797 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.077874016 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095956849 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.079295502 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094304656 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077843131 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.079277702 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097345948 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.081622013 seconds)
  done (took 2.229766199 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.114702841 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.113508624 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101403027 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087709208 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.099372197 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.082104052 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103180874 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09980066 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.080712202 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098180117 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088318312 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103047717 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086471687 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097355692 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.084846944 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.104543409 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.0812832 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10132495 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.100981273 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.085786817 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103031743 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.083062732 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.102116695 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.087360941 seconds)
  done (took 3.130129803 seconds)
done (took 18.230790988 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16207444 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08340425 seconds)
  done (took 0.980869013 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098700348 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115110933 seconds)
  done (took 0.955129093 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105016135 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093923238 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133009993 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096191137 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.09560997 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079664305 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.128407127 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.095636731 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079546057 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095292356 seconds)
  done (took 1.743947426 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083453828 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09964603 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.087205511 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115736179 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.091523859 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098328704 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08419327 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09960054 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.085652591 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093845328 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.087672569 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11487247 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.102013857 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116061825 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.084239124 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101221296 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089616623 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098816999 seconds)
  done (took 2.474473117 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079047521 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.081602948 seconds)
  done (took 0.90142196 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081557808 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093403746 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081291074 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096708888 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078116408 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093099545 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077866058 seconds)
  done (took 1.344252051 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.477761761 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.232767459 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.32741008 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.11249308 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.131752117 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.353097257 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.149921961 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.093130558 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.109713301 seconds)
  done (took 2.770967217 seconds)
done (took 11.912996712 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089504117 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.132299239 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.500410937 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113388569 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.077659633 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157674164 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.257428221 seconds)
done (took 2.070040522 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.349357406 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.120767556 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087228221 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077320596 seconds)
  done (took 1.376321111 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077930098 seconds)
    (2/2) benchmarking "read"...
    done (took 0.084489489 seconds)
  done (took 0.910170192 seconds)
done (took 3.035726968 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076567168 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077467512 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.206413259 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076220445 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.090319429 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075489813 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.127307585 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.076340197 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.094040754 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.077636064 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.076531373 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.094252027 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077058117 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09183086 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074667063 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076151724 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091064632 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074505684 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090340088 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.074934216 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090463135 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077020254 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.074430306 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.090940039 seconds)
  done (took 2.912904124 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103134941 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094233782 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082985293 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099137278 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081558386 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100921755 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083746706 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09424131 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08319992 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.096362897 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080998419 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.097281405 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.095698533 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082320256 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096165172 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.082574978 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.099807696 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078826906 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096251729 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.082308008 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.099963015 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079180562 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098366698 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083999965 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.097702294 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081759723 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.096443195 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.078680605 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099449358 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.081534838 seconds)
  done (took 3.456558058 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085541491 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.074244289 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092390282 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086613445 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091282619 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078502385 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.091603756 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.075179092 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079056198 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092399031 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080055833 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090980471 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075040052 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09502635 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079399362 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.080786115 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110603946 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091233141 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.074743917 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079472853 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096846214 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.075797757 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093874038 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.075061309 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.074512007 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.091793095 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.074968729 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.090885804 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.075878783 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090528278 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.080669422 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081300538 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091308692 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087782156 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098689544 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.074216412 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100230606 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.074854975 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096294564 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.074776951 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07548069 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092799353 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.075579171 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103227058 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078079348 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095787678 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076277558 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096978522 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078921979 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.082878382 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.090937601 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.075339881 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097841718 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080240637 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097305307 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.074723559 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.078904122 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.091739725 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080378203 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090924064 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.075547094 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091317679 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.081886368 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.075975917 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.117122294 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103465052 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075530462 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08207616 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095957618 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083070853 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096457233 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095712101 seconds)
  done (took 6.945963079 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081380836 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102896984 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077604465 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.078455922 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092039381 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076746729 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102211232 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077995722 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096323747 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.097214146 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094709938 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077927778 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094119079 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080418002 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092824868 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.077694489 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102208722 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074598028 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092287199 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07940219 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07647659 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099246283 seconds)
  done (took 2.683909325 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.220773141 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102473144 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141483076 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094708027 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112476093 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111537073 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083146955 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100941648 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083109653 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102266074 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102343397 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082979463 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112325036 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086154967 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102694613 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103803327 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082831038 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102644109 seconds)
  done (took 2.685869726 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091637415 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094974395 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102415092 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095512416 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078530993 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097750957 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08442317 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111876862 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08108306 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095424614 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088601691 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099283192 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.080636044 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095510053 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082163657 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096565931 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.08205273 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096885693 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089698777 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101727483 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101962923 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089711469 seconds)
  done (took 2.798587248 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095247735 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097708069 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101458117 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099571786 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078291982 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097179608 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087040051 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095826296 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089125775 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097171058 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079853217 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096217459 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087215266 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095395158 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.085623568 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096037495 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081136614 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096149227 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081376685 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095004716 seconds)
  done (took 2.59657324 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119912382 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109155878 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094650393 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12242471 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110822157 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093759062 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12240856 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09451615 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109697497 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123689236 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09447274 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109915072 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106087798 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118652378 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093658042 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122451108 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121232004 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122106597 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093625436 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1101857 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108133486 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110830004 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122937611 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09378265 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.1100442 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094683382 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110043731 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100407371 seconds)
  done (took 3.807954087 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078833703 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079286566 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094254988 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076930926 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09514375 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078178761 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078119168 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096271444 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079755283 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095604167 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081294272 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.079543603 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098952306 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081151626 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097656612 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.080967017 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098326653 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079426006 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078082467 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095738328 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080921648 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097678488 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081078174 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077872788 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095207709 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.081114355 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094819733 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075967896 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078419933 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094513913 seconds)
  done (took 3.348732716 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087706733 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101462325 seconds)
  done (took 0.95742414 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076455057 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112470191 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075921541 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082432049 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102144135 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.078119201 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106284313 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100385431 seconds)
  done (took 1.503059704 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.103687296 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.11553321 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085137156 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108027067 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.098084758 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.115938424 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17133565 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086325399 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103592044 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080077858 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114622752 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079438338 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106906297 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085108231 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104800489 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094905911 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096943928 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089922384 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103607777 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082677068 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102285554 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095951752 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108261801 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.087674048 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099160085 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092013243 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111637251 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.090238512 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102109923 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092395726 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.104786186 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.073357061 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101382675 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085242381 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097129016 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097400999 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115781174 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084081781 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107034278 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084643034 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107505753 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.077509871 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.107987471 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.085749306 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110555396 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084893943 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102821985 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077435542 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097576179 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082987449 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095214189 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082560542 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090875798 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089976571 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107129699 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098698238 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100167048 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.083379344 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.100941193 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.082957628 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.103629654 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083458538 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108123608 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082927537 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107327701 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088866575 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105421665 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078004743 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.090985909 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081032168 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.105589326 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104599026 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109375697 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084160377 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10492434 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080486652 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103735385 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085334023 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105439547 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107829795 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085484554 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104754485 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09148617 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100810535 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083732922 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104234113 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082378157 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082483114 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097712103 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118219991 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082765986 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.08028406 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098609659 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090454719 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102021217 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082921729 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.097798327 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089664845 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090596412 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085734043 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105943801 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086682699 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110453122 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085876676 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1050139 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.088572855 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.10875692 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084672918 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.101712466 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.076261933 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105766166 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.081765692 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107875897 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.074940432 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103156342 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.0837703 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102505751 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092506375 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098972305 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085240375 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107293866 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091508816 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099470349 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.076283017 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.10116007 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085334889 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106433264 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093043778 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100546226 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079286113 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097331732 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090850895 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105507281 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088261191 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104956661 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086243763 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074760572 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.103387562 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087807497 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112994765 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084262935 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.107388535 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10850873 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086774884 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101579771 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.089823849 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100285149 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080436874 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107409979 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08525753 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077985818 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108755158 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101148366 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083091461 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.084235752 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108321762 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084017468 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103971027 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081873246 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103908297 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087366893 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098097756 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08488317 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099381025 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093442036 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102212042 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079581233 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09743655 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088328554 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101563695 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08710843 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101303102 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088903312 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.105655119 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08246031 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083371598 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102819758 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096166261 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112104922 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103702387 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088572945 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110435554 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.093600185 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104845923 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084613461 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086084239 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10572474 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088575676 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105636801 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085571201 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102909679 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07681436 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105142037 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090416333 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099243484 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081488847 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.098650518 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084952596 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10893969 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08527557 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10285308 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08288741 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104298151 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090373681 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101609068 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084484486 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097581648 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.084843925 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106227267 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.086359622 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104103593 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093253236 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103335133 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079064879 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107627236 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083301089 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106077747 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079876269 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081048676 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099265055 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.089611285 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100416194 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.083638887 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.091431317 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090499563 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108036792 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086821622 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.098348047 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085524605 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111472832 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083350992 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106264146 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085276455 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108301482 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100089049 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100024585 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08662791 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114540294 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087028455 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095065959 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089322402 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102573539 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.080045324 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.10019042 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083231055 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103381318 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088517962 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.103297496 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07540572 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.083485601 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101594364 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081193584 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097387635 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090508252 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103366134 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084553259 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112017613 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086426206 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105113298 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085750065 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103524117 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086307411 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105047729 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085714124 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105193028 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.081957448 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.098337962 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085033397 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.097707008 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081704033 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.100313685 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085826973 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102830882 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087126339 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101634738 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090438976 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103600695 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086828518 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.121965218 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.099701213 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081741054 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084756944 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105913521 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083755044 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103043991 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078593212 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10880277 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085189315 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108844822 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084091845 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095326823 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08699797 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.101851392 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.086996481 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103894337 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086871431 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.100320592 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084568938 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.102579619 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095053301 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099560827 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092458445 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105272469 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088071204 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102659021 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086234429 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101960046 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081352637 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10436031 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.087211494 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.104800621 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084592374 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104204921 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085886449 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10251581 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083493029 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104906742 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087019794 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105503717 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076048896 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.080503357 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10068836 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087576716 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11135604 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086666144 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.101219951 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084823399 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105679934 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084196547 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09528966 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091064658 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106531606 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087416949 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113887526 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081547166 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103697298 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095813853 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09268779 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083470478 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099840686 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081664989 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109433592 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087418201 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109570093 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086642526 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.098236763 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.078124358 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086560839 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100811237 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.075346174 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099249137 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088547758 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.101124933 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08497314 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103070942 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088498819 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105429622 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089486205 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102352543 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086005956 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103964402 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078140179 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081446408 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101396966 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085834411 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105273162 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081697547 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095900268 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084821793 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102839717 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086434527 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102327294 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084058004 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109468615 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085729921 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103236566 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091619485 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.093393435 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086517975 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102300195 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085554461 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080491777 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105914988 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086429765 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106311705 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108051664 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086217312 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105048474 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086077175 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081421996 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103974825 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084822558 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104558464 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081610262 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105728714 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092372716 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100279942 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086626469 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104743686 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.082939492 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105602567 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086976511 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104844199 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090126143 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103457197 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086541589 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.10738383 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086431602 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105351261 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087761147 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102012429 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090682625 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.098662971 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093206216 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.104156223 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087849233 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.101879764 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082835323 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103098046 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085377113 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084254917 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.110691978 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086699993 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100845354 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081175692 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.10121781 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086007337 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110543029 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092207552 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104642887 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086626709 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098723443 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.078376926 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106519425 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.082771217 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103073022 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.08938457 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108832697 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086833691 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101587898 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085290467 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109636579 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090634867 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.1062503 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08303698 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.107490249 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088153011 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105066454 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084158756 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103291965 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088695969 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106356108 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084594841 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.099368116 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09572153 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.108366785 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088423515 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.101962163 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.089477471 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102794655 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080409218 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105702962 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086476962 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106712554 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087022002 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103512877 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097576216 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.098702298 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085557363 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109441341 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085361338 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110227317 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080633751 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104461152 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088206269 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106032226 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080489172 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.081212848 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102552058 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085595355 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101879763 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079798079 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115078834 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090449184 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105989538 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084656497 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103992086 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079830129 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098354181 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081989748 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105941833 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085523533 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.112669096 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082133436 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099850399 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080824056 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104405995 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088348461 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.1058331 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079554096 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079610789 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102444362 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086805637 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.113292142 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083919978 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10548298 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087287535 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105649936 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083291366 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110975542 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.078489452 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105833871 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097821359 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105901408 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087751677 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108686972 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091735035 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106668712 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080142768 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107066677 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087257133 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106534191 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087330876 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107436053 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119731733 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087445372 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.081209779 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.107003244 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.085672191 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101151514 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093996649 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108180637 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087783206 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108236141 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084992379 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108045906 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09335454 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10864686 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086178881 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10707382 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083662275 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106399153 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083700922 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.103536815 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088389246 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107142804 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086177088 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.107081596 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082643333 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115790741 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093246161 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.107139484 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.078413195 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.101336234 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083412998 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09849662 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089123358 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.09768283 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084697043 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083748372 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103998722 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.089681901 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107638069 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087225405 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107413379 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.086496363 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.094515097 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090222969 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10554582 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089241622 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096935371 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087007285 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105997167 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09188287 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11172601 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084366219 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105109655 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085133224 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107240423 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081801124 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.107048557 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085188136 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.083953971 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102092653 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086805287 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108133428 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087462278 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107430982 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089658575 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105707145 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.090184311 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109076434 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.078996608 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097918253 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089549321 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101468352 seconds)
  done (took 57.400287154 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147157014 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088057201 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076260835 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097001167 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123055421 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082589786 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095835775 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082303501 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100115655 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091550721 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09568443 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078516522 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117490551 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124509086 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102696668 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111043022 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096163198 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081947676 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076905893 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103075545 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11749336 seconds)
  done (took 2.907548946 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103289687 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11558743 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11293643 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099755619 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107957869 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114478519 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.095124978 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116041151 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11732505 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090329854 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119540974 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1153198 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089991124 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109810126 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089681519 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113048243 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118095562 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088061556 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115714563 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.113618462 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09252946 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113604236 seconds)
  done (took 3.168251907 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.091142913 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085224064 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.109889997 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.07733051 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104085081 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.076911557 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.110048681 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.079712946 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108575613 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.08700024 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.101750239 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.086836898 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109301841 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.077865381 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.083565304 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098746075 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.090398455 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.104455732 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087055355 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.099073105 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.125421183 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.080650962 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.079770553 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.102614416 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.09488486 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105948593 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.086302657 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104886051 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.083730142 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104669439 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.080171798 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105725793 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089234015 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.081870568 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.103216164 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084558244 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106017826 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.079490583 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101611348 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089606331 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.100082858 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087439655 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.112036089 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.083107464 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.097746746 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088542318 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103971282 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.077956286 seconds)
  done (took 5.329750344 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.11765386 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155040413 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085408508 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144934662 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121530398 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096307307 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.106391177 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143457039 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.080229783 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.105279742 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123258506 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.099509342 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105859684 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092836163 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109929874 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086190399 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109040175 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100070586 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092623465 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103370379 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092307631 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.108511366 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11988071 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.098770432 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109454061 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084553284 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101826152 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.091540033 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117652625 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111661262 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091711299 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113326255 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119970373 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.087621869 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104028388 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088119649 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122597095 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10526577 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089921345 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098705681 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089270744 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110453754 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.088832518 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122872968 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105876815 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.089154382 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105491395 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.079686291 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117938284 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088206684 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116652226 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121102564 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09103813 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107297918 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110249885 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101451342 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105216023 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084381099 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109649121 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116610613 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.081309507 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110416478 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.098313772 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108877191 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114755814 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101185332 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108375904 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090583273 seconds)
  done (took 8.080524719 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114887163 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111849445 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102329216 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124016356 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110879106 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.091792024 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112157466 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090323118 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111964174 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118489507 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092095375 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159984837 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.108019553 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097529632 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112048333 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11085749 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091719143 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111054944 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092497504 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110734068 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09224534 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124405515 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111159262 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104141473 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124076341 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10815698 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092432846 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111846255 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121897624 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092846158 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123879751 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.110936768 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09364429 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123087608 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123666336 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092860969 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105328506 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092018319 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.110783053 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091428519 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109277994 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122321538 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092843895 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107769899 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091971104 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111782545 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12368901 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.105883383 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118470949 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118652147 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.09214806 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123700614 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110966656 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092425422 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123592033 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.132994421 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122919773 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104267417 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112747459 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123226096 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104478591 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133002361 seconds)
  done (took 7.637317186 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083730506 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083323889 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.10117737 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.081304409 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103271597 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081315192 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082897096 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103473379 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083119815 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.102727047 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083533686 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080292152 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101528806 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082653662 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.100277435 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0813593 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101889038 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082015738 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082307655 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100613532 seconds)
  done (took 2.63727477 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.091422057 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123587426 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084214841 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110501295 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086296931 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111615815 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.085060286 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105517847 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084970404 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105767209 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097152035 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116788919 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104092792 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091355267 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115189459 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090361488 seconds)
  done (took 2.437761274 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.104480856 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.125817933 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.127402336 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089818406 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.081131083 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.112502111 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.085392991 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10060956 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.07942963 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.112071902 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090200656 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109273946 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086997006 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102451188 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.084723134 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.109920508 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.079772749 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.107426454 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087023773 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.127509566 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.089377781 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106765345 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.08720251 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105392249 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.085158832 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.109408837 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.090233647 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10217504 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.080828711 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107572106 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086554026 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.111692077 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.079684487 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.109164016 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.081370637 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.101794747 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086903138 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10675508 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.090286756 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106461438 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.081744065 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106306253 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086908758 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104604795 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079708382 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106955855 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.08056685 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109424472 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.086048483 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105236175 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.087190272 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111027458 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.091339632 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114677867 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.094891162 seconds)
  done (took 6.213118284 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099044607 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107084386 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089838042 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10064556 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087963673 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111154875 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089414416 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104827739 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087174752 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080773361 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107154617 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087042491 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107928392 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087542153 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107224153 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087803197 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.098939088 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.085345343 seconds)
  done (took 2.569072122 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089870101 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082620998 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.11232391 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082699417 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103746317 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086461557 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099127444 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083377855 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101911254 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08482461 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103361006 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086152191 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08176538 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.106632562 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083285089 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103692076 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.085839259 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101612005 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084307879 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099284469 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086417612 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101264266 seconds)
  done (took 2.894186278 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.102535195 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.135039855 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.098157248 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.145382233 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.108171879 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.088279306 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.11706635 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.089070167 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.126738383 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.088938726 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.107525821 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.087982037 seconds)
  done (took 2.134155696 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108948549 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142827535 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084764978 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107214851 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097432199 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111374094 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109319476 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090610743 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123698663 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123373817 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090150413 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124121704 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122988595 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101414713 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118452014 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118178229 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089332314 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109833853 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085636028 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131543261 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110969647 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121418753 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090519909 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109170697 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090021586 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121738061 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123343188 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103171217 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109883154 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122043765 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098693548 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109903035 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122858309 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102177508 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107761311 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123167154 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089849269 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132581987 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11852754 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120651631 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087403262 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11766905 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102458867 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116905918 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122268941 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089544057 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116628633 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108017821 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089456619 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138937746 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118727656 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120834137 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097993741 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123355242 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122531066 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137702981 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103227769 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122121594 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119612876 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123440505 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100687728 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118671802 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120745329 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12299072 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098475022 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121775941 seconds)
  done (took 8.229013171 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123033226 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106941301 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088837831 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122726544 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121836339 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088561417 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110121153 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108189137 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090461653 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105867754 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156590155 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089768034 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121703898 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121050615 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090464792 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109911169 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09006111 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121642645 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105941901 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139514463 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090221956 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12111694 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120581756 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101274874 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123095471 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118653852 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089276255 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110545257 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109763057 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090456748 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116788025 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08980154 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121699753 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105725901 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102328284 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110325112 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089317705 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116728578 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109278572 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09980725 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120826867 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133110069 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089833558 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110804568 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123281702 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089675863 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110582348 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085440471 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110921779 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085984055 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123187789 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124107294 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123489004 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121713907 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090820441 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110766484 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090652457 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11121307 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09002066 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120525462 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122380069 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08992661 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138345402 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112369213 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08968698 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12359151 seconds)
  done (took 8.042634148 seconds)
done (took 154.126939557 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.103435111 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.14042285 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09953065 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168930722 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085144497 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139989292 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119046094 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.120622119 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084656462 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.104605318 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.086318293 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086918277 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171837508 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084823214 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105465953 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.089029186 seconds)
  done (took 2.635938375 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.182411057 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.283534933 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106344216 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112038771 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091922032 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108891576 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.09038835 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111935621 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.087028736 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.120313883 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.086829966 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.109584075 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.098783622 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109919943 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.085871846 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108933668 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.09893915 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.10886004 seconds)
  done (took 2.957878819 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116898144 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149811808 seconds)
  done (took 1.122666705 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122161622 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182665555 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301182508 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139245625 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.13528192 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127974857 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.160337778 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.105136707 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.192998424 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129050338 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.131559671 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.091578681 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.135600672 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118043561 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095380516 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.113258199 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.117883795 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115613248 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.092682116 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114513634 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.134538399 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.093984897 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117489518 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09437289 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181793211 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.128364132 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.112617396 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.094303928 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114463141 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094146904 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.119042863 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126756471 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.107805902 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.189457137 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.097413398 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.183890842 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100688708 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110641777 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.09451726 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.110988582 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096169891 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117213914 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.127447381 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093332598 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.112862147 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100836664 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.113466724 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.093148161 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.121346602 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.099891447 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.121348704 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.118203036 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.164027558 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121806175 seconds)
  done (took 7.582597176 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.791264835 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.153668974 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091137565 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.14601881 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14376176 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106838261 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.779948273 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111608391 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.268962993 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.779701405 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131008564 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126226291 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.214471515 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.278586328 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.145756888 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.340732701 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.662962102 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128490599 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.139923175 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157075753 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097670639 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141121631 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13104222 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.456550985 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.091530942 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112042321 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.101373113 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125623149 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165124416 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.111819712 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094682847 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.207575003 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.27217957 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.184983877 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113251264 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087745496 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111631933 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.17247318 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27192203 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21904866 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157570636 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108282066 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088155867 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125315804 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13161522 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08619252 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188639532 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.179478688 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.179918263 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11484814 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.103860735 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122183364 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121195426 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167197636 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.087699184 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.347844697 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.344691471 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08860443 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12141832 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129981152 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.247537044 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112059628 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230791251 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116399864 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218599747 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088241726 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.791264202 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170462277 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110638409 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099707001 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120538013 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116457152 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102643776 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173771322 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.428366825 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127536318 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093657107 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112017414 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.212345316 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.111862447 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08937074 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188953176 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093159601 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120026296 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107094127 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126598762 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17523028 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.27427497 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105244367 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120905356 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095278958 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124885923 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.111795632 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.218814483 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223433593 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164323437 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.217486011 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125688566 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.170253987 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171005767 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12530701 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.176229249 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119949955 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108532729 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125346147 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220725918 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147005543 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.089882531 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11827515 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097525668 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150908858 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116988275 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096930318 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.196921476 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.484900934 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.171080667 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109598778 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094243383 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121884183 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169591942 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119181915 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.247441965 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122531336 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.173509801 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119996983 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087676982 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121468844 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.170183603 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127668626 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099344734 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125983342 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120813936 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.257088743 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224464947 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106622919 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245563417 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184602989 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100439096 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203808599 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09918264 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196274141 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101816413 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125261054 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09117106 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784457501 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125850863 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098678539 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118543019 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198021032 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08947544 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113858997 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.090070314 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108338886 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789846953 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114757367 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.088382057 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.112466786 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101819437 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120991445 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096305156 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118841539 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168437055 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240955815 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125161447 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098443633 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.112384537 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.167329096 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.091097779 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.112851236 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.089606136 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.11329514 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100477867 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117224666 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.092210787 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.201165954 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165928639 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226783058 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.550931272 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112286003 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.090471142 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237893518 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089511877 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.310978911 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120758212 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.230366103 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.174509718 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.086791282 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.342356153 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.175395411 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197914176 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.116541045 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177925829 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086542549 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119801893 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168559911 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112738144 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098299243 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.185547447 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108539555 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127407991 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.155118762 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090961141 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236914009 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.11088746 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.174716726 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113921124 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104696637 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312805385 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111028144 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112406036 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.167297512 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11852501 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.090547302 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.053743222 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.089952992 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125039216 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122112369 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205259545 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.195422811 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099525739 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121816619 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125439591 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.169583938 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.216251902 seconds)
  done (took 45.190218096 seconds)
done (took 60.341541814 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.306428595 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266940995 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.29606518 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.198436299 seconds)
  done (took 2.022401318 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.176267776 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.153021977 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.126473067 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109929066 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.154165894 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088926044 seconds)
  done (took 1.685357161 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.445388366 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.392718034 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.311107683 seconds)
  done (took 2.032291642 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.253997882 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.278722687 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.323735829 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.429556321 seconds)
  done (took 2.270794726 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207413404 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.103858877 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12480227 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.139368414 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.149784869 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.201544718 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14309177 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.154843688 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.111271674 seconds)
  done (took 2.267350035 seconds)
done (took 11.160444088 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.231337998 seconds)
    (2/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.259688726 seconds)
    (3/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.262813657 seconds)
    (4/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.256533555 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.151435584 seconds)
    (6/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.252584873 seconds)
    (7/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.208800602 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.159729258 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.104963851 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117460009 seconds)
    (11/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.220765001 seconds)
    (12/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.184697044 seconds)
    (13/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.181166006 seconds)
    (14/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094726216 seconds)
    (15/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.209848627 seconds)
    (16/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.27556759 seconds)
    (17/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.173860484 seconds)
    (18/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.137743086 seconds)
    (19/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.107558115 seconds)
    (20/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.231470348 seconds)
    (21/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.179785667 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.143600729 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.093068754 seconds)
    (24/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.218369059 seconds)
    (25/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.102526108 seconds)
    (26/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.1144997 seconds)
    (27/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.186114548 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.220713465 seconds)
    (29/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.108088182 seconds)
    (30/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.13835018 seconds)
    (31/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.17400569 seconds)
    (32/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118924519 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.101043012 seconds)
    (34/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.074957184 seconds)
    (35/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.149496089 seconds)
    (36/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.123447792 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.107891266 seconds)
    (38/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.15835075 seconds)
    (39/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.125610399 seconds)
    (40/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.094647313 seconds)
    (41/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.142483218 seconds)
    (42/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.197627668 seconds)
    (43/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.149100629 seconds)
    (44/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112518591 seconds)
    (45/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091708006 seconds)
    (46/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124857755 seconds)
    (47/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.105889468 seconds)
    (48/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.179644646 seconds)
    (49/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.157707141 seconds)
    (50/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107447785 seconds)
    (51/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.18349009 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09584908 seconds)
    (53/286) benchmarking ("sort", Int8, true)...
    done (took 0.217944683 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.124754168 seconds)
    (55/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.212726962 seconds)
    (56/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.201236779 seconds)
    (57/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.101223337 seconds)
    (58/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119367488 seconds)
    (59/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190806791 seconds)
    (60/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093987277 seconds)
    (61/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.190959355 seconds)
    (62/286) benchmarking ("sort", Float32, false)...
    done (took 0.174181047 seconds)
    (63/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.230635477 seconds)
    (64/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078019215 seconds)
    (65/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.098719696 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.116430245 seconds)
    (67/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.196896478 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.143040377 seconds)
    (69/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.130532055 seconds)
    (70/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.157452233 seconds)
    (71/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.108154745 seconds)
    (72/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.172644222 seconds)
    (73/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.104373072 seconds)
    (74/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.117907638 seconds)
    (75/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.180523339 seconds)
    (76/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115603969 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.121523386 seconds)
    (78/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.125843788 seconds)
    (79/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.095272381 seconds)
    (80/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115373251 seconds)
    (81/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.215615251 seconds)
    (82/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.099067728 seconds)
    (83/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.116993146 seconds)
    (84/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.078861512 seconds)
    (85/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.140489048 seconds)
    (86/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.104662496 seconds)
    (87/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.177946215 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 0.110484362 seconds)
    (89/286) benchmarking ("sort", BigInt, false)...
    done (took 0.233170107 seconds)
    (90/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.13320875 seconds)
    (91/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.184184439 seconds)
    (92/286) benchmarking ("sort", Int8, false)...
    done (took 0.194307341 seconds)
    (93/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.103587977 seconds)
    (94/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.077716565 seconds)
    (95/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118333906 seconds)
    (96/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.094952342 seconds)
    (97/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.203822743 seconds)
    (98/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.166275026 seconds)
    (99/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.081469546 seconds)
    (100/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.13498246 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.095478433 seconds)
    (102/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.213470161 seconds)
    (103/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.216947776 seconds)
    (104/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.088341287 seconds)
    (105/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.188296043 seconds)
    (106/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.201582863 seconds)
    (107/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.12732505 seconds)
    (108/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.087594198 seconds)
    (109/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.198137319 seconds)
    (110/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.117401902 seconds)
    (111/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.105777411 seconds)
    (112/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.196672566 seconds)
    (113/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.198881734 seconds)
    (114/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.10434571 seconds)
    (115/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.123436649 seconds)
    (116/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095027787 seconds)
    (117/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.100602659 seconds)
    (118/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.161129503 seconds)
    (119/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.100889852 seconds)
    (120/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.093286411 seconds)
    (121/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.119474559 seconds)
    (122/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.105898173 seconds)
    (123/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.187283493 seconds)
    (124/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.139989538 seconds)
    (125/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.105996378 seconds)
    (126/286) benchmarking ("sort", Float32, true)...
    done (took 0.228143751 seconds)
    (127/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.192314656 seconds)
    (128/286) benchmarking ("sort", Bool, false)...
    done (took 0.188997573 seconds)
    (129/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.125876551 seconds)
    (130/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.111811235 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.125475623 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.094350695 seconds)
    (133/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138808186 seconds)
    (134/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.088466438 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117676999 seconds)
    (136/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.122627973 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.101381453 seconds)
    (138/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.116120492 seconds)
    (139/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.092849017 seconds)
    (140/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119930494 seconds)
    (141/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079594413 seconds)
    (142/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.083499031 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.11793906 seconds)
    (144/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.104844939 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112767915 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096396936 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117784729 seconds)
    (148/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.182936518 seconds)
    (149/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095107003 seconds)
    (150/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.117815692 seconds)
    (151/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.105365419 seconds)
    (152/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.141224247 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.12359444 seconds)
    (154/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.11637328 seconds)
    (155/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.075875591 seconds)
    (156/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.195701149 seconds)
    (157/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.099568804 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.121110807 seconds)
    (159/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.102681634 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.09402177 seconds)
    (161/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.199150481 seconds)
    (162/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.117515134 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095286946 seconds)
    (164/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107738919 seconds)
    (165/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.080853525 seconds)
    (166/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.125822229 seconds)
    (167/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.085382183 seconds)
    (168/286) benchmarking ("sort", BigInt, true)...
    done (took 0.248818258 seconds)
    (169/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.118123807 seconds)
    (170/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095714364 seconds)
    (171/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.076147034 seconds)
    (172/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136719481 seconds)
    (173/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.092138058 seconds)
    (174/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.118750409 seconds)
    (175/286) benchmarking ("sort", Float64, false)...
    done (took 0.174039102 seconds)
    (176/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.162737131 seconds)
    (177/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.103345849 seconds)
    (178/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.080595862 seconds)
    (179/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.100943969 seconds)
    (180/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.079575673 seconds)
    (181/286) benchmarking ("sort", Float64, true)...
    done (took 0.228598204 seconds)
    (182/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.112481359 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.096447891 seconds)
    (184/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.119223126 seconds)
    (185/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098430095 seconds)
    (186/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.119554687 seconds)
    (187/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.078589782 seconds)
    (188/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.126920992 seconds)
    (189/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.090634401 seconds)
    (190/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.126380335 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.096615134 seconds)
    (192/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.185050445 seconds)
    (193/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.08037832 seconds)
    (194/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.182820331 seconds)
    (195/286) benchmarking ("sort", Bool, true)...
    done (took 0.222450042 seconds)
    (196/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.11650076 seconds)
    (197/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.079351416 seconds)
    (198/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.078542711 seconds)
    (199/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118576897 seconds)
    (200/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.080290654 seconds)
    (201/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.159943981 seconds)
    (202/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.077773041 seconds)
    (203/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.102588062 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.095448521 seconds)
    (205/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.102135182 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.105723156 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126288776 seconds)
    (208/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.104311189 seconds)
    (209/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.1197707 seconds)
    (210/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.102208779 seconds)
    (211/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.10841033 seconds)
    (212/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.081068484 seconds)
    (213/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119952321 seconds)
    (214/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.098198196 seconds)
    (215/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.127220753 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.090922997 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.119635718 seconds)
    (218/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.095627128 seconds)
    (219/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.10138546 seconds)
    (220/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.101117503 seconds)
    (221/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136716888 seconds)
    (222/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.077148372 seconds)
    (223/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.106869551 seconds)
    (224/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.09293193 seconds)
    (225/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.101269929 seconds)
    (226/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.090155019 seconds)
    (227/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.127348811 seconds)
    (228/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10892459 seconds)
    (229/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.115344019 seconds)
    (230/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.094377891 seconds)
    (231/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.098715135 seconds)
    (232/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.103441249 seconds)
    (233/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.082790158 seconds)
    (234/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.128826412 seconds)
    (235/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.078410208 seconds)
    (236/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.106961293 seconds)
    (237/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.077538101 seconds)
    (238/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.129630319 seconds)
    (239/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.089283243 seconds)
    (240/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.100824872 seconds)
    (241/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.090212027 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111789653 seconds)
    (243/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.080294366 seconds)
    (244/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.092069902 seconds)
    (245/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.105208393 seconds)
    (246/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096059789 seconds)
    (247/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.101733409 seconds)
    (248/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.144501034 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127708117 seconds)
    (250/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077791186 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.120817263 seconds)
    (252/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.079841828 seconds)
    (253/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.120571233 seconds)
    (254/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.081035583 seconds)
    (255/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.11791337 seconds)
    (256/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.141863249 seconds)
    (257/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.117258338 seconds)
    (258/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.08112594 seconds)
    (259/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127958972 seconds)
    (260/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077867548 seconds)
    (261/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.115839705 seconds)
    (262/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096705203 seconds)
    (263/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.24806932 seconds)
    (264/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.119459668 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.097435596 seconds)
    (266/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115382623 seconds)
    (267/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078424302 seconds)
    (268/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.102656584 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.091486253 seconds)
    (270/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.138610134 seconds)
    (271/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.098036491 seconds)
    (272/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.122550498 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.091050771 seconds)
    (274/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137357282 seconds)
    (275/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.080687827 seconds)
    (276/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.127778483 seconds)
    (277/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096079102 seconds)
    (278/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.118996209 seconds)
    (279/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.093689149 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117890963 seconds)
    (281/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.07894249 seconds)
    (282/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.119486011 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091691364 seconds)
    (284/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121327731 seconds)
    (285/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.162017081 seconds)
    (286/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079187344 seconds)
  done (took 38.042387284 seconds)
done (took 38.932449346 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103262374 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.152545266 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.100946738 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.141646173 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.101930786 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130120984 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.121126866 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.101718626 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123876878 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.105379101 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.126751823 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.085119009 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.123727771 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.101275935 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.124435991 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.120488505 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.127898916 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.097655175 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.116890071 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.092052396 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117165227 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.093008276 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.117995656 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.084890676 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.124629398 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.099271772 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.119013611 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.101181742 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.116592363 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090986818 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.114786556 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.096913121 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.114580806 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.102378262 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.118191627 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.093628474 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.123165347 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099539383 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.117560344 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.094881454 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119327769 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094958548 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117998877 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.098851241 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.093411164 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.116509612 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.092205429 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127878011 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142629519 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094582065 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.120400712 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101534875 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.124638878 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.098416938 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.114010649 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.094323421 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.116470727 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120778006 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11559464 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094693132 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119333014 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.098324082 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.091640333 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.118178596 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.092178105 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.125518484 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.11532228 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117279384 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099723047 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.120905543 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089174445 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.11720401 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.091479213 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.114479538 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099587988 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.124860047 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08858412 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115914406 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.097383296 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.118040298 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.094476526 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090484875 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.119652516 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093032593 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114957195 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.085278627 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115125046 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094467929 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.116314431 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.092926092 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.119038288 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.096285463 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.118847478 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099715651 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11669393 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094621247 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.117207673 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.093898062 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.118705047 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091061485 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112662464 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092785089 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121343586 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091986429 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116038873 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.103155314 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.113872919 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.096768679 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.091974619 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.118794269 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.128244748 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100970124 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.116621739 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096062727 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08914501 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.121078962 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.0913853 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.116037168 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.09094882 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.117937555 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.094240188 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.117705957 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09219747 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.120234291 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101799775 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.11320519 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.092393117 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115071961 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.093618916 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.119405327 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.095547155 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.114240091 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094184293 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.110990663 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093688843 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090285835 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120799786 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092167663 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.116553917 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.093609599 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.117416692 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.095482748 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118272324 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095373125 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.114784254 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.086692714 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117742555 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093114267 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.118377691 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.095574292 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.116476538 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.090435444 seconds)
done (took 17.284232587 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.102807244 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187681502 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149434167 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.127104994 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.149767326 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.135708207 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.127160366 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12393269 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.126224971 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146133094 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.146797211 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.116295429 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.152306991 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.100487146 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.135369728 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.12338903 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.099245902 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.134175125 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.155868897 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.120088944 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150119112 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.124250213 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.122333861 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143867114 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122145725 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.120222268 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.127620279 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.099221382 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.127748364 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.139825986 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.116769531 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129501948 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.101741379 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135957671 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.130023374 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.100885161 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.133513066 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09693392 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.124081714 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.100897398 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137664366 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13417054 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.097929877 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.131698977 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.100533701 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.128191992 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.121627753 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.100455077 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122829847 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.096294979 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128191201 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.12220218 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.123300145 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125397622 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.103126617 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124193372 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10263097 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.128415939 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.101928674 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.12849274 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.12401493 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.103682436 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129424325 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140636007 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.101264175 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124614318 seconds)
  done (took 9.11238975 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.119905819 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.152728092 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13039599 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109278146 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.126486543 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.09042863 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112930589 seconds)
  done (took 1.78880083 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093980913 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.144520591 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.123801233 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14844367 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.138568953 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.127750742 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131851095 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.091881446 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.139283335 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.10062945 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.143943438 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.169682243 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091800335 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.127970965 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.149363956 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092364963 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.149421854 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092372871 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.121775653 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.124359259 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120880602 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.112834057 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.129054083 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.117980523 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113361693 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.117664039 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.157806829 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.130522292 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091025556 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.123978714 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096983887 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.208720196 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.114669408 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12490413 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09147929 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143232278 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.11247871 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121183649 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.115699628 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.12201448 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.137189253 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.098977776 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.122688048 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.099348898 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.123146129 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106669389 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.126726475 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.101645737 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.122288332 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.120448854 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.128264748 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112550253 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118271547 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095161187 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.127026707 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121115655 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107240564 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.120683514 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.121715301 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123562096 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.117270587 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142515378 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.137097655 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.118710518 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133726852 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.11368307 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.138141493 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.097110127 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123734505 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.09966661 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.14212838 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.118955945 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.103148348 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.131297438 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10180528 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.144382224 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.118901708 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122071277 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.104182873 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.121759214 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.094960191 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.118013572 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.108357443 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120809266 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095431858 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134733626 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103369695 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.122756193 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.094874039 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.138849731 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.120577045 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.105039278 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.129190358 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.095879615 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132090717 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.143750667 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.103292902 seconds)
  done (took 12.642964076 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.098978056 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.093665863 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.123576789 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.094525177 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.11894698 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094663544 seconds)
  done (took 1.584801879 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.127591656 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120694638 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109427711 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12593309 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.161725921 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.118105625 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.141340609 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103262007 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138869989 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.107989449 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.143374896 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.142301911 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.12228359 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.125683417 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.116520602 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12660736 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.141119088 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098620545 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.13262946 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098233874 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.134505814 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.102053229 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121571365 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.115065177 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.125199984 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.101900365 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125299956 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.108290748 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.133115219 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126589173 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.101666356 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.125788002 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.102058305 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126639909 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.117510452 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.12593203 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095532671 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.127803766 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10120376 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.127151188 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.118711483 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123632136 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.130891705 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.103872051 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.126787975 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.100954584 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.126833931 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100137862 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.141429749 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.102584978 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.128043652 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.100784367 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.127133111 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.102689195 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.125870899 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127048032 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.103912186 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.142275369 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.100974466 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124868824 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.098699341 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.125663637 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.103950978 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.125792121 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10005878 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.128249028 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.10052754 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122278604 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096977559 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125759867 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.102638659 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122674049 seconds)
  done (took 9.523710785 seconds)
done (took 35.590675623 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.672095089 seconds)
  done (took 1.617305428 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.833459157 seconds)
  done (took 1.792789806 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.964726946 seconds)
  done (took 17.944503401 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.481591818 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.580908406 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.003311057 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.167519162 seconds)
  done (took 3.192259184 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.945684864 seconds)
  done (took 1.920327529 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.299741686 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23802395 seconds)
  done (took 1.497174893 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.870578436 seconds)
  done (took 1.839894999 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.630387102 seconds)
  done (took 2.598326822 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.374064307 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.219772271 seconds)
  done (took 1.570134524 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.581287623 seconds)
  done (took 1.547772599 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.737137353 seconds)
  done (took 17.713260744 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.244291012 seconds)
  done (took 1.226103727 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.318734451 seconds)
  done (took 1.290122712 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.462659861 seconds)
  done (took 4.4346387 seconds)
done (took 61.147399645 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106148511 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.105622515 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.131113633 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.103504233 seconds)
  done (took 1.414968664 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.108702709 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125308637 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105330243 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124588726 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109861829 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.125877883 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100420811 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.13171176 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100778581 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.12691652 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.101408726 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.12478186 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.102519764 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123542908 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.098523228 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.127009849 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.128017605 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.101778867 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124652369 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.103089857 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.123305881 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.103598335 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127275514 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.101619627 seconds)
  done (took 3.733432458 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105696729 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.098121721 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.123856969 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.096122493 seconds)
  done (took 1.408859605 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.109108713 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.137102961 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.113445335 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.13096889 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.114537364 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137859729 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.096483008 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.121938155 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098200018 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.130568464 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.097820221 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.142493837 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137590746 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.092557963 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.13222626 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.094571964 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116751799 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.11441314 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.131170823 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.108808264 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.121279702 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.106270782 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.128694334 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.11129324 seconds)
  done (took 3.808316823 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.181123229 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.136337858 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.145207621 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.104348034 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.172882528 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.147796405 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.09693049 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.146984819 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.096351666 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.144506787 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.12517009 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.149863097 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.13924786 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.124015452 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.098535951 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.128615968 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.114412966 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.142481259 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.124452328 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.110581956 seconds)
  done (took 3.618856863 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103337475 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.095339681 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.117366498 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.096696863 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.127850948 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099609208 seconds)
  done (took 1.628400074 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093897732 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.091975862 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116928751 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.092236163 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.120724934 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092907406 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090653382 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.117323686 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092884553 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116653392 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092867022 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090265817 seconds)
  done (took 2.195756153 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.398560009 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121101579 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.129761314 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.097725641 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.139371297 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094365526 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135616284 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119861377 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.172381737 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103617238 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.136090844 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.169168987 seconds)
  done (took 2.806258633 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210517902 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102115129 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265423671 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.424171608 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16205657 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170346809 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.324022617 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169823337 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.189365258 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141992041 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198298083 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161641428 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131689407 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184292427 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144739859 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.180170864 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180910354 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204938084 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153469999 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21058172 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169210721 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172400599 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184954969 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15548531 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142364129 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137484723 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122882935 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106286418 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202843632 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173686942 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177781437 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128385973 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145401589 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202957751 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243524138 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18384692 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.386362058 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112561361 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.197967852 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.184637225 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257976426 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1445422 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200485314 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160319913 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10985655 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186010729 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160287744 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185414409 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136363388 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145893567 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189333546 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180178744 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.187705925 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141413615 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.34258354 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149934078 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.151601384 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193596779 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192589939 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194397121 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172535536 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.126752831 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.226072237 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184500962 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184060983 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.150580703 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.17125706 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129551379 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180671756 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200455355 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182033925 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171968316 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.191825012 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138878229 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1693615 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172346671 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15684843 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181766989 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140010662 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.126731641 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152274958 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115014915 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133344728 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.18914719 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102366405 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206745252 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140297952 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.273685329 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218775068 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162668768 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16475134 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16932699 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170738183 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150932323 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.097471324 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151322156 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.164370241 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161638429 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109971451 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161247915 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150815142 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131522627 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130963012 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.127425406 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163200473 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.112393128 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170469499 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168988163 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.133017714 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16990584 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12727243 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.162708851 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175192046 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189733293 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13756482 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11091447 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196723858 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162712906 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141316511 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179731864 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191100175 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.16923623 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141775516 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17391815 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199463934 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120486015 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218215514 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120163843 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138455841 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.155679696 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166572063 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133389645 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164182494 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133596577 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.15735473 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195681606 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.104913396 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142114305 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17856148 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104033883 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134811608 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148844767 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114000428 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.14602775 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154030128 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.143905261 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13496307 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165177952 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157450324 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162891004 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146412794 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195139066 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138410812 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.139048675 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15143746 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121433618 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.185343157 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188579108 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105834771 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190686574 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172727936 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265966212 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167467822 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135436509 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184746944 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107253611 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.123530729 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171738876 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165756157 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138456509 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.214626608 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237316859 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.169064321 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.156066301 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152822016 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170431412 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.178347017 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160401188 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.149057664 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141007857 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170030289 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.128920465 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.100415307 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132653656 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144553685 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108982661 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136487535 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185432894 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167955336 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.256424693 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166034694 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118188546 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185473448 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130374142 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168687604 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177129239 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115839423 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214416585 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185255379 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170630121 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120050259 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174727898 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.124979363 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103457141 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13842466 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170115457 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109925626 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138650575 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147784427 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185844312 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178284078 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153568238 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242255665 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169303129 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221838742 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.100466615 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166788098 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173559146 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16061768 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.164404557 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136015459 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.162452041 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181498922 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120497459 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193720911 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166320645 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172881503 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230038599 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.159670665 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107744789 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153165892 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170997719 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144287328 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138436553 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150461886 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139131648 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157683758 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.113584888 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129795247 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184927896 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146584464 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185330357 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.16131502 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177049049 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104077258 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146950606 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165245601 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150265264 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.096755968 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173164059 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189824025 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149152167 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162437743 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177498846 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133138755 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.353089068 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191896295 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186785301 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139856578 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145534122 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139166469 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164551621 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167224823 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185595395 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148219024 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183907487 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163496672 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.119673926 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138874467 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151343706 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12737929 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.156499676 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139136378 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15765224 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.119788804 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215210822 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122005469 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162484524 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168973905 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151426133 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.131403447 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14689014 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204222208 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163164309 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180895057 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.159934619 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.171353531 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19179558 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10122064 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133532389 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.130452398 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186714715 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109997845 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164196602 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.250167136 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244246938 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162241841 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17354891 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142285109 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.101356455 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16411591 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153564478 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265018576 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119711248 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.141934678 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193548349 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.155328159 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107416771 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166481222 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360524414 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147658875 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178127317 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.099229704 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.320084199 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128949099 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134637722 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136430416 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173774769 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137258002 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184905229 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144098726 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149890198 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16407911 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14213955 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.228832193 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245914352 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177642709 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180186622 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.119975652 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163896163 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1664547 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178889302 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149194298 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.149194718 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139206179 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186135086 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.216399522 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.110632699 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168205386 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168274328 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16575149 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178552971 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138569883 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19105763 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109895582 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170143917 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14642251 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101501025 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16254949 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.252090674 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112620762 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203784892 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136734375 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137437957 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103817936 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155983002 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164126964 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14645047 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.106311638 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208594914 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.105605314 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168388144 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185310327 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108186431 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160064407 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150657642 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108843048 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146912089 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150855597 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111470597 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.175437688 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184164869 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135158134 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180165789 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177948617 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167352676 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164198475 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120820833 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666876679 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.104437463 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213396419 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124964267 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190405722 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152569249 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172394687 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166439343 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152743501 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172887059 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127053375 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.224278354 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170261768 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.163409826 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134705848 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122322281 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150346496 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.135047489 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128328567 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168201337 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145906718 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.140640517 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.134710606 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151330809 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.148895275 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114296887 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189105089 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152140442 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185549739 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187580577 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142924297 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172499729 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179229959 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135312602 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.165507569 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175352786 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119188191 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154477049 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135098491 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.112333646 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185171872 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.129706537 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137877136 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167192262 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167060682 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168050262 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.138602927 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164447001 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11958999 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165560778 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130848912 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158063957 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135512972 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136661562 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104287228 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160398017 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162877558 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.16447691 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129866356 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.148188123 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185495027 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.129105416 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110906953 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.357212648 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162428365 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197834302 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.128687865 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139560503 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147822389 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159698978 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.130764063 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164768992 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.133098743 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109654344 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13558108 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.189852651 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.157814125 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134955263 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227479738 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136888113 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191922256 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.141323939 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.266147227 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115296435 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158983876 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.135531953 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106086293 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145337819 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139209642 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1209847 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.258831755 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183615401 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.157240319 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120602928 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132342754 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.103985322 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137314607 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16569371 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15891657 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136224477 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147647856 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.123207751 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120685097 seconds)
  done (took 79.213347551 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169035929 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150551982 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.153226555 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200666356 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171198201 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247106652 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209176607 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23065694 seconds)
  done (took 2.606236786 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.106257086 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.138040223 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14381059 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.104086729 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.122493831 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.326246578 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.141015706 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.128188028 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.127443605 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.140528335 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.120863191 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.535619286 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.128162081 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.127177488 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.095131059 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.118753939 seconds)
  done (took 3.66656584 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.096946863 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.517348423 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.804550107 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.230801505 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.22725122 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.177077015 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.711947902 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.168633838 seconds)
  done (took 12.005340447 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.128915992 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.143079184 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.143882854 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.169133878 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.12754734 seconds)
  done (took 1.786675752 seconds)
done (took 120.863082201 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100839847 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.103279521 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.128729273 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.104300709 seconds)
  done (took 1.494335512 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.112788664 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.086023824 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.11490135 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085097548 seconds)
  done (took 1.470995666 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.427487412 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.115122785 seconds)
  done (took 1.647339867 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.120747845 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137241347 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.111756876 seconds)
  done (took 1.440304965 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.109056408 seconds)
  done (took 1.18328132 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102571087 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.103608691 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.145722252 seconds)
  done (took 1.425911646 seconds)
done (took 9.733116895 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117814408 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.430572196 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391210316 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141606213 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.699691806 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.413031532 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.031827933 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.134905226 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171377577 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122504999 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113282341 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.702304694 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.987320937 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.369111821 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.974727625 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.367896698 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679555675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12523528 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103208474 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124442228 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.9828252 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122948139 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098395508 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124568528 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676175963 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426867378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096658256 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.381194329 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095956725 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126941029 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.385970046 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121899215 seconds)
  done (took 16.904994262 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102645743 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183687023 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.104983098 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125895746 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099906711 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125358175 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.107639298 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.137561211 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185095014 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096236214 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141191947 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095015768 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128902499 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097541477 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143846085 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097539663 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12607869 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099203065 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.129737313 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098874092 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141987409 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095785864 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097602292 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125603703 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095591534 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135738298 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096621293 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.136263423 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095674243 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128355683 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101441477 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124796034 seconds)
  done (took 4.874816026 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147175972 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192755643 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131709648 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131904559 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.174789817 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098096142 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.207911717 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162922682 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186685327 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122868682 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114553023 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123409524 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133225851 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123579308 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117781367 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123239931 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099823016 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126259219 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104623565 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125184286 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117446883 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122274395 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099178335 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124871472 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097711244 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137302577 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097881481 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.136977418 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096932609 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127949374 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10289121 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123480247 seconds)
  done (took 5.215489061 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.105357474 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.131983537 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114701911 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139984927 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100039379 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.130380353 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.105696693 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099592288 seconds)
  done (took 2.005136053 seconds)
done (took 30.07537745 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115261256 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.101720602 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.137730622 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.109708188 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.133416501 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.120855021 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.12295077 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.107635817 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.137473839 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.105497619 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139702557 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.096305523 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.09784611 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.122635321 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.109572046 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.129108698 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.111709413 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.133020728 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.118227516 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.139332065 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0974835 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135449647 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105890927 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.144800925 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.117186366 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.144097343 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.113047189 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.130099835 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.096925379 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.125141771 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.113647491 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.148349545 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.099965371 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.139956907 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.101774077 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.128942678 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.09748435 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.124967138 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.11213105 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.135486217 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.103229823 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134567886 seconds)
  done (took 6.113419534 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.12395321 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.167225837 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.097759715 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.125957045 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.098199505 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.163568005 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.158172181 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.098525793 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.098903464 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.149267836 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.149107712 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.098702697 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.097813026 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.125031901 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.096902762 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.124896696 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.12001729 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.15000495 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.126076169 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.155084218 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.169271384 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.127809904 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.15832112 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.146669065 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.138994339 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.159704992 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.145413536 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.133354165 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.151798965 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.096134454 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.154984006 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.12723791 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.125471006 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.097412893 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.164315225 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.160446698 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.124541706 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.165289251 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.154999385 seconds)
  done (took 6.31055425 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.106651113 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.110801596 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.155459089 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.192221598 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135039657 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.139325968 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107461752 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.143346668 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113898933 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.125270355 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.10727309 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.156804912 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113928732 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.132573972 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.103201921 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.140724964 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.115296339 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.127662465 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101558021 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.143547305 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114740145 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.141208625 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.108832243 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135453314 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.097021546 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134416051 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100344237 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.140385104 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.102028045 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13289565 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100989486 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.130020052 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.104686986 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.135718505 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101632831 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.13250354 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.11856837 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134565796 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.106952682 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.159101481 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.109391671 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.130457172 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.119909517 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166059192 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097906236 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.133108009 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10416976 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133689176 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096633435 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144777764 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106876731 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.12611882 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.113619379 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.125530453 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096726318 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139782516 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.10034993 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.127382431 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.105758494 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.103879112 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.146450648 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.128998083 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112196661 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.098007932 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.13231088 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.097505006 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.125219646 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.102903243 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.147148543 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101553509 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165365621 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098037196 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.132027115 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10554336 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132221843 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105996354 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.126194982 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112084984 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136113586 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.102970595 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.136148507 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102062539 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.129510967 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117594051 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.140308177 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.106515151 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.131543047 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.103939458 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.129863538 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098272734 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138742952 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100264457 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.128122778 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.114402669 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.097306798 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.129677108 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.103517161 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.130304641 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09650324 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138697234 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101999764 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125986972 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.107708001 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.12604428 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.102418884 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134702352 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.102059412 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.125123886 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.104255287 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.104866984 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125013613 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.100536181 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.129525015 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099495743 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.138604428 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.104486805 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128731392 seconds)
  done (took 15.228179005 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.247641959 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.227760383 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.200881345 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.309571699 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.149465249 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.12448062 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.223792958 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.180225168 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.099115227 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.167303233 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.1822735 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.195610435 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.185464627 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.195161574 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.184774867 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.098416726 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.148586326 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.183965495 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.22772561 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.305089624 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.119429712 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.144483016 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16890448 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.138969179 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.148082407 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.145049849 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.124122844 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.150105494 seconds)
  done (took 6.074699576 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.113672882 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.166772826 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.105868888 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.157520478 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.1530325 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098926232 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.132308839 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.098562873 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.139963685 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.113275407 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.128308392 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.105752282 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.133575135 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107762577 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.126412688 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108346558 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13733374 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.108095725 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129130721 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.101939044 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.144906495 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.115673258 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.132251729 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.104503067 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.144994606 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.104790699 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.129837352 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.148699324 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.106729092 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.157488322 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.095720442 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.137687941 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.113090772 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.127952653 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.104666349 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.130359915 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.101522205 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.12977544 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.09955515 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123423002 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.098585546 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.089024965 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.132645175 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.141375632 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.106356527 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.128222006 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.104029088 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.101878898 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.13542027 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.094864031 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.129181458 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.099858925 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.13141479 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.113882186 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.131163289 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.10464603 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.131155468 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098838639 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.136024972 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.101828078 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.095547152 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.133618202 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.104059565 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.130593535 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.135532382 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.105154453 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.131390894 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.101563731 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.103139983 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.135183459 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.101865491 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.141038364 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095636585 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.128817085 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.108261377 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.13986313 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.102404318 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.133344346 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.105560461 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.127154482 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.087347997 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12537374 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.087041565 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.102230491 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.12656237 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.103556695 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.130638354 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.103762908 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.143748716 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.135409894 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.107105789 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098987465 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.133679979 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.102135015 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.126647647 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.102614941 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.146630686 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.146794241 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098790872 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.096049967 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.144302447 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.100010705 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.125806216 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.09001671 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.137613057 seconds)
  done (took 13.604417086 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13998666 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.179538212 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128479991 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.119006894 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.162907171 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.141658449 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.136376703 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.107110342 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128592636 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.118607893 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.135391828 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107727743 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.136625616 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.113556153 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169371693 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.13690502 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.09982787 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.14210104 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104871467 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.181881788 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.118841399 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.167183853 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.173066784 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.134246423 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.104963289 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.164964128 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.171646993 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.11276162 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.110283514 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.175250656 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.141966931 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.172189085 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.145041092 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.133229677 seconds)
  done (took 5.828639264 seconds)
done (took 54.24456252 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.217411132 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.395715838 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.179228534 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.183052794 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.193017274 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.211282498 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.176786567 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.37757103 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.881590526 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.170696403 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.18010204 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.181142966 seconds)
done (took 27.452934033 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.251313736 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.341747309 seconds)
    (2/2) benchmarking "String"...
    done (took 1.479588468 seconds)
  done (took 3.926788965 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.180521921 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.181798702 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.202044989 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.180631062 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.182973797 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.199713526 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.188227822 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.188544519 seconds)
  done (took 16.428328744 seconds)
done (took 25.894757401 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.223905885 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.377389017 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.447392342 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.197139143 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.19543057 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.181738707 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.197257483 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.202576737 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.189408018 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.181928463 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.172786835 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.47052537 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.214128648 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.562321635 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.183612218 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.205344099 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.181802376 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.400752776 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.180654988 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.225800265 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.167147579 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.192822311 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.192312111 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.213111129 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.18401444 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.193982981 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.185703545 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.185596213 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.380427521 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.212384382 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.21968168 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.185797664 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.192285103 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.183695257 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.284557204 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.21173409 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.366049087 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.180216313 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.168497008 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.185256378 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.37377978 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.560466141 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.187926304 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.179613426 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.184183354 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.204133511 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.171588349 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.860108114 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.198810853 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.189352991 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.225319304 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.566735676 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.19250998 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.181132171 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.200532374 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.408560667 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.1943481 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.187278446 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.207126311 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.201934921 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.180102168 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.185391369 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.223274855 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.183681316 seconds)
  done (took 142.033882147 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.182896936 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.184450152 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.185354347 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.243010427 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.186282347 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.183805368 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.179914319 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.180439623 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.183554944 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.183433597 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.18512079 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.18367337 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.185963004 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.143406225 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.183668287 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.19405305 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.181319922 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.183232502 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.183615557 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.181955418 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.186313093 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.179512815 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.191725379 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.181143134 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.213209312 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.262919084 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.224119626 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.18739824 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.184641596 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.17939792 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.211393685 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.196271182 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.719714449 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.037200972 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.199590863 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.210161619 seconds)
  done (took 79.37064133 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.185210737 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.182756743 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.18311144 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.209934465 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.180519739 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.673353837 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.678070333 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.90503787 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.336527546 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.294018595 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.404901496 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.18554656 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.269275524 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.192920311 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.181483453 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.197665694 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.207957394 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.18561181 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.18240003 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.67331315 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.197786912 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.216107117 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.346549513 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.195381821 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.209773916 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.576330408 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.182851991 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.211657639 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.855578188 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.53340096 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.224532358 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.185139728 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.478083778 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.185586152 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291695574 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.184126249 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.209715833 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.187269735 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.456518174 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186815028 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.18175465 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.187330473 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.787880306 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.185833783 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.67215816 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188457413 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.067255902 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.183373911 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.185706153 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.304917371 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.733995881 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.204726975 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.183672374 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.185187608 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.183276359 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.183721335 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.213172327 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.423552601 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.291162709 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.185884097 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.186053586 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.211369042 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.184532255 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.186925191 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.185295429 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.041101115 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.241335644 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.287159873 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.673843349 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.186792336 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.277888662 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299670567 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.184372168 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.183059317 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.18204398 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.183886191 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.29032509 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.183442964 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.54171576 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.346450748 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.198466259 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.317329768 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.280938278 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.183029455 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.18419112 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.182786468 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.183255282 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.498007825 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.860761155 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.184460804 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.275923825 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.183771722 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.183971892 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.182110043 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.540076188 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.676481489 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.354381181 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.190078089 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.448778556 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.191530482 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.550059723 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.667345591 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.791331271 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.190106267 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293873295 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.347647879 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.197086582 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.185253293 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.185327958 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.31606291 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.190477793 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.244703753 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.183976873 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.580529068 seconds)
  done (took 362.751258517 seconds)
done (took 585.262998519 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.947855415 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.89592451 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.021318144 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.924433563 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.888922426 seconds)
  done (took 10.787491711 seconds)
done (took 11.894761899 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.358304464 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.360961721 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.243442506 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.360749046 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.222782196 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.381478427 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.34203325 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.211542699 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.281338122 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.264293603 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.283499808 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.239682606 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224309752 seconds)
  done (took 17.884252629 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.486047551 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.191461188 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277758566 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.521448811 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.229540259 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.516057631 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.393883542 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.206791464 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412809175 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.207169051 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.200371255 seconds)
  done (took 17.754619556 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.496189942 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.193597249 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283118173 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.510091066 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233174254 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.499836238 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.395188842 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.210019986 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.401380846 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.206061073 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.199028015 seconds)
  done (took 17.738899204 seconds)
done (took 54.487623401 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.226219079 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.347536085 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.218947536 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.201977528 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.197878649 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.197914416 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.201638632 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.197384765 seconds)
  done (took 10.899455177 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.194281051 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.195553776 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.192519918 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.191885763 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.194002331 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.19675808 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.196814411 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.197549918 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.194676767 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.197131318 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.194178335 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.194364355 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.195209903 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.196339711 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.196731077 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.197517733 seconds)
  done (took 20.238132263 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.196977248 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.194214009 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.196251439 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.194878249 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.194710455 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.195279519 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.19542829 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.195365316 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.195532754 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.194225126 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.195071056 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.195099448 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.194975324 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.195345175 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.195601694 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.196778482 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.196571856 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.196000971 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.200233383 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.196738256 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.196787135 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.196310478 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.195756581 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.195496503 seconds)
  done (took 29.815341826 seconds)
done (took 62.061784845 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.197679585 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.19129198 seconds)
  done (took 5.502808025 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.255531197 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.260028308 seconds)
  done (took 3.631949047 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.19827478 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.198093204 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.198572354 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.199827077 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.198292915 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.198591637 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.200510281 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.197854795 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.199241361 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.200420301 seconds)
  done (took 13.104109626 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.199632827 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.199401907 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.198244195 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.200140656 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.199868156 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.196986072 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.198931031 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.199309922 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.200374469 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.197871797 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.200886783 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.197965891 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.200374575 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.197986115 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.200902822 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.197804634 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.196901662 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.198912367 seconds)
  done (took 22.696639514 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.213155916 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.220529065 seconds)
  done (took 3.549190634 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.328808654 seconds)
    (2/7) benchmarking "second"...
    done (took 1.240450062 seconds)
    (3/7) benchmarking "month"...
    done (took 1.307254188 seconds)
    (4/7) benchmarking "year"...
    done (took 1.294647056 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.239817336 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.220691348 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.240032712 seconds)
  done (took 9.986781186 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.202106753 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.402451904 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.5100581 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.76405111 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.202838636 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.205879445 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.077244645 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.206349815 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.210959251 seconds)
  done (took 13.898097657 seconds)
done (took 73.483039421 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.193997847 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.21828487 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.199143397 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.212809965 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.539321457 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.223237089 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.19962281 seconds)
done (took 15.901955514 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.183284956 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.192661311 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.199829693 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.198819526 seconds)
  done (took 9.892342498 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.203072626 seconds)
    (2/2) benchmarking "read"...
    done (took 2.199295402 seconds)
  done (took 5.513138087 seconds)
done (took 16.522309296 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203336448 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.202519742 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.199240021 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.202545996 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.200987045 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.201299852 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.203962857 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.201829617 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.203202986 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.202739974 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.202098849 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.202883409 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202456337 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20083681 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202128361 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202886882 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.199917809 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201276336 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201846641 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.201142822 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.200318751 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202937079 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.20014324 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.203088605 seconds)
  done (took 29.965473325 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.20388451 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.199910286 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.203630875 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.203685357 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.200957382 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.204414753 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.203650569 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.200829327 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.205116368 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.203937834 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201752458 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.202287882 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.205864334 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.202880554 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203860749 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.201737897 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.204401046 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201396499 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203926355 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.201353546 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.203650913 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201597112 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.201983511 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20460486 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.202608714 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203469765 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.20503998 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.201896694 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20395019 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.20274868 seconds)
  done (took 37.211028338 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.209349935 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.210949561 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.204653157 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.204591268 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.20494579 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.206003247 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.204878465 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.206116601 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.20668784 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.205778498 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.206752999 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.206124173 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.205772085 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.206475663 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.205037261 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.205718756 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.206455461 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.206782647 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.206505026 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.205899242 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.206765258 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.206702069 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.206278771 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.207331351 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.206458926 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.206757565 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.205323042 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.206645393 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.206986929 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.205850214 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.206472691 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.206470338 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.207912725 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.207910263 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.207491333 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.206152068 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.210791591 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.213267704 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.207965514 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.208674081 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.206628474 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.208238347 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.208973073 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.210085839 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.207764962 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.208359691 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.206327107 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.207412788 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.207865762 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.208650256 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.206706191 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.209050727 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.208166803 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.207878456 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.208495555 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.208417982 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.209292006 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.209856292 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.21154519 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.209119662 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.208890646 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.208541439 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.211060998 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.211236827 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.209601532 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.210242287 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.210713886 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.210433605 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.21081809 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.210291829 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.211002121 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.210994897 seconds)
  done (took 88.087599127 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.211502079 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.20865318 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.208321105 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.207911908 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208346154 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.212802701 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.208718552 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212794434 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208277052 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.212397433 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21318248 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.208303094 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208804004 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.209711916 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210622869 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.207619815 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.210447783 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209782543 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.210565557 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.212093388 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210933315 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.209267591 seconds)
  done (took 27.749454796 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211601499 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.213187502 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.209468135 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.211659543 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.212092066 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.211945549 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.210378612 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.212462234 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211621419 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208235192 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207907795 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213216161 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.211368462 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208779229 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208633351 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.211137838 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21201716 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.211080063 seconds)
  done (took 22.922526093 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.20855745 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.209112949 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.211239444 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.209133157 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.209621321 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.210103394 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209375126 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.669392223 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.211675413 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.209992593 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.214311177 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21208677 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.211697213 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209350544 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212640095 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.210491942 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.213555836 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210271202 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212384477 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209034694 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.209941424 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213854885 seconds)
  done (took 28.224479209 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213189789 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.212077801 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.210962412 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.212165893 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.210971574 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.214074581 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.213378006 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.211191099 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.216511854 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.213638954 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210917204 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.213540148 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.211531863 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.212100352 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.211972882 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212537912 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.215046488 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.211057605 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214326596 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.211934363 seconds)
  done (took 25.380676774 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.215254154 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215279545 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.215212285 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215003735 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217005743 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.215318386 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216260837 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.216584206 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216134743 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.216544773 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.218228542 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.216429982 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216548482 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.217208566 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.217516448 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217477002 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.217508653 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216528307 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.218303323 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217677205 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.217182899 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217769306 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219100852 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.219265044 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.21831374 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.218743711 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.219161257 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.217400713 seconds)
  done (took 35.208652185 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218282907 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217477058 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.214698144 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.215733545 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.215228686 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.215676335 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.216164343 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.214998766 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21978943 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215923501 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.218528098 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.217169347 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217024099 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.215928878 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.217004283 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.218478711 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218689502 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.216599644 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216378011 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21542735 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.220184721 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218414837 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.218894844 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216736539 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216574428 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.218990345 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218374691 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216521177 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221312181 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.215219461 seconds)
  done (took 37.649296158 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.264655686 seconds)
    (2/2) benchmarking "in"...
    done (took 1.258995527 seconds)
  done (took 3.656024338 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.21704228 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218907657 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.220395325 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.217948666 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.216650212 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.220181616 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.220486063 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217455186 seconds)
  done (took 10.88218337 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.222490082 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.221536386 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.220459632 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.22011726 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.221380855 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.215825065 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.227917938 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.239417744 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.220829377 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.22225511 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.226093576 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.226021758 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.222286705 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.22171541 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.219778292 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.223123622 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.221250473 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.219373617 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.221042154 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.222653612 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.221370403 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.222861114 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.223968927 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.220180931 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.221959871 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.231328134 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.224064631 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.222465637 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.220545812 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.224070304 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.223343569 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.21955208 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.220854396 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.22261785 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.221960585 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.222282849 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230945203 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241676878 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.226986477 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.222988752 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.222833683 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.21887526 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.22226147 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.22270681 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.223123741 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.223223064 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.222100476 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.219414303 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.222452449 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.226397023 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.226519736 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.223085531 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.221299659 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22707933 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.225193724 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230205791 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.244340907 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.227976697 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.231540987 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.233226354 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.233960344 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.244562837 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.223786485 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.221608257 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232229855 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.24408279 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23217354 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.23999014 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.22007597 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.224760832 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.231104756 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.235549063 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.248018388 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.226318617 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.223887009 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.225597093 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225403002 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.222598733 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232341082 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.248270917 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.226752993 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.226313701 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236480102 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245344119 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.22309078 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.227381136 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.227383593 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.225876771 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.226219785 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239674143 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.2423581 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.228042811 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.224973134 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.226459198 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.225826617 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.226737584 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.227253331 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226276326 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.222490732 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.226494167 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227192826 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.232047291 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.233257694 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226602771 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.228572826 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.235154985 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.22731672 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226916952 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.232922246 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.227547485 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.227703613 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.229694293 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.232269258 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.225160075 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23141553 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.233180937 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.228316318 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.228044596 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.227953458 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.227840422 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236995819 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.250773136 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.228867042 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.229883249 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.231536195 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.23756707 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227461667 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.23254303 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.229035405 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.225204876 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.227861627 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.229678482 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.227675012 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.230162339 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228420974 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228445795 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.221077594 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.231669824 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.225709079 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.23279279 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.230278306 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.228096428 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.229215705 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.230642715 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.229794133 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.230065982 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.235540318 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.229407526 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.231259747 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.230509899 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.227128048 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229720678 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.229337008 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.230479331 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.230542643 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231468724 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.230698883 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.229489309 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.227543371 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.2309761 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.229381387 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.226393572 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235725019 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.229810538 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.232613795 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.231407729 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.228678389 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.229884769 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.228663164 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.231458306 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.232529034 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.231457094 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.235725922 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.237989777 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.229515081 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.231838059 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.230690884 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232719672 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.230275019 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23453738 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.234336965 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.238689603 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.229717397 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.2384979 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.232464639 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.233037069 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.234070958 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.231611522 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.229032363 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235198065 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.238116892 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.240233465 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239056382 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256921399 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.234591609 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.237424962 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.234182877 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.236782512 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.236581228 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.227360516 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.234961567 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.231994494 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232219059 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.234829198 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.234954054 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.231796802 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.230561665 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.233823776 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.234198937 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.233201152 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236279485 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.235013977 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.235208674 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.226389129 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.235599475 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237104902 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.234908397 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.23089573 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.235221185 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.233395215 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.232475794 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.240149277 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.24060089 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.234223544 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237445285 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235918345 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.239691995 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.234196382 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.235185131 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235144556 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.236073141 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239646352 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.25485195 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.237618474 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238360865 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.252077355 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.235409348 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.237552206 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.23800487 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.23528941 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.23581352 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.244641318 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.235141708 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.236025717 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.234303934 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.236437026 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2374956 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.242383845 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.231999937 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.23445936 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.238077289 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.236692655 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.235424277 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.237193281 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.236684817 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.236454906 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237225222 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237763848 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.237258224 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237450521 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.236931401 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.238897628 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.236805554 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.239666994 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.243629182 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.241267386 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.232803311 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.238929588 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.238320465 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.242613467 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.237687978 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.235678543 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.238577363 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248657697 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.25694818 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247039804 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.240500616 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.237618685 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242094422 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.240349409 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.241096005 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238643347 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240182945 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.237969242 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.239479763 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.236105578 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.237006112 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.240054183 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239738324 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.240926582 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.242903624 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.239381104 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.240209225 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.238108755 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.238343312 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.239920886 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.237332432 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.241340834 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.240624769 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242066231 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.238361713 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.238759617 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246268138 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258133958 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.239438883 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.237764639 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.241210729 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.238404199 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.240480522 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.241535016 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.245789269 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.248131198 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.24280759 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.24928278 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.242855265 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248929098 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.241222214 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.242031544 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.248060347 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.238626087 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.241327601 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.239932829 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.24083991 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250071012 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.261781498 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.243077006 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.244221558 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244130055 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.244430196 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.244400546 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.243071551 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244071579 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.242229136 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25107522 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.259041109 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.24730096 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246186315 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.238568552 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.239922076 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.242218424 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.244857648 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243287457 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.24236441 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.242435188 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.241905985 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.242831967 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.242708373 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.241867099 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.24194731 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.240848075 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.241805463 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252539383 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.265372569 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246719647 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.245740608 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.247506729 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242991369 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251115272 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.262559085 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.245028422 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.243429426 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.243868218 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.241793052 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.246421147 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.245557474 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.244559116 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.247679425 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.249471987 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.24714462 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.249152609 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.24390306 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.246373216 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.24874498 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253890151 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263613559 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.248534856 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247797181 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.244856954 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.24871752 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.251426863 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.246474242 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.246204378 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.248555592 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256064127 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250259998 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.243733216 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.246678042 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247025614 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24201813 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.248654211 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.245845128 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.24584774 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.24637771 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.24656656 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.244269105 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251544509 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.247014021 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.244967046 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246296425 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.244489303 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.256814398 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.249104239 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.247623786 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24496081 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.247734977 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.245688517 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.244171191 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.246273812 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246543056 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246719344 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.248064448 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254649781 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.254132317 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.249135714 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.242072612 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.249560331 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.248245946 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.247427956 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247489204 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.246082713 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250628125 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.244546667 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.248925898 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.249325707 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.248714331 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.243587819 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.245229096 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248285202 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253368739 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.255187898 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246329149 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.246111766 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.250738506 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252535689 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.249213496 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.246577617 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.25454458 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254542791 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.257812106 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.257956886 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.252362781 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.249981454 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247787898 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.253442937 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.248292167 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.246284663 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.251594495 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.252446172 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.247696669 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.254745671 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249646735 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.256967458 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.246170016 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.250111456 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260733468 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.272224685 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251353944 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.248787476 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.256194118 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.249745287 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.246903204 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.249151479 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.248767214 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256430888 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.26959827 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249602224 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253040243 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.251123116 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.250205146 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255853054 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252047308 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.25446579 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.248466196 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.251147281 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249003251 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252755914 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.250393577 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.248247515 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.250634927 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.255011362 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.258614272 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.250992801 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.24999732 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.255574584 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.252755108 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251956906 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251814325 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.248677447 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.25134236 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.251749681 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252665528 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.250074942 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.254055835 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.252925571 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.255122928 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.251322576 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255994806 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257420068 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.259874276 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.261040268 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.250534207 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.252041873 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.251135666 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.256488726 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254208684 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.253129913 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255567488 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.254967579 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.254315344 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254389582 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.255941546 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.259266461 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269449159 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.27398878 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253488318 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.25331326 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257019319 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.255608342 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.25408937 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.255116546 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.2587876 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.254291813 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.264209936 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.249590563 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259683426 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273187017 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.253038114 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.259433645 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.25447873 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.265226177 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.256166989 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256905068 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.258436299 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.258716789 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.272763953 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256717674 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268389443 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281319924 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.275530459 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.255868917 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.259816131 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255225427 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.257620873 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.25659957 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.258471618 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.257946561 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257660722 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.255062034 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.260273417 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263439778 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.258370004 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.257465018 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.256380842 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.256577897 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.258058444 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.254621364 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.259196997 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.25606443 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.256967195 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.260217754 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.259817817 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.257831471 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268595292 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.281010296 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.259044962 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.257669129 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.257954253 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.259543475 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.262157108 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265780336 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.264286978 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.257701994 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.257247314 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.259114827 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259919796 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.257883942 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.258752754 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.258569745 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258278173 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.258321213 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.26837179 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.280987698 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.266784745 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.261354504 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258990992 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.261201156 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260926904 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258707169 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263353469 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.263989898 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.263383854 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264117757 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.259480583 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.258539249 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.262882266 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.26762429 seconds)
  done (took 741.456097296 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.258615909 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259018962 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.25603756 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.258373922 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2570628 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257213183 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257548456 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258938212 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.257113184 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.259111322 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.25936708 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256254594 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.25728682 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258983655 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258286258 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259343314 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258873516 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.257083845 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.258984659 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258853192 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.258593252 seconds)
  done (took 27.585328913 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.266106456 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.258146997 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.255741643 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.265295324 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262022748 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.26160682 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.262566306 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263189312 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26442123 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260232298 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.264111798 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263163772 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.260514508 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.260002986 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260492182 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266137659 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.262695491 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260868788 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.263012107 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.261919844 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259858397 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.260585036 seconds)
  done (took 28.930329679 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.263599691 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.264812993 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.266835677 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.260304459 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.2630776 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.260322328 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.262268845 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.264393057 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.263049261 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.261448658 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.266760714 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.263762117 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.270026076 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.266084368 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.265953047 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.262875621 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.261268892 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.265948211 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.266557727 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.264046818 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.272087383 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.262589615 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.262189505 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.264206874 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.262173569 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.266971836 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.261974858 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.26195926 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.265197107 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.268368961 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.265091425 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.265051246 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.264420277 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.260926691 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.261330232 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.27135538 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.265713255 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.262254449 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.264064902 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.277963884 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.283303885 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.264636 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.27356955 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.266561626 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.263634102 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.266446882 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.271444794 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.26162135 seconds)
  done (took 61.910318133 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.266719597 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.26313337 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.262908857 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.262123714 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.264187056 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.263971156 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.264231763 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.26298906 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.26522207 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.264684489 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.26981185 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.263367428 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.264515792 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.263533811 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.267564434 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.263918013 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.26329898 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.263138907 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.2673166 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.264399211 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.263245783 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.264589157 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.265782891 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.26566835 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.269204367 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.266607521 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.264188972 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.269925319 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.265676505 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.267451866 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.26948825 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.267374711 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.268697969 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.262962317 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.266987929 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.268085999 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.266917295 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.263939131 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.268277906 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.26531957 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.271294508 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267247429 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.269010759 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.268270074 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.26663992 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.267887254 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.270533644 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.267982824 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.266368371 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.273377794 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.270817166 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.269607389 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.271342731 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.267317111 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.270074309 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.269622637 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.26831223 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.269801216 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.268889902 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.271969918 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.268122658 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.272033376 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.269387333 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.274425878 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.270981111 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.27002302 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.267963103 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.269792281 seconds)
  done (took 87.349263348 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271541921 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.271198962 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271962535 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271402715 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273732392 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.276188165 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275747072 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.272452906 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.270783271 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272003343 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.270334497 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.275903305 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.273490275 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.272484219 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.271238829 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275820199 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.275452848 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275981395 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.271030752 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274326434 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.273767523 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.27388477 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.276100445 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.272750916 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275494109 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.275882748 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277830957 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278203655 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275997574 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.27484341 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274586752 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.277100685 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.275315264 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275334961 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.277112819 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.273281763 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.273911655 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274448432 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.278541816 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.27456954 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.273318882 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276265171 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278111864 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.277102557 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277034875 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277608324 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.279763137 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.278229349 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.276969895 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274317472 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.281145189 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279282344 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277695043 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277344511 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276658172 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.276644278 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274994019 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276265059 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279306745 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278894787 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279862382 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.281494756 seconds)
  done (took 80.26028323 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277412455 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.277433428 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.275476616 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.270723493 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.276857484 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.274857512 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.275142012 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.276595378 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.27690511 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.2784766 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277921805 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272470048 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275780657 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276521974 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.275287351 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278336325 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276446135 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.273739604 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276489548 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.2739721 seconds)
  done (took 26.699718338 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.28023233 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.280668908 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.273552639 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.273829333 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.277814387 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.275377371 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.277901204 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277143415 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273971867 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281786487 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.278443237 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.278620602 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275463185 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.274902588 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.275859833 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.278590685 seconds)
  done (took 21.61930051 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.277928198 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.280390038 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.279178692 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.281337698 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.278460102 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.274959392 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.27699859 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.277781547 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.2775544 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.278164482 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.276648986 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.275414456 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.276718514 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.280694754 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.277490162 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.279283985 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.274543766 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.280401641 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.277904641 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.281459279 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.283628175 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.279262017 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.28113172 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.284419242 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.277888888 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.281472328 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.278421368 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.283032122 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.280698301 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.279583022 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.278159876 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.277829317 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.277421637 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.279400681 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.278483964 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.278610277 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.27957337 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.28050754 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.283280935 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.280112184 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.278507619 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.279274465 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.279706294 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.281299179 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.277567038 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.280997309 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.277334491 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.279972041 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.280004357 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.27484542 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.281474437 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.27899541 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.280640935 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.279626132 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.280156339 seconds)
  done (took 71.542958855 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281259401 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.278657846 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.277886399 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.281005123 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.282163772 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.278576446 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.280595589 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279524079 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279729274 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.282602786 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279026965 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.28472895 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278735545 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282554678 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281937624 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285883289 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.281063952 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.285272006 seconds)
  done (took 24.247664813 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.282409483 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.279152687 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.284959994 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.283282339 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.278876528 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.283048839 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279266372 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.281288857 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285209848 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.281145998 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281517263 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.283211199 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286716501 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.28155799 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.284832714 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280723434 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.282452007 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283844909 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.281174069 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282570289 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.286092812 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286966026 seconds)
  done (took 29.410400539 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.281571965 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.287485331 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.284247802 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.299089251 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.297705953 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.284346438 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.283750447 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.283716655 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.308401089 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.334570499 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.324857474 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.302497627 seconds)
  done (took 16.763890932 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283509322 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286730866 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278978607 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282955996 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285747083 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284854693 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282293568 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284216007 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286445105 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282942289 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282400715 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287755461 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288518129 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285189821 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286187658 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28599188 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282325336 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2845678 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281202887 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287494595 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281634635 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285854336 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284774149 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285926739 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286638407 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280348017 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285515517 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284117289 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284768281 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286430976 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288406133 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28296585 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288577308 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285679933 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288234293 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287470801 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285788213 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285126667 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284704797 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283208276 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288454662 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28756313 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284841575 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282970016 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288027169 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284741336 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284623201 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283945318 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282403771 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288180116 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288577208 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282042377 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287714849 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286768851 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287711634 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288192796 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28053169 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284613727 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287394343 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284660791 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286109178 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287733022 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283788814 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287870953 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287868167 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289596135 seconds)
  done (took 86.025924338 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285079281 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286652302 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288298242 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287736746 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28459967 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287287822 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286464054 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285982217 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286953603 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286929228 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2888108 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285653403 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287657706 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288502787 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286654575 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28494141 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286850857 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284836889 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288657344 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286712956 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2879793 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284028521 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28649317 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28533803 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288935114 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290750527 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283807766 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28738359 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290775498 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286847777 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289712932 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285343245 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286475024 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288045943 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286856549 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288188189 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286716148 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287996542 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289938488 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291477614 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288531391 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293306534 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287631624 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291130734 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289670265 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28665975 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288697354 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284668545 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289158095 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288584309 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286983402 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2917098 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290350779 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289308439 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289321532 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288119441 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289900303 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288305035 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288617998 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292515663 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287589669 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290859122 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292054546 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288004336 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286759396 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291726254 seconds)
  done (took 86.20223051 seconds)
done (took 1738.058484733 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.454245628 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.409095352 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.291027286 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.305185484 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.290185464 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.313747618 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.300453151 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.287816978 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.294364578 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.290649728 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.291689831 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.481770688 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.289605209 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.287361607 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.293779562 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.38849425 seconds)
  done (took 26.468824348 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.318449701 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.299897903 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.401404365 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.314269144 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.319676359 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.470828978 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.348013629 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.302604372 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.455134085 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.334357079 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.292058029 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.32278276 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.296471643 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.300120553 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.315497629 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.472536922 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.529253149 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.297697415 seconds)
  done (took 28.591182065 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.706674417 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.318085017 seconds)
  done (took 5.222980276 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.313929032 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.29912976 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.297253447 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.294915092 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.288686413 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.288991785 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.296703735 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.291055441 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.288999688 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.411078719 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.299703524 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.30715714 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.316745213 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.298720573 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.293323049 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.334580615 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.464041104 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.298580458 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.295447245 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.304579417 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.298985352 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.382717482 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.342052455 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.30010261 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.412272923 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.297357946 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.304840876 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.30400776 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.442954734 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.298128561 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.300687734 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.297280365 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.302025905 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.19389292 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.842631413 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.30570657 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.319438955 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.308501913 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.298061599 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.460800453 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.302846061 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.30558021 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.289316143 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.831311732 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.437810743 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.409255204 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.307007811 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.315084126 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.299052179 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.359491054 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.300058987 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.29783327 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.343325029 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.077263833 seconds)
  done (took 83.380612222 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.306950104 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.290985225 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.472402961 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.309712744 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.289753142 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.296693828 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.297202881 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.561130614 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.347646442 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.290238596 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.574908647 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.821373525 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.316431413 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.334822163 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.146149778 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.357877309 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.291423473 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.309197784 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.29725372 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.295512147 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.826047065 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.295636886 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.293351314 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.520880001 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.332158499 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.801009115 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.296540063 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.29510654 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.303179759 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.292172634 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.784239602 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.326172386 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.350650051 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.292530697 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.560223188 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.658996002 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.625362818 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.30490514 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.319299575 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.293305099 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.317626341 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.780241164 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.643253798 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.297682765 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.295559727 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.78577886 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.296016876 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.298153294 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.30670631 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541106053 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.301067028 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.301344196 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.311289091 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.30383397 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.29745595 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.412861254 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.381831918 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.802425071 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.298224194 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.301408828 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.346892418 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.298734055 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.305061203 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.299174152 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.29603542 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.647254437 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.448628013 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.303899211 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.64234964 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.7790822 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.314705188 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.864041582 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.31510268 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.309687694 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.437528363 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.308689642 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.300844539 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.794735814 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.300668681 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.294240243 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.628315471 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.303112863 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.586539637 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.316530138 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.299406488 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.841977054 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.30187997 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.385517456 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.299030273 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.309413309 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.299568669 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.305811223 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.568552859 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.345206239 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.299068792 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.302168872 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.346201888 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.299331237 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.30342222 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.300481859 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.844931011 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.325508824 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.300831582 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.307579056 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.30928707 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.305151575 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.303409248 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.306864304 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.564331973 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.304029785 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.307671939 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.302068258 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.296423031 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.313401087 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.534949796 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.309051076 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.595578863 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.306608023 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.300063538 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.30139164 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.301276109 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.316072118 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.300965108 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.305679184 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.162987474 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.566372985 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.328883424 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.309928014 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.30093303 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.307779366 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.301997135 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.30029983 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.340465199 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.302111135 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.027410814 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.329944823 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.3249572 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.304771814 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.308106252 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.303162626 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.30761136 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.305072715 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.597865099 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.575601507 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.445977011 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.30393995 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.312358897 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.015868265 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.367950522 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482974248 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.323739469 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.299994089 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.555266776 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.535776981 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.308915779 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.300877456 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.308107874 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559640193 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.309401047 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.618615644 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.820649824 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.321311535 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.307293644 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.039095403 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.019797228 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.307208705 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.312157669 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.587521385 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.32000273 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.307104697 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.30374319 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.30879663 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.318006153 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.308532949 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.306775823 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.305944564 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.305238194 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.406564831 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.500827145 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.328249494 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.311428364 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.800744379 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.314744678 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318662875 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.314354539 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.304742118 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.305447154 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.366364678 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.31112402 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.342026666 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.308997952 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.318208285 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.835565348 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.309752908 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.313703427 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.499391519 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.969783952 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.324956727 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.307027707 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.319118979 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.199618377 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.829176562 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.372993017 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.604498656 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.314256428 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.347454119 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.308612118 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.311952066 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828699403 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.325798437 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.311629294 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933774987 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.325166845 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.163606429 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.307548829 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.307934386 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.881626711 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.323610489 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.30791013 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.306008251 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.308002577 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.595254699 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.312260832 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.319743723 seconds)
  done (took 491.11162916 seconds)
done (took 635.968559 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.310033136 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.313636131 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.30020994 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.312388762 seconds)
  done (took 10.450924883 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.320096362 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.319543968 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.315678799 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.316102305 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.317365358 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.315377816 seconds)
  done (took 9.119895949 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.309175633 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.309912646 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.313382519 seconds)
  done (took 8.152634764 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.509821982 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.32654525 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.625790792 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.321372324 seconds)
  done (took 9.00418115 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.319561632 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.316293877 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.32015617 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.315557266 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.323494607 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.319383776 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.320531807 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.322513367 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.320329704 seconds)
  done (took 13.098371026 seconds)
done (took 51.041953856 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.704435505 seconds)
    (2/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.324233317 seconds)
    (3/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.305927352 seconds)
    (4/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.298609186 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.553299043 seconds)
    (6/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.886426525 seconds)
    (7/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.891289441 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.313858807 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.369354896 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.335750293 seconds)
    (11/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.432160489 seconds)
    (12/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.435603567 seconds)
    (13/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.315641506 seconds)
    (14/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.327163501 seconds)
    (15/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.471522272 seconds)
    (16/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.322573196 seconds)
    (17/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.304511162 seconds)
    (18/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.404552095 seconds)
    (19/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.787802194 seconds)
    (20/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.294549771 seconds)
    (21/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.322091974 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.699609353 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.715263341 seconds)
    (24/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.490238239 seconds)
    (25/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.298246284 seconds)
    (26/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.314965636 seconds)
    (27/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.083826889 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 2.313417887 seconds)
    (29/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.666955559 seconds)
    (30/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.300223818 seconds)
    (31/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.29936188 seconds)
    (32/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.34253506 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.424151771 seconds)
    (34/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.29910692 seconds)
    (35/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.31269576 seconds)
    (36/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.392516147 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.043627792 seconds)
    (38/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.315434947 seconds)
    (39/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.367265811 seconds)
    (40/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.315781455 seconds)
    (41/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.351443903 seconds)
    (42/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.039377831 seconds)
    (43/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.877765323 seconds)
    (44/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.440410186 seconds)
    (45/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.309864957 seconds)
    (46/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.318615495 seconds)
    (47/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.315914699 seconds)
    (48/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.625432297 seconds)
    (49/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.038516161 seconds)
    (50/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.312236757 seconds)
    (51/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.306937326 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.50594179 seconds)
    (53/286) benchmarking ("sort", Int8, true)...
    done (took 2.313171176 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.592925492 seconds)
    (55/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.108932946 seconds)
    (56/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.298990568 seconds)
    (57/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.334089057 seconds)
    (58/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.338763042 seconds)
    (59/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.456903915 seconds)
    (60/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.519657744 seconds)
    (61/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.165598601 seconds)
    (62/286) benchmarking ("sort", Float32, false)...
    done (took 2.315578651 seconds)
    (63/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.299362291 seconds)
    (64/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.620815301 seconds)
    (65/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.424069545 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.371159979 seconds)
    (67/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.303665947 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.914338102 seconds)
    (69/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.310920578 seconds)
    (70/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.301713898 seconds)
    (71/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.311187251 seconds)
    (72/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.305637512 seconds)
    (73/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.305520628 seconds)
    (74/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.298356689 seconds)
    (75/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.1853415 seconds)
    (76/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.382651117 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.116787035 seconds)
    (78/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.420524696 seconds)
    (79/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.190659725 seconds)
    (80/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.335052959 seconds)
    (81/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.20428493 seconds)
    (82/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.370410068 seconds)
    (83/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.493919951 seconds)
    (84/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.303405053 seconds)
    (85/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.31606973 seconds)
    (86/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.331999045 seconds)
    (87/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.301185657 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 2.317832794 seconds)
    (89/286) benchmarking ("sort", BigInt, false)...
    done (took 2.321891443 seconds)
    (90/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.653739869 seconds)
    (91/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.304184726 seconds)
    (92/286) benchmarking ("sort", Int8, false)...
    done (took 2.32796324 seconds)
    (93/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.317585959 seconds)
    (94/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.304826582 seconds)
    (95/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.344993312 seconds)
    (96/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.433671335 seconds)
    (97/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.317573986 seconds)
    (98/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.318605497 seconds)
    (99/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.308216641 seconds)
    (100/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.319817661 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.193590099 seconds)
    (102/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.306521645 seconds)
    (103/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.329784146 seconds)
    (104/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.867040127 seconds)
    (105/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.302221501 seconds)
    (106/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.301024996 seconds)
    (107/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.361310006 seconds)
    (108/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.655123558 seconds)
    (109/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.311625953 seconds)
    (110/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.315886218 seconds)
    (111/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.358253757 seconds)
    (112/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.307287504 seconds)
    (113/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.264557378 seconds)
    (114/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.51368848 seconds)
    (115/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.530628796 seconds)
    (116/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.346552114 seconds)
    (117/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.203089272 seconds)
    (118/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.324336487 seconds)
    (119/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.331274096 seconds)
    (120/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.446508602 seconds)
    (121/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.406985367 seconds)
    (122/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.315531914 seconds)
    (123/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.33495853 seconds)
    (124/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.31921926 seconds)
    (125/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.326615675 seconds)
    (126/286) benchmarking ("sort", Float32, true)...
    done (took 2.320645203 seconds)
    (127/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.307137247 seconds)
    (128/286) benchmarking ("sort", Bool, false)...
    done (took 1.858151105 seconds)
    (129/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.341424845 seconds)
    (130/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.317326251 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.573825885 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.318089967 seconds)
    (133/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.153457312 seconds)
    (134/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.769181285 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.038540874 seconds)
    (136/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.588383934 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.421703527 seconds)
    (138/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.405475217 seconds)
    (139/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.401787884 seconds)
    (140/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.346525388 seconds)
    (141/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.320029084 seconds)
    (142/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.306988711 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.92511204 seconds)
    (144/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.449599485 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.058418535 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.346324589 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.701120491 seconds)
    (148/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.322908349 seconds)
    (149/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.35170022 seconds)
    (150/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.330069297 seconds)
    (151/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.405559385 seconds)
    (152/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.349817807 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.341129201 seconds)
    (154/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.131064496 seconds)
    (155/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.294887957 seconds)
    (156/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.312596848 seconds)
    (157/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.309073374 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.197055991 seconds)
    (159/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.31089757 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.195175521 seconds)
    (161/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.314600712 seconds)
    (162/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.044730652 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.644803168 seconds)
    (164/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.324155079 seconds)
    (165/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.333917575 seconds)
    (166/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.350230135 seconds)
    (167/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.308376979 seconds)
    (168/286) benchmarking ("sort", BigInt, true)...
    done (took 2.321722975 seconds)
    (169/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.433527705 seconds)
    (170/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.388615706 seconds)
    (171/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.480909724 seconds)
    (172/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.327792349 seconds)
    (173/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.370085541 seconds)
    (174/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.385183927 seconds)
    (175/286) benchmarking ("sort", Float64, false)...
    done (took 2.319718103 seconds)
    (176/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.31138718 seconds)
    (177/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.294816487 seconds)
    (178/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.306791084 seconds)
    (179/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.302111458 seconds)
    (180/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.307616546 seconds)
    (181/286) benchmarking ("sort", Float64, true)...
    done (took 2.350105633 seconds)
    (182/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.49873845 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.644413044 seconds)
    (184/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.367000894 seconds)
    (185/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.345744057 seconds)
    (186/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.320893615 seconds)
    (187/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.337561802 seconds)
    (188/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.369104255 seconds)
    (189/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.562656078 seconds)
    (190/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.426780543 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.86643426 seconds)
    (192/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.3508281 seconds)
    (193/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.30799249 seconds)
    (194/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.325321702 seconds)
    (195/286) benchmarking ("sort", Bool, true)...
    done (took 2.328206881 seconds)
    (196/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.394389229 seconds)
    (197/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.889859237 seconds)
    (198/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.308583249 seconds)
    (199/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.333147497 seconds)
    (200/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.31139585 seconds)
    (201/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.699535004 seconds)
    (202/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.318083285 seconds)
    (203/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.308779401 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.167920508 seconds)
    (205/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.838938481 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.324205599 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.560038497 seconds)
    (208/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.41183374 seconds)
    (209/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.423351505 seconds)
    (210/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.407444731 seconds)
    (211/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.308934261 seconds)
    (212/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.311539916 seconds)
    (213/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.349859032 seconds)
    (214/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.322312293 seconds)
    (215/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.383322457 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.349573669 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.19592702 seconds)
    (218/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.406592152 seconds)
    (219/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.312455835 seconds)
    (220/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.505994754 seconds)
    (221/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.327701202 seconds)
    (222/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.516619968 seconds)
    (223/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.311868049 seconds)
    (224/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.398723934 seconds)
    (225/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.315617778 seconds)
    (226/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.156344218 seconds)
    (227/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.326588398 seconds)
    (228/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.331332031 seconds)
    (229/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.416843856 seconds)
    (230/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.387275132 seconds)
    (231/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.894426492 seconds)
    (232/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.326347135 seconds)
    (233/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.684898519 seconds)
    (234/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.352402336 seconds)
    (235/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.313430841 seconds)
    (236/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.317881916 seconds)
    (237/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.330143751 seconds)
    (238/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.336557469 seconds)
    (239/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.068245933 seconds)
    (240/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.664095293 seconds)
    (241/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.32698296 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.52724432 seconds)
    (243/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.340402467 seconds)
    (244/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.320547153 seconds)
    (245/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.309345224 seconds)
    (246/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.377296417 seconds)
    (247/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.3151592 seconds)
    (248/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.354641336 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.71376309 seconds)
    (250/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.897741501 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.325923598 seconds)
    (252/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.313829081 seconds)
    (253/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.167209469 seconds)
    (254/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.317747065 seconds)
    (255/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.432424286 seconds)
    (256/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.316147421 seconds)
    (257/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.41192023 seconds)
    (258/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.317737603 seconds)
    (259/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.075250049 seconds)
    (260/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.107175574 seconds)
    (261/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.342298592 seconds)
    (262/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.356945435 seconds)
    (263/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.329570252 seconds)
    (264/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.33160659 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.456512433 seconds)
    (266/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.067457279 seconds)
    (267/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.380051887 seconds)
    (268/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.921313349 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.420888666 seconds)
    (270/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.344713353 seconds)
    (271/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.326677067 seconds)
    (272/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.336691932 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.516083246 seconds)
    (274/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.349027858 seconds)
    (275/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.318545128 seconds)
    (276/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.343215092 seconds)
    (277/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.353324077 seconds)
    (278/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.353264005 seconds)
    (279/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.333731019 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.371870553 seconds)
    (281/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.317207352 seconds)
    (282/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.378208854 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.348464883 seconds)
    (284/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.441734948 seconds)
    (285/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.459540077 seconds)
    (286/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.322350252 seconds)
  done (took 562.520195677 seconds)
done (took 563.740395677 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.378396914 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387138406 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.343508246 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.378563477 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.454279662 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.520069088 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.355697076 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.38439948 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.389035176 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.394945053 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.347455308 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.518722886 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.344984601 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.341608879 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.344583797 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3850024 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.331716518 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.343467071 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.360890382 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.383280518 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.357259549 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.346781686 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.396552687 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.51759943 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.348411227 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.349769894 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.347311997 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.362656618 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.459307365 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.345232802 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.347615132 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.352125821 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.343414199 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.346060184 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.338765589 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.362974252 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.35290996 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.353103251 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.381243604 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.455456859 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.337315414 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.348008692 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.344866048 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.350050622 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.349073164 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.388575818 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.346388659 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.404883308 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383710594 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387596069 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.340341039 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.358313467 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.35553976 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.348178306 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.35616172 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.345502086 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.401470443 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.388552544 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.365289849 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391148405 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.338920685 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.348274556 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.387668886 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.361304588 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.35158024 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.332115649 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.346209408 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.385996191 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.34129754 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.35324969 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.3327196 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.354782597 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.347783693 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.360102003 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.376241796 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.335351475 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.343182441 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.346975831 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.35012082 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.344218369 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.397235795 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387664643 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.397993948 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.34856768 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383827976 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.51956291 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.357290016 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.344531155 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.381508309 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.362195143 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.355047593 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.354142759 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.383512381 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.347852475 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.39688412 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.407758978 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.356082235 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.358433643 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.399787003 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.35802489 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.340641018 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395917526 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.348806151 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.345528481 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.348472321 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.467938231 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.345383352 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.348270684 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.384841973 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.398441113 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.407586877 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.347992343 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.358515188 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392888533 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.360273305 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.41018587 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.354539601 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.346558287 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.345524064 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.471513274 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.354537754 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.356739397 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392404893 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.412085446 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.352917044 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.335193131 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.350657847 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387816769 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.469157582 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.365680998 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.458441754 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.347096706 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.355094145 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.385022071 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39195631 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.381590868 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.414382627 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391828585 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.367750476 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.356101956 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.357795233 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.364002598 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.350923933 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.409751783 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.350989877 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.381539971 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390743153 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389547201 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.388546297 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.470161156 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.357027091 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.342345916 seconds)
done (took 226.020067773 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.529908235 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.345995145 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.565885138 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.349103521 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.560883415 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.583477851 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.346569914 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.344667492 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.343806229 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.253947204 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.34520926 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.343212502 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.344698347 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.344086819 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.568978702 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.34795843 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.343743547 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.146723363 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.347270459 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.542928132 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.349438316 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.346989163 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.346603148 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.26532187 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.345837722 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.341099756 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.539319511 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.344368861 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.144833793 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.343532217 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.344348221 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.152362864 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.579384431 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.363304104 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.358389791 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.356131995 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.568928669 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.363847836 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.571930751 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.568647462 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.570833482 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.38927785 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.343288054 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.347688861 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.349999865 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.354114557 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.347041416 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.374244594 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.345448295 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.347877081 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.14434565 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.358632912 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.346632393 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.347058749 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.349402679 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.378476247 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.348062579 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.349809322 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.579307205 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.34926345 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.533873566 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.263057968 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.265563003 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.348601419 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.347147786 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.349151985 seconds)
  done (took 111.167777993 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.538992269 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.510094173 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.587686994 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.352465862 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.487340223 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.585884974 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.352999319 seconds)
  done (took 11.663764069 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.356831473 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.354648392 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.57054474 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.575275699 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.35797137 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.666458549 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.358241712 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.36811456 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.355208504 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.520882194 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.358279788 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.359370015 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.358544908 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.348590159 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.574116516 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.364525139 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.623712534 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.356018233 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.355256066 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.651969225 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355416182 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.359358334 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.515137208 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.367423274 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.356722587 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.358612136 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.348502999 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356388294 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354298355 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.35539056 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.3523856 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.465419778 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.360406231 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.352704297 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351840022 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.68206024 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.353758969 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355794581 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.356924926 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.355912235 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.354847061 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.35704818 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.35812557 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.350607187 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.352382788 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.378081921 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.353126674 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.358429901 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.357305474 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.358610599 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.520230725 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.357118211 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.353575974 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.355358991 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.519214996 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.364867139 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.358208544 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.35616835 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.358901149 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353233521 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.657239155 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.577353765 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.360607114 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.57436458 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.356897712 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.355407891 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.357447529 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.358622397 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.591457544 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.359150455 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.570758649 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.35539607 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.668155242 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.381400913 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.361620701 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.363056318 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.364212697 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.360871635 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.355429868 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.365574808 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.358055278 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.359927932 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.364742417 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358821496 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356777993 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.714066495 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.686931322 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.359220851 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.457689341 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.364816759 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.360233266 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.525244866 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.362085553 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.357777252 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.584538198 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.627866615 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.5240538 seconds)
  done (took 143.693417998 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.374319957 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.380442891 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.367560576 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.421830299 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.363214085 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.363119283 seconds)
  done (took 9.524186834 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.364793659 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.362553529 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.358665967 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.361989829 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.358064586 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.363824271 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.364784846 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364343838 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.362498572 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.362106493 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.363780991 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.365302558 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.362466813 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.363274692 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.361969251 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.360637492 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.364688567 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.361713002 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.36154992 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361256241 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.358417412 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.362220236 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361612923 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.363925443 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.366233686 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.365697482 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.389276219 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.364059832 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.364499104 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.372461213 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.378541679 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.365424296 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.368439855 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.364831818 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.367918457 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.366264203 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364335279 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.365271643 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.35823326 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.362740182 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.36438118 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362267465 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.363136741 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.366036133 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.367585683 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.367277918 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.365604762 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.39209914 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.362939259 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.366300079 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.36722798 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.364814493 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.364703256 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.361821342 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.36764193 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380537842 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.36803292 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.366322302 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.365314109 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.366318095 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.366503004 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.364126611 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.369280812 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.370296088 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.364935992 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.366751981 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.368255258 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365783446 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366758831 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.366663226 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.366868728 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.36519561 seconds)
  done (took 100.589839859 seconds)
done (took 377.881234007 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.7843084 seconds)
  done (took 4.043790752 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.453679001 seconds)
  done (took 3.715520954 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.06046949 seconds)
  done (took 22.326832901 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.41860391 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.383132826 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.371558243 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.360254076 seconds)
  done (took 10.791828705 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.5729597 seconds)
  done (took 3.832853418 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.367514833 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.356271828 seconds)
  done (took 5.985571218 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.813456602 seconds)
  done (took 4.075739741 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.926916595 seconds)
  done (took 4.192297454 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.368749731 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.410413045 seconds)
  done (took 6.048988072 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.345993298 seconds)
  done (took 3.604220836 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.802314466 seconds)
  done (took 19.06457725 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.374696417 seconds)
  done (took 3.638813515 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.467753726 seconds)
  done (took 3.728030359 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.844179128 seconds)
  done (took 6.106020152 seconds)
done (took 102.413716496 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.359170209 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.36139466 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.360170705 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.361063414 seconds)
  done (took 10.702656373 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.402468121 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.397184609 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.403106221 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.412361556 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.403656121 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.400001602 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.392615262 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.390884686 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.411551247 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.403095962 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.40122513 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.40437402 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.403634005 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.39201117 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.405438392 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.405111104 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.4136899 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.403816553 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.396324146 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.401797941 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.368673452 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.412110466 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.404174921 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.371824759 seconds)
  done (took 34.863008083 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.863748714 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.440710097 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.523247499 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.422793855 seconds)
  done (took 7.512519941 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.436810073 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.438233423 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.448688522 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.488230739 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.511924434 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.448378155 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.391089917 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.387836015 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.379367321 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.438519274 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.500573675 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.435081844 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.522071006 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.368034629 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.646399087 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.368140296 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.371424018 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.449429644 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.488216521 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.500088411 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.37005565 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.447786701 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.448024536 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.434758182 seconds)
  done (took 35.981285606 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.371226881 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.3902972 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.371748199 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.369414014 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.378338809 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.370765473 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.370802467 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.373167864 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.371845333 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.896391326 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.37380869 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.382436628 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.87106983 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.373086718 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.376723439 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.373568142 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.888325001 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.87161233 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.375700629 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.378618588 seconds)
  done (took 30.794099959 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.36587099 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.367198049 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.718961809 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.619034047 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.366176618 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.365128418 seconds)
  done (took 14.06711065 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.438191445 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.581320339 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.375214608 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.720325941 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.798606665 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.375957483 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.373918893 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.617378863 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.919373023 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.903423615 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.431103359 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.443408471 seconds)
  done (took 20.244165748 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.377447111 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.366774556 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.375292099 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.383161923 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.424898553 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.377738564 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.382415191 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.367645644 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.427104539 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.429776162 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.378716598 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.428759495 seconds)
  done (took 21.988687595 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463921593 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365465127 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36772792 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410325452 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37222565 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.210822166 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413408256 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.100955573 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.38419128 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641977512 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36802579 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466761508 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.624699894 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38140081 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369742698 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.363226383 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601051864 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844265035 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369987219 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377946822 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404010568 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373371753 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378062056 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.579562217 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37005395 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36610412 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.630632407 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368963923 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648818455 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385152516 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38004464 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369643836 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645225737 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039869339 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492237255 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577722893 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395814093 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387402241 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.366908207 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.378139998 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372208355 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373430684 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381708329 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368734587 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36944617 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371052705 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123834831 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.393729349 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.366217182 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370742636 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682832868 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468974192 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.374382658 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371005657 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458276547 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373385897 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.3770702 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.369504171 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951818323 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371798265 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389768952 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.3729626 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393772681 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399071005 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994331271 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.379191931 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.378253561 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37700237 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371238436 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378601093 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390279533 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372053286 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.394062819 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372847096 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082056104 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382887183 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376238158 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909835444 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389156186 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.374389376 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606885223 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372418278 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374584111 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.372019113 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373721533 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068484287 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378244446 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.358638072 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.388816731 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.093411349 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597735992 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395162406 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406516533 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.597849293 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.359730617 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377349479 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.38758302 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374962132 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394972269 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.096876488 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386448626 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.374684358 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632933378 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.584390486 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386421891 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.361853111 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85938188 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391223506 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.397039395 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37674991 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.588231106 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.953249527 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392005661 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375575798 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411831376 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374857861 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102282334 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378340374 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.479836875 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377436783 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647028888 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.155612288 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377482339 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444377845 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377661493 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377820371 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389380872 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378084091 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376981613 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.57834611 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406514348 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.388314405 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.376278847 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377570277 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.372622949 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381568774 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.381704714 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.601377639 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379259321 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653537195 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378209983 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379272236 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373830454 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.596304838 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.383756889 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.715779394 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641399247 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386997777 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386671143 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389212088 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396875914 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48510522 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399674973 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.381871508 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.636995923 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.382871185 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.382219153 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379376444 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395304628 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384533809 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.387260061 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403404433 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964742429 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359800922 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383068477 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.268408878 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.392266189 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44648077 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388886419 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.589919519 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.379246544 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41191154 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.401734476 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.378706885 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605517311 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392177533 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.394448938 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457019354 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.86829444 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981710003 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396141231 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.381127025 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.3792253 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.37881293 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378827694 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380502775 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381083339 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592332552 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395538316 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384174862 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.965107625 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382943423 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378813465 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.402327992 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393011215 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.388081139 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380812809 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.376325996 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396455069 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386217644 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.393027996 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526824987 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.394801482 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382770597 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.899253223 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387729705 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381029123 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382674423 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417243087 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379870811 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2241849 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642720128 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40650646 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653033113 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399692348 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.400616112 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.382993605 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382021502 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385529157 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.384029089 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41371841 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.393738111 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38419931 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401594232 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954248856 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110650483 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926388653 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392948254 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.384890539 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3874215 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.112174634 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396229924 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385659214 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61598076 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114499185 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395887622 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868987113 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.403849435 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13274915 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639519901 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617870433 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392712782 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.384113484 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700359185 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59760608 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418967202 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385298975 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387234136 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.365643735 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948396906 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398013171 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463696009 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112938595 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396547017 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390593869 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.435953594 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.402327197 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795115739 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404061728 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387015383 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388360056 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395629356 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213225348 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391466278 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386047144 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011231631 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401971491 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.87141911 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398949719 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.601791497 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.40035094 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.391227932 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.39344071 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.386740151 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.641027963 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640054836 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389519397 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398257594 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929414116 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.26125167 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.394790036 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385971904 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119951364 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383233808 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.685018024 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.396943898 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.386864192 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391251845 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387662501 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38837643 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.386270351 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393357546 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364768314 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863817494 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.422886666 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419115676 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400471604 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389438195 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.644775961 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.402655922 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.973438382 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621094321 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388778308 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412715596 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.394424945 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391869912 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.379724162 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38912678 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389645008 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465897591 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.615101718 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406201638 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.378298297 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458104969 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602039089 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391322199 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400757971 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633724026 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.388697553 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.393085486 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102010984 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423609511 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401037558 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391756235 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407485114 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407942509 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462986326 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605870964 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.404620234 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.402053248 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801290611 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421462978 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392475876 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.404507561 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489165766 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392119577 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.394735064 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.166420033 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986117672 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135516351 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.981038895 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.708572034 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39449661 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39408823 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39292985 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552553808 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393425923 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666931824 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393671131 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.414672285 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43177113 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399182295 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402706381 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605667809 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669534404 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39465232 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408682423 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394886891 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.394147381 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405249112 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.604818352 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880673181 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941500571 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394020125 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401509765 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.123815025 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682067933 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394580524 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394918376 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39664489 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.397519303 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.40882751 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.397099631 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39488028 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552898637 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647819573 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072866172 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.420380201 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.424732652 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.170520481 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396128879 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.65112208 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392246921 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612253194 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989422272 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.098672602 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662277495 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465870974 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611160119 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.396437001 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559126188 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.406446362 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.3977486 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400071744 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396529934 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.394861582 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.405608301 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988402039 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664648143 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.402046823 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.405912307 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429892484 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.406625164 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.621992906 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102339461 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617338341 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407829059 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404548337 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39730287 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987096494 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.716137134 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400155321 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.397624386 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639275216 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399415783 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424463084 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.852454751 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.394764717 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944301375 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.365134348 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421082566 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397473408 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.117104344 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993198329 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.405173475 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884190719 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400051349 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399515713 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672550896 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.404716211 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40022839 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677479594 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.403598696 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403881755 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615407694 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.993118152 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15611103 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.403427724 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398474917 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.4013952 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401230667 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479877835 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402871748 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40411133 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.828100024 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419567463 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402493815 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409368269 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.410921352 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401421538 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.39967936 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400400581 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.403040253 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.412585881 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.398115044 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403315192 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.400334983 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973451573 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420022836 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.069453182 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.727804489 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.657096921 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.409893121 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.389107961 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.40452837 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403604223 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40314476 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396971946 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40342386 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949884251 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.407299941 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.4141386 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406543474 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.646951012 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614740913 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401431895 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622472685 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416036946 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419280862 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.388852019 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404607796 seconds)
  done (took 985.437380831 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.413038799 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.41016064 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.442273836 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.415048941 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.420700223 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.439994246 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.456257924 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.410893966 seconds)
  done (took 20.70702535 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.412958002 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.412074403 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.408714897 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.413362451 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.410638558 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.877449221 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.423563007 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.410763352 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.412380161 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.414888999 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.411650584 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.085621012 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.429033212 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.409725197 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.399301527 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.412100542 seconds)
  done (took 33.048895859 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.357667036 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.533048668 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.296454761 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.438988365 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.441866446 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.40034567 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.628806623 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.427017554 seconds)
  done (took 26.824377238 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.417167107 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.41661897 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.418723464 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.416570702 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.416983094 seconds)
  done (took 8.38469333 seconds)
done (took 1251.816892774 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.411874685 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.413195799 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.408810782 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.412571719 seconds)
  done (took 6.946179009 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.392338016 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.392821179 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.392700708 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.407654913 seconds)
  done (took 9.886113212 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.096190701 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.085971363 seconds)
  done (took 5.481470219 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.407453311 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.170056491 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.144740162 seconds)
  done (took 8.023957412 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.712440632 seconds)
  done (took 3.014053323 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.815153527 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.776925939 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.601638597 seconds)
  done (took 6.495801084 seconds)
done (took 41.146555648 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.414466532 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.649587924 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.560039304 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.412119548 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.564725988 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.564828576 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.143632343 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.405589728 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.414112895 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.423746308 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.410517884 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.563058126 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.124552871 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.654996924 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.126677685 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.655400538 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.570480995 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.408535721 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.416720857 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.415686869 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.139927554 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.404074154 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.405716055 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.410338072 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.56378614 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.55567753 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.418092523 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.654162396 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.407026575 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.403516231 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.549356523 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.407101025 seconds)
  done (took 83.522325543 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.421954329 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.406310542 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.41730224 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.416500516 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.411022779 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.415547108 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.40524081 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.412680934 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.416978055 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.409271205 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.412956048 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.405548174 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.406194913 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.406135838 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.421463053 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.404630592 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.419085387 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.404471201 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.417286013 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.407715014 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.409024636 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.405051433 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.419274078 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.405854625 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.410439794 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.406986062 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.424122082 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.406011241 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.420147433 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.411281574 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.412617514 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.4440036 seconds)
  done (took 78.518843508 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.408132039 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.414751952 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.409569032 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.406289774 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.421269378 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.413847444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.409037215 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.406780489 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.421708488 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.443639233 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.407448412 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.422093374 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.408785789 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.406839146 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.424737618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.423348403 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.405566639 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.425575545 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.40677345 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.406186171 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.40957445 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.416293298 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.409773132 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.419659757 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.424456932 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.408335273 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.408828542 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.419017797 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.408846395 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.426801057 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.413781833 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.412599997 seconds)
  done (took 78.576856332 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.69184443 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.421740397 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.422047747 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.406342839 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.423455792 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.421193871 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.41386186 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.692593594 seconds)
  done (took 15.202972024 seconds)
done (took 257.126550568 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.421414497 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.413605008 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.793972478 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.444144585 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.414026385 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.44197124 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.44464143 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.63815937 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.4306986 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.63682803 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.429914911 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.440031394 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.42845236 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.440655272 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.863026331 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.565606384 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.434457893 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.434081168 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.929235831 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.429867024 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.853681323 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.415193095 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.68865738 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.41860411 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.424248385 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.412004473 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.420504929 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.42820724 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.442556705 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.941025776 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.41819732 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.398572004 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.517561382 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.520319354 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.630509285 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.576334289 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.418479264 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.499274179 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.811140585 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.418010298 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.420138606 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.403824293 seconds)
  done (took 86.257514432 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.424995296 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.543075801 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.421483946 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.423331275 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.424997301 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.546021801 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.520604042 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.423375734 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.426518065 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.424994091 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.426401082 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.428111024 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.426741208 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.424433347 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.424435933 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.425982194 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.424571989 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.427824854 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.430495048 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.470437452 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.549618408 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.449402845 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.420487827 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.421633811 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.530600039 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.561579083 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.425506793 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.418899497 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.471755711 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.424392414 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.428197739 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.470446258 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.424753252 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.426961523 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.543596969 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.525874053 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.428717811 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.423760473 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.543914886 seconds)
  done (took 58.092646697 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.427069565 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.824159254 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.995123108 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.432953974 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.429490129 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.4330576 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.510879612 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.430375199 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.429845105 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.433730108 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.736089178 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.433238622 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.471685148 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.020732394 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.432082866 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.429562071 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.431034316 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.431749152 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.842739513 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.438823518 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.52812396 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.429511674 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.511441296 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.444997295 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.448486292 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.429047862 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.435123385 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.335854376 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.433967431 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.744087984 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.218332095 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.508087473 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.299304586 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.005503523 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.20977311 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.431909326 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.431476143 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.745035604 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.43311642 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.431471477 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.510769489 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.433759992 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.007552085 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.424984423 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.434538556 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.430748379 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.368919007 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.745842998 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.671016573 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.438281735 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.035974421 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.431827251 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.433093844 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.432375713 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.671826001 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.439452771 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.432167385 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.338513527 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.451256759 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.509713995 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.432719915 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.431253527 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.854451899 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.432041072 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.832450237 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.433935743 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.444710993 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.450575185 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.008202792 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.43719125 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.42911709 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.43636105 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.437081763 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.74141983 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.834391579 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.411889767 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.436482167 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.855611564 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.306650802 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.50833236 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.436427753 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.333964554 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.517504931 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.43917798 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.438404857 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.437111368 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.436333155 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.488311066 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.507633667 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.399294456 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.42404109 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.341321324 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.531870169 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.448450287 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.436011731 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.343403462 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.449764592 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.4361745 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.003818826 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.424361741 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.435692558 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.446151307 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.445846566 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.439898 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.516600389 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.444526964 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.015978772 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.439766731 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.48900721 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.438010399 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.445294854 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.456291651 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.51699939 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.438985976 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.43692434 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.429548155 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.752286064 seconds)
  done (took 196.447510013 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.430214077 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.427065791 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.431330371 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.439771689 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.431075261 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.435561967 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.423701089 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.428790321 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.434930933 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.431124131 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.431747255 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.429689694 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.429874904 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.431993939 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.437955787 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.438868905 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.431443513 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.431663106 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.434719246 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.426281292 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.429630223 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.433668671 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.432321215 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.428322911 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.431807188 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.433424276 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.435542693 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.429658361 seconds)
  done (took 65.416817365 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.438637127 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.999549819 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.441125222 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.564798542 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.458525668 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.437399446 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.565635331 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.493783814 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.442889463 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.437195981 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.435873005 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.740520969 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.441799203 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.949353881 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.626437428 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.569197992 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.947380319 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.454269549 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.436993998 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.435776945 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.568763182 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.450656248 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.739631835 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.99997843 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.438686724 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.002375014 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.429508285 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.440373956 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.440242884 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.001375491 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.43976882 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.742513724 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.516438949 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.498585262 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.002106853 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.968432647 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.964996194 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.587214604 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.43636979 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.440252936 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.438682757 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.436418626 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.00663127 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.442995924 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.443800919 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.00191157 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.456806632 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.440787436 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.449793491 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.438400478 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.501689224 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.498336385 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.745456133 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.011155935 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.516074833 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.454187521 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.568923443 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.793904369 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.446183243 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.954487076 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.431268953 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.012828379 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.462065047 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.433959045 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.443656192 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.449747589 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.589072014 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.569042153 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.952660099 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.461474496 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.954563465 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.606275904 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.439449664 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.445229195 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.446532949 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.010257958 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.958301987 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.605813604 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.576077144 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.633124462 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.435818912 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.444782811 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.433690985 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.519929953 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.44347114 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.010109456 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.972302097 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.458610605 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.447334684 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.446616405 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.444469489 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.618760999 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.014006551 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.521239478 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.953933939 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.766733397 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.75301879 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.447157201 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.503795714 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.458418357 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.754535311 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.448145012 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.500662516 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.857983497 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.74973259 seconds)
  done (took 170.68711872 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.767579647 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.47074684 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.526408919 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.702290729 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.172370029 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.098126475 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.439620127 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.568852446 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.549527294 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.698097758 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.437904745 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.535226059 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.878169351 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.518991442 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.246630978 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.512880395 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.537944473 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.585930931 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.811812977 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.440873457 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.262669023 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.824200705 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.730721417 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.46341395 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.547016663 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.297913725 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.085127402 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.098734514 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.705928865 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.44052288 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.081346484 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.441485933 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.450688672 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.471516851 seconds)
  done (took 68.730175918 seconds)
done (took 646.936633657 seconds)
SAVING RESULT...
DONE!
