cset: moving following pidspec: 24175
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.544533289 seconds)
loading group "string"... done (took 0.508639117 seconds)
loading group "linalg"... done (took 8.669717749 seconds)
loading group "parallel"... done (took 0.177818187 seconds)
loading group "find"... done (took 1.392247787 seconds)
loading group "tuple"... done (took 2.059794199 seconds)
loading group "dates"... done (took 1.344348348 seconds)
loading group "micro"... done (took 0.213669053 seconds)
loading group "io"... done (took 0.597904719 seconds)
loading group "scalar"... done (took 42.520551707 seconds)
loading group "sparse"... done (took 12.9248481 seconds)
loading group "broadcast"... done (took 1.044169367 seconds)
loading group "union"... done (took 14.284698873 seconds)
loading group "simd"... done (took 4.900139071 seconds)
loading group "random"... done (took 9.860360557 seconds)
loading group "problem"... done (took 2.116069808 seconds)
loading group "array"... done (took 24.377307545 seconds)
loading group "misc"... done (took 1.141698828 seconds)
loading group "sort"... done (took 3.595565265 seconds)
loading group "collection"... done (took 21.050343464 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.606431162 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121602558 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.143507968 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.171522428 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.205314076 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136536387 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154192802 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.550494519 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.0402525 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.205105727 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140993189 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.540320348 seconds)
done (took 5.764990597 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.230228953 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.071408455 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125298884 seconds)
  done (took 0.875288283 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073303427 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.171402851 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091060283 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.106865825 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107705183 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.089773518 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.107736287 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10706113 seconds)
  done (took 1.46235294 seconds)
done (took 3.329443097 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.80821603 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.838810873 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.491431634 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.122542598 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.154267569 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.135566238 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.309086923 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.155376633 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.111488768 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.112210175 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.169587488 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.354501571 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.475537402 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.950653844 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.105232111 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.12411353 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.078338124 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.715628555 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079478509 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.127556131 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.513497423 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.109553584 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115079858 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124385639 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.205787597 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127463949 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.179237368 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.091887575 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.685366221 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.099022255 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.183353853 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096216423 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160007204 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.23584951 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.076474138 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.107330358 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678394375 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.186831246 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108844271 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.093339027 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680166359 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.077617324 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.186054021 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104366842 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.106660447 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18652831 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.100096139 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093850476 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097704469 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086035344 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159701822 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.442278741 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104520536 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.140128157 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.097220877 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.717034568 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094228341 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.153643163 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122905355 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.105756963 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095225032 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089900298 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.172492984 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.098265946 seconds)
  done (took 19.630799183 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113285338 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137281375 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091756544 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138335601 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137349198 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.0945972 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082163397 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09130071 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106956171 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181044352 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134637669 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139549017 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072605892 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.094674509 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.097900113 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246191627 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118625429 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100330771 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09570821 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085974715 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138509015 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.108651177 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089724817 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107657124 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168466414 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20268504 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.118593246 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120600918 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076385863 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111809818 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139864427 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144806279 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09169223 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.076802855 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.179170917 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119424276 seconds)
  done (took 5.05499409 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195118281 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094517421 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.205377593 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.128452135 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.176666638 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14866965 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16499606 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114080914 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260856821 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.179608028 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160451195 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128166358 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108785901 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076559451 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.093395665 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076098785 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.745400296 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180042774 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.152547709 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106613956 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105791377 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099090547 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.373930936 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084741098 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098491725 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085284386 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087945779 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.174387449 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082724364 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.22422268 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.115884069 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087065495 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132242603 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193709612 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124359002 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136818949 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081550013 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097133508 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.209716525 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10588931 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074785552 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120153584 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131398441 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112078544 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097094476 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.107558219 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.22357277 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096702768 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097411318 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.051068682 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196732763 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093775274 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096381154 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.335956694 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097635943 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104848095 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097844693 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.28378048 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.115386175 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09825108 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075540352 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10143199 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07594025 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.404965527 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088801623 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.998510948 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.094910586 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156778803 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097513124 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103337912 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077877241 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098502514 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082894296 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11571313 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078731391 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076342537 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098102841 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076515066 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101806214 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114203686 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08375175 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095792439 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14570909 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114307306 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098068955 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126528178 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.1002507 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078047152 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129520907 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.127622608 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077910982 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100260777 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.142675161 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085777054 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09871249 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.097473816 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10083943 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.1408602 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096476022 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.194340699 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094056967 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.106066244 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100562508 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128681771 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.120145247 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078560326 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100992114 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076272684 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095895866 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145878753 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095405194 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078189357 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099873418 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092232146 seconds)
  done (took 23.419105538 seconds)
done (took 48.782657308 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.42054428 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.110586091 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.111179574 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112649768 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.108576488 seconds)
  done (took 1.621384742 seconds)
done (took 2.356950882 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.32165976 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.195503538 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098112028 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.18842032 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083905759 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.194988886 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161647256 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096769408 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206039964 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.079593977 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182698607 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079843378 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101876717 seconds)
  done (took 2.749303856 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088986548 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114190551 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077893435 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105698984 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073918292 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089482145 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107662692 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117669302 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104861862 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081701413 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089839154 seconds)
  done (took 1.777963645 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088890853 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113180028 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077500815 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087060201 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090979285 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088614793 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107686289 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100012425 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108355452 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082739475 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089797632 seconds)
  done (took 1.764402074 seconds)
done (took 7.015751014 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.04390225 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.772144233 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120318716 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.173525469 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.344203144 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.215140057 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.578741855 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.115110475 seconds)
  done (took 12.274186149 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.125804733 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.093405737 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078286441 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096973116 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076282062 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095381599 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078724394 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.096462799 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079159657 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093339227 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076441711 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09332422 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07932132 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.093917128 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076194388 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07799756 seconds)
  done (took 2.208117965 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112865131 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111050958 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.100133392 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085273673 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098578509 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.080907374 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100765815 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.098784289 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.079761848 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097297062 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.086293461 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10252672 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.084207563 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094827523 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.082549916 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.103568474 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09614454 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.083169464 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.101206769 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.08314346 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103032374 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.080701843 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.101232728 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.102131841 seconds)
  done (took 3.109003115 seconds)
done (took 18.31973736 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162882978 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081619968 seconds)
  done (took 0.978770977 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097026648 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115673815 seconds)
  done (took 0.953691839 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.103256679 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094663135 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132761921 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113230572 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.078350492 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07754476 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12649171 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.095210193 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.07738089 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096478358 seconds)
  done (took 1.737001138 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082026701 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098586359 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.08613788 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115936463 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088781723 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096806748 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083199722 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098117068 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.100914747 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077147453 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10265877 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.096846392 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.101159374 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116241571 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.083290613 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.102205951 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088124206 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099619327 seconds)
  done (took 2.460084363 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077961094 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080372976 seconds)
  done (took 0.901995773 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080615969 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093137305 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08064318 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097334264 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076308005 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092887482 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.076164295 seconds)
  done (took 1.340608905 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.477098582 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.24841214 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.30940813 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.111502031 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129488832 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.492666436 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.130452715 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.091955826 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.109919617 seconds)
  done (took 2.885325181 seconds)
done (took 11.995558009 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087913693 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.130277772 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.498009301 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114958188 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.076271961 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.160228068 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.257743005 seconds)
done (took 2.068959512 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339169681 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12095566 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087852722 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077951821 seconds)
  done (took 1.369380857 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075691243 seconds)
    (2/2) benchmarking "read"...
    done (took 0.082470126 seconds)
  done (took 0.909417612 seconds)
done (took 3.0282465 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075757662 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074971578 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.090264009 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074981345 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.090057937 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.072697295 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.124201068 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07508606 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.094247496 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074744795 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.075280948 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092121424 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.075010954 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093253501 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072696284 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090511039 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075496981 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.072898014 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089661535 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072384053 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.092596609 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074914738 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089629125 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.072968271 seconds)
  done (took 2.768707766 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101361726 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094714836 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.0818683 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099168221 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079436567 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.099978359 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.082590052 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093730194 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.09877541 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.078241379 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097476699 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.079899907 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.096085459 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.080703583 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096715407 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07969098 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.099532114 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076716755 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096769931 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.080200663 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.099489326 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076742599 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096900343 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081446591 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.097195061 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096892628 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077986111 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.076613371 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099159032 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097094424 seconds)
  done (took 3.445532412 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08437515 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072514461 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090415531 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.084678478 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090573396 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077142173 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.091117136 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076621007 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095910904 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.073123413 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078235024 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090327024 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075507282 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095406235 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077615077 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097871785 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09120308 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.094173256 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076279156 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09524965 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.078885758 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076433935 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093867786 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.072714959 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092203895 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072454193 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.073452355 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.090708598 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.074091657 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090805553 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.078501927 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097108872 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073016711 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.104095296 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.080295578 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090420165 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081769685 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.073107963 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096256407 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.072798487 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.091245826 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072953983 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.094542399 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.084761209 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.093727243 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.07449507 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076896661 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095363732 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078270013 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098391211 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.073251603 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094374328 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079346887 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095402074 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080017461 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.073459062 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091321246 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072718518 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095377887 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073345197 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.090832062 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.072355607 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.079211764 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091890372 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096810214 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10228669 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.076411334 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.096090067 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.077475543 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098726595 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078854376 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109168111 seconds)
  done (took 6.88417466 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078743569 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102075318 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075458898 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.075232719 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089672128 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074247607 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098286756 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074110775 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093692304 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092808053 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091187265 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075518372 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093235357 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078097603 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09284814 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.075525672 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102557189 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071751552 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092011396 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078252518 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092049818 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080341633 seconds)
  done (took 2.636099681 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.218434183 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100582716 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139015191 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091949662 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111476337 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109670806 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.081316647 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099977012 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081547006 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100827434 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102210359 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081793259 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111333739 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101566655 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08342873 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102471013 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081437409 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103014019 seconds)
  done (took 2.662973873 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.089682217 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094638337 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100402379 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095301859 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076792571 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097378281 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0835793 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110615396 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.078933578 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094004272 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090145221 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097127813 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.079314325 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094785378 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079261086 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094634858 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.080095094 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09430101 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088019675 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10162923 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101260622 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087716169 seconds)
  done (took 2.769696581 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093666521 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09696882 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101073742 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098689269 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075936069 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096176797 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085741614 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09466048 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086572872 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.096982162 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077262564 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095808032 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.084883604 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09505178 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.083509477 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095922701 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079451893 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094518019 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079019319 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093999993 seconds)
  done (took 2.570126916 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119100475 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108995555 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091487728 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120221278 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109691411 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091148452 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120776342 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092278092 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109001196 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122628497 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091619886 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110025595 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103762476 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11601884 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109121263 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1028669 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120735143 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120881504 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091813555 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1106314 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122553742 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092082861 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121784788 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092155134 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109502788 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092371977 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110094589 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099997369 seconds)
  done (took 3.766485544 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0778053 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076910781 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09275076 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.07363138 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092385837 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07425966 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07412379 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.092198835 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075905348 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091231253 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.076493455 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094025109 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07649968 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.076999289 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093887401 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.076372499 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094464016 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.074132345 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074644443 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092002772 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.076392401 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09471035 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.076749296 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092541668 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073744182 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.076301385 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091981757 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074536999 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09478147 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073978352 seconds)
  done (took 3.244373478 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.08542184 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100765024 seconds)
  done (took 0.957558124 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074340541 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111042858 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073953533 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080322335 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101068252 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077734166 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105692965 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100394526 seconds)
  done (took 1.494004905 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100416667 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115665141 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083494279 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.106991702 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095817517 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.113279594 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162028858 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083649909 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103232719 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078329337 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113876688 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.077974939 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106492059 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082509414 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104531464 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092297562 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096888939 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.08780975 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10304632 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080017175 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102238461 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093702922 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105584775 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.08545708 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.098309673 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088859742 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109882963 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.107364201 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082780337 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108201401 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085119402 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089457983 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08233698 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101637087 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078354249 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113296991 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095416099 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100791669 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08720408 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10277907 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087455631 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093948216 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088753464 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103221297 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09048201 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100849336 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083743381 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094404516 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.078663722 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.099907836 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076128285 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099102792 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.07259251 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.1054832 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087575124 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115160307 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081144928 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100837273 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.082551212 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099907298 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08546651 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10045425 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089204628 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099970544 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089212606 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105190936 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086642772 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094126643 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07250078 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098108794 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.087913006 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121590205 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089542619 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101792155 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0846761 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096777619 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083615006 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103002724 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086469403 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107538507 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101185345 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086010967 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107314776 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081069957 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.100399167 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.084579283 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079873554 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.098895517 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.078691695 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117267157 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098395651 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079000679 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079193768 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107848961 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.082710757 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099894875 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078073706 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105255024 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.072349462 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102290912 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085074436 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102997376 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091193467 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102162064 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084554101 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.105004405 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107382211 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08356829 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.082098285 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092848977 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084583489 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098729579 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086877078 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090434333 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084215796 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.101037263 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084956526 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.106618588 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080618072 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10149612 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089018625 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107249941 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081317536 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093094779 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.083021499 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101315643 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088466578 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108205315 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080523792 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095186859 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.076948812 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105123439 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083047438 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102455513 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084087454 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102173877 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.072739509 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097530305 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083228408 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107928518 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081875529 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.103173812 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.088087552 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10375283 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080948068 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106160089 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.081234219 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.096411249 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087874769 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100069523 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077409091 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106654762 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.083301653 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099064659 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.083464323 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106850756 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.083112902 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102663006 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081009765 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101755975 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085228358 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.09674722 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084271896 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099637391 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091002217 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101777939 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077335492 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094031307 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.085821792 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097806991 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082668133 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097290142 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.083943166 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10288751 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080016218 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082085791 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100901916 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113236155 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100528577 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103215833 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087103878 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.108861949 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083393108 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103624068 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082913814 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103121974 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084390297 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.106148791 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.085104918 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102304464 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.083195629 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093679178 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086347342 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107072854 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.07840555 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080156827 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.09748791 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.082856756 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108276299 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.082646725 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102645625 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080994043 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103738442 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088373519 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101362859 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082829787 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.096921216 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.083808023 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105835308 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.085106786 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105867223 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090218919 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102888971 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078104128 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107545937 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081149187 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106139073 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078218137 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098064125 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.079642416 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.106442272 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081655308 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.100649538 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.072849695 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106902431 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089136564 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102684378 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.078829874 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10254991 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092357314 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100249532 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086192314 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10169697 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.0859531 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11650656 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.079679246 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.101088654 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092684083 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102887826 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07295 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105059574 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081603861 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096754081 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082037809 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09896793 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083583904 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104818977 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.084334784 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091943165 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.083118192 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081006531 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098024857 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078323698 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107119845 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.083814496 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101369482 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110867731 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085576249 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104041152 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0858389 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102040327 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084759293 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103706656 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084515585 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103313051 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.081722851 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.078660465 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103404997 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.078982501 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098416204 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.082252254 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101995965 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084244067 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103935403 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082559698 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107207616 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.083653349 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103386438 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119620638 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.080947013 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.098065617 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085326732 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104686287 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083563054 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.101563526 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077931193 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10755541 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082851666 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108166645 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082939821 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094325612 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.084642877 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.101406219 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.084635413 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103655779 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085612823 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.081358968 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102028033 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082738524 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111446902 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.09858492 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090206159 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104699422 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08588541 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102066462 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084985398 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.100344013 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.079875993 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101846208 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085623967 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10325655 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082664462 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10461404 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084544693 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101483837 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081988182 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103724638 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086141967 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10454981 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.073750273 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.079544482 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098600611 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08445182 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105960112 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.085585554 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.101137865 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082082811 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105686407 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082537975 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094532976 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.088479171 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105388133 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086175865 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111166612 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.080017917 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102928354 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094098942 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09198448 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081677993 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09897642 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080698025 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108737815 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085529255 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.107401199 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084456169 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.098834895 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.076923118 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104796963 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082967359 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07349184 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098990745 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087188578 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.100464217 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082654681 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103386018 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086727096 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104098725 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088063848 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101429741 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083853533 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10360843 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.076832261 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099639055 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.079953297 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103485569 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085560186 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098689976 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.076676802 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10242202 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08419702 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.10354733 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083997469 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08188642 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108351239 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083519088 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103247126 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109068906 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.074650075 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.084140918 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102830871 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08355118 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.098544251 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.085153559 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1049256 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086620087 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.107244324 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084416981 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105228227 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084799215 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099558698 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083910261 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102951806 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085264529 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.098529877 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085771703 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109370443 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080818934 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103553373 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085149485 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.100421212 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.085972669 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104976069 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084791929 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107577497 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.084777784 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102726093 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.08728313 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103168611 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086169651 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104755518 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083162076 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107693329 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.079847027 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109943705 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085178964 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105617982 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083369662 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099327175 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083900129 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102685979 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082978996 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109199718 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086424051 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099518581 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.080680513 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080824504 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103384284 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10916698 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09069173 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103294869 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085339938 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097044643 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.076673991 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086370558 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100537594 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.083621556 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105296055 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088679853 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105051428 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.081311348 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101437359 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.089323179 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107600076 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.086006329 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101288055 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086565472 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10586306 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.084211178 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101906778 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083349455 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104800954 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086527374 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.101905493 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.080500542 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112225481 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107495755 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086619565 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.101102126 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086586485 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.103076124 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.07931958 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085296742 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104204424 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087605106 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104122797 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084353233 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11357766 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.098352329 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083530391 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109368732 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083762334 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.10887624 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079712928 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104413839 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087028851 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104891319 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079222015 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.080407079 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101091121 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.084816833 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.099829481 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079319946 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114282998 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090153064 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104857125 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082384737 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102908418 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078719775 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098567529 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080639194 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106457514 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084253072 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111664343 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080534675 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099658463 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.07892446 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103508323 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08605645 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105957859 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.077896103 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098095657 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081127288 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085272367 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111471465 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10200396 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085212278 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085765987 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104616693 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081002286 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110802588 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.076731904 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105378769 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115112477 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086596191 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106960776 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.087879907 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110168708 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086580205 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097367799 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08647752 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104456868 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085720312 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10555741 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087591097 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1193829 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086035817 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100460663 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086480745 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104219733 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.081371231 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112526043 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087645794 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106143803 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.087725994 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.103320929 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087428206 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111652645 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088301146 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104810951 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086310175 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103707099 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084093169 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102073737 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.0828295 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107080144 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086865 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103857089 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.087839069 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.099614773 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095872536 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110758749 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086983758 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095788509 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.080789597 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.100968128 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079397893 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106086445 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.079034229 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082303314 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102661776 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083201483 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107239194 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086828088 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103971213 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08695836 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103929366 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.074681299 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108234344 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085758557 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106966896 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.077848774 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104460483 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087172885 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.108780881 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091371688 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102018535 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085431574 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.10217083 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087518521 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.0982865 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.08851512 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10299457 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.084183555 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.099970425 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085030812 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105761729 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086953121 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105863888 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087419641 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104091526 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.089076283 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108052446 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077836564 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.077370674 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108319686 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081498934 seconds)
  done (took 56.632074671 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14481991 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085866467 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075550091 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095457289 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122346704 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080358496 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095486117 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081061295 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098803647 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089909789 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095644061 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076352366 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117596052 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123639313 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120638262 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090182059 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095352589 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080038883 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095081553 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081031071 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116149613 seconds)
  done (took 2.881340623 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.101314923 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114177413 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112296411 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098436425 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106737902 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113907432 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.092720818 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114126424 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.118570616 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089154751 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11746513 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113934922 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.08846037 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10808996 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108108377 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092485442 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118454153 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105935948 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.096979614 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112036495 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110328778 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093263156 seconds)
  done (took 3.144544451 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089502359 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.08386499 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.109543617 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.078728148 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103934829 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.079859511 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.109247204 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.081307286 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10953041 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.08552865 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.10193406 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.085288474 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108752765 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.079899131 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.102355495 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.081158598 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10944022 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085423901 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085708926 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.099355246 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.123774922 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.079387476 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098566919 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.081752642 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.112924478 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086906627 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.103985344 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.084725661 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.081856991 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10396744 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.08082724 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105725788 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087894473 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.101737037 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.082717966 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103821002 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084857297 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.098379469 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.08133525 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.107628416 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.079989313 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104309454 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090923744 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.100767435 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.081239114 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085893411 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10506849 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.078295514 seconds)
  done (took 5.313906922 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.116739263 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.153131757 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.083306498 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143391788 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120356557 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094194216 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.105932175 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143288308 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.078419114 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.104017445 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122643691 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.098026196 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105428776 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090608954 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108385808 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103700662 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087210007 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099613105 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.09037321 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102868294 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090420668 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.107728747 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118676556 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.096079685 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109276387 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102182005 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08091762 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110286615 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.095841578 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110598173 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110066201 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092568909 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11938302 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.081904252 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10288045 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106223138 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.101755928 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104891167 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087937726 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099319422 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087034153 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109986572 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106626618 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10145679 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104809257 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.085975357 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105743073 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.077533137 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116812367 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.10701906 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094451804 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118029722 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10885552 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085307725 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110794683 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119328259 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085089867 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102877436 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088612008 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.115693718 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.078950388 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109525695 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117757928 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087568639 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114613451 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.118461284 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.086751334 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108888477 seconds)
  done (took 8.001465441 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113049724 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111016752 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101932016 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122136601 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110641867 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.089826278 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109953568 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.10955145 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090418403 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117592737 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090041402 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.158105135 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.107224538 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096448364 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112035133 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111049109 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.090941689 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110000497 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090652261 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110334998 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090141741 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122722636 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109977322 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121781644 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103134328 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107801555 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089817097 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111826594 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122028509 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.090691483 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12424164 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.110110652 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090755153 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123045824 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12406029 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090282274 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105019117 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090051363 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.111532583 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110309893 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088172889 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122600314 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090560355 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108824395 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110616552 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091328884 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123340574 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123447198 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097376294 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118124872 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109880589 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10237246 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111509424 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109964149 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102269942 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.131160779 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121941213 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1232158 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091140796 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.122611363 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121992879 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13099197 seconds)
  done (took 7.585780001 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082987503 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081812063 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099778709 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.079510285 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101753239 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079697492 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081414929 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102364518 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081823093 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.102735665 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082069081 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100073997 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080174714 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081465646 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099412297 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079927246 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102112376 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080241197 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081137156 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100102088 seconds)
  done (took 2.6136105 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090736769 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123779384 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083636724 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109821837 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.085450115 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110839041 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.084260604 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105916855 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084079347 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10523224 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09466275 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116132596 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102727365 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089310793 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115675006 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109552891 seconds)
  done (took 2.448787358 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.102599226 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123466832 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.128209455 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08759572 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.101041803 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.089680174 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105749964 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.078244688 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.077826605 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.111703626 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089130598 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109289841 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.084465287 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102016338 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.082777928 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108868811 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.078599029 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.106775388 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085003113 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.126644884 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107850476 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08661004 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107055873 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.084511941 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105415497 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088709165 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110241439 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080342093 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100919383 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.086095859 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106386105 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.090582126 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.099443322 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.0879885 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100791564 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.080635987 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105467636 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086600202 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109152315 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085793884 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101136772 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.085430569 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104428735 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.089332 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.077711087 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107461781 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077608147 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109569507 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.08402372 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106031259 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.084937393 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11159161 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.088551005 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116113431 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112952599 seconds)
  done (took 6.185050631 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098128742 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107311318 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087448577 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100449637 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085829236 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110655177 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087150788 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104906473 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085493533 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101034662 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085934007 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106751976 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085088517 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107292018 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085617704 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106725482 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078368723 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.083984975 seconds)
  done (took 2.549213629 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088486251 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082605835 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.111712704 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082680761 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103565194 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084697062 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099745482 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.081471726 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101180382 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082742009 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102110381 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.085289741 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101728742 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.085115312 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08224665 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103734054 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.084531215 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102076482 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083187748 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098517339 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084771849 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101695177 seconds)
  done (took 2.878771906 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.100059897 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.134120914 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.096287422 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.145260227 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.108452926 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.086376967 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.117365041 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.087497083 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.125462561 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.086250078 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.106369068 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.086945685 seconds)
  done (took 2.124126475 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107540783 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141586224 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083896937 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107447155 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096306651 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109912794 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108473014 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089133018 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122805802 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121790899 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088311092 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122069141 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121801696 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120328975 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096995808 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117019358 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087859508 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109509061 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084172811 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131223267 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109008375 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121333858 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088035899 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108774722 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088875868 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120179113 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121599226 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121869326 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089112394 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122750518 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117505591 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089195156 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122115015 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121839194 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085918144 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123679774 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088326533 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132748065 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117623014 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119591942 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086400585 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118794161 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122647782 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095764589 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122665333 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109481102 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096097737 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109679921 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087891698 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137698453 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118856619 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120104762 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117703416 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102508307 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122301018 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137202079 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122031275 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120364386 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096973232 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122102876 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120622899 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097275372 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121238672 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122162355 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117728095 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100158061 seconds)
  done (took 8.173157643 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122871499 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106295847 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088499348 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123386173 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1213095 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108717715 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088874565 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110097169 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088535582 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105465203 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156240246 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088733722 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120381819 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120381495 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088646463 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110135292 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087770585 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12108701 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106343687 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138176906 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088768095 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121212354 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120516848 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120585349 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102477527 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117874443 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108627476 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088680484 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108814175 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088914661 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116547288 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108579692 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100125138 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105635267 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119943829 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088874741 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109303758 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096051419 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109656995 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118534772 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10078234 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132691943 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109090743 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088580898 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122961706 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109682742 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090050064 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105567372 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088272648 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106964686 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122973671 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101524276 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123025007 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121896982 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108876497 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088546532 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108796455 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089286012 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109850283 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097285763 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121760411 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109958707 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138834652 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088582499 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110148592 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12081684 seconds)
  done (took 8.011768223 seconds)
done (took 152.493576674 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.10147004 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13998766 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097535613 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167851015 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083813452 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139326128 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.11720285 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.119645599 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084157346 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.105008011 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.083595817 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.107977216 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.150343896 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.082996652 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105695078 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.086682578 seconds)
  done (took 2.620553935 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.180192395 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.283050108 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104035769 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.111528193 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089562899 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108135696 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089268129 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111882153 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.085032077 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.117866596 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.085990924 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107490954 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.096005175 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108981536 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.084512158 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.107105616 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.117602219 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086924237 seconds)
  done (took 2.929743716 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115407574 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149526941 seconds)
  done (took 1.12045366 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119767613 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181466532 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301750748 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.137417595 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.134637329 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12792185 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.161214794 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.345184634 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190147214 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.128770466 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.130904757 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.111307948 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.113751202 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116352622 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093290856 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.111500389 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.13685499 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092802984 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112534463 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.092016744 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.13448307 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.091080034 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.1169484 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.091270339 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180179838 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.127298253 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.113229873 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090452094 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.112590399 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.091254468 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.116690371 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125298849 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.125150541 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.168041218 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.095469089 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.185223217 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09703282 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11117636 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.090529299 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.110460997 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114548153 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.094529657 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.126019485 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.089476733 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.112101072 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097414907 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.112653692 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.111532472 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098567465 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.120333499 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097198771 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.117446392 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.161083659 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122061064 seconds)
  done (took 7.739137769 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.782801428 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154282892 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088656537 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.90544653 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141799007 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103086303 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.775471468 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132510377 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24437479 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.780546598 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128203378 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124592044 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.210248204 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.276822548 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.148954708 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316087691 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.686779221 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108767087 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.141555192 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155278427 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09553881 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140202111 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131425095 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454882505 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.089048851 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11157085 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116475696 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102009814 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164339887 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.112470796 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092307774 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.208901083 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.270827447 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206690397 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090548704 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110679869 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088985921 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171626726 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273119036 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222830896 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179404126 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085706316 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110563335 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102224545 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132113841 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106985599 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168442481 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176513527 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.178450116 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116036193 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124223644 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098904336 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123697714 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166609311 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.108488938 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318495982 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.347642651 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111265563 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097850268 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.130701353 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269437636 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087906277 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231241293 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13849998 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217016478 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089295729 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789128422 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171921302 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087716196 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12194321 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119330024 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095440723 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123668675 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174216064 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.429295727 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126034854 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094066566 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110056303 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225609849 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087589401 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111877913 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.168580071 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11326368 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097778532 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128541533 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125223651 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.177804983 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251067634 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12764483 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119952014 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095063354 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124283712 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.090036426 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.218547392 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222466428 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.185008221 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.216638541 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102445579 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.191954745 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171776756 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124199598 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.17621841 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118544728 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109314597 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124888386 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219593137 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146247845 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090673261 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11659642 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097349704 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150152788 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114571066 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097408347 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.173064525 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.506835509 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.174971498 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108591292 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094204502 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121002353 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.167575959 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11897348 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246549648 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12234442 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172930841 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120050329 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086412938 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121035086 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.169915046 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126073187 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097519775 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125646376 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119647584 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.256085805 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225033253 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105325625 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246245721 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183700557 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099309367 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203686736 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098738111 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.197258301 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099340267 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124156288 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090181235 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783947019 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125699895 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097638198 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118127016 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.197269931 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08870046 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113974079 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088790327 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108617834 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793184959 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115595733 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.086818562 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.112895907 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100177218 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121417828 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117873903 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095524888 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166852334 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239236306 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125670325 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119651238 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.090354203 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.16601964 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.113632433 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.090179591 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.111692428 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090655466 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121338079 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094306889 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113911338 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.180450343 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163281858 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22735265 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577604883 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090737443 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087949708 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237119412 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111839252 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.309801978 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09887981 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.230870262 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.172828496 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.108687694 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.341408533 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.175765463 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.196891004 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.092510222 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175778758 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111237353 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11761887 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167144727 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.08882028 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119005637 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163794425 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129670773 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104627932 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.160210838 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112597499 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237282036 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.085216437 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.197819773 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091560422 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125170608 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.314019672 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08992465 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133109847 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166543954 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116047277 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.09145193 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.050567558 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090831727 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12302062 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100545051 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229550101 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.171142948 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120469824 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120213998 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103306601 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.189676191 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.216640632 seconds)
  done (took 44.858484493 seconds)
done (took 60.119909259 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.306685056 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266426581 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.297733313 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.197424763 seconds)
  done (took 2.021833573 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.177021985 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.152953571 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.124338239 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108424601 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.154462842 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086939504 seconds)
  done (took 1.685503184 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.480231378 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.374183479 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.345846435 seconds)
  done (took 2.082346795 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.254827902 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.281930035 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.322300514 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.427114046 seconds)
  done (took 2.271981059 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.206730266 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.126582841 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.099163485 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.139231844 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.170955037 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.178565254 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144820884 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.156637613 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.107357006 seconds)
  done (took 2.257938128 seconds)
done (took 11.201812934 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.282251357 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.22670963 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.15741573 seconds)
    (4/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.257812053 seconds)
    (5/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.224461531 seconds)
    (6/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.156646904 seconds)
    (7/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.16812783 seconds)
    (8/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101190786 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.130286616 seconds)
    (10/286) benchmarking ("sort", Float64, true)...
    done (took 0.227033674 seconds)
    (11/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.108470232 seconds)
    (12/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.256247785 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102925788 seconds)
    (14/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.120058019 seconds)
    (15/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.135264633 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.120081674 seconds)
    (17/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.204726699 seconds)
    (18/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.163239186 seconds)
    (19/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.228260134 seconds)
    (20/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.163486758 seconds)
    (21/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.147617142 seconds)
    (22/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.205381678 seconds)
    (23/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.221957415 seconds)
    (24/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.106575235 seconds)
    (25/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.210409449 seconds)
    (26/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.176248978 seconds)
    (27/286) benchmarking ("sort", BigInt, false)...
    done (took 0.254251101 seconds)
    (28/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095596933 seconds)
    (29/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.098848437 seconds)
    (30/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.113259724 seconds)
    (31/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.186206352 seconds)
    (32/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.233875249 seconds)
    (33/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.196359216 seconds)
    (34/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.09189037 seconds)
    (35/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.231010286 seconds)
    (36/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.200223942 seconds)
    (37/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.142859926 seconds)
    (38/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094222275 seconds)
    (39/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.151200785 seconds)
    (40/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.245671054 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.159267736 seconds)
    (42/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.118370033 seconds)
    (43/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.110500241 seconds)
    (44/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.192284704 seconds)
    (45/286) benchmarking ("sort", Int64, true)...
    done (took 0.220713118 seconds)
    (46/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.102328894 seconds)
    (47/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.238007608 seconds)
    (48/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.100273334 seconds)
    (49/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.195658267 seconds)
    (50/286) benchmarking ("sort", Int8, false)...
    done (took 0.195242209 seconds)
    (51/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.217124049 seconds)
    (52/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077239693 seconds)
    (53/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.123065528 seconds)
    (54/286) benchmarking ("sort", BigInt, true)...
    done (took 0.247799986 seconds)
    (55/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.17475705 seconds)
    (56/286) benchmarking ("sort", Float32, true)...
    done (took 0.227362662 seconds)
    (57/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.095316505 seconds)
    (58/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.182481678 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.117154901 seconds)
    (60/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093973334 seconds)
    (61/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.169120127 seconds)
    (62/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.140844385 seconds)
    (63/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.099136202 seconds)
    (64/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138951863 seconds)
    (65/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.103489262 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.115884426 seconds)
    (67/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.126700358 seconds)
    (68/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.158288454 seconds)
    (69/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116006596 seconds)
    (70/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.163291263 seconds)
    (71/286) benchmarking ("sort", Int8, true)...
    done (took 0.218245412 seconds)
    (72/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.236913223 seconds)
    (73/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.171011342 seconds)
    (74/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126118103 seconds)
    (75/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.157824702 seconds)
    (76/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.083633956 seconds)
    (77/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.190187048 seconds)
    (78/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.1432106 seconds)
    (79/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.150151526 seconds)
    (80/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.11539627 seconds)
    (81/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.093042904 seconds)
    (82/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.187344431 seconds)
    (83/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.221238775 seconds)
    (84/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.19793806 seconds)
    (85/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.096155533 seconds)
    (86/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.102218484 seconds)
    (87/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10548207 seconds)
    (88/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.139324567 seconds)
    (89/286) benchmarking ("sort", Int64, false)...
    done (took 0.086674671 seconds)
    (90/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189588637 seconds)
    (91/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.185069253 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.126004371 seconds)
    (93/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.109282639 seconds)
    (94/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.158075932 seconds)
    (95/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.180023143 seconds)
    (96/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.109270447 seconds)
    (97/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.119440423 seconds)
    (98/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.077058552 seconds)
    (99/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.158680818 seconds)
    (100/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.103829205 seconds)
    (101/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.103155237 seconds)
    (102/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.111043544 seconds)
    (103/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.07581939 seconds)
    (104/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.181550504 seconds)
    (105/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.134078924 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.178642578 seconds)
    (107/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.10112033 seconds)
    (108/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.158416836 seconds)
    (109/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116177371 seconds)
    (110/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.083887924 seconds)
    (111/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.184998332 seconds)
    (112/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124183473 seconds)
    (113/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.197440341 seconds)
    (114/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.092967587 seconds)
    (115/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.13774131 seconds)
    (116/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.126127739 seconds)
    (117/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126137424 seconds)
    (118/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.181923655 seconds)
    (119/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095361904 seconds)
    (120/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.102417801 seconds)
    (121/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.1740973 seconds)
    (122/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.124309128 seconds)
    (123/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.0920707 seconds)
    (124/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.107078707 seconds)
    (125/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.110384237 seconds)
    (126/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.10158122 seconds)
    (127/286) benchmarking ("sort", Bool, false)...
    done (took 0.1870529 seconds)
    (128/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.100500497 seconds)
    (129/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.117244113 seconds)
    (130/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.141180838 seconds)
    (131/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168654217 seconds)
    (132/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.105934838 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093888345 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.141586776 seconds)
    (135/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.118839619 seconds)
    (136/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.095303058 seconds)
    (137/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.116762855 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.094000921 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.123272148 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.101233947 seconds)
    (141/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.135938247 seconds)
    (142/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.125018667 seconds)
    (143/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.079606665 seconds)
    (144/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086840097 seconds)
    (145/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.206935568 seconds)
    (146/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.112065946 seconds)
    (147/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.083447839 seconds)
    (148/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.101140035 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088234261 seconds)
    (150/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119230067 seconds)
    (151/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.173596873 seconds)
    (152/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.184921942 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.126503855 seconds)
    (154/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.08651645 seconds)
    (155/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119873294 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094596124 seconds)
    (157/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.123141411 seconds)
    (158/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101026372 seconds)
    (159/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.128414165 seconds)
    (160/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.126195831 seconds)
    (161/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.102330379 seconds)
    (162/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.102708061 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094758574 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.117065957 seconds)
    (165/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.078137676 seconds)
    (166/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.076451912 seconds)
    (167/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.114025791 seconds)
    (168/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.092827973 seconds)
    (169/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.11140437 seconds)
    (170/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.094483739 seconds)
    (171/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.125181835 seconds)
    (172/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.090156974 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.119853212 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093194131 seconds)
    (175/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.12610046 seconds)
    (176/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077817482 seconds)
    (177/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.139593357 seconds)
    (178/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.100001939 seconds)
    (179/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.083990749 seconds)
    (180/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.087351103 seconds)
    (181/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.103299101 seconds)
    (182/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.088792687 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 0.219787887 seconds)
    (184/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.124348419 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.091359739 seconds)
    (186/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.101676512 seconds)
    (187/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.07914305 seconds)
    (188/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.129315315 seconds)
    (189/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096616504 seconds)
    (190/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.100448577 seconds)
    (191/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077347157 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.117662489 seconds)
    (193/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.077361113 seconds)
    (194/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.151370228 seconds)
    (195/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.098952015 seconds)
    (196/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.121784009 seconds)
    (197/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095813192 seconds)
    (198/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125691144 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.104764321 seconds)
    (200/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.127660892 seconds)
    (201/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102266134 seconds)
    (202/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.09962386 seconds)
    (203/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.114233646 seconds)
    (204/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119949784 seconds)
    (205/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080065423 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113059887 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09438296 seconds)
    (208/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139713452 seconds)
    (209/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.079989949 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.115429738 seconds)
    (211/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.184425614 seconds)
    (212/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.091529571 seconds)
    (213/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.117819559 seconds)
    (214/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114949735 seconds)
    (215/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.104357572 seconds)
    (216/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.078116167 seconds)
    (217/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.115566719 seconds)
    (218/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.083724432 seconds)
    (219/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.112559601 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094580337 seconds)
    (221/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.116334107 seconds)
    (222/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.080401717 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.118455044 seconds)
    (224/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.07564888 seconds)
    (225/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.082450644 seconds)
    (226/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.101255923 seconds)
    (227/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.099313688 seconds)
    (228/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.116124882 seconds)
    (229/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.111609629 seconds)
    (230/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12632683 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088138803 seconds)
    (232/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.11379067 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.094742282 seconds)
    (234/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.118476625 seconds)
    (235/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.080538271 seconds)
    (236/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.11758399 seconds)
    (237/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.077479643 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.1202548 seconds)
    (239/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095507498 seconds)
    (240/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.102876231 seconds)
    (241/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.080484454 seconds)
    (242/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116290242 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.101783719 seconds)
    (244/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.102327747 seconds)
    (245/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.078132547 seconds)
    (246/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.117100911 seconds)
    (247/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.091931486 seconds)
    (248/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.101644316 seconds)
    (249/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.096129817 seconds)
    (250/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.116509882 seconds)
    (251/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.091439899 seconds)
    (252/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.100562212 seconds)
    (253/286) benchmarking ("sort", Float64, false)...
    done (took 0.151230508 seconds)
    (254/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119334566 seconds)
    (255/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.096020361 seconds)
    (256/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.104312849 seconds)
    (257/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.07685843 seconds)
    (258/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.167779197 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.121277066 seconds)
    (260/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093878182 seconds)
    (261/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119876342 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089970644 seconds)
    (263/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.165214719 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090714978 seconds)
    (265/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.12046211 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.102804267 seconds)
    (267/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.105220454 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095488368 seconds)
    (269/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.128482261 seconds)
    (270/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.080341034 seconds)
    (271/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.115359469 seconds)
    (272/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091570329 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115688594 seconds)
    (274/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088801724 seconds)
    (275/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116381404 seconds)
    (276/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.080342022 seconds)
    (277/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.076630926 seconds)
    (278/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11705134 seconds)
    (279/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.120277478 seconds)
    (280/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.143179103 seconds)
    (281/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.101385294 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092049927 seconds)
    (283/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.084842201 seconds)
    (284/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11923073 seconds)
    (285/286) benchmarking ("sort", Float32, false)...
    done (took 0.177411692 seconds)
    (286/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.081194725 seconds)
  done (took 37.926434535 seconds)
done (took 38.820955512 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101105202 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.152618594 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.099650023 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.141336258 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.100388521 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130179924 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.121347032 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.100379313 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124756546 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.103313949 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.126291625 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.082937161 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.122917852 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.099256382 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.12356162 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142683822 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102208544 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.12144429 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.091349796 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.115531606 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.091406378 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.116250673 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.093675397 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.107043216 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100131815 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122457002 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.094828522 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.124059677 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.092255933 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.114246502 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090265193 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.09473791 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.114130212 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124494993 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093682702 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.090469895 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.12413722 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097995816 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.119246545 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091378493 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120266343 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091915833 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.120042555 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.097368189 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116624186 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091120835 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.115277802 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125641153 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118351255 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117217921 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096844367 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123168915 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.100454472 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120636048 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090240436 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.116193261 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092610889 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143125509 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.091545382 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116487963 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.114189071 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.119350431 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.090790725 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.115775959 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.092280355 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122278508 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097635834 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114348909 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099204777 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.118510888 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087562636 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.115464679 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090074165 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.088633499 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.123824587 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.098398744 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.111033641 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.09313983 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.119101929 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093724709 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.116357239 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090810189 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.117636903 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093061006 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11426565 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084501306 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114064954 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095075127 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.115565973 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.091910488 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118082482 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09522314 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.118056189 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099211412 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11606565 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092704625 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.116723642 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.093005753 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.118085182 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091214479 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112347106 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090837418 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121133796 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090838622 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092490472 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125490259 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.09031889 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.120038458 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.091429627 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.116240466 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.128562161 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098942407 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.116426536 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09322829 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088337183 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.121289558 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089624414 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.114252468 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.089892683 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.116620606 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092711024 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.117612191 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090014187 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.119221547 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.100634394 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.11337466 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.090665729 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114702054 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.092200248 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.120112933 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.092389393 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.113858785 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091813843 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.110801641 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090980138 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.114141819 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.095492889 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114873453 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.092517285 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.116894515 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.092266244 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.117969828 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09315093 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117520419 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.089880808 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.108788712 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093718143 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090227068 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.118184943 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.09283019 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.117389473 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08790986 seconds)
done (took 17.156273699 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.098824325 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185449657 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.148515223 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.15095768 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.123664718 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.133808584 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.126200498 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.146679058 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.10019119 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144127467 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.146563489 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.113909291 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.152516172 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.12425973 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.108406935 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.123060748 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.097931059 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.132466219 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.155792659 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.117850332 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.149792151 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.124782309 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145486098 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118032288 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121924133 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.143539713 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.10172244 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.122984974 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103595538 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.139554986 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.114336629 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.126543317 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.125062364 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.110360734 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.130698471 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.096909806 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.13341672 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.094409615 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.124351494 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.122567218 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111342951 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13426255 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.095929683 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.132007021 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.123383679 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.102084255 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.122374603 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.098136988 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123742165 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.094313373 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128206996 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.145111362 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.097621098 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125263594 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.125140784 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.099438942 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125620589 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.102859489 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.125071617 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.101713305 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.124109661 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.126488399 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.103968009 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140414402 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.12279239 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.101824327 seconds)
  done (took 9.049049462 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.113981899 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.150935113 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130514381 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106425588 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.126188625 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088777096 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112930057 seconds)
  done (took 1.781655055 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090139491 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.143114922 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.120871206 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.146072497 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139061455 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.125404566 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131746471 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090379182 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.138370767 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.099539815 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.143472921 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.169275648 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09066489 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.127168389 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.148376766 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090307032 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.149576259 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090815703 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.122384551 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.121663645 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119927399 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13691887 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.102821139 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11602181 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111062646 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11854287 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.182505839 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101479531 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116816415 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.096287338 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120486119 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.184464784 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.111331433 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125835521 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088410686 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142574017 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.136504164 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095549593 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.140376081 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094959912 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.135822979 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.096354494 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.122628061 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.09574406 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.12230094 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.104501924 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.125929974 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.12352328 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.095904856 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.1429966 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.101109951 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136975484 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092136342 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119885621 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.100273643 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121917577 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.103925949 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.120317642 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.117781858 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121898092 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.140440853 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114997686 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.136494705 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.14088304 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107401215 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136628875 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.110849237 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.121280008 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097445898 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.123008996 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.115751937 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.120545526 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.126053518 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.10539012 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124747713 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.116752871 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.142385081 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094414341 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.128809508 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.094775311 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118557054 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091070703 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.131380332 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094571201 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118382856 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106677844 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127572395 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.095141477 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.119514296 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.13813066 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.095420897 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.126994486 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.101558673 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.119493948 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130156587 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.118394879 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.126378415 seconds)
  done (took 12.531965654 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095406605 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.093267597 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.121854839 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.093244499 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.117197905 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094008332 seconds)
  done (took 1.576926959 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.122743593 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120738196 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.107526096 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.124026336 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159143228 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.114790068 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.141034133 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100739716 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.136913728 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131193892 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.114877741 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.141873681 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.121107754 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12453846 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.139630402 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098497108 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.140837377 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09586424 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.132326805 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095565337 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.133438613 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099411441 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120620862 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.113765242 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.124955514 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100318675 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124854904 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.132400708 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105793934 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.127346811 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.099411524 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.124682057 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.099013243 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126027663 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.141761842 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098377347 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119774273 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.101501216 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12441907 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.099360024 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.143163272 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095588622 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.130607568 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.101615087 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.127027003 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124654827 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.101363386 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123792939 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.114574757 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.126722964 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.101522902 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.124454818 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.099831391 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.126519053 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.099809722 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127798238 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.101788405 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.140229443 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124649407 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.099273114 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120810242 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.099771072 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127615864 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.099626849 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.124020838 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.103033615 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.125025892 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09628452 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12167673 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099121886 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.126967425 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095666872 seconds)
  done (took 9.423224443 seconds)
done (took 35.305825107 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.678806861 seconds)
  done (took 1.637277302 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.834067433 seconds)
  done (took 1.795929289 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.999111406 seconds)
  done (took 18.988122314 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.503950204 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.596570421 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.990843654 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.166574692 seconds)
  done (took 3.220207032 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.958459168 seconds)
  done (took 1.942496254 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.298686509 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263379158 seconds)
  done (took 1.536995306 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.797436356 seconds)
  done (took 1.772004301 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.54492528 seconds)
  done (took 2.516348013 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.357743717 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.20198272 seconds)
  done (took 1.545405498 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.578181713 seconds)
  done (took 1.557315958 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.718119367 seconds)
  done (took 15.703865468 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.243281616 seconds)
  done (took 1.234767188 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301590886 seconds)
  done (took 1.283567635 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.651367245 seconds)
  done (took 4.629353018 seconds)
done (took 60.332485526 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101303112 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.130199741 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104732953 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.101911605 seconds)
  done (took 1.411848682 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107221793 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124685112 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103517088 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124627019 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.106848613 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.126072835 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098234922 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.131530627 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099039738 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.12698163 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.100147745 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.125197913 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.127450389 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.09788942 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.123357024 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.102567339 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.128415005 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.100489976 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125525582 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100658839 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.124357467 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.101230141 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127811525 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.099982475 seconds)
  done (took 3.720824738 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102290585 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.096193697 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.1234355 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.095443532 seconds)
  done (took 1.406682769 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.106367092 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.138744182 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.111343932 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.13133105 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.113942032 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137972258 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.121503593 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094970251 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097278726 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.132218635 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.121690965 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.116738799 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13803096 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.091123945 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.132834972 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.093312145 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117650421 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112754944 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.131453267 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.106713 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.121473126 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.105275382 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.128548076 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110324781 seconds)
  done (took 3.803331988 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.179751311 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.135835622 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.14598804 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.103136538 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.173172872 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.147486916 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.094044981 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14725105 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.094852663 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.143556743 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.124842619 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.148038896 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.137997769 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.124348718 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.096220517 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.127759187 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.111696526 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.142141569 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.12326659 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10776617 seconds)
  done (took 3.601491145 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10091752 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.121587503 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091697851 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.094613434 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.127582468 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097721997 seconds)
  done (took 1.628647726 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091504162 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.089976449 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116873322 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.090386693 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.120597086 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090707224 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08890816 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.117114704 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09064601 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117000318 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089796196 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115634027 seconds)
  done (took 2.213536685 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.421134938 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094264684 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.129889477 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.094597969 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.135996832 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.119647954 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.108559741 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119778677 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.17268101 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.100852202 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.135760146 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.168328496 seconds)
  done (took 2.789473478 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213463215 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099578631 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268330289 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.424329755 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160081264 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170852134 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.331221223 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168284978 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.188262849 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140925191 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199042623 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160789037 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158253636 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183677296 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143167073 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.180125187 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180302914 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205666369 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153711163 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210926855 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169089696 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172427581 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184621765 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157077353 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115313738 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161727201 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122587001 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106565615 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177592424 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174396578 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206383535 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153050257 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115811392 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233111893 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220926023 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184169813 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.38900428 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136243392 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.193355238 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.186410088 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231368269 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142963426 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199118213 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159228089 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135191205 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185241026 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161630968 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185034615 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134981894 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118595431 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212920748 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180566988 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.184673942 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11395655 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.376266899 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150627174 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.151098827 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192675036 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191242891 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195411325 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173192546 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.126654927 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.224891923 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183216014 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182222666 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148066847 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.172182885 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129045196 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181736167 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19843843 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18158312 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173570231 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.217367742 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109690241 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169563299 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171795512 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1593954 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18300143 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16671027 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124829091 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127695166 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142155111 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132343177 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.162056572 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127088305 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207905713 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140065507 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.27194992 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219437294 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163967116 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165772766 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171077605 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171978135 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152687346 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.095747035 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152957907 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.165395278 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165116614 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107659461 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161460357 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150692737 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131453811 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158088943 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.100276694 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164624266 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.137713513 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173667703 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167610273 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.105282556 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169439853 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155064153 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.162774059 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177346523 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191002341 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108033183 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136723465 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19859667 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163516292 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141759937 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179789788 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191165832 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.169696211 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114013778 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201146457 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200186817 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118736138 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218498244 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118558753 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137578237 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.156334298 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166558945 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160624384 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.13156341 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133663114 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.157006988 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199232148 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.131570504 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113795014 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17975865 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131290066 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10565618 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150155443 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141017161 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.119252716 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.153419017 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144085556 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16150428 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165464111 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158870494 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164345825 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118863077 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226172636 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109883404 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.165627047 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153223477 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09499797 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.184527537 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216688806 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106104597 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190074771 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173583099 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26558662 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168403816 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135317692 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185403083 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105561078 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.124481907 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172025406 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166344315 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167068264 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.186459406 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238825453 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.200153254 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.129513007 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157032162 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172392741 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.180287682 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160456812 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.150802114 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167597912 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174284284 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097903552 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.128416575 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.102991015 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145379281 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13526743 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107975004 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213674567 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169702632 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23105622 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16400821 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145067091 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186179064 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.13005167 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141739212 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203892373 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115225653 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.187996208 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185451225 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172097037 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147685891 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176400183 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123450583 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102148798 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.138865665 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172595716 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108457617 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139163474 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148343835 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186150097 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18255782 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15525309 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26939281 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176408055 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197057464 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098031511 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168127737 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175897882 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164570289 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.165775149 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136331176 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.165770946 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183338491 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148621608 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196472347 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167996179 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173979509 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202720403 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.161710395 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134554181 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153107821 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174056019 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116705483 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165988549 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15021238 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110669074 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160417898 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.139752199 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130899981 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187787093 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149340161 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185810742 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.161842443 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178480229 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102371543 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148490296 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165923919 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152250046 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.093916447 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176486867 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219654334 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119614681 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163779399 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178809598 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134184052 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.357086228 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220116038 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190328239 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1129592 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147341167 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167752055 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165110842 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170991668 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186851563 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148905863 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18603182 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163031477 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.118440784 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139791291 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153139791 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126788621 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.155799272 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140198538 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15941687 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.147402713 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191543479 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150698176 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136327923 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17125507 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.153093785 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.159711331 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11789797 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234074202 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135376427 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211823435 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.132475418 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17088607 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193165727 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128667242 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103300431 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132643717 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186211961 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136653265 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135105505 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.253283566 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274528289 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165222523 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17532596 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114732376 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.128141157 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165703351 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153829612 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242075475 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143659042 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.142376864 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197171374 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.15649638 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106817067 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169165939 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364073023 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121809751 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206213095 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.097681607 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.321249195 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128787728 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135957209 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135003671 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176094009 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137967398 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.1885052 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17284593 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121088838 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164625607 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143823029 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.256134823 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223022839 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176175452 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181764191 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.148683516 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162183442 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169305468 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182560105 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147278014 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.120508919 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168096962 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188294369 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.188323241 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.137550023 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170213073 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170182249 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165007041 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178274502 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109552098 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19214731 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137596183 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172410183 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145366789 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099231885 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164136362 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.254419113 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136284692 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180929511 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13468386 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138423219 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13049576 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127201998 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165448699 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148142388 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.133363045 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185737018 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.104045169 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168530267 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185104087 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136065325 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130909257 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150188341 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136685011 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147126127 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120521189 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140608535 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.150708816 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213004184 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.106735343 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181610444 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177610313 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200251582 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13690803 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148845102 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666570779 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103268035 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187277466 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153400147 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19073566 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154345539 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173206991 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167244913 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154884468 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174480653 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126373969 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.225123937 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170785347 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.16426083 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135809304 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148961103 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122472376 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.136899406 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156506083 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168794692 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117139712 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.14249155 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.162399411 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151168776 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.120985975 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143930819 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188920187 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153711456 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190701416 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187528579 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142608254 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171635434 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179205083 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105329215 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.165346482 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176317147 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147537468 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15642081 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106847326 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.142100821 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187201465 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100081245 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166281173 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168760237 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167408001 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170067317 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.139142329 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165267335 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117600849 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166370357 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131165281 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159106175 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16187359 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107287598 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132101103 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131639465 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165424922 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.163995564 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13130496 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.149998002 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182900211 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.130214076 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108611305 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364834595 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165270175 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198185567 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.158259652 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109580958 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149541419 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161148612 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.159064952 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165609995 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.10406279 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137913811 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.134844502 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.183114402 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.131497439 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163645664 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201442464 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168943971 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194958351 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.141031415 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.267486797 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115926113 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160685844 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.136021297 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106153823 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147334872 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139876889 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120865651 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.259265052 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184288123 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.158968435 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.119858595 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133624978 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.131750385 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109559227 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167597076 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161625134 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164112266 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118888805 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.123288444 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15011594 seconds)
  done (took 79.845646733 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.152420881 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148718877 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.153352511 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199433555 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171042744 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248047255 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210302593 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232942353 seconds)
  done (took 2.601660025 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.107422606 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.138472382 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143938051 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.127869328 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.095898421 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.332218217 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.142146609 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.128204415 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.12493927 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.142494379 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.122430405 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.571009013 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.098339774 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.128452694 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.117596863 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.094330183 seconds)
  done (took 3.690465918 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.321669555 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.547444215 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.14889048 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.251593508 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.2338886 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.15638045 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.764029916 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.190184673 seconds)
  done (took 12.701837161 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.129735975 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.144436859 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.143339409 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.170055963 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.126433035 seconds)
  done (took 1.803478053 seconds)
done (took 122.197230789 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100628364 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.101131195 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.127348498 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130367754 seconds)
  done (took 1.527967373 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.114067388 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.086348518 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.115839191 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084578888 seconds)
  done (took 1.480751816 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.434231615 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.115083505 seconds)
  done (took 1.669987719 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.119849225 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137783302 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.110254149 seconds)
  done (took 1.458675917 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108347772 seconds)
  done (took 1.199599638 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.10139418 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.103957169 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.145447331 seconds)
  done (took 1.441103186 seconds)
done (took 9.868054363 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116147644 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.440983164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.389635031 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141623961 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.726644241 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.384001534 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.031924579 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162064426 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141600437 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123007829 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111723616 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.703125935 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.020844013 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.372905992 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.007102443 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371891866 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676493524 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125159153 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100861854 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124772268 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.981587934 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122779276 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096005728 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125228549 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674798102 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428008075 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095133794 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.38594976 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093914971 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128752458 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383405577 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123650049 seconds)
  done (took 16.988150178 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101417877 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184829925 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.102690527 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126236172 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099048091 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125381869 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.105266832 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.138717577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184793493 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094922989 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141868734 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094135502 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129143034 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09519384 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143521837 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094377605 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126065135 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097228579 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130924048 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097715844 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142564853 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094035259 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124785389 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097764929 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122915843 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108196056 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123136423 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.108135524 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122632168 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099474842 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129016042 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095705385 seconds)
  done (took 4.870337274 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146553044 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193484279 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.132780783 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129620218 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.174930165 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096233616 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.208614526 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16276515 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187272184 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123581394 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113191183 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123883409 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130462418 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124456709 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115473846 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124263876 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097547681 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126468818 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102092169 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126413088 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11427212 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124376254 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096603959 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126870852 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095016035 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138554662 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09575251 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.137741279 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095304595 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128944764 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101379993 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124227321 seconds)
  done (took 5.215969682 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.102970124 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.132956495 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112682907 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.14113376 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098112246 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.131665022 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.104722453 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126208408 seconds)
  done (took 2.042066375 seconds)
done (took 30.208001195 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113503454 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.100658952 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.138399529 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.108099728 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.134091514 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.118602386 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.122642269 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.106581036 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.137021484 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103635748 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.140237055 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.094945393 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125057176 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095315701 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.109025091 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.129903539 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.109505991 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.133835024 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.116613761 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.138712772 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096018492 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.136002506 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104659495 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.145559252 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.115546964 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.145818561 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.140511659 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101603121 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124869039 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096953909 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.112021692 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.149424466 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126355949 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.111642586 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12931207 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.100768993 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.095902943 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.126444344 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.10992711 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.136169236 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101656996 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.13585701 seconds)
  done (took 6.109339109 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.123077454 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.168316544 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.095695132 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.126664985 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.096470969 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.163649378 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.159323751 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.096368505 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.097101975 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.151868486 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.150610348 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.096515556 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.125442407 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.097717688 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.09622125 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.126529633 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.119322318 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.14982196 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.155549641 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.125655107 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.169537204 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.156282298 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.129879589 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.149521299 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.165091158 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.130646171 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.146973002 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.130514477 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.153020355 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.124439801 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.126099891 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.15645179 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.095856702 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.12481723 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.136646104 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.160511577 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.152735176 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.135296196 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.155900057 seconds)
  done (took 6.320071101 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.105195614 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.110481107 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.147863935 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.192766206 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134524707 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.139450314 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106644687 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.144270926 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111868707 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.125992514 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.10679231 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.157189811 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112231253 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.132469588 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.102342379 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.140737406 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.115104583 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.128190616 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10090943 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.14454578 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113361488 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.141732384 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.108802727 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.136889198 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09527566 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134616976 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098680603 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.141206342 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.10200275 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133062395 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100311623 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.129855923 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.103941391 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.137627675 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.1002665 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.132667526 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.117994964 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135203971 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105944459 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.159440905 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.137568255 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.101255066 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14720296 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.136346686 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.126051832 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.103622746 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.133238325 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105344469 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.124267226 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115050043 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105993134 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.12593307 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.140715037 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.096485824 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09509081 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140210077 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097242501 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.128560861 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103728846 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.132793338 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.116481328 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.13108642 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111851526 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.126820569 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101627557 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12619814 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.096367246 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.131062024 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.119054591 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129603633 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135943505 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.127250119 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.102798626 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.133529144 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101840579 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135352917 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095945644 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139952578 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10612992 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.130919881 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10658964 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.128667583 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.100988324 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.143520998 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.11155179 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.133121068 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.101563303 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132657722 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100756668 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.126803722 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110112868 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.128142281 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.100487497 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.143883173 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.097815555 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.128160167 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.103850283 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.131020701 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.104271922 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138264545 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102048178 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125557487 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.106826754 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.0969365 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.132418177 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.106430478 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.130857805 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095941291 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.131194957 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.103612538 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125715092 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.100309717 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.130043704 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09875212 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.139760016 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.103661394 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128822516 seconds)
  done (took 15.226444793 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.243167223 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.224279499 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.199123215 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.307970588 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.150516301 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.123883797 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.219377962 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.178127712 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096547676 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.166668095 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.181506165 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.193545009 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.183166894 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.192568292 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.184618693 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.12726458 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.117356862 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.180826969 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.224094757 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.304193613 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116370651 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.143376225 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.169837754 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.167765579 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.115971598 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.144801347 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.155611626 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.120302757 seconds)
  done (took 6.046100277 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114092202 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.167872898 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.104692249 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.157684071 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.154248461 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09825707 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.133394083 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.098178166 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.141400275 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.112003639 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.129405134 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.104229107 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.134624087 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106318419 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.128053721 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106306707 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.137605551 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.106013043 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.131115889 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.101161622 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.144657736 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.11579524 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.134046385 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.102601376 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.146308307 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.133299928 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.099476557 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.148895275 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.136080029 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.126641058 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.125075128 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.106328746 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.142722055 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097486783 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.134142013 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.100194458 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.128546084 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099558557 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.098884516 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.124939575 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.097043981 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.118998317 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.103043979 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.142900609 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.103751095 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.129592602 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.102535875 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.132670562 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103772668 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.125273447 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09933264 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.130971597 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.101207525 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.143683396 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.101510036 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.133987466 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.101213424 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.127503359 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.106726107 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.099887773 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.125539651 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.103056887 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.13438636 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.132519201 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105667561 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103471319 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.131906236 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.09954284 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.133711766 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104308627 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.131071586 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.109231705 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.12498535 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.098268769 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.13834085 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.109224646 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.132041916 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.10190618 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.135048019 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.096401185 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.117635051 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09732773 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.084686307 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.133697434 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096031846 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.133515368 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099782783 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.133977927 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.143705534 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.106424119 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.136156755 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.097922972 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.133630386 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101852499 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.095134966 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.132665674 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.114719475 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.149299134 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.127114127 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.094549091 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.144342603 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.099328405 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.095580351 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.11973156 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.107333085 seconds)
  done (took 13.595320881 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138349449 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.179409689 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128899338 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.116627513 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.163185518 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.170245004 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106201765 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.105958842 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.130484954 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.117281363 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.135066364 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105949652 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.134695881 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.112007267 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.170598867 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.138625435 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.0989774 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.14333599 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.103502864 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.182322916 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.148060628 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.136781441 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.171782643 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.135622957 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.102866691 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.165259048 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.173037397 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.111439445 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.141371292 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173343094 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.111940676 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.172975452 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.174153424 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.103512718 seconds)
  done (took 5.836514982 seconds)
done (took 54.226876717 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.232686773 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.426116079 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.19633561 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.194781441 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.273131973 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.236895552 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.198258653 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.388082924 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.997260951 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.189484297 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.194316163 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.193604502 seconds)
done (took 27.844297221 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.258872837 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.362517884 seconds)
    (2/2) benchmarking "String"...
    done (took 1.500503046 seconds)
  done (took 3.986555944 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.197137886 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.198347047 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.448095108 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.195308886 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.221039179 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.217912331 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.197041188 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.213575596 seconds)
  done (took 15.807578562 seconds)
done (took 25.371121627 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.213359073 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.462596592 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.507205207 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.218248369 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.197396032 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.195797962 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.217246721 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.244128095 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.210362222 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.208106388 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.19789165 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.506675053 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.216646481 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.576396742 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.210710286 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.211318048 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.214845421 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.436886075 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.200884961 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.245525979 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.186393677 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.184179177 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.208200593 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.220334716 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.207144248 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.214248898 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.261842802 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.20923227 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.420405017 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.212118434 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.238773936 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.199397661 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.260262383 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.196522695 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.328191981 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.22745769 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.388023489 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.205091165 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.193873812 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.208587462 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.39074355 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.612738434 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.199086514 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.200403543 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.207264016 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.269102323 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.188564858 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.923901595 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.199899723 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.208838919 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.244642861 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.573473976 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.215605149 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.215292403 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.20726323 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.484619519 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.227623371 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.226323305 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.226210272 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.208171512 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.20126559 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.197987162 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.279696381 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.206436083 seconds)
  done (took 143.699180357 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.200094693 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.205514857 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.205699754 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.231302991 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.207688052 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.206623612 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.20412596 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.203632029 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.20516809 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.210926521 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.206918365 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.206378577 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.208558701 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.209344509 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.20576548 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.216725866 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.208787642 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.229760234 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.227134823 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.204108096 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.211186996 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.211860469 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.228272713 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.210438263 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.214221614 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.279710739 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.263483121 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.210419247 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.207221321 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.203326079 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.212659142 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.212616088 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.849510873 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.061565457 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.221845526 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.238508888 seconds)
  done (took 80.371003876 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.202924471 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.205013163 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201195934 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.205577296 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.234772895 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.205658714 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.805609359 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788117166 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.936383759 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.757034202 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.649928895 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.536041288 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.210788213 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299709737 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.220968355 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.204895331 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.229259894 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.234221177 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.209612718 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208527174 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.808356341 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.224034702 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.345237041 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.389716469 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.221325478 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238374116 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.60534576 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203589476 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237770146 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.542761178 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.257431273 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206968902 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.614176649 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.310665558 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317553732 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206021287 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237771832 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.205980059 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.486585715 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204801249 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.206425856 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.209603369 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.925053508 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.211152951 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.816185351 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.208250641 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.165526888 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.207047359 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206237917 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.201692695 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.906916052 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.219604599 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.209876231 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.210899739 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.205880397 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20570658 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.240192967 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.219966258 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.323036011 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.203796099 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.206830379 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237327023 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.205741353 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.315937565 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.225194097 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.602947077 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.264600224 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.308524226 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.804058332 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207251363 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.207413684 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303387231 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.327711814 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.203159974 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.201799142 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207991905 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206666904 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.312593099 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.204306421 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.618385068 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.384191388 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.227644192 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.673033548 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.311346893 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.207909126 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.643197811 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.210240948 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.209856454 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.978425624 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.207232657 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304064544 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.207415875 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.20660957 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207142547 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.207228058 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.624998555 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.792190215 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.497706713 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.212739654 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.528909866 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.2133758 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.6374128 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.787869344 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.947795261 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.215570807 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326238723 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.390812427 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.227059535 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.208545565 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.672381903 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.216629596 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.271739421 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.20965546 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.612383461 seconds)
  done (took 367.798873254 seconds)
done (took 592.988596124 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.939898278 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.887082186 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.021125386 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.909997215 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.875320681 seconds)
  done (took 10.766741754 seconds)
done (took 11.904595097 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.410833513 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.406513013 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272973064 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.408238227 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243511192 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.424359988 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.388156587 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.230392298 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.318251763 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.29443892 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.318571142 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265979608 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.250161067 seconds)
  done (took 18.367800278 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.559862354 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.216074105 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.299218081 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.549187996 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248403352 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.585066249 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.44258831 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.229409921 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.417227138 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.229715901 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224097493 seconds)
  done (took 18.13733004 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.549070697 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.213544606 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.294432539 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.549289224 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.2524656 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.548686957 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.422350438 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.230905805 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.423414793 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.227234299 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224601572 seconds)
  done (took 18.073109203 seconds)
done (took 55.714854376 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.251842059 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.378953558 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.250395391 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.224323955 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.222914758 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.223680214 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.227863574 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.23249329 seconds)
  done (took 11.148745107 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.220101929 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.215303385 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.219290298 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.221171294 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.21927746 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.218062953 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.219686961 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.219418915 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.721843873 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.217169064 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.216062951 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.21653205 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.221490748 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.220298725 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.216452764 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.219231825 seconds)
  done (took 21.137882494 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.224494369 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.221163438 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.219742424 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.218400592 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.219522113 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.216950315 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.217354021 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.217963453 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.213908798 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.218566205 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.216392737 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.218865564 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.217586515 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.21940945 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.220520807 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.219244213 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.220614238 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.22008494 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.223555563 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.221491016 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.218558108 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.221399154 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.221128195 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.219648872 seconds)
  done (took 30.406916688 seconds)
done (took 63.828948991 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.219704278 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.220588967 seconds)
  done (took 5.580119661 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.281892292 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.283245066 seconds)
  done (took 3.705295312 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.22390114 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.222982392 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.223293594 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.222737682 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.221949605 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.221241754 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.223239532 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.222705485 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.224240424 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.224860677 seconds)
  done (took 13.370414351 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.226654814 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.224417264 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.222651188 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.223087441 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.22210584 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.220590453 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.224211302 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.22323309 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.224943146 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.22093712 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.226331109 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.222453315 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.223283599 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.221608053 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.224711844 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.221247662 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.223000096 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.223307967 seconds)
  done (took 23.158217215 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.241298916 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.246288699 seconds)
  done (took 3.628945267 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.380499647 seconds)
    (2/7) benchmarking "second"...
    done (took 1.265015666 seconds)
    (3/7) benchmarking "month"...
    done (took 1.333130157 seconds)
    (4/7) benchmarking "year"...
    done (took 1.318804308 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.263626729 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.241558895 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.263223565 seconds)
  done (took 10.206313155 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.228414513 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.42981017 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.538632128 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.823636959 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.225556058 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.232951345 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.08287393 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.232617608 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.230832647 seconds)
  done (took 14.167718102 seconds)
done (took 74.955000632 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.223289692 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.24828962 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.236191694 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.231447917 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.518033604 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.252221121 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.22229065 seconds)
done (took 16.073830559 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.215261404 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.218805639 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.211713229 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.217748095 seconds)
  done (took 10.004535196 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.221384952 seconds)
    (2/2) benchmarking "read"...
    done (took 1.569062887 seconds)
  done (took 4.933387603 seconds)
done (took 16.081739414 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228813151 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.224550282 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.222535155 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.22641569 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.221940951 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.223194479 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.222602475 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.225760721 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.224254459 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.225878961 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.226350478 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.225103567 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.226656138 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22618993 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22109442 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221422504 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223440205 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.220871049 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220766234 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225375636 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.224303719 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224802835 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.221734838 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.221670804 seconds)
  done (took 30.516038788 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.227494717 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.222289698 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.223630817 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.22805333 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.222485817 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.2254093 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.223755985 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.22206205 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.22455957 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.225239129 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220374877 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.223849408 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.224846288 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.221832213 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225181673 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.225133642 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.223478163 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222206338 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223142023 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.224449264 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.225489957 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224354944 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221894539 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224997983 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.225001157 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223293897 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.230014104 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.225230617 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225642 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.224032683 seconds)
  done (took 37.871116767 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.231598066 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.234494763 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.226091881 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.227517137 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.229639831 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.229651221 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.226996282 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.227990821 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.2283673 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.226967009 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.22892953 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.230463435 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.230803166 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.22595564 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.227964932 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.22593873 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.2271321 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.22675871 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.226217328 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.22652855 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.228033497 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.228885041 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.227009611 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.224712585 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.228080373 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.224651007 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.224237716 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.226025855 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.225901112 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.227251206 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.224129875 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225797203 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.222109815 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.225823109 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.224436515 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.224642613 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.230258804 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.233052135 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.223343331 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.221252807 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.226136205 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.225372626 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.223873208 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.224319538 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.222711646 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.224926951 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.222635971 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.226562884 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.22346468 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.225179196 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.22267558 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.225671896 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.225700225 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.225814991 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.226907354 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.222346093 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.223929614 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.225802538 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.227374411 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.2231941 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.228109191 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.223938368 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.224711213 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.224681691 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.227064619 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.227717514 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.228410037 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.22730367 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.223336087 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.226479149 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.228283939 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.228403778 seconds)
  done (took 89.44397494 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.228761833 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.226958026 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225349016 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224608885 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223857922 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.22639348 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.223055826 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229056816 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222486017 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.229830126 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228716489 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.225256471 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222732446 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.229020935 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22870259 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.22518751 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.226137203 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2264723 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.226967541 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.228389218 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228281279 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.226005899 seconds)
  done (took 28.130905054 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230869846 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228853468 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.229042432 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.227278133 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.226609914 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232215806 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.226363138 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231307779 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2305864 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226742645 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228519419 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228823238 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.227965837 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228811386 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226056523 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.226908426 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229776032 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.227632709 seconds)
  done (took 23.258583302 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.230329249 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.225911257 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.227346512 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22875034 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.225752504 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.232391272 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22638889 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229598611 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.230044 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.227836271 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.230626827 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231171191 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.232282295 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22633498 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230680948 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.226752557 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.2295253 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227859777 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230170605 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229128556 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229741768 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232799405 seconds)
  done (took 28.190036599 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233664922 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.230613201 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.230348549 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.228729342 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.230454243 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.229708917 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.231421989 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.227917562 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.230937405 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.232381346 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230325703 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.232281187 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.23094138 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.227583635 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.228181899 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227860689 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.230183321 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.230508534 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233016671 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.229768506 seconds)
  done (took 25.754799967 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243155686 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242670508 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.243325656 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246944028 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24273174 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.245072649 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244947293 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.242837266 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242766618 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.243684991 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.24434024 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244286475 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24768248 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.247671813 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.245806209 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245018236 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.245546595 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.24639234 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.246045142 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243131732 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244205844 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245557563 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.245188756 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.246830427 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.247166067 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.24355853 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24691928 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.247784773 seconds)
  done (took 36.011156212 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236641838 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.23565261 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.231472753 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.233267069 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.232412936 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.233418216 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.233081944 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.234376098 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236284526 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233303194 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.234549567 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.235510514 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236980966 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.235937379 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237111443 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.235112127 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236438638 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.232002671 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234847338 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232752767 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.236709421 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234215609 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.235096575 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231360977 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233355757 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.235484191 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234657112 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233225887 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235622721 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235208716 seconds)
  done (took 38.18702734 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.283525414 seconds)
    (2/2) benchmarking "in"...
    done (took 1.280604629 seconds)
  done (took 3.719818394 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.236690415 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23678092 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.235752377 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.234406042 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.235828935 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235986114 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236167245 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233880618 seconds)
  done (took 11.03967342 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.239209822 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.237510738 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.239512037 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.236629647 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.237486191 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.237909512 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245068583 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.260415242 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.239364015 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.239442993 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.244819341 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.247332495 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.240896803 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238546742 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.237488948 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23908319 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.238539087 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.238541536 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.240686819 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.238610182 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237843895 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239827326 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237963599 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.234194249 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.240707035 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.250981865 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.242881268 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.238855558 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239294412 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.2422843 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.237088356 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.23710061 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.238719198 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.238003848 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.239567777 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.238587632 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25097301 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260773176 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.247171796 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240757442 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239377806 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.237764125 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.239241303 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.239445224 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24238916 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.239297185 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.241754892 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.236905726 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.240059974 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.242630699 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.248548561 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237225793 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.2359924 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241436839 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.240328138 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248223384 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.260014755 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.24466252 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.249757468 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.249319482 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.253278202 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.266236008 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244457197 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.241428362 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252972068 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.266500776 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249000432 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.261737025 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.240662702 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.242180341 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.24717987 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255228172 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.269287783 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.242281376 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242048492 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.242392206 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243414922 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242674333 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248452344 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.264198843 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.243365175 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246125533 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256455249 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266563003 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.243426989 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.243290371 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.2442568 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.245362603 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.245005199 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253625063 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.265258289 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.246140809 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.240762854 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.244403036 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.245235525 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.243156572 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.243364598 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245523598 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.24221285 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.245543762 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244220593 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253576599 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.252738227 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24474455 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245098597 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.251133349 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.246041738 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246669532 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.250013876 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.243948673 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245766816 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.24858059 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.254195404 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.242630532 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246920554 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.256831876 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.245328321 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.247297186 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.245306997 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.249029349 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257713484 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.27374624 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.247825916 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.245194799 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.253812183 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.258578873 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247784866 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.248594762 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.246643637 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.242515757 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.247813955 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.24765123 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.248377044 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.245865647 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248599524 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248569531 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.246967051 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.245249775 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.248118337 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.24968566 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.25016235 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.251655679 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.250237445 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.251845404 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.247726229 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.250617048 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.254386693 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.249253916 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.249405119 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.248284425 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.245532604 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251827416 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.251185747 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.252418189 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.251045996 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249241845 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.252186145 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.248339501 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25106642 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.24941818 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248149098 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.248965065 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253065019 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.251147746 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.25590974 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.252525783 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.24913319 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.249480878 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.249480501 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.249838706 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.252471375 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.251014651 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.2541348 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.260791156 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.252680617 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.251514551 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.257294592 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250129877 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25526477 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253742905 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.257084143 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.258274299 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.251084235 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.260979073 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.251320988 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251207564 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.253512189 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.250797336 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.251156421 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250946978 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.256465936 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.264505314 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265045713 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277451103 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.257433814 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.258678197 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.254357437 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.258369322 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.257709962 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.25216477 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.254936437 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251113821 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252619889 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254427116 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.25678508 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.254312869 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.254030481 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.254044121 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.255007876 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.255447685 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257241097 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.25386031 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258307108 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.252818024 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254121406 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252818064 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.257513909 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.250534305 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.252076417 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.255458113 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.255831386 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.254530464 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.263018388 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.254953281 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255430895 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256465644 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.254943066 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.255130599 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.256908992 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255936098 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.255307596 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265493718 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.272210052 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.257306675 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260877193 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272544619 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.254985025 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.257194115 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.252952124 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.254567412 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.259259449 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.267823933 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.255628617 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.257168652 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.25832105 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257235114 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259478111 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.26163039 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.255004217 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.256229706 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.255920521 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.257842193 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.256347589 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.258103085 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.257344728 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.256269431 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257582645 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257395438 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.257954726 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259743495 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.257876233 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.258276476 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.259235736 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263882016 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.2679962 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.262683634 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.256742629 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.26129836 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.256718709 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.266484886 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.257669553 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.259324592 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.260873621 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274075249 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.283129487 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263424693 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.257862929 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.257588744 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263895771 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.261146558 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.265151541 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260995235 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258189333 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.260751489 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.260741819 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.258814027 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259513102 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.259355996 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260317445 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.262524879 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.269230546 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.261830952 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.259544824 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.261626329 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.26183266 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.263393342 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.26104137 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.263300788 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.260894411 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264065967 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.258155488 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.260457126 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267529871 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282538541 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.2622558 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.260977245 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.261659185 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.259557053 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.261243834 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.260477317 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.267374227 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.273095858 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.26414227 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.273098685 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.264691425 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273779079 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.263909636 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.266859291 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.27258377 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.259451121 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.263051206 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.260250021 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.264201597 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269552019 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.283145642 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.265508244 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.269235087 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263325243 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.262315681 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.265379235 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.262040216 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266412383 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.260862715 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272984888 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.284465195 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.267770253 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26426665 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.26045209 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.261864932 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.26400346 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.263342816 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264080685 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.263513279 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.266242566 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.263576727 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.265390102 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.262456277 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.264256767 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.264733854 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.263124875 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.264649943 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26917755 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.286131149 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271166477 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.267072371 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.270420002 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266276233 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272761364 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.283574518 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.269229145 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.26452556 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.265204541 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.266951585 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.266563343 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.265789543 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.265065341 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.269079716 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.269874994 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.266065639 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.268678213 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.264871507 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.265431685 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.268374124 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277030779 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.29110047 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.266822658 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272283311 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.262506305 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.266628544 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.273133721 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.266748169 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.265220319 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.268178959 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279043763 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278317156 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.265166483 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.267084271 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266652296 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266172896 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.267568286 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.265261104 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.266000738 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.267287395 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.265974575 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.265334735 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270062388 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.268463908 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.266064562 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266895658 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.267798301 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.280138291 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.265058715 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.26858098 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267054318 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.272158132 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.266680905 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.270297329 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.267214182 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269217038 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269399475 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.269004264 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27729185 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.277472963 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.270355602 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.268086078 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.267694593 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.270186431 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.269416299 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266747354 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.268214782 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27063937 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.270661346 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.266622489 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.269660352 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.267333658 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.266667569 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.267604503 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268778997 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270449179 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.279932604 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269861462 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.266959399 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.269056077 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269979134 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.268089017 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.270709828 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.274872993 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27359237 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.281802051 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.279141647 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.273523517 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.271137021 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271349759 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.278572812 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.269143628 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.271403829 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.270051594 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.2721108 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.271359871 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.273781222 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271334289 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.275138 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.268541039 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.270905974 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277836062 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.292704907 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269621755 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.274078453 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.276664297 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.27087242 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.269430017 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.273210727 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.272047312 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278433842 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.291298856 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273190071 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273126545 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.270434579 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.273940031 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278224371 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272703904 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.271584545 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.267973298 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.273435292 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27003424 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274102853 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.268656866 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.271270152 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.272539276 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.276022266 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.282394682 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.270125653 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273488245 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.273864144 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.27188087 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27300705 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274856805 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.271052888 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.269583169 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.271498942 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27467342 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.275293869 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.274701128 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.272501074 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.276446957 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.276266239 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274019987 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279526493 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.287344703 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.284089715 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.26869075 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.273093152 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.274251922 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.275317426 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275377362 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.274577341 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274786065 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.276848135 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.273290594 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272074105 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.275040832 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.278020523 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294033729 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.300001864 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277485942 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.275329074 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277518116 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.275802839 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.271675629 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.274621888 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.275506256 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.278157626 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.285548581 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.277627675 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283443405 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.296562362 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.276731999 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.281947759 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.279635669 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.284192524 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.278761842 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276757542 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.277906326 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.284175067 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.295602443 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276556553 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287789168 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.311511028 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.296697323 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.27674121 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.27609623 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277875202 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.277478142 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.279270972 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.275455096 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.279816821 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276344635 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.274797244 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.279504589 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285627932 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.276875101 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.277830693 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.276309073 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.276132654 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.276735446 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.27552327 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.278076218 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.277951691 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.27779885 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.277620102 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.277182202 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.279737072 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290585911 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.304464432 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.277105521 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.27667502 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.277342114 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.281224865 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.280137324 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292069734 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.289971297 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.278614632 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.280252708 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.28068669 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275990599 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.278877212 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.279511992 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.279122776 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277459184 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.27627567 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.292027909 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302748039 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.28455038 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.279836118 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.279475602 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.282330447 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279487555 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28034158 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280017627 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.281201764 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.283510362 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286321334 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.281430775 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.279479358 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.281853446 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.29278941 seconds)
  done (took 753.661514714 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279345529 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278123991 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276560235 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278389118 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277633618 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279270604 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277719703 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278523146 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278041319 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282219097 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278406043 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280480033 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.277247968 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27934456 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27995277 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.279482409 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27936123 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.280386995 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279204957 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276538112 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278632235 seconds)
  done (took 28.04471307 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.285091208 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.281412656 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.279726931 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.282190707 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278668841 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.282161847 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.277861417 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283129615 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282288378 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279125124 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.281866166 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284005984 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.280484249 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.281147365 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281022163 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283564971 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.28370509 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279699102 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.28264152 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28049255 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28313352 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.281650562 seconds)
  done (took 29.385282789 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.287435511 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.283434577 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.285519077 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.279861108 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.284448431 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.279989124 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.285223865 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.285555107 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.282063467 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.282263892 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.284215377 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.285553671 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.293029259 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.292477233 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.285559423 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.284806499 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.284000831 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.28578231 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.287294538 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.284505427 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.290213352 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.27915835 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.281649353 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.283946812 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.285140315 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.286786661 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.283072052 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.286858124 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.287643205 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.289546335 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.286442903 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.283409646 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.287221757 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.284107346 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.284982553 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.29151405 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.287238652 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.285264233 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.287085754 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.296085506 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.310857139 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.284411329 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.293123068 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.284675721 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.288790466 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.292488443 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.299464889 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.289155839 seconds)
  done (took 62.964805156 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.287701288 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.28633361 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.284783248 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.287759482 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.286329497 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.28580074 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.285495745 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.286330111 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.283710516 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.285365911 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.287545429 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.286421527 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.28527011 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.289023878 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.289415422 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.285948999 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.285834856 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.286648213 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.286646901 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.285504388 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.285641896 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.289214388 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.287518241 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.286955413 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289459751 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.285809717 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282181828 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.288598173 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.285646787 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.286573604 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.288056521 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.286974325 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.289259474 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.286565034 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283954053 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.287391094 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.287370583 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.286717227 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.287709178 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.285818106 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.287360188 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.288518623 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.288469074 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.289561382 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.286781576 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.288059437 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.286521603 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.286384821 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.286336712 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.289321877 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.288832649 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.287057568 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.289184634 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.285903503 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.290415583 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.289707809 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.285802529 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.286374154 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.290114143 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.287205555 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.28680174 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.289170393 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.286353625 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.286378192 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.289162141 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.287788739 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.286620459 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.290978474 seconds)
  done (took 88.726584578 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29146124 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.291334233 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289753162 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292381979 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293307878 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.290277432 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.291746321 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.292283875 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.288870332 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29104419 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290831941 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.292206268 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.288355308 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.29049726 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.289616049 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292557869 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.29127654 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292814826 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.29290216 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292386606 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.292827134 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292287718 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.292934504 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292948823 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292515102 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292277983 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292213528 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.291612784 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292289608 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292100415 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294626952 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.294134328 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291208825 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.293265148 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.294026408 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.293087561 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29280596 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292728608 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.294366853 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.294805233 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293173895 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293870372 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292422271 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.292796462 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294160631 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292160449 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.295287422 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.295230982 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.296307698 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292381177 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.293521337 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293285532 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292121691 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.295239858 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293235913 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.293872804 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292224383 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296037775 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294471854 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.295078343 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295281805 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.295128594 seconds)
  done (took 81.349171596 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297382432 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.293598891 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.292527811 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.291708296 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.292874696 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.290931711 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.292761392 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.294810187 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.296384057 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.294038934 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294359105 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29291115 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293082772 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294036004 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.293252235 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294698244 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291597529 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.29336533 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296471254 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.292673752 seconds)
  done (took 27.073439915 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.294981884 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.295027374 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.292728861 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291675509 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.29489987 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293248337 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.295056133 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292346235 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289978687 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293708188 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295103251 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295979889 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290838778 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291732317 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295001521 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293166316 seconds)
  done (took 21.897531399 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.295744411 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.295317778 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.293550004 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.296121173 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.293173574 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.293693622 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.295107945 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.292325157 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.294441895 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.297533067 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.297142242 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.298172515 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.295703662 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.2973895 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.295713909 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.298258578 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.295265885 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.294931055 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.297296932 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.296619537 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.298326912 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.295970502 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.298220892 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.298874673 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.296088228 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.295619741 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.296053281 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.296032328 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.2958885 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.29718035 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.294131118 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.29607913 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.29261166 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.296275702 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.29919607 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.299846079 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.299198515 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.296359117 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.299042213 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.296379604 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.297286427 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.296435863 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.294338128 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.297693548 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.29480744 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.297603504 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.293215953 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.296836635 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.29460067 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.293888509 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.29669625 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.296585443 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.300713706 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.298271891 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.300576139 seconds)
  done (took 72.503654781 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301714713 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298078548 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.295943825 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.296832665 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.299237492 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.294800984 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297819893 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.298494862 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296680902 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.298633674 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29398685 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.300053298 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297728741 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.297287008 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296311801 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301055967 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.298812513 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297355403 seconds)
  done (took 24.568398036 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.300060895 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294934849 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.301326955 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.296140136 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.294435501 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299859943 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296731018 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.300190859 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299826859 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29760601 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297678271 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.301449689 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302522738 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.299760384 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.299332067 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296981728 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.303667918 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299226599 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.298034985 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297189128 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.298962971 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301337417 seconds)
  done (took 29.783728113 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.300568623 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.302603441 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.301333614 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.317285366 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.321660137 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.300303271 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.302963123 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.303090986 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.325944914 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.358204963 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.35278446 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.3223981 seconds)
  done (took 17.018023621 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302057899 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302324252 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297744448 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300448892 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301850747 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296328948 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298122708 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300808399 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303048135 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300723129 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301261549 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302565833 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301658602 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29822601 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302542588 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302271714 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301484734 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299009577 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301427114 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303285977 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300363336 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304155767 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299972018 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299039843 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302348656 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300991891 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303435793 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301366412 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301305894 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304947839 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303114649 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301570622 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304069182 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300240567 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302374013 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303661998 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301938411 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301881951 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302878688 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300233806 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303971155 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306145473 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307311653 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30251975 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302630023 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300692138 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299671248 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300923609 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301637392 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306696223 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304581172 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302508511 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306510152 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30572035 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305907317 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305121849 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302768221 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304055933 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304250777 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3042665 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302069016 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303039065 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301813557 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302258766 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30578587 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300802696 seconds)
  done (took 87.162275085 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306102925 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304240071 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302611803 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304384202 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30205182 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303169114 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301558526 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30331661 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301759961 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303931386 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307090346 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303792022 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305177207 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305430153 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307060062 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302939184 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303562893 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304061132 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304013012 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306959494 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301960992 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304304946 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303527432 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304850702 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303550313 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306087432 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303976797 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304219481 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304621378 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308276308 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305228447 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3043401 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305616898 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305429043 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305882094 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304216158 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303828947 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305495703 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305261503 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309871501 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306531741 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30795396 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304498226 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305503356 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307143503 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308042792 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303605155 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306846695 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307598501 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306369524 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308088516 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309899134 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307326226 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305756454 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305989796 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306687846 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306725118 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308819387 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308250858 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308218598 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306696367 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309491922 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309789824 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309409413 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307820142 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309078927 seconds)
  done (took 87.390196201 seconds)
done (took 1764.793820192 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.477003194 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.4306297 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.30817673 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.324573342 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.308297692 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.333372422 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.322145099 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.307522643 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.311976721 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.310640542 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.310126978 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.498096078 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.303761471 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.307454837 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.312296674 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.408720282 seconds)
  done (took 26.792118288 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.341780172 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.314502789 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.43691703 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.330292093 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.343002502 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.508566188 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.371952314 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.3162776 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.497414032 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.35552149 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.307791227 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.339227834 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.314047776 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.316021915 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.332133491 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.505269377 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.580758684 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.310916237 seconds)
  done (took 29.039321318 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.797674407 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.318160122 seconds)
  done (took 5.333772178 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.337456268 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.317566309 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.314089391 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.315183509 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.316831548 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.302585281 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.314507437 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.310852453 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.325326052 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.449063546 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.316161367 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.328091455 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.33799654 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.316027758 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.315681434 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.358794136 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.473672564 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.310551734 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.313733046 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.321635034 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.316605161 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.423832706 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.357636206 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.314449673 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.448297288 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.305805933 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.323369078 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.327589048 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.51804098 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.314238825 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.315805744 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.315960235 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.317954208 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.270521752 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.765379683 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.307268824 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.342291583 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.324640712 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.313801933 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.466157188 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.314530874 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.324759745 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.310055464 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.743463906 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.453137378 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.437070732 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.320458818 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.315657774 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.320582982 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.38281143 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.317864752 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.323257832 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.363855156 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.133341121 seconds)
  done (took 84.381619419 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.321170648 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.312736629 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495073414 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.331564331 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.309463409 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.315863055 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.314093802 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.628185465 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.365420292 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314375074 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.613516708 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.892372532 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.333260203 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.362200577 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.162658836 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.372942481 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.31153867 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.325700806 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.315815748 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.31564161 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.883112458 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.334200548 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.312057666 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.540143578 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.354179542 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.86938828 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.316494233 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.313917689 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.317571928 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.310011647 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.854323426 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.333188424 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.407406353 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.309155127 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.599986305 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.715146317 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.671236975 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.320178087 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.342174261 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.313987904 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.315313405 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.835178811 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.688470424 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.311740875 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.310367816 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.838759655 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.310117062 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.325682757 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.314762821 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.570501284 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.312161925 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.315699947 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.328023544 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.312071639 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.314929098 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.389337784 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.389401303 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.853827871 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.312305527 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.313498209 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.380975603 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.319015738 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.317019539 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.31904314 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.314497543 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.695642223 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.459335142 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.325593917 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.698945252 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.837330107 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.329974213 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.907443024 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.329084338 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.323751331 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.456477723 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318108672 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.313484189 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.861316198 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.347587027 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.312733063 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.679101549 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.313377457 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.618777716 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.334266012 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317122289 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.886151959 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.318853001 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.397484844 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.314867595 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.31319683 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.328839652 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.328828849 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.607823374 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.360095431 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.319303619 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.315914566 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.346630485 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.312120226 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.316595193 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.326394871 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.910099326 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.333670926 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.31818361 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.315176498 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314961953 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.315141346 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.316988129 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.321429196 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.586515732 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.325131084 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.320384966 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.320563284 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.316066408 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.330337154 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.549226568 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.330924703 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.650907379 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.315861105 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31997241 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.341444981 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318765834 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.316046512 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315534283 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.319710982 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.230232252 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.624927105 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.34124932 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.31571213 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319624588 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318752726 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.341888711 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.317063509 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.354082438 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.320533588 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089913351 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.35698726 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.347110362 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.319899288 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.323333299 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318872365 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.324783816 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.318504879 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.61505221 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.605999368 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.46064601 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.321433803 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.321027931 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.092072652 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.383988334 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.499571858 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.340070901 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.316747006 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.574686415 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.549089358 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.322835879 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.319222742 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.321275599 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.583580446 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.32132232 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.630859516 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.871513157 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.335655817 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.323911504 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.095113749 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.050770873 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.326395745 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.324031464 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.61591665 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.336661825 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.322182192 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.320583154 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.321394905 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.318154346 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.32592492 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.332764697 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.3198148 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.321513551 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.434591366 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.517608571 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.343073842 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.326708912 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.854584636 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.330523098 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318329045 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.318034675 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.320654745 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.32179985 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.381189554 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.32761924 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.361728717 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.325439128 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.329488 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.910026713 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.319099886 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.320723611 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.518735525 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.025044789 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.338228996 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.32709112 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.336488378 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.222627513 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.879555102 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.386941956 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.656967972 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.321556205 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.36547943 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.323282097 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.350105524 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.875629583 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.324625648 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.345482506 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.994893198 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.339420225 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.177615815 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.321168956 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.327062998 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.947298474 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.337434702 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.330593829 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.321177163 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.340965378 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.622138401 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.331134179 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.365008388 seconds)
  done (took 496.411689877 seconds)
done (took 643.171287859 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.327326186 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.329270491 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.316595627 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.330022991 seconds)
  done (took 10.537997137 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.336910161 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.331752956 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.341422801 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.32985367 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.335924493 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.33080231 seconds)
  done (took 9.243053738 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.325205085 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.326585769 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.330656749 seconds)
  done (took 8.217945215 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.548329495 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.349452303 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.678251938 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.343681305 seconds)
  done (took 9.157507049 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.342957471 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.346310619 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.343183588 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.337468976 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.333801409 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.337151111 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.336348352 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.336275617 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.337824781 seconds)
  done (took 13.285398671 seconds)
done (took 51.675596077 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.313458913 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.283836944 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.976723479 seconds)
    (4/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.212401904 seconds)
    (5/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.312929061 seconds)
    (6/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.448971522 seconds)
    (7/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.323976071 seconds)
    (8/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.449458752 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.615487592 seconds)
    (10/286) benchmarking ("sort", Float64, true)...
    done (took 2.344044913 seconds)
    (11/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.325734812 seconds)
    (12/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.313234198 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.366032416 seconds)
    (14/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.314309481 seconds)
    (15/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.320551596 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.350940836 seconds)
    (17/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.991351142 seconds)
    (18/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.353006218 seconds)
    (19/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.32430774 seconds)
    (20/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.313232235 seconds)
    (21/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.339553865 seconds)
    (22/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.312901087 seconds)
    (23/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.331857544 seconds)
    (24/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.317629328 seconds)
    (25/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.706283918 seconds)
    (26/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.315817548 seconds)
    (27/286) benchmarking ("sort", BigInt, false)...
    done (took 2.323278938 seconds)
    (28/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.351023235 seconds)
    (29/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.163087213 seconds)
    (30/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.327531046 seconds)
    (31/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.428430303 seconds)
    (32/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.312858115 seconds)
    (33/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.322369316 seconds)
    (34/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.58920955 seconds)
    (35/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.3315398 seconds)
    (36/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.720528221 seconds)
    (37/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.370442907 seconds)
    (38/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.345974703 seconds)
    (39/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.323740587 seconds)
    (40/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.328591402 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.329743763 seconds)
    (42/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.328209342 seconds)
    (43/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.35273473 seconds)
    (44/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.913793794 seconds)
    (45/286) benchmarking ("sort", Int64, true)...
    done (took 2.327657933 seconds)
    (46/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.314294567 seconds)
    (47/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.333580346 seconds)
    (48/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.449518492 seconds)
    (49/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.315347215 seconds)
    (50/286) benchmarking ("sort", Int8, false)...
    done (took 2.327007468 seconds)
    (51/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.696875191 seconds)
    (52/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.315168902 seconds)
    (53/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.340735568 seconds)
    (54/286) benchmarking ("sort", BigInt, true)...
    done (took 2.329820888 seconds)
    (55/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.443801154 seconds)
    (56/286) benchmarking ("sort", Float32, true)...
    done (took 2.327595176 seconds)
    (57/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.530322255 seconds)
    (58/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.316543663 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.231763109 seconds)
    (60/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.159194684 seconds)
    (61/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.35166835 seconds)
    (62/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.578275876 seconds)
    (63/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.434403493 seconds)
    (64/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.328579853 seconds)
    (65/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.358421157 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.389718362 seconds)
    (67/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.443637239 seconds)
    (68/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.320291361 seconds)
    (69/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.347899579 seconds)
    (70/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.325217303 seconds)
    (71/286) benchmarking ("sort", Int8, true)...
    done (took 2.326953762 seconds)
    (72/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.238718405 seconds)
    (73/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.338808547 seconds)
    (74/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.32728256 seconds)
    (75/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.342432031 seconds)
    (76/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.320481424 seconds)
    (77/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.327834521 seconds)
    (78/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.339144505 seconds)
    (79/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.501148134 seconds)
    (80/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.329518102 seconds)
    (81/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.331526316 seconds)
    (82/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.331665758 seconds)
    (83/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.320532373 seconds)
    (84/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.316218719 seconds)
    (85/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.525399374 seconds)
    (86/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.317786556 seconds)
    (87/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.345549839 seconds)
    (88/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.18528024 seconds)
    (89/286) benchmarking ("sort", Int64, false)...
    done (took 2.353120284 seconds)
    (90/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.470292092 seconds)
    (91/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.387564224 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.74783798 seconds)
    (93/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.362155635 seconds)
    (94/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.318692092 seconds)
    (95/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.317993114 seconds)
    (96/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.454710873 seconds)
    (97/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.831764578 seconds)
    (98/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.317889954 seconds)
    (99/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.330941909 seconds)
    (100/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.318675781 seconds)
    (101/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.422527029 seconds)
    (102/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.555814462 seconds)
    (103/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.009720228 seconds)
    (104/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.324922863 seconds)
    (105/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.327972763 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.318269603 seconds)
    (107/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.987556813 seconds)
    (108/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.460474968 seconds)
    (109/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.346752405 seconds)
    (110/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.324869773 seconds)
    (111/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.649498692 seconds)
    (112/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.537687378 seconds)
    (113/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.329387285 seconds)
    (114/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.315234641 seconds)
    (115/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.338482335 seconds)
    (116/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.504230867 seconds)
    (117/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.106889174 seconds)
    (118/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.340650212 seconds)
    (119/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.356489492 seconds)
    (120/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.318631761 seconds)
    (121/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.347220698 seconds)
    (122/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.358460213 seconds)
    (123/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.563070196 seconds)
    (124/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.324940074 seconds)
    (125/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.358157268 seconds)
    (126/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.933323229 seconds)
    (127/286) benchmarking ("sort", Bool, false)...
    done (took 1.880180658 seconds)
    (128/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.363309544 seconds)
    (129/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.141192833 seconds)
    (130/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.596034916 seconds)
    (131/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.320149423 seconds)
    (132/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.700218342 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.142425583 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.596050028 seconds)
    (135/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.348967392 seconds)
    (136/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.234254445 seconds)
    (137/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.396510825 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.347315302 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.444684282 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.739869069 seconds)
    (141/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.204339573 seconds)
    (142/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.368697139 seconds)
    (143/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.318898222 seconds)
    (144/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.81176096 seconds)
    (145/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.31710943 seconds)
    (146/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.946172477 seconds)
    (147/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.32096724 seconds)
    (148/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.320935092 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.182223762 seconds)
    (150/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.358375031 seconds)
    (151/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.322736472 seconds)
    (152/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.889479257 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.292856359 seconds)
    (154/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.322223286 seconds)
    (155/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.361738635 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.23071945 seconds)
    (157/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.357556855 seconds)
    (158/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.357082165 seconds)
    (159/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.340402196 seconds)
    (160/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.37084206 seconds)
    (161/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.364387826 seconds)
    (162/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.323482238 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.309427073 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.297473957 seconds)
    (165/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.32247506 seconds)
    (166/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.322195334 seconds)
    (167/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.324161434 seconds)
    (168/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.359655322 seconds)
    (169/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.282234503 seconds)
    (170/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.466275601 seconds)
    (171/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.441471278 seconds)
    (172/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.361121762 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.361496302 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.738240729 seconds)
    (175/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.394479133 seconds)
    (176/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.322084741 seconds)
    (177/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.353553971 seconds)
    (178/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.338332063 seconds)
    (179/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.143669347 seconds)
    (180/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.321884391 seconds)
    (181/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.328639802 seconds)
    (182/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.244837325 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 2.333628015 seconds)
    (184/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.435235262 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.39275311 seconds)
    (186/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.324469139 seconds)
    (187/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.355715105 seconds)
    (188/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.480635897 seconds)
    (189/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.363574675 seconds)
    (190/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.229098386 seconds)
    (191/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.956344374 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.743138033 seconds)
    (193/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.342570218 seconds)
    (194/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.714333931 seconds)
    (195/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.512514047 seconds)
    (196/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.337868617 seconds)
    (197/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.367148502 seconds)
    (198/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.547738639 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.336521146 seconds)
    (200/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.347348224 seconds)
    (201/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.351023052 seconds)
    (202/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.516186326 seconds)
    (203/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.355851941 seconds)
    (204/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.369191858 seconds)
    (205/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.323797831 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.360277207 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.98705215 seconds)
    (208/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.365509084 seconds)
    (209/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.326355189 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.379609587 seconds)
    (211/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.215606555 seconds)
    (212/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.33001194 seconds)
    (213/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.465546075 seconds)
    (214/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.40089298 seconds)
    (215/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.40100541 seconds)
    (216/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.34586461 seconds)
    (217/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.339694926 seconds)
    (218/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.169639513 seconds)
    (219/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.152580983 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.680559003 seconds)
    (221/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.367612339 seconds)
    (222/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.329041525 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.335254351 seconds)
    (224/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.539176274 seconds)
    (225/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.729076888 seconds)
    (226/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.340119973 seconds)
    (227/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.430974297 seconds)
    (228/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.522800285 seconds)
    (229/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.3526193 seconds)
    (230/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.356493061 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.56188849 seconds)
    (232/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.44569291 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.928001265 seconds)
    (234/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.42593018 seconds)
    (235/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.328479807 seconds)
    (236/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.3527783 seconds)
    (237/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.341500919 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.366489125 seconds)
    (239/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.365112915 seconds)
    (240/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.327183476 seconds)
    (241/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.32461965 seconds)
    (242/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.340455163 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.738201417 seconds)
    (244/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.332477852 seconds)
    (245/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.189463109 seconds)
    (246/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.356252815 seconds)
    (247/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.36434028 seconds)
    (248/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.34370708 seconds)
    (249/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.427927172 seconds)
    (250/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.357740438 seconds)
    (251/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.423304259 seconds)
    (252/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.670052562 seconds)
    (253/286) benchmarking ("sort", Float64, false)...
    done (took 2.348942086 seconds)
    (254/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.392166017 seconds)
    (255/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.352203289 seconds)
    (256/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.329344814 seconds)
    (257/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.211442388 seconds)
    (258/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.367232584 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.453275737 seconds)
    (260/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.405764674 seconds)
    (261/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.36859643 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.428430652 seconds)
    (263/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.398037672 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.533786316 seconds)
    (265/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.399771197 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.344101796 seconds)
    (267/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.348909133 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.705643516 seconds)
    (269/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.142748852 seconds)
    (270/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.351945778 seconds)
    (271/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.432895915 seconds)
    (272/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.427865509 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.38286488 seconds)
    (274/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.344639788 seconds)
    (275/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.40478522 seconds)
    (276/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.3303216 seconds)
    (277/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.331204485 seconds)
    (278/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.426622963 seconds)
    (279/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.354784324 seconds)
    (280/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.347123775 seconds)
    (281/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.009419433 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.365838895 seconds)
    (283/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.338323339 seconds)
    (284/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.46266288 seconds)
    (285/286) benchmarking ("sort", Float32, false)...
    done (took 2.343140125 seconds)
    (286/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.329331673 seconds)
  done (took 569.732268679 seconds)
done (took 570.968053012 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.391470514 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.401823024 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.355515369 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.386764936 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.471228393 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.53247798 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.362377643 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.395497553 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.403282748 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.405208796 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.362285527 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.532428443 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.35688446 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.356565941 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.355695072 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397858658 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.34587093 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.358895412 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.372244624 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.390451764 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.372472892 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.364297662 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.406371488 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.531872721 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.359878077 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.35779837 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.358929635 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.380515552 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.472559876 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.362598392 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.358945166 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.367484129 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.345732546 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.360872896 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.350208312 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.379213832 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.368379993 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.366864053 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.392622761 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.474443288 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.352930413 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.362271217 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.358814406 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.358440876 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.357036529 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.39759748 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.359806694 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.416679612 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.397861724 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400103272 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.36328002 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.369059373 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.370479008 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.358531791 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.369279083 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.359305357 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.418152733 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.403979018 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.381555733 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.403886536 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.359351624 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.363608091 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.398382821 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.373565525 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.37232291 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.36502381 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.356634286 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.399201095 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.351701971 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.36220369 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.34910937 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.390159901 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.364173202 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.374653438 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.393822419 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.351459319 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.354749813 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.359041843 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.371028818 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.359861093 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.407279715 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400834433 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.41038137 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.360708533 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40247609 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.538176907 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.370226164 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.363276992 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.396544855 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.382042874 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.374490986 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.373112684 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.396249275 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.363339553 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.409178816 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.420545223 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.369653886 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.37115694 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.411654516 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.373115163 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.357201691 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.405532547 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.361503332 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.358530894 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.357642444 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.483075062 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.356938315 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.362295975 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.396155025 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.411183032 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.421779575 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.352382654 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.387797632 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.410823248 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.373787548 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.422305803 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.362360762 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.352263012 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.350384727 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.485826884 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.365756991 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.368945452 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.409859719 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.422428579 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.364043719 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.354286544 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.363637096 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.403606241 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.485878267 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.374091928 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.47631661 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.361656645 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.368372739 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.397445426 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.409714991 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.400492134 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.424813766 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.409913968 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.379305967 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.364891333 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.37429322 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.377422097 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.364665678 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.42249135 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.363522042 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.397586692 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.404519065 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.407378455 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.397508515 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.48698917 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.368715663 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.366807245 seconds)
done (took 228.155383533 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.427767351 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.361581587 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.473183048 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.362025227 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.462863676 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.464679399 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.360772 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.360784252 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.358457622 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.745434884 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.360632114 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.360572041 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.359552748 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.363944207 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.445160977 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.366044028 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.359550368 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.712569199 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.363430902 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.435296215 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.365197244 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.365008535 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.362899373 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.745049914 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.361968974 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.35945 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.437566557 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.366295538 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.710113992 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.358679834 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.363811137 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.761894057 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.454519085 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.385217071 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.373030067 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.371986514 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.46874767 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.384280528 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.445633034 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.448483542 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.472197916 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.405315646 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.36327991 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.36398765 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.369491872 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.364519232 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.365409102 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.391008227 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.36177722 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.365409241 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.713563899 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.377548605 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.36286466 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.364330721 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.363583146 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.393791485 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.366011237 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.365765997 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.457390928 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.367849867 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.430062347 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.749780395 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.750918664 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.36787172 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.361591085 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.365513032 seconds)
  done (took 106.637120482 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.436250014 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.442011416 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.488961664 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.370343442 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.418522385 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.493200473 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.369454056 seconds)
  done (took 11.285609023 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.373872649 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.370296826 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.416561842 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.418397772 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.370457472 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.58616016 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.368523076 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.379119198 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.36662787 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.45001719 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.380577359 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.368533697 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.375757933 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.368334424 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.421194139 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.379990137 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.484825898 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.369123024 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.370581786 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.524334012 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367469407 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.37623514 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.449931094 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.381217645 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.383937679 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.380329912 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.327704388 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.369911049 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370019826 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.368689487 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36451702 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.477792632 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.371166037 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.368129242 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.369386162 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.528783094 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.370267839 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.367870445 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.370758638 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.370008121 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.372067692 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.3722152 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.371644036 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.36669832 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.371584784 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.393676809 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.372133074 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.369380317 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.372160296 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.371286408 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.44982833 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.372716723 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.364687627 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.367368361 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.449050291 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380610036 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.373188204 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.371387209 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.371335088 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366736847 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.525807695 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.422870858 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.37116051 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.420326555 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.373860376 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.371960866 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.372684526 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.373563927 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.462794067 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.374165703 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.419476036 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.369962084 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.596378426 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.396844592 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.375682617 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.374100033 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.376024603 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.37214326 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.375333614 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.384830409 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.371244568 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.373216198 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.377667185 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370656325 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370769475 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.557551837 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.530091456 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.370520863 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.386671034 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.381674457 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.372106987 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.448583446 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.373764082 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.370870886 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.426878674 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.488786596 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.455763994 seconds)
  done (took 141.882077693 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.379976207 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.382688301 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.377434415 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.396331829 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.378103903 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.37642699 seconds)
  done (took 9.563218707 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.378646257 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.377751968 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.373052325 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.374401895 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.374754387 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.388061268 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.386530232 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379468787 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.380805123 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.377073621 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.390160702 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.378868602 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.379671896 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.376330109 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.389646944 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.377804532 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.388097085 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.375573403 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.376999899 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.376399259 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.376201785 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.377374566 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379025525 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.379926479 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.394817395 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.377140284 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.383636939 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.377107131 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.378759183 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.383759891 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.398071477 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.393333927 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.378423224 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.383017153 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.3939931 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.38134383 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382332752 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.38109225 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.376483867 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.38961147 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.380344125 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379500522 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.377737736 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.380873899 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.381797849 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.386073235 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.382825706 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.38751574 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.390363258 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.383147474 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.38161822 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.378238599 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.390854228 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.380834882 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.381326855 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402480891 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.383616401 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.390446429 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.380620806 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.380374222 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.380274033 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.389558422 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.380333291 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.394000989 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.377199736 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.382362266 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.382672556 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.384703102 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380799056 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.380883112 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.381717527 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.377858645 seconds)
  done (took 101.814252937 seconds)
done (took 372.443395978 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.859538085 seconds)
  done (took 4.136798045 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.554655247 seconds)
  done (took 3.834159102 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.002193531 seconds)
  done (took 24.28934343 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.464556444 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.382549899 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.388115506 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.384139419 seconds)
  done (took 10.898210399 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.683160008 seconds)
  done (took 3.96432091 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.374824435 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.370937136 seconds)
  done (took 6.028271252 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.735030293 seconds)
  done (took 4.014000441 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.823541121 seconds)
  done (took 4.109165934 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.394881135 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.390118793 seconds)
  done (took 6.077229093 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.363513137 seconds)
  done (took 3.64179007 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.073200464 seconds)
  done (took 17.355756332 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.38668442 seconds)
  done (took 3.670657393 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.399954784 seconds)
  done (took 3.679721546 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.25015006 seconds)
  done (took 6.529429871 seconds)
done (took 103.506924896 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.380168793 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.375943794 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.376024611 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.377277785 seconds)
  done (took 10.78660136 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.417360028 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.41527857 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.417046314 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.42496229 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.415897243 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.415217416 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.406902141 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.405678423 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.425680998 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.418564172 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.416570545 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.416763595 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.417422641 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.407040385 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.415090118 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.418423635 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.425855488 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.417602512 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.405939529 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.41976256 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.383000362 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.428440643 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.419669653 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.380708817 seconds)
  done (took 35.213924954 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.903475471 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.457269929 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.537038333 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.437506929 seconds)
  done (took 7.616457574 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.454538432 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.45372589 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.460562606 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.503180675 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.542142119 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.462624929 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.412549387 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.405219892 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.391902042 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.452849626 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.513226382 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.445659893 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.528015016 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.383418849 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.573097965 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.383732954 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.383187618 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.458916697 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.500711786 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.515299203 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.384756835 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.462520336 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.46611806 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.448816693 seconds)
  done (took 36.268454958 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.387594195 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.401689214 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.381880175 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.382928759 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.392436431 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.383538991 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.383455569 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.384268731 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.384069424 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.928257329 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.382533315 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.397914283 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.904365555 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.387546319 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.390006831 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.384638846 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.921252973 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.904089006 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.390567451 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.391542094 seconds)
  done (took 31.145550366 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.379657818 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.379461481 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.736590805 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.637513011 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.382060946 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.377205555 seconds)
  done (took 14.17521823 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.468465574 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.630141426 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.392764164 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.786049117 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.861067862 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.390958414 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.393637036 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.671611375 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.033922416 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.008099135 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.452606376 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.468716173 seconds)
  done (took 20.845374066 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.387065385 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.381885405 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.385076013 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.403832532 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.449680793 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.393601685 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.396797631 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.379515258 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.453492128 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.45836239 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.396306925 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.453518371 seconds)
  done (took 22.22574052 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478812253 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38200277 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.378436102 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489282356 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384141329 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.22300366 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.483910832 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.131146605 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.405982729 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654643539 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389482696 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478047964 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.638587244 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382234127 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387465038 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.371200206 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618243096 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921386153 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383251594 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382630268 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419160328 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382818115 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386944226 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.626602639 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.383188101 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381060349 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.647876449 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380724783 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706068752 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401804944 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393272337 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382901802 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660570029 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099863865 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507256605 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.619794368 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422160354 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391001629 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.398147055 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.404279672 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391374283 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385182384 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396899209 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385815237 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387477418 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402408732 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147635751 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.410261129 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.380814597 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385416324 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678306617 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495538688 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.390530915 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386040596 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521023146 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386946922 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.392493294 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.388868141 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973656245 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395159694 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399775477 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.389609769 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.427213889 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395545586 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062579733 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.393702057 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.39277565 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390506946 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385445823 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386455172 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407659907 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386749022 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.411165469 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386076641 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139368791 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394690468 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387138995 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981553462 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394992236 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.391060348 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622780661 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386954194 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386839222 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.387316985 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390233428 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194908635 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402963451 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.374389444 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.391244404 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.137423511 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643657541 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407073093 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421531782 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.611355735 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.376315464 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392698227 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.396058028 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388816879 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410952422 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.14618477 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406803728 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.392696794 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651460711 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.601065126 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408213257 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.391045338 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912652083 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420013293 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.410089019 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394130384 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.633949481 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.028209391 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.403924715 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398018365 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411412667 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389746636 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245821789 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406400762 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.49618164 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399224334 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671894521 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.260174197 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392151069 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462122411 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396042348 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393968058 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401946387 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397575871 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392974002 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.621692417 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423894173 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.407998767 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.403460061 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394643112 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.394667544 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397346306 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.393284083 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.616982708 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40337499 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670219402 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393006724 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393337913 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391021752 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.614688301 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.406576191 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.731574668 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656779599 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403965286 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406637187 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406763766 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413648266 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500235712 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415364928 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.394683026 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.65465526 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.39803597 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.399292438 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403982191 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399576559 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400731758 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.402740731 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409364469 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053710745 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371369291 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398845708 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.285683581 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.406357218 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462721165 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402557337 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631857947 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.402654955 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396476323 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.404537801 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.396050362 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625040869 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405206192 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.400698282 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476749891 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.912620673 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.060004379 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40860016 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.395968384 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.396028447 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.392589851 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396049647 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396522714 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397450752 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.633615254 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408398622 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.445938901 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.038191084 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395454425 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404169884 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.40600835 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409558757 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.402532163 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396680567 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.395918258 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405746281 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401339976 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.411976167 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541052927 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.411341229 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396590616 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.914143505 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40249969 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398859297 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39884177 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431957596 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407245354 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256629457 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658370715 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395249869 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413026688 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.419295472 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.39475579 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41603744 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397215709 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.410366371 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404937192 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.409087902 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.405962994 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402114106 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971606297 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181774244 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987805627 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410052673 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.398733857 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.4060987 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.160197566 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416526318 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398653161 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656737695 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.153727118 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417556543 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916443974 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.415031176 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240766415 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691804066 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638620997 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410291037 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.395894555 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693220705 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616984528 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434626325 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398380143 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404920089 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.385278926 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998418996 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423672265 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478156229 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158874 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43245566 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402485074 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.406067738 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.416275088 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848614352 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416560975 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403571428 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400397325 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405274657 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252082961 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406400744 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403333189 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07824647 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412626852 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.925914182 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418431762 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.641128789 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.41351881 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.406867458 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.407979108 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.405658181 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.66288231 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6993727 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408435465 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414769845 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001648403 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.274607 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.408720914 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401701118 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247673347 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404767289 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.730136111 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.408269413 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.403450312 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404007755 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402551921 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403980196 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.400716865 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409156271 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38279321 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942548064 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.440188861 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408157657 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425540806 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407564256 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.660717526 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.416275043 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.04393442 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632604593 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454624461 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425311731 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.408027483 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404279276 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.390477163 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406926098 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406288533 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512881983 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.630787561 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.402833279 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.390873009 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.483087463 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615817686 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404251249 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405294781 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66992397 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.402819244 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.418918809 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165143909 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437198462 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405214838 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403984328 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.434883608 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.401922259 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495861659 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647524696 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.416718088 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.422220046 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856778409 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424111399 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402898106 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.420270547 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511226206 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405925024 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.425661742 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.178741779 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052131527 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198585377 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.051731633 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700776356 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406437205 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411666381 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407106072 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570690009 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404822851 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680728196 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40776962 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.450522507 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429311078 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408616908 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407162774 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631506855 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683044337 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409605456 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408964881 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411754925 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.409389743 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.420325976 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.620848529 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955652765 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010134313 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409983055 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408516546 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.175719535 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702428019 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409836402 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410722531 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41074327 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.425890888 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.409666284 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.437490211 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412645416 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552693499 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.701440706 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125975242 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.436624148 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.438846156 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.185683324 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408841253 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.687338441 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405822183 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.651463269 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057130224 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.201136927 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.681167612 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480632952 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65247879 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.406663565 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576790249 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.409350943 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410000311 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412656302 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413701052 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.405411043 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.42362121 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073582328 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6839549 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.413994343 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.409068026 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44147472 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.423417602 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634729445 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.228290408 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.640157188 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.420116821 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417726753 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412707394 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07699629 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.708252975 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411652377 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.413640031 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67888862 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411567202 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437817871 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.865945981 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.409861296 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022527178 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.386970746 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432799354 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42207285 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.212212394 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079560036 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.414128167 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963123388 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414377059 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419076656 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691566924 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.418688441 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422845981 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694382063 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.417941821 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.412355515 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660846638 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.072417364 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.276217313 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.432884458 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429957446 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.420272146 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412882749 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527107837 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416070579 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422072625 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.885532817 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.433071736 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416337839 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422884065 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.419407703 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421715302 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.427058037 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413736821 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.419278779 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.427069023 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.407493528 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426270605 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.418817971 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043724065 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439499163 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.092155647 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.740812648 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.670413585 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413617457 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.406044599 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.421858438 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415373868 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417424148 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414703785 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.458987179 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022971815 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.417999904 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.432421337 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420029524 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.634459307 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629830186 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422287258 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663567338 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424518812 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438168748 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.409766944 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422428352 seconds)
  done (took 996.937846154 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.432249944 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.452113074 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.458785188 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.475366211 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.448246333 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.447666912 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.511970781 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.441198339 seconds)
  done (took 20.989150442 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.432640001 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.424507804 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.429107845 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.426794159 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.430932471 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.937399622 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.441893213 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.425545836 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.429290579 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.417538738 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.42701522 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.168435077 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.446135047 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.421869718 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.403977829 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.428925074 seconds)
  done (took 33.42048361 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.594204227 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.656671186 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.780722888 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.475425725 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.451611679 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.435461317 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.77271101 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.445638071 seconds)
  done (took 27.934599523 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.4324146 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.431814831 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.432061777 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.431574018 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.430273596 seconds)
  done (took 8.479799115 seconds)
done (took 1267.318012781 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.427253807 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.426578794 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.421983889 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.428694841 seconds)
  done (took 7.024478234 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.405844777 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.408351248 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.410576152 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.423099681 seconds)
  done (took 9.969518637 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.236099959 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.141259817 seconds)
  done (took 5.697481396 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.423971496 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.181960583 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.159204316 seconds)
  done (took 8.086598513 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.734046706 seconds)
  done (took 3.058174581 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.842717022 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.793137332 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.607105937 seconds)
  done (took 6.56323406 seconds)
done (took 41.720374998 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.424239903 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.698979439 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.580429465 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.421515126 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.597975241 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.581539929 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.161130872 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.431697189 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.418577969 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.453656642 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.419289912 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.583088364 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.213482475 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.67701287 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.211904728 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.677324777 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.587147763 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.432335455 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.418968401 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.422074734 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.181301267 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.432688504 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.420627898 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.421191631 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.602823247 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.571634586 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.438597947 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.67480084 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.420941992 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.424382944 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.584918094 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.422612103 seconds)
  done (took 84.32977371 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.427499763 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.421377756 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.422892257 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.438564748 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.425004815 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.425091368 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.442413121 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.42221866 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.420848715 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.420698338 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.442732656 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.420428958 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.426915093 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.432061241 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.426626471 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.43278219 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.432928533 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.426094464 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.431455902 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.423410718 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.423589445 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.420852986 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.43975616 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.421108637 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.422794652 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.425134783 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.453628264 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.43209075 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.424096259 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.457029102 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.425391872 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.441575947 seconds)
  done (took 79.074556607 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.428688152 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.439464126 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.43170039 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.421393354 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.425798922 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.429353109 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.42320145 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.424123265 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.423883992 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.423221591 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.423048836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.425171028 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.441671105 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.424629978 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.442717738 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.424980649 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.442774276 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.433214179 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.431930019 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.425958282 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.423582071 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.423130085 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.424880022 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.43999615 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.424002647 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.445629845 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.426326132 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.424019518 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.444231011 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.445049681 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.447850937 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.426174434 seconds)
  done (took 79.107613864 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.713502247 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.432314961 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.436193007 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.420242223 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.435603362 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.433234431 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.427112644 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.709800189 seconds)
  done (took 15.337084023 seconds)
done (took 259.1695557 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.428562625 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.426051642 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.646781592 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.453549426 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.427117069 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.458143294 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.454010447 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.668044403 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.447368943 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.68989314 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.445754989 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.452290913 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.428614742 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.452992032 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.729544178 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.586271127 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.358165042 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.428990059 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.798365687 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.446605605 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.735130305 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.441472002 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.720494165 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.428610516 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.447936021 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.429613524 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.459674549 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.345075862 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.469996216 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.807308324 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.438642076 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.436755075 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.542359943 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.546323814 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.655016783 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.601072561 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.43719043 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.522414956 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.661756353 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.442037015 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.446342464 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.237183728 seconds)
  done (took 85.808813178 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.44052269 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.563239362 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.43607747 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.439476969 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.436807838 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.556123118 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.536791792 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.438956209 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.438670531 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.43617639 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.43521705 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.436736575 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.440297442 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.43945432 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.438640108 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.440204173 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.437919504 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.454904205 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.456262435 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.485767073 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.562322316 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.469880412 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.433543467 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.439987343 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.546156306 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.578818079 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.437746318 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.440225067 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.4843107 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.441896889 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.445100767 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.489304586 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.440487158 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.442968049 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.561121578 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.538846927 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.454554272 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.441393154 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.559404274 seconds)
  done (took 58.729976665 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.444293262 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.707033811 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.895077913 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.447342318 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.442339101 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.447716584 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.530844504 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.443241244 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.444428385 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.446306647 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.620214031 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.441645007 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.480566493 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.931635637 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.44361523 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.442187042 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.443646346 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.46215116 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.722781169 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.451166177 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.551056898 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.439532952 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.531398411 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.45258471 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.467575868 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.446356585 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.449403693 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.02693166 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.44487901 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.626639382 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.335999234 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.531194513 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.961759371 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.910486809 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.3387642 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.447689237 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.442447506 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.623317325 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.445189631 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.446468348 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.533147733 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.450618522 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.926844375 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.146147957 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.466577239 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.445789833 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.058767986 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.623703119 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.715134294 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452736348 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.945400931 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.447362069 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.448671558 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.44735818 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.720728225 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.450418342 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.446119258 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.052301018 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.466525311 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.530558615 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.446521052 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.449311184 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.727590485 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.447422307 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.711591767 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.445292362 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.454116254 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.466636963 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.917842089 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.447215354 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.160476661 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.46520519 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.446148207 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.624588832 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.712258736 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.113643989 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.446313933 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.731387731 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.975581897 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.531526579 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.4512033 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.018111407 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.5376128 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.453381363 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.452442513 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.448586758 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.446397263 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.499474353 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.533095298 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.073219561 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.137612346 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.080915857 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.554352481 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.460217388 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.452036417 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.053266317 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.466936829 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.446211157 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.9394269 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.155719279 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.469270591 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.457854905 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.16204188 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.476434323 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.539041795 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.453312855 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.936728778 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.449945375 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.500227067 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.449420874 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.456189047 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.472687467 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.54207311 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.454233243 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.451819927 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.124882729 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.65739827 seconds)
  done (took 191.155535962 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.443149172 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.455978569 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.44449142 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.463041985 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.444140455 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.451864109 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.441647498 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.444804875 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.45024608 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.440371304 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.443839393 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.444617424 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.443826997 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.453049857 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.452553367 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.451525235 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.443765991 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.442979547 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.447024254 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.443482077 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.444345044 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.469921309 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.446319904 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.441735328 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.447050204 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.447991808 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.44592786 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.446044784 seconds)
  done (took 65.878503073 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.454882616 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.075632856 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.453100728 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.602398894 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.476285811 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.45066106 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.59783185 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.515318641 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.452968787 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.453048738 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.449737435 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.787472497 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.452673749 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.024721171 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.665792713 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.598954124 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.022478009 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.470390006 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.45054689 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.450588921 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.603174805 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.468895677 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.788541124 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.077387348 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.455361361 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.079366619 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.439429908 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.454743712 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.452331286 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.083329485 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.450812725 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.791695694 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.536257236 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.51855718 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.080874112 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.025848531 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.042864938 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.614416231 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.455181293 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.452460365 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.451990934 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.443123341 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.083390687 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.454217948 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.454963031 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.078067628 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.471752141 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.456113114 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.462487893 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.451960425 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.521872243 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.525073876 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.793241627 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.088580274 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.54113212 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.464582152 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.602779584 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.837543368 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.45637365 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.02727226 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.445637083 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.089594641 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.472903973 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.447414008 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.456760234 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.459176144 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.623679973 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.600086832 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.027883897 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.47343893 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.029021992 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.639115992 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.453167559 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.454709639 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.459282441 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.084356057 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.0286543 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.640208479 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.60706986 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.676922698 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.446475864 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.455391187 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.448090261 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.545013934 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.454251693 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.088409779 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.049065532 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.474116698 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.461179154 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.45827858 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.457167427 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.664837333 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.088009773 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.544381055 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.027118347 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.81642344 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.797416533 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.45702356 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.52485599 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.474237479 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.799584294 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.456643509 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.524523894 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.900838603 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.798753227 seconds)
  done (took 174.172322207 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.727185553 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.487948563 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.55555224 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.615573602 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.09952814 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.061023451 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.451120497 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.596531414 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.576800422 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.747675031 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.46805688 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.549107493 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.69081391 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.543811437 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.222461628 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.535632445 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.561757818 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.611935521 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.60948966 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.473725693 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.12780265 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.791503079 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.657528294 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.476778399 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.570482307 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.301968526 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.06966346 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.001225956 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.654511813 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.456588566 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.013163407 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.453030548 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.451596264 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.176938896 seconds)
  done (took 67.739128187 seconds)
done (took 644.812288306 seconds)
SAVING RESULT...
DONE!
