cset: moving following pidspec: 24984
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.388910449 seconds)
loading group "string"... done (took 0.590376775 seconds)
loading group "linalg"... done (took 7.307673142 seconds)
loading group "parallel"... done (took 0.160645573 seconds)
loading group "find"... done (took 1.166006621 seconds)
loading group "tuple"... done (took 1.841036952 seconds)
loading group "dates"... done (took 1.331670486 seconds)
loading group "micro"... done (took 0.222204502 seconds)
loading group "io"... done (took 0.958885114 seconds)
loading group "scalar"... done (took 39.016606963 seconds)
loading group "sparse"... done (took 12.476480362 seconds)
loading group "broadcast"... done (took 0.966243646 seconds)
loading group "union"... done (took 13.018379822 seconds)
loading group "simd"... done (took 4.893225648 seconds)
loading group "random"... done (took 9.612375336 seconds)
loading group "problem"... done (took 1.852314565 seconds)
loading group "array"... done (took 21.769563575 seconds)
loading group "misc"... done (took 1.753422216 seconds)
loading group "sort"... done (took 3.513667659 seconds)
loading group "collection"... done (took 18.362399006 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.524555574 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125157436 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118123005 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119450462 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147564976 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112406446 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124976032 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085533333 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.802816453 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148361681 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118602565 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.429255171 seconds)
done (took 5.177164153 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.179144109 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085912154 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084899429 seconds)
  done (took 1.313491253 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067258715 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125643724 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06862615 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066904646 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066609147 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066127374 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065942796 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06618604 seconds)
  done (took 1.668658661 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075675675 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071215664 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067304284 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06801614 seconds)
  done (took 1.425297204 seconds)
done (took 5.808473678 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.79167553 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.207729225 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188148994 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.411706344 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134832407 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.16047934 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.626997687 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320925898 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188466741 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080171375 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108457567 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.327715866 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108951476 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.632240644 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074512404 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090394205 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138050901 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.399541081 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067458917 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082196206 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088763683 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127862468 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087908002 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073929213 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145901753 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067814307 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136341335 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.07966073 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066652834 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.212906515 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172964738 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.652831403 seconds)
  done (took 10.239671399 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098769825 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099877345 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070211886 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125691339 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099965036 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070769388 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070738646 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06697508 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086894288 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127697634 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089291088 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101678027 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065909871 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069666089 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084668337 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204170047 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080431001 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082160851 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070760889 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075734676 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10483126 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078078209 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076970274 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07648889 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129529238 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180235678 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099878904 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099601586 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069374829 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080527765 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115260887 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124592592 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068156348 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066753726 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124345188 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09606478 seconds)
  done (took 4.610904261 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.999739907 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.147467594 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090680965 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13410322 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064499601 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109523996 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065218881 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081155522 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.20931421 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.460901316 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.592920395 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110927197 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103530042 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066959005 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070499621 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085881951 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067872312 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.509291898 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.097777045 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107980713 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084849213 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073032635 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071924137 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359283977 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070631802 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066323032 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070629069 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059888286 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130065138 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071227847 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.946494369 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127375226 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066931849 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100445648 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169817573 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091822571 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08761505 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.280040019 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071047761 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066733405 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155573346 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070030782 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064096976 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066901383 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083749599 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103323797 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113024517 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065662398 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068581047 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163864727 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065163808 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080133015 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.640343473 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154507493 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076630431 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064215043 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.254772732 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.089113089 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069928081 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064572388 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179143276 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131907151 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068102064 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066797386 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067798121 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069209124 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374464241 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068526578 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.901833193 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070290217 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079495776 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068864442 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069524899 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073280384 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07272586 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087905564 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066524905 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07515711 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.0660314 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065918544 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066692083 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083806347 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.382533396 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066901364 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068344294 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065636771 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089666368 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096763698 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066986217 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065412341 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100516437 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068140711 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066098219 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107153366 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066454081 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083695685 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069723362 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113111784 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066020147 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063781879 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.168193635 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066215621 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099433886 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070041776 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099646114 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080663793 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06821732 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.425007628 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06552126 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064796023 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068499863 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065619513 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068062591 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066782881 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07930814 seconds)
  done (took 21.214664692 seconds)
done (took 38.206786744 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.243371963 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078291203 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080582172 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076747662 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074138532 seconds)
  done (took 1.786957049 seconds)
done (took 2.999472066 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12559165 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100858803 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064945039 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097188313 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064597234 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102197957 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101135175 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082029293 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101050287 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.0643364 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098062034 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064595374 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0640205 seconds)
  done (took 2.367159943 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086737183 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086393154 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072433134 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086046901 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065182614 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085092331 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083916262 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092278281 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084038192 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07513212 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065944645 seconds)
  done (took 2.091009917 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085464464 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087626103 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071751743 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085320635 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065716851 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084670442 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084031211 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089304677 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084588126 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076343983 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065595946 seconds)
  done (took 2.080584501 seconds)
done (took 7.741119879 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080257605 seconds)
  done (took 1.272431309 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.599195105 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.086460948 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08183949 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111334222 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190417897 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118151618 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272013231 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086967858 seconds)
  done (took 8.930239276 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.105773072 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072512126 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070044243 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072884137 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06929647 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07199709 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069135523 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071864695 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068095629 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069077189 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067956701 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071338697 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071182405 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071089275 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06914347 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071902114 seconds)
  done (took 2.435239246 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09548464 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093202055 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074005631 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074285029 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072356419 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071506351 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073768394 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07345796 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070840899 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071720823 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074291765 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073399425 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071221172 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064419867 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073777041 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074904926 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070819877 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073629398 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073887455 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07495109 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074534471 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063813478 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071102894 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073168598 seconds)
  done (took 3.087304121 seconds)
done (took 16.927914319 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.118527703 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072795948 seconds)
  done (took 1.391247221 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083717818 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086089145 seconds)
  done (took 1.378694807 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08494277 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066533129 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08999462 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077967251 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065858814 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066037817 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087980354 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065942268 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06533957 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065459823 seconds)
  done (took 1.945576536 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071031689 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078484682 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07013681 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081047991 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073595011 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064322695 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071883568 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067167123 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077126908 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062378118 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071106336 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082525794 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071011558 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084227458 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071924081 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068125319 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07101102 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067244309 seconds)
  done (took 2.514244762 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06825965 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06776348 seconds)
  done (took 1.348851163 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069652461 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064683945 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066510639 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066401243 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062884935 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062310139 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063431243 seconds)
  done (took 1.662737911 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.387641249 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113262068 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.320764458 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072890517 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083374977 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.258080916 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066285565 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071352376 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070744646 seconds)
  done (took 2.696279801 seconds)
done (took 14.154759344 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08245794 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.089198851 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099324586 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.375952259 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091323479 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065581066 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114166213 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187829409 seconds)
done (took 2.331441626 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.2170597 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.636538398 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403699181 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207530422 seconds)
  done (took 2.466828577 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346281924 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.0894075 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060698562 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068969633 seconds)
  done (took 1.795187389 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068717615 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071762759 seconds)
  done (took 1.367161812 seconds)
done (took 7.072478907 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068588983 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068236925 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.086207529 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064055247 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066104622 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063620359 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063410295 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06630101 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066225073 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065824691 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068851999 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066057074 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063497085 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063431596 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064419768 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066259096 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064020351 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064063065 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066088066 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066071507 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063748196 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065981799 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063350317 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063852979 seconds)
  done (took 2.847754061 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085545707 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066812721 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071520876 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071777082 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06948268 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071256302 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070842671 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065673243 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071434749 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068722034 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068892359 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069636535 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068050207 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069344025 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068010842 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069439821 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071184118 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065979592 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068676885 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069670057 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070929121 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066181813 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069734832 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071177694 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069437191 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071141745 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068109783 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066313808 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071262047 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068867141 seconds)
  done (took 3.330146978 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072217358 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064029485 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063701735 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071685191 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063791863 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063935186 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062987207 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063868556 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064375404 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063359565 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065012168 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063667206 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064051143 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064631019 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064296564 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06737988 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079204812 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064126383 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063971354 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064062189 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067018748 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06361026 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063938517 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063570051 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063547518 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064141578 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064127916 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063315978 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064336113 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063437305 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067073264 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067041743 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.0638321 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070697277 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067306694 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063514848 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067767277 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062997754 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064146117 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062760162 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063408685 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06358214 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063702835 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071027179 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064118171 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064811209 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063678812 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064254013 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064281862 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066148641 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063167312 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063861773 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065516871 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064978535 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067817579 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063130427 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064693175 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063292482 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064319513 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063059369 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062962778 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063015812 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066147918 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06437713 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078876568 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070105678 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063840003 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064729423 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064975877 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065748102 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064885577 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077372339 seconds)
  done (took 5.949467593 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092368462 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.19863443 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065458024 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06494803 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061183412 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063839422 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069617122 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063506134 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065005511 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081913624 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064147725 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065179768 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064945503 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067079906 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06451641 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064895706 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072343395 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061733006 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064226515 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067411067 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064390567 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069634855 seconds)
  done (took 2.864765726 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157467181 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070511452 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105578823 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075201789 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069760547 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074977806 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069347909 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069642156 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06977267 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066781839 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067350367 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069312805 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069721158 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067133539 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067062479 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067382202 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069145175 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066859023 seconds)
  done (took 2.614131669 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079114097 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066198657 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087500912 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066063435 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065980769 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06822434 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070474404 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074153634 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068284914 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065825311 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073534864 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067808718 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068196279 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065449346 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068236781 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065723769 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068082668 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065844267 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073629643 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069421453 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069439876 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073458235 seconds)
  done (took 2.782529513 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081956967 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067839149 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081475988 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067964514 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06144928 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063721868 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06983524 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065259228 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069558046 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067795888 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065372968 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063855663 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068562032 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065581285 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068346028 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065336656 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067574585 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065135214 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067675289 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061759352 seconds)
  done (took 2.599357243 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087348278 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068205332 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067506134 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075407493 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067519544 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068048408 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074927039 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067318256 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067324629 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088111699 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067056599 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06775677 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075248872 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072884873 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067708555 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075242106 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074610174 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074653681 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067351954 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067230424 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087701876 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067342598 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075255899 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067134022 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066942444 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067680121 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067154811 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072627808 seconds)
  done (took 3.258051651 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069174955 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067109276 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064524331 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064047618 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063191482 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063142818 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063141966 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063283841 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065482593 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064167442 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066210916 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065961579 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065763828 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066003217 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065852713 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06574327 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065967493 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063102494 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063553696 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063291855 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066326966 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065764416 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065829088 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063279769 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062994266 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06609005 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063830841 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063364607 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066231883 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063813877 seconds)
  done (took 3.194823575 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077796418 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073382323 seconds)
  done (took 1.400815671 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064975081 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080392462 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062852934 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069770698 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06934638 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06677955 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073232848 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069048426 seconds)
  done (took 1.800855478 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084147187 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077292642 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067243759 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079396004 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077004405 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083521269 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134568325 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067251388 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073235366 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063962807 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079771206 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065372592 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07225011 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067059009 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07175323 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072214512 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063608015 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072052714 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068372223 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065058494 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067423361 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074978324 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068572707 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061586551 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067098465 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088830958 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077237322 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065426488 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06906292 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073765835 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071714927 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059809599 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066217681 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066407491 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063734397 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075773429 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080734536 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068791749 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074565639 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066830257 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075652764 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060625654 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070222569 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072792438 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076512174 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066555457 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06630256 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060722169 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063535376 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068268277 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060979519 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068813546 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060225911 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072466812 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069803939 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076594252 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065139477 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067711728 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068451705 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069361882 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072486154 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067975668 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069009413 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065769797 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075564906 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070344402 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074378254 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061075111 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059997028 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063497576 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076181873 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0891336 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071949397 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066555149 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066892959 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063599764 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069024315 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066409953 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071337287 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072767436 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065687652 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071570413 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07328979 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066397008 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068662152 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074264908 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064355899 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068775706 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064892516 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082869439 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065474238 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064648912 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064357904 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076992004 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069526497 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065892182 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064379192 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073190805 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059825111 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066703118 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067252981 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066987366 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076403611 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070434046 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070351237 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072968564 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072084713 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0653621 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068027602 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06187988 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065438226 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064020568 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071492525 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05871162 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067840359 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066066715 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065075467 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073464384 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063214763 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064157475 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072420664 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070511305 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063297988 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.188035583 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071552154 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066648963 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06982413 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074645102 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064916194 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061698131 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06111989 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070200142 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065421147 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069718994 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071250043 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069637444 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060608233 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064227625 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071471598 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075443103 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066969028 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067643015 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073096455 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068933088 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066225888 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073914381 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068473682 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065393275 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071500634 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067143553 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061537921 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068881791 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068985481 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065227332 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.0699564 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070065797 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068666477 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067610264 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065453792 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072335982 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06751042 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06602564 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06709473 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064822282 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076787879 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06891775 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061538748 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062819018 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074755879 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064091356 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065718583 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065005986 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069219226 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067391128 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064146937 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065342409 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068513455 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07545394 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069665805 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068143533 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071796984 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077984995 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066366117 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067963198 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06567126 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066967008 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066955081 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075100786 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072671781 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070734017 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068797925 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063544328 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071578028 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074079541 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065529762 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064067155 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065614902 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07026697 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071960991 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070334666 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066735516 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064696278 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066753198 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068713614 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068868376 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065845354 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065248764 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071912639 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064016253 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072374982 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066882861 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07607607 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068972233 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060977163 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068640863 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064720656 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071871152 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061164728 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063583398 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06562529 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066844656 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065120573 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068593546 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059977599 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073501625 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073430655 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066261575 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065515192 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065470951 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073298073 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.0677126 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069325631 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069225665 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07177747 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075778954 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064013224 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068214364 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074776067 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064488396 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058584752 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070047529 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063356666 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063590964 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064075024 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063149235 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067752908 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072416833 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071226198 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058976594 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067862897 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063408486 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.195357324 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063141486 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071684031 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069601883 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068067136 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073850819 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06672152 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066866434 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069855049 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06641833 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066713651 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.0675536 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069731636 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067503831 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068276761 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066398392 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069305955 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065776694 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064347068 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068199105 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066891824 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066507601 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071740727 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065628945 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066268457 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068325313 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06625344 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067620784 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066110834 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066448496 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069757005 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066965796 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066792662 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069559256 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061086496 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073708845 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065788362 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07424785 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066889154 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062999233 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07255108 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068960861 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071855516 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066541196 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067662534 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068108941 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066056257 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069777105 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073605572 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064529578 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077281899 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074166947 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067352587 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068971924 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067226971 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068655772 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06513437 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067200001 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06754576 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066720694 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065539171 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071451201 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069273942 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066915532 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068016593 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067619517 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066366099 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067893964 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060554114 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065785439 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065276658 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066052084 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076236224 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067401728 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066970787 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065350468 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067578531 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065903943 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063098187 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073827125 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074631467 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066746736 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073113086 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06580171 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068491234 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076772203 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060713234 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064415031 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064305023 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064331177 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07363026 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066872688 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075597844 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066379754 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065789949 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063281952 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067180431 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065165594 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060927236 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064083384 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069964013 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065686318 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065389305 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066603145 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069118654 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067459582 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075787615 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06581977 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067134116 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066638186 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063579593 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065526538 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065452594 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069414436 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066317368 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063232341 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06263051 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064403891 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066273352 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066217765 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067110084 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066620403 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071505986 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064584433 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067974988 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06728487 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059677943 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067667429 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064867394 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065007857 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064436666 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.200703903 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071681394 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067271217 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076261453 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066732375 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067754235 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066962288 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064618976 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066205725 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06635855 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066387623 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065524066 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067891378 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075418261 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064736233 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069653872 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066600476 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066976599 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073384346 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067133851 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069652644 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073780129 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067134589 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06828639 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074404545 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071245405 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070648477 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068363973 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068407989 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07223861 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065719893 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072772825 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067100136 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067023098 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068524467 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064196069 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06632004 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066231993 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06588024 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073429846 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067836691 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06589996 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065808294 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064192304 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067839078 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069081502 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07464573 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069074526 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070328871 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062105952 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063065357 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067093241 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065036721 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068136338 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068522774 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072000179 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068733628 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067093578 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065736717 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075730664 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07221846 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069719422 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064664545 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069556481 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067358373 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068484584 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067690796 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067126139 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06776913 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070304984 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068471092 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065505654 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073043931 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069502394 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067886544 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067477325 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067301596 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066889038 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061409564 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066333719 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068272418 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071125623 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068780983 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066479368 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077107435 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.0647839 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066836555 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069838688 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065461392 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070643135 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060997458 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067926404 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066998516 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066906565 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061235774 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065454501 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06364248 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068589263 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065319935 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06085261 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0763622 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075502112 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069613334 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065393113 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064865187 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061237191 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061103755 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065502089 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067211041 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067969954 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076224427 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065777648 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065331356 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061113125 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066175576 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068421269 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068803237 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062821118 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060340924 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064414695 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067805723 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070070394 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063639887 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064357364 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068343507 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067320195 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062410582 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067673287 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.0617322 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068902447 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076838105 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065092655 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065504903 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.070271817 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072240642 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064694277 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059558723 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065086154 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067710015 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065772775 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.065610575 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065919165 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079084595 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068336132 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064327471 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063692668 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067709698 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064628533 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072986158 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065506433 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065723224 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069580985 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067065303 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072003986 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067857496 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072073802 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.067689856 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068220087 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064362612 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065487247 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06430596 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063804541 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065753229 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06498466 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068564097 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071577889 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064387407 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075113901 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.073523474 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066661646 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061848111 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064011276 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064556622 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059943844 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065065305 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062024949 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062734472 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.0627188 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063462811 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064821931 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069172865 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06549952 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06448558 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063980849 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058462942 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.066923943 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06669358 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06524179 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061151543 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064287681 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06430411 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.06748708 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067415804 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061954463 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.065568593 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066035713 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065007869 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.05913152 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.070591843 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063204268 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066870668 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063459219 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064575068 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065065299 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.067504408 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067429568 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065002078 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06633886 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068427757 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066217155 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061794862 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061228493 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070295565 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062740766 seconds)
  done (took 42.137161117 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109363527 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065893919 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064152504 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0643778 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075174755 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064996007 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06381142 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065299435 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064932305 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066478598 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06351741 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063294841 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071865981 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078783334 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074802035 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068328037 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063085426 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064170872 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06337741 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064132342 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071552639 seconds)
  done (took 2.916340114 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076869584 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078855679 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077375605 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084085166 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072483067 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071446279 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076361951 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071549365 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079489572 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073993187 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079884563 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072078607 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073038304 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073224016 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073372599 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07123432 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079105929 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072177751 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071095149 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076007889 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070705406 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075488312 seconds)
  done (took 2.998438374 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069497776 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06705337 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068334396 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062354861 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065999974 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062381436 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069631687 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064133162 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069524837 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065544997 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065096575 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065509313 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068156191 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061490316 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066542832 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064390014 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109189903 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069808889 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066461655 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067453135 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061864776 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068371321 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061819682 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062722921 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066107141 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06963747 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067536176 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064586486 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066156023 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065181682 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066814936 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064414991 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067862788 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067241931 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065593449 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065631893 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066060264 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066278074 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061691178 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064304931 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067552232 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062121631 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066626037 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068853414 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064285508 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063923911 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068783794 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066306426 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062027446 seconds)
  done (took 4.62069069 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080159508 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110372266 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068141303 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093346814 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080558126 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072941842 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06990607 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091944133 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063934852 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064274998 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082164971 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07897666 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06614633 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07004555 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07250526 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065642 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066760061 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.0652046 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069576368 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065683089 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069346005 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073045103 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080491278 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078193477 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069471259 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064741298 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06523444 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.0701789 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077501598 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069906458 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070773693 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07135218 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080625019 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06761576 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064971409 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06785785 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081989996 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065697285 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068240983 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063520157 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068453814 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07012912 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072685623 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082027218 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065840305 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071128148 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065680827 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062821088 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077549538 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068002073 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073206813 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078941419 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069859737 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065531089 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070184034 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080175032 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064851316 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064095744 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068520682 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077779087 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062924135 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068941484 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079305057 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067930745 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072792518 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079070673 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071245912 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.0698487 seconds)
  done (took 6.403156956 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078481222 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095417986 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084138229 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083538082 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075580758 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075930214 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075858533 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076359172 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075526744 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080202218 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076114103 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115680467 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071418287 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078162759 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075502246 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076043842 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07551421 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076196529 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076278898 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075513165 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075816298 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083456971 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076500434 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082791194 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079426106 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071118304 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075863932 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075981298 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082615343 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075431987 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088408558 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075205516 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076159386 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082674211 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079261864 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075063584 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065612655 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07504864 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075240496 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07549396 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070919157 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082842133 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075103136 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070930119 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075765267 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075466854 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082744896 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080019197 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077764365 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079945757 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076082779 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082647261 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075496395 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075722965 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083091588 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085560298 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082912224 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083251747 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076028248 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082564282 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082762479 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08547118 seconds)
  done (took 6.261475219 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085312967 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075551717 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08303808 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061660825 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064148143 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071706754 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06406053 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064230368 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074040848 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07415966 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076650324 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071565422 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074605346 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07608082 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071544204 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074950187 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071895542 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072030957 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074478709 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071940839 seconds)
  done (took 2.828427202 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078180396 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08353026 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066944359 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072056611 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06919587 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071397014 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068603757 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068971748 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067031251 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069263073 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076182835 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075994586 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067132515 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071732784 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075855162 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071370293 seconds)
  done (took 2.521438461 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086273253 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072949109 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079895853 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066422332 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066901956 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06265729 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066301163 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061598181 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062669677 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077891963 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065779902 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076304124 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06580677 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065393989 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062998812 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071286553 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062158683 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063221404 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065782512 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078428445 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069755176 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064435677 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069108571 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065648853 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068132889 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070595643 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064898049 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065666262 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062902204 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066143271 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068529082 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069039958 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062251341 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063275596 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064320927 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062873872 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065099354 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066400374 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07088378 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065071278 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063759003 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067781081 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065183905 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066213242 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061664175 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066162811 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061966056 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067821319 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06321787 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067644563 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06503324 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067636922 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065933989 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072161965 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067975659 seconds)
  done (took 5.065534898 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082383441 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070061185 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061932558 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063714294 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069028233 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066753055 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06924829 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066833868 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067481217 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064289122 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067182685 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068858491 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067042696 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069280041 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066891429 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069592478 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061392532 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066546582 seconds)
  done (took 2.598847716 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073484868 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067220175 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072960086 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065934812 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065963495 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06803027 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061941413 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064111791 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064301198 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065714528 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065431389 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068209943 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064292034 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067858849 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065620974 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065358396 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067874676 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063790849 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06525446 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061451667 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067911297 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064340204 seconds)
  done (took 2.830899348 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097283175 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083533652 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141253171 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079009837 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084718939 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07202116 seconds)
  done (took 1.9332249 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092969449 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100117761 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066418234 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0695302 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075724114 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069465779 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070055952 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069577844 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077966734 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075562917 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07015806 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078091114 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077599289 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077201343 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074996223 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075621904 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069870002 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069867707 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065782866 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083155596 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069917287 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078142042 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069987942 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069437313 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069696765 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077026502 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077804654 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075342028 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070029882 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077939596 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075413504 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069924974 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078363476 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07524473 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068887009 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077710211 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069717289 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083220723 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075327852 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077463609 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068766405 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075707184 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077589519 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074058645 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078020719 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069999546 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074305513 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069334255 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069858833 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085093403 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075135455 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077763095 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077507915 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078516267 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077964566 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085041285 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075569227 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077283722 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075759481 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07633793 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077383337 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075992388 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077550433 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075982689 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075755327 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077403746 seconds)
  done (took 6.353118231 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105698214 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066991309 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06991223 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076225309 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077482903 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069887691 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070233351 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070061451 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070193848 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066856433 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107935578 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070928547 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077523736 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077573797 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070530101 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069936591 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069956816 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077118489 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066881588 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085902482 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069960902 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07754433 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077172314 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077413863 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07569672 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075520224 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069844688 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070071601 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070156506 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070164685 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073931235 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070340154 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076945274 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06658838 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076844195 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069572741 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06954668 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074436874 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070170941 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075215018 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07695722 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083356319 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06942338 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069566966 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075548623 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069441161 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069314893 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066491431 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069890157 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066306229 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075767942 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075553164 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075595358 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077044528 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069849292 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070036906 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070021259 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070205913 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069632228 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074868374 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077436687 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0697535 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085234613 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06946537 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069717342 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077063161 seconds)
  done (took 6.261925881 seconds)
done (took 129.596144052 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.189821022 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165405533 seconds)
  done (took 1.725209946 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071839271 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100143004 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076874448 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128523172 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066428481 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100207628 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099050863 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077694777 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065663923 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065839434 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065834105 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06907811 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131222098 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066115038 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066637488 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068401302 seconds)
  done (took 2.704355132 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100413277 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.16180527 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102336732 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064606339 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098928062 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072915818 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064633022 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075020151 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070621393 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065165886 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072457279 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070420392 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06481704 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070311344 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070464977 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072433299 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065200548 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072764282 seconds)
  done (took 2.824449124 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101831189 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092147372 seconds)
  done (took 1.584264742 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163203391 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136084438 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20490322 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.349798055 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162873856 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148830019 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146193673 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144944303 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.1210286 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139033485 seconds)
  done (took 3.102238204 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102337306 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153717556 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267078728 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117437929 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072387137 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093250126 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118441645 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07820173 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079964768 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079560164 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080349446 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076405092 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098802725 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072823863 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073662112 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075927674 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102791439 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072900116 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074299474 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075213582 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100192263 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065604446 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073233591 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072660412 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076759651 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077055822 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065868715 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065377809 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075881321 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074396424 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076114644 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092630265 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076924375 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105678198 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07072571 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106212603 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07654277 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07303498 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074003007 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07249865 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077481501 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077533694 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072700523 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075856002 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065400185 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076126364 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06554118 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06522676 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077092896 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067068691 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076909392 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076397612 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105687034 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066818556 seconds)
  done (took 5.995297623 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104681004 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105707023 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071728524 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112221063 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102118278 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071936333 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103236495 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095402895 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103922439 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070420368 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068664725 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070170866 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082561999 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08342995 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114454839 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106403583 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073826106 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071521238 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105776348 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104840781 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068115753 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096985952 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091721429 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103457357 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067868713 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070531825 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067668692 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070275786 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077006497 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078444247 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06961682 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08015999 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084656765 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07754619 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067381081 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067646801 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068297507 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07907328 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080316763 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079010257 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077613924 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067543799 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068596071 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069504895 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06992912 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067378765 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078720253 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081478004 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078304749 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069667846 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070506583 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067707848 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069447391 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079898184 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077201411 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080491563 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079413723 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068595875 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068319997 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072593737 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080298577 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078881561 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078669972 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069209621 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078880164 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068299045 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080429406 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084076186 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068657764 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069694521 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068008343 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069358556 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069221259 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077174833 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077362921 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070100146 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070010124 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068983157 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080009497 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077058813 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067881195 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076427259 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066927609 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067882979 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069272581 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069428628 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07686411 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079737052 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069776804 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068326881 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069459943 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068600005 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067074347 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076868662 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079823689 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079263015 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078532196 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069671395 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078773153 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077864759 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069634779 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078383995 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068376134 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070016976 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069258508 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077393251 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075740397 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077206854 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067801278 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066667622 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.208808916 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081127094 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069624773 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079153947 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081361302 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07997972 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068239626 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081482555 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068698647 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07929484 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069705041 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079612983 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069054356 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079316141 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068374859 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068652843 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068992452 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080041084 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072861228 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068496019 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070028339 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069312301 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079110923 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082485383 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070925521 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079336578 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078416946 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07133469 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079012292 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068381276 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079563203 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070259882 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069295865 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067246203 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082903707 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06921114 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068690559 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069713862 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080661805 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069355581 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079880503 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077940655 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06845406 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081653199 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081002066 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077424088 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080790573 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070568506 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068586566 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068874876 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069369394 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078303208 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079208604 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070919712 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069622937 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077675867 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079687983 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067400945 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078923198 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077812538 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078705278 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068714919 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070027923 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080610437 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080388057 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07817265 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078433891 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078717407 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068717601 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076936086 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078576792 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068220432 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084848163 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068520649 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083070241 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078606255 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076933124 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078935993 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080178526 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079378434 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079889365 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082801217 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068457836 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067873096 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.085345264 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068403548 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069120729 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077849457 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069760719 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069451575 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082902179 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069421595 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079907349 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068338154 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079391674 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06752916 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070097869 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083888958 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068568487 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069836058 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079734004 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069926382 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077361808 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079727861 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077706709 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067676616 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069823261 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078856279 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077186131 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067115838 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067149486 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069516705 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.211473465 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078959496 seconds)
  done (took 18.697508319 seconds)
done (took 38.029532341 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213316253 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155855173 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.173358502 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118775258 seconds)
  done (took 2.152063387 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.1193908 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101163494 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092549358 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064773537 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099124458 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064669539 seconds)
  done (took 1.966297716 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312667595 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210277689 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188164922 seconds)
  done (took 2.133774946 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203511138 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191080505 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.418154291 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.262062821 seconds)
  done (took 2.613760314 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145359546 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088770198 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067296009 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084167359 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133060246 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160065766 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100264746 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12602942 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078887752 seconds)
  done (took 2.465825427 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149864212 seconds)
done (took 12.904012478 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.101754373 seconds)
    (2/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104857925 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.126520593 seconds)
    (4/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.230099798 seconds)
    (5/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.22964733 seconds)
    (6/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.225484499 seconds)
    (7/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.198651218 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072594452 seconds)
    (9/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.108991545 seconds)
    (10/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.089434323 seconds)
    (11/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.229453632 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078744233 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120689406 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073995443 seconds)
    (15/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.143666808 seconds)
    (16/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077818171 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090242399 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072473739 seconds)
    (19/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.081487328 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.113746905 seconds)
    (21/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171911205 seconds)
    (22/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.202664481 seconds)
    (23/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.224224142 seconds)
    (24/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092986656 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089713274 seconds)
    (26/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051872713 seconds)
    (27/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.182200613 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127238023 seconds)
    (29/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052717548 seconds)
    (30/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.208579997 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124369462 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089338829 seconds)
    (33/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07865021 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089457469 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065235355 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.178265882 seconds)
    (37/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072856309 seconds)
    (38/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067265323 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071231315 seconds)
    (40/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.193030797 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.198033832 seconds)
    (42/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074459337 seconds)
    (43/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100434034 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079793247 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065277268 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063377139 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.162619803 seconds)
    (48/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.199553704 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090719673 seconds)
    (50/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051757579 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064874648 seconds)
    (52/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.074180375 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172222435 seconds)
    (54/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154724508 seconds)
    (55/309) benchmarking ("sort", BigInt, false)...
    done (took 0.186122427 seconds)
    (56/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051586188 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.0729739 seconds)
    (58/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099561294 seconds)
    (59/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072603317 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072658208 seconds)
    (61/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071399124 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.141954733 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.0933335 seconds)
    (64/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.193537429 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096556783 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088322214 seconds)
    (67/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073307744 seconds)
    (68/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05291369 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067341395 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072094619 seconds)
    (71/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.151894355 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.192639313 seconds)
    (73/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.154527789 seconds)
    (74/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.160852828 seconds)
    (75/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086823527 seconds)
    (76/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.179844655 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050221694 seconds)
    (78/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079306156 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08699732 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064887517 seconds)
    (81/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050332395 seconds)
    (82/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078057268 seconds)
    (83/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.061675888 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.141603259 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073992704 seconds)
    (86/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.111375554 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087918586 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090072725 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064785832 seconds)
    (90/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.194385923 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.067391363 seconds)
    (92/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.110135128 seconds)
    (93/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.156018892 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.206806682 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095135533 seconds)
    (96/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.153467436 seconds)
    (97/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052790784 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065210607 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089269416 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065080188 seconds)
    (101/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.144845163 seconds)
    (102/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070089962 seconds)
    (103/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.162829527 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065338804 seconds)
    (105/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069883335 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073819163 seconds)
    (107/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083393382 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.102258055 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.184271438 seconds)
    (110/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050924963 seconds)
    (111/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063855849 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.1401222 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051748393 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050933026 seconds)
    (115/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177624248 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.180967641 seconds)
    (117/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051046142 seconds)
    (118/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082733516 seconds)
    (119/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051309067 seconds)
    (120/309) benchmarking ("sort", Float32, false)...
    done (took 0.132425956 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097184806 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.093343925 seconds)
    (123/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075242021 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.146643585 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074242996 seconds)
    (126/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.204715878 seconds)
    (127/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069569743 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07307172 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066383924 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183355251 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070926144 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071921863 seconds)
    (133/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050600109 seconds)
    (134/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072878248 seconds)
    (135/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052797791 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093597591 seconds)
    (137/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061148717 seconds)
    (138/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054348828 seconds)
    (139/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149984526 seconds)
    (140/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.104926472 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094299783 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065504974 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07199073 seconds)
    (144/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099264737 seconds)
    (145/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.062426594 seconds)
    (146/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.155049361 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071948003 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065150113 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072188949 seconds)
    (150/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079323854 seconds)
    (151/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073062943 seconds)
    (152/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076433181 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087788002 seconds)
    (154/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072913616 seconds)
    (155/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.180191589 seconds)
    (156/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073138709 seconds)
    (157/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091254193 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094357975 seconds)
    (159/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069887934 seconds)
    (160/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075561432 seconds)
    (161/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071718078 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124606822 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07312182 seconds)
    (164/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.107634835 seconds)
    (165/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.0533916 seconds)
    (166/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066288164 seconds)
    (167/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075614359 seconds)
    (168/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075906434 seconds)
    (169/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050662909 seconds)
    (170/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050718482 seconds)
    (171/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087006996 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09066535 seconds)
    (173/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.194936025 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092571995 seconds)
    (175/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064884169 seconds)
    (176/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100380763 seconds)
    (177/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051750855 seconds)
    (178/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075997256 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072312114 seconds)
    (180/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.07628559 seconds)
    (181/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.153873322 seconds)
    (182/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05073021 seconds)
    (183/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051611444 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074105387 seconds)
    (185/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052046903 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050701546 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101805198 seconds)
    (188/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050902177 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051158201 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063876354 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089127366 seconds)
    (192/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.153855754 seconds)
    (193/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075063797 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066067848 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066545053 seconds)
    (196/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087728974 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064659423 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064397875 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096006358 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065021623 seconds)
    (201/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05043776 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086845123 seconds)
    (203/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065627561 seconds)
    (204/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108667149 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074265078 seconds)
    (206/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071992069 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066859553 seconds)
    (208/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.267939012 seconds)
    (209/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08405916 seconds)
    (210/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074146505 seconds)
    (211/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07770708 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052312459 seconds)
    (213/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051767311 seconds)
    (214/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071661768 seconds)
    (215/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067458029 seconds)
    (216/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068906109 seconds)
    (217/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06495347 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065948416 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.070449603 seconds)
    (220/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.162560917 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088548034 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066252621 seconds)
    (223/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076536112 seconds)
    (224/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05155574 seconds)
    (225/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088537629 seconds)
    (226/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06325927 seconds)
    (227/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075040184 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051366471 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140453229 seconds)
    (230/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071686173 seconds)
    (231/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066424153 seconds)
    (232/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.05190095 seconds)
    (233/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072616722 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075791693 seconds)
    (235/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050778066 seconds)
    (236/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052412921 seconds)
    (237/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072515199 seconds)
    (238/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051776871 seconds)
    (239/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069167118 seconds)
    (240/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051112164 seconds)
    (241/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052342783 seconds)
    (242/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052738789 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143468196 seconds)
    (244/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07382212 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175830556 seconds)
    (246/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065332258 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145643137 seconds)
    (248/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068122482 seconds)
    (249/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067519289 seconds)
    (250/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072441491 seconds)
    (251/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066817975 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066029114 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051647499 seconds)
    (254/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12024519 seconds)
    (255/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052106325 seconds)
    (256/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.291061609 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146608786 seconds)
    (258/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065981889 seconds)
    (259/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052075459 seconds)
    (260/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061030883 seconds)
    (261/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069484159 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072671389 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072506252 seconds)
    (264/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050911585 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.123720571 seconds)
    (266/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072676807 seconds)
    (267/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06812204 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140097802 seconds)
    (269/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052886961 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138537202 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072856641 seconds)
    (272/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064718516 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07299783 seconds)
    (274/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066744014 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11158516 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064856737 seconds)
    (277/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060784808 seconds)
    (278/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.0503734 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144885244 seconds)
    (280/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064697475 seconds)
    (281/309) benchmarking ("sort", Float64, false)...
    done (took 0.129031493 seconds)
    (282/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050509696 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181786488 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170057241 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072864587 seconds)
    (286/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078886756 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065165671 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063695258 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089996195 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063568926 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072475548 seconds)
    (292/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062007953 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051107279 seconds)
    (294/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073202438 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071306811 seconds)
    (296/309) benchmarking ("sort", Int8, false)...
    done (took 0.140362528 seconds)
    (297/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05095355 seconds)
    (298/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061800576 seconds)
    (299/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051068548 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137000552 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052198797 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050556296 seconds)
    (303/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071298508 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070830234 seconds)
    (305/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067997872 seconds)
    (306/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052201959 seconds)
    (307/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065757685 seconds)
    (308/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066400925 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087501577 seconds)
  done (took 30.920879799 seconds)
done (took 32.358512253 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088049385 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093933795 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074315239 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092549735 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079917443 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075793542 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071992181 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078173942 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080063761 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080996898 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077426007 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053796132 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074275619 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074231703 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074107956 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090699027 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.0780757 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072613405 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072700628 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064071793 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072431625 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06561336 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066417363 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054193287 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078115089 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071695326 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071777888 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073730999 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065085829 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065540121 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068619041 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073534964 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065330456 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078161971 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072059921 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073183764 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07469054 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076700946 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066896382 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06567101 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074425846 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064994147 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072803433 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074203051 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072173976 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071368432 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072675057 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077823527 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091246661 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067658684 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07463015 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075968132 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075836775 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072965416 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069965559 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07309679 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070685044 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090794611 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072905877 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067055632 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07436874 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074019939 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071061802 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072474468 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072980192 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075015522 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075252361 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070970812 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074332516 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071371596 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065576207 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072740021 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068596334 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065191298 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075597319 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07738495 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063768771 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071074411 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07222759 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070747031 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.0644437 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066646866 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066856791 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07148612 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066737279 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053736064 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069386455 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071995809 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064347868 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073061834 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071362192 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072399028 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066480801 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075396283 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064288155 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070082316 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065012768 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065146754 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066755777 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06904723 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064476249 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066689324 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074395539 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.0667085 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071369051 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078350692 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064628014 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071858253 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064049849 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.0639177 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079013383 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074447917 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064993283 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066936333 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064266776 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072957413 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063965327 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064760305 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064882473 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065240689 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07129787 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064957129 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067085344 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071901978 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077590816 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064651531 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068074266 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06687232 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064960186 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070541125 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064569587 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064808599 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066237282 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061362042 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066191094 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065035667 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072075653 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065939649 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071375287 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065262213 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071914439 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069147176 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.20740305 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07197534 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063720752 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059408302 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067610213 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067740882 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067629501 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065731817 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067355662 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065483622 seconds)
done (took 12.432454298 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069345155 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140854558 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097270387 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095176839 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085904615 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066360618 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.0753518 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100564349 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067450005 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101213948 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087361325 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085341503 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114303431 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064381834 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065663517 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069530306 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067269343 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081566469 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10153599 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086401753 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114935735 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065121642 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092074382 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089296798 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088142076 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094275371 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068944641 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069897819 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069347129 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102207753 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087962504 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070117327 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066518322 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098045402 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.0934177 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083773829 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066338519 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082956309 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065894553 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065396629 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067297601 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098843759 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080488796 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081287988 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070411046 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069316833 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066331327 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083599873 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089828587 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078809359 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085764882 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100770333 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068538195 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064897402 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063598455 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08579197 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064695673 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068765371 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065828875 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068753516 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065907147 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069198618 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080745518 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080413227 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070604549 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079716009 seconds)
  done (took 6.815980776 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086459497 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092035906 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082457287 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083698685 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065433756 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066051508 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066191107 seconds)
  done (took 2.066961181 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069567866 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089972475 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088244643 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088825896 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080710043 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087823644 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075131849 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065968872 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087494441 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067220388 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087589959 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100001989 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069476643 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073562818 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089951935 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066239204 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090156466 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066038341 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069469404 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089944771 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068697811 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09484252 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069528879 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066181277 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080355553 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066157738 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112826019 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070971025 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067491842 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068686786 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064195261 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106373902 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079500007 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074027783 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0665731 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080320964 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080833492 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06447025 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08238769 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075044152 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080228387 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066895283 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067496634 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064339673 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070549143 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076839361 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067124872 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06739082 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068482883 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085918786 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067205198 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079989124 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069174416 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071915229 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067505743 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073063079 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077152642 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067343314 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086809386 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067637476 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083195143 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082818401 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080604147 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082878206 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068347787 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079830345 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080412582 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068881315 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068293284 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069711361 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082407053 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064904167 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067687257 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077167309 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068188198 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089299659 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089264232 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067953884 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080002855 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066777687 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066201981 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066229093 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089363813 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071277692 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066213666 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070814535 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069461276 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064691841 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065318039 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069739514 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064263292 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067997806 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069127045 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069161388 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069078565 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082949567 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06902916 seconds)
  done (took 8.808479724 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070848524 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069226643 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069746418 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067119163 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066772684 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067811056 seconds)
  done (took 1.956147586 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095672528 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068564721 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08052672 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071849615 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104188181 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086091908 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086326543 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077264328 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083699321 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078107453 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086198015 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088187267 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09209926 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072377122 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08566852 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071239634 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086309999 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074488392 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077847735 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072645216 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08584625 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071734046 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072245117 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081927348 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075458087 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071138472 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067203208 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078420494 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077998536 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077896115 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071953302 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075426869 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070226162 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07769732 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086499239 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070460318 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071833255 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077111561 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072101074 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075589687 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087871557 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072490507 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073576005 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077017312 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078297688 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07037504 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077120886 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074970625 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086153431 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077177595 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076421745 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070883984 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075488794 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076671451 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069808437 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07704698 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076804763 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08605349 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071437316 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070190061 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068268349 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075150178 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076884338 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075390777 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07781484 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076598617 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070074012 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072229454 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072619149 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071153028 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076921979 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068805882 seconds)
  done (took 7.077652893 seconds)
done (took 28.235293643 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.533271243 seconds)
  done (took 2.04323159 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.613815859 seconds)
  done (took 2.1466965 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.42279863 seconds)
  done (took 7.954602721 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.399761454 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.522153611 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.718126242 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130852719 seconds)
  done (took 3.334180613 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.706056519 seconds)
  done (took 2.249596366 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.216969409 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201584843 seconds)
  done (took 1.969117355 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378027421 seconds)
  done (took 1.91284143 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.136696617 seconds)
  done (took 2.670975142 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260378347 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174322306 seconds)
  done (took 1.975745996 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.486987981 seconds)
  done (took 2.026867699 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.888881198 seconds)
  done (took 6.432473107 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21296022 seconds)
  done (took 1.794517806 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235857826 seconds)
  done (took 1.775853985 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.719130717 seconds)
  done (took 3.259056814 seconds)
done (took 43.087022591 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082910638 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081671897 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080857479 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078393517 seconds)
  done (took 1.85015432 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079105992 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073406505 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076319308 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072160479 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076809877 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072528173 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073423218 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075164668 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072299434 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072493207 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072009648 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072750269 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074753445 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073910785 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070871525 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074848543 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076275939 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072349168 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075296829 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072147838 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070066995 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.0750303 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074772447 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07129104 seconds)
  done (took 3.313298742 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080547657 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074610594 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074789967 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071659742 seconds)
  done (took 1.852158732 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080520007 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095979898 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089241365 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077456218 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092087647 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086282927 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06863316 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068766232 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07011835 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077716159 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067484627 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095511394 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087846333 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076753506 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079115757 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065568797 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067532588 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086944251 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077802518 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078213784 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069697011 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077330791 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067842324 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087583387 seconds)
  done (took 3.437568955 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088802239 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10629235 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080462817 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088442791 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09018887 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065002031 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.0872925 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090290921 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126264627 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065621149 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069891833 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065157882 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072267653 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064675519 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080758885 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106383465 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110691116 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068392143 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096114116 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065408868 seconds)
  done (took 3.245610933 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075432384 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070455198 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065875668 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069040149 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076240077 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072532806 seconds)
  done (took 1.986809862 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.0712319 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068949258 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067826177 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066285037 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071551535 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066780326 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06536893 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067082091 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066863065 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066613052 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066013596 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065589053 seconds)
  done (took 2.362467638 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.204293696 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067773499 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067963803 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06639521 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07013305 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065997462 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080672441 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067616483 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091586534 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066019501 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066389809 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067743977 seconds)
  done (took 2.53738797 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20908147 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075673239 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238335545 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149471396 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109878921 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114675729 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111054694 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113759506 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140681911 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100057097 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167613728 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165426596 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106854918 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136468656 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088088048 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100091268 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15344372 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161609973 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104510158 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165697429 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144417791 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125618666 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147085235 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105901781 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105135543 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12102041 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07088321 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079454495 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168427582 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132028906 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143195606 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110269429 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092020304 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176124821 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170516001 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140635355 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145983145 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084062287 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104048123 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134499442 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199970709 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088144735 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159627646 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107469853 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0792969 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130187844 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116428797 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117669623 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101623225 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087572832 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140175342 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175290457 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131584671 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084681792 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11993826 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109253552 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109667854 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10950368 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174844102 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155755913 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123152405 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069179655 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10465785 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147982529 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129467391 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104597138 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120069257 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088857458 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130261262 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150967745 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116835551 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139438226 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.113222114 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086205242 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112909581 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132875064 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118658643 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149514754 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1161975 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.069817491 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115989119 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095604143 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076309396 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.139513579 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072712381 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16484613 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093889819 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104318837 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119646891 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104478325 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104517415 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147518405 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135219688 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098766691 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064200534 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099216963 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113827599 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.393916046 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088270307 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111071029 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118609749 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078875123 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139162578 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076208149 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125328951 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078087935 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129358814 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130827754 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077208619 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123178774 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104823084 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101942789 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133556198 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162126234 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088347964 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081800584 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171621011 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122175328 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104367701 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145616975 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157610937 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102099214 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100447299 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150267923 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180695139 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089440785 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164305542 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106432222 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083169215 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086908839 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124116775 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112049414 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123689098 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081131848 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118625902 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169760995 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07506703 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095649528 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13281758 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078404734 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080092499 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105040934 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104319763 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094953347 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099733654 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102979713 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13528377 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122342675 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104504098 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122866529 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098051093 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168658037 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08672381 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100574399 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.250575865 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069755002 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135019673 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156818461 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079488896 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163647093 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122485082 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11720355 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119320047 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083001086 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140960843 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079414377 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069651448 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143552505 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110217404 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108994409 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149858783 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116505548 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125860794 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117962428 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132949951 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13141995 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129937411 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105236507 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08830442 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111760695 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126483085 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072749943 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089493688 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.0792645 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104143658 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09559977 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082672227 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140695737 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124074921 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108899359 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111422144 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0960115 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147380617 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075902054 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127551376 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119191028 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095316781 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152423774 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152810967 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131732456 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099140182 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136417911 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.06955558 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073534455 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087966078 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122949659 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082619439 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082498785 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114928477 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146265702 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128091895 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283329685 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122594817 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119544849 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155073547 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069374676 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117283268 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147064179 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119980638 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103652707 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089414043 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098131636 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142135542 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10678737 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181798654 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116438734 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122958214 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153003205 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100729466 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079058789 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103018819 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135858385 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103783588 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143879286 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099082059 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087360574 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109713562 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074160785 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0984028 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125786562 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118279864 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133978445 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114547513 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131844517 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076626749 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114549144 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120361906 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120827674 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063438024 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119778608 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161317454 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09445337 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119071403 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153750865 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078909925 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134257663 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175311634 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144392994 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08413029 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107748665 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117905052 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127291836 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118881732 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.285823 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107630586 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136435045 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109399184 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085958211 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088137014 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097644051 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103720703 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094296665 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105949453 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112830399 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094563036 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132335005 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103046748 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110189042 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118558718 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098381617 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091017939 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09644747 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177949365 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119081941 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170595502 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098766491 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14519904 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162391088 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075046443 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079555935 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078047827 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139704137 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083366259 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129060093 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106069772 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116711486 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122846129 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142176997 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095109071 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068053197 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108082841 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132362569 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124023484 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097870209 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103246316 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163120899 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101058649 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081379664 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113856187 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115625242 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102575077 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171710586 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061594478 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106266634 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075973871 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080095805 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127946285 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149891477 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079262344 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103089536 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118940077 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110917179 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1271449 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098985738 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107622229 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125330565 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146806834 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126265728 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088374376 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110007884 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126806388 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153669764 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101990735 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093331316 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165419677 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1480233 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.154990294 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084423976 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111257995 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110925161 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105983291 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133856672 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081521524 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157675627 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079950295 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130908829 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100006628 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086143165 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124343403 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.10536173 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085591543 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14275368 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113533315 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080289666 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075237618 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114165288 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115263083 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102443432 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073781348 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133440229 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071793921 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127460753 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154369513 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078667799 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10459579 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093522169 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077629323 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102632115 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098878095 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085044571 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096905673 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166540832 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084466413 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14560351 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128457529 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.368737762 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138410611 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104241095 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641903256 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079773637 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154079766 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118162766 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176918882 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101639888 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118343461 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11053112 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124683964 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145868149 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10411019 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179655536 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130795355 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116435434 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07962207 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102819083 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104287677 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088039515 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107836067 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114942364 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116073814 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092210367 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116074497 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124057271 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081597523 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096441077 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155080964 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11607037 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143110617 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140050001 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084933425 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117924946 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137173115 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079715404 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119747344 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151631782 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105581499 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099573369 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080855845 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099786035 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158612723 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072942645 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159027668 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120087183 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109382106 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112132616 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111963106 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129193249 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105182882 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119552868 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091317366 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.258124392 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113852906 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082506186 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07688465 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104473595 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110763889 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097395317 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097040278 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09855247 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152359846 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071431482 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098328936 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114380912 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143450252 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174245499 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089131264 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082240039 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119142285 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113955221 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112406481 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120773064 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078520622 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081007747 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080579916 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077406518 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109058242 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111618726 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113654626 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109794214 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162966491 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082792794 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22730866 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094494594 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10342739 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069383244 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077819171 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095643334 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097626889 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106844067 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108904244 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158809912 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095010394 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089161928 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090821998 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073368571 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082500363 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127924051 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109481207 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117984977 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098696459 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062580342 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10784276 seconds)
  done (took 58.338611796 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109748853 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081476289 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.092893069 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14367087 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121828918 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201264799 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.152807007 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187870562 seconds)
  done (took 2.819170143 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069102242 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094851903 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102942767 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082424887 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066325235 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067518499 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.230559438 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080470718 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066355978 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098034092 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077727996 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068090572 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.427324662 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068747161 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068319558 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060730349 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067177721 seconds)
  done (took 3.500780789 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.388704568 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.608097076 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.349519685 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.0713699 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.461369666 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084089199 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.144191125 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.126952886 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072363994 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537429788 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.397281477 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124968301 seconds)
  done (took 18.082527431 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077820667 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071557605 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083786461 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083344329 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073236171 seconds)
  done (took 2.102622954 seconds)
done (took 106.999859391 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083081584 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.605154751 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052585748 seconds)
  done (took 2.400108959 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08546836 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085003762 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084268366 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082905121 seconds)
  done (took 2.059307026 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074843002 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076466691 seconds)
  done (took 1.865433163 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.23034734 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.1627039 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.094972286 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084060486 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079490363 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079215488 seconds)
  done (took 1.964820106 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072925771 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075607266 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072827706 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075967345 seconds)
  done (took 2.013119394 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078933895 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053987185 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054845663 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058003287 seconds)
  done (took 1.96284345 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088855338 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080709691 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078967361 seconds)
  done (took 1.966616783 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103067735 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085065084 seconds)
  done (took 1.906786197 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083897468 seconds)
  done (took 1.803177695 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096846759 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101030455 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131528589 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110853762 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138719709 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108893101 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084324494 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085281095 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076428183 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085958447 seconds)
  done (took 2.739140127 seconds)
done (took 22.963877135 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080248709 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368074187 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359383977 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089213985 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670752243 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356326584 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.005482427 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09217434 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115057127 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0670812 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083990744 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64805413 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.995999287 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324632103 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.984549874 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318148629 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648601961 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06820646 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066856519 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067537874 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.99070092 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067367839 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067667377 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06767403 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64771209 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371219373 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06764798 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319611792 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068009897 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068894737 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354975092 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068081884 seconds)
  done (took 16.273552768 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071632748 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120413101 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073404863 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084320831 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.06985459 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069150198 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070870555 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068804078 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120733825 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070529077 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086835035 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067628778 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071547044 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.084866261 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086999367 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068005404 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068347321 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068389632 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06794217 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068300047 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086957444 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06729407 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068307189 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068155666 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067374514 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079952084 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068307432 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067494841 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068082699 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069614642 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07029642 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069207111 seconds)
  done (took 4.142702668 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115864542 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124178018 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073633239 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102857398 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1103786 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06972812 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142829689 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093580391 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126269835 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067870217 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084746985 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067694727 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101684408 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068193017 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08766859 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068646679 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068684996 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068004538 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068055402 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068264328 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087821456 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067781165 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067839968 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06851702 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068036432 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081135835 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067654598 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068021597 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067729508 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069877913 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071068261 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068241764 seconds)
  done (took 4.367855447 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074896976 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076031926 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08295644 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084134295 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072658809 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07340758 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07422779 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069299413 seconds)
  done (took 2.345528995 seconds)
done (took 28.856467638 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081205631 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070780964 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073403854 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082281823 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072905149 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078044655 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066872773 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075375985 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072256968 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072882696 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075914653 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067452007 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070987007 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067214311 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073707242 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067192516 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078877302 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071607641 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078460401 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079116151 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069257173 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073102868 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074465888 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07839094 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078641638 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078366456 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077074348 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072155782 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069105252 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070031313 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077131529 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084184442 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068931529 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078597576 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067911498 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067694821 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071058676 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067165949 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079123722 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076140726 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06899938 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076309316 seconds)
  done (took 4.812891189 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089808521 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094342478 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08692928 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064363824 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.07079345 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067248414 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08983721 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060276568 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059761718 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087731283 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056922799 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061125113 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065962019 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053775637 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060053847 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056381843 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061774385 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055191146 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060086364 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059539811 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088600273 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053515015 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077311363 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06316935 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055648207 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061220162 seconds)
  done (took 3.505326516 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07731704 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086039252 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089102174 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130263144 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106151269 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079131955 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078558008 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095100849 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088434164 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066823452 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071041465 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092247472 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089391862 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07323737 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067351566 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086453126 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08343933 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069055898 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073075074 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094727287 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08687535 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086502453 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095319612 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083030141 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066535121 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069750875 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071530628 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081114011 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072299601 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076764121 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071197348 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071059121 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069199733 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078501762 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070816175 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068665874 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091936366 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077487698 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077906957 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067650593 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075452764 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068493707 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092042961 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127410363 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069179038 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074355428 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071165835 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077636565 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067386023 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087987324 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079129451 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067196606 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070451451 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066563197 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067352754 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081288128 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070263696 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069531855 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076666352 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073205459 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092455944 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072200581 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083617652 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068549882 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075636085 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067630246 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068823652 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066717171 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095926407 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069809533 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110616694 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071669787 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070175575 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077373021 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075576197 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073949206 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068224665 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083347994 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078281666 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071383428 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076603742 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070907805 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070417233 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091911993 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070387313 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069259184 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069101033 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073652297 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070147944 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068675177 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082626351 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067663375 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070583079 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084849624 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067261726 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068873405 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073414572 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072143683 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066893225 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078916847 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07295876 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068433021 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.0773716 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067246424 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070039962 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080867 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073771356 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066715384 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072211679 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07366192 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068978589 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069430503 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070953022 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069719415 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076812103 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074591731 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072359678 seconds)
  done (took 10.743147532 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165227982 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158989786 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070110594 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147668483 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076447652 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079041685 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150280676 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094577325 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067999118 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068891157 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069553446 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110577056 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106316939 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.127596378 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078287627 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067724329 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084959905 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119093463 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15227084 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147450202 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085089258 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077279553 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070357377 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068825978 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074072956 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078494686 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085096941 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076885745 seconds)
  done (took 4.531261866 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081612519 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106545482 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073871135 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091298481 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090679134 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067422606 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070527925 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069454305 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080985262 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077984102 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067423943 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073352357 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074553815 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070931117 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069326916 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07421384 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074623796 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06892172 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070713337 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072743986 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078929365 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091953411 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071760714 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066771462 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072820391 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067163596 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06315703 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083595197 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067844859 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094985976 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065341924 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072463326 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082166427 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068199448 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067381233 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.0674704 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067921508 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067480026 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069147918 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066257764 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066022082 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056987694 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067142801 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07891954 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074043238 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056461369 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072073613 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072908548 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073231764 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065276297 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070318343 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07074985 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070695189 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075020091 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071524464 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072558172 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069038501 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073983897 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077345006 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067227842 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064954922 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065775344 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072267637 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064893091 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076124325 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072273458 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.0659392 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067891088 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069615792 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074348955 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067064477 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071661141 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06528835 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069258935 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.0717046 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069554249 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068493508 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06546713 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067298068 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067776097 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05510076 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067817916 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052950329 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070888973 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065285115 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065994727 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067249888 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072002311 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079040954 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068349438 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07309091 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068606415 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066446874 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070261444 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059714435 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07015638 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083100367 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082147331 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06736872 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065147315 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081058301 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072056421 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066322314 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055723334 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072397906 seconds)
  done (took 9.247106653 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091377556 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069988342 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08423948 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090442861 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087048274 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074832102 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077269654 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069247778 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083043667 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073926706 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076589259 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06787777 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078393503 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07674885 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069949168 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078001086 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071415929 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084476394 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082486568 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067896864 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076579678 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079897562 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090432138 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082267683 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080711661 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082540795 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089960259 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.077334022 seconds)
  done (took 3.997730082 seconds)
done (took 38.567895199 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.820357713 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.992205759 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.815588674 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.185160071 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.057136339 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.943742363 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.91498237 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.814320858 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.980342911 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.852380388 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.017788294 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.997427291 seconds)
done (took 66.142894979 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.842114102 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.959533825 seconds)
    (2/2) benchmarking "String"...
    done (took 2.044568928 seconds)
  done (took 5.755982762 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.041019996 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.375516331 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.06666057 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.814699491 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.817558369 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.154593914 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.62076788 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.314998499 seconds)
  done (took 30.918712144 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.953051602 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.036125305 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.515057768 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.536683157 seconds)
  done (took 15.843578698 seconds)
done (took 64.234568659 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.849288034 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.830353886 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.847984331 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.797666207 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.869652782 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.828554286 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.345546351 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.860526223 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.812703719 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.801548341 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.810964022 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.244334605 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.803621808 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.347129995 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.801490855 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.807159961 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.821977244 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.361516522 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.952984334 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.818601933 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.81173435 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.835031284 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.796100206 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.806115119 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.840213789 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.799438041 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.233377917 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.802747202 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.625591784 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.797418555 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.857562152 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.925109205 seconds)
  done (took 205.494251347 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.799064679 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.661268072 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.770605971 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.813374232 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.126455262 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.979524264 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.922409886 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.206251636 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.801691189 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.805328103 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.970767828 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.796938859 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.973413174 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.749815334 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.828889587 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.804250245 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.964849864 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.975489442 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.832803829 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.97229064 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.798725556 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.818267733 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.746310999 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.920683617 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.819923362 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.882100489 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.810414329 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.805328728 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.984752113 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.938879568 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.812068826 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.826954001 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.002084628 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.667243663 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.814462068 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.801335406 seconds)
  done (took 169.943933893 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.182245199 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.797840093 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.796041081 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.797175845 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.802124818 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.795616621 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.924079842 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.917353026 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.400467942 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.875273063 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.846456155 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.618036098 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.7926856 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.862777369 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.804240481 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.795972968 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.794802238 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.811373009 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.819570001 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.789195001 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.793343507 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.918180229 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.802715672 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.878123176 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.795030004 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.790206037 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.795922675 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.159933028 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.790609365 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.793487836 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.030604494 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.784852611 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.785990829 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.669969663 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.107443205 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.793471068 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.870727343 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.786902655 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.791351221 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.785004025 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.008036544 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.783545477 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.785192661 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.785085747 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.787945886 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.952498802 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.782336584 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.920181663 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.780163559 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.285470216 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.781742726 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.784764464 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.781897544 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.450867254 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.779071305 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.782318339 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.783996694 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.786281302 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.782786528 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.787557788 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.566250562 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.850354553 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.792271462 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.784894561 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.788459 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.780605053 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.785398929 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.779499082 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.951775515 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.833839211 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.014394272 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.90083219 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.778831697 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.84615032 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.870469154 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.776121774 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.778596646 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.779587518 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.783861237 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.861145643 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.77605295 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.904476567 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.78374255 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.781555184 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.82945297 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.849778416 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.775860835 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.671648206 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.775705074 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.779628028 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.085265964 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.845233957 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.777678527 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.780119492 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.778163951 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.904042387 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.898763959 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.570420092 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.780034669 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.778421163 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.655970151 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.778233016 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.918268993 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.777418289 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.945442243 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.779727942 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.861173964 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.781677313 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.780607124 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.77914091 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.812225521 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.779621382 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.837406667 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.779850636 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.150859257 seconds)
  done (took 402.930351822 seconds)
done (took 782.354729178 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.463498527 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.411030708 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.52034677 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.439592448 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.414378314 seconds)
  done (took 13.968719755 seconds)
done (took 15.685406021 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.864853939 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.869184133 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.801908159 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.86671467 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.797155736 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.866322049 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.847274886 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.803020747 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.834754981 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.802156859 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.836008103 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.802463922 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.791619392 seconds)
  done (took 25.500825339 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.016327759 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.022482861 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.849869035 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.010694135 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.829469145 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.008064491 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.942376119 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.930929969 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.931786067 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.798866396 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.792740483 seconds)
  done (took 22.855034188 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.030060724 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.023866818 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.855557668 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.043689348 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.828708033 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.028884889 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.944551688 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.934870847 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.933756193 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.793341706 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.793732482 seconds)
  done (took 22.927921727 seconds)
done (took 73.000221697 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.790740112 seconds)
  done (took 3.508078626 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.816766108 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.965495661 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.793340488 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.796311666 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.788890516 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.791331818 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.793989675 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.789435157 seconds)
  done (took 16.255214042 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.789001237 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.785210818 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.786202453 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.787755399 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.785866744 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.788853253 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.788434553 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.788050135 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.786512905 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.786952979 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.785621839 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.790983668 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.789302353 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.787873901 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.786166926 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.789358486 seconds)
  done (took 30.322073693 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.792594387 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.785905321 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.787871452 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.78750182 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.786821335 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.787530076 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.788127206 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.787393528 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.786207543 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.786619063 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.78743514 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.789114958 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.787348936 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.787766168 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.787030681 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.78815494 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.787011636 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.78987825 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.792066299 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.787670147 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.787936426 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.787215729 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.789642259 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.78848776 seconds)
  done (took 44.636543581 seconds)
done (took 96.438743213 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.731374181 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.456568882 seconds)
  done (took 8.908798208 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.799167308 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.797259563 seconds)
  done (took 5.367392325 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.799339708 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.79920631 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.798434825 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.798633921 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.799059539 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.798952525 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.798789121 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.798303582 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.797541999 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.798846829 seconds)
  done (took 19.715411867 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.79866822 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.798819582 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.795738748 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.799196266 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.80013082 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.797994577 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.798769408 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.799273131 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.799246728 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.795939459 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.799979552 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.796458654 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.798433144 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.797185173 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.799444778 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.797660748 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.798598497 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.796881822 seconds)
  done (took 34.098006806 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.79920219 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.800248 seconds)
  done (took 5.328521681 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.798045027 seconds)
    (2/7) benchmarking "second"...
    done (took 1.797113565 seconds)
    (3/7) benchmarking "month"...
    done (took 1.796662987 seconds)
    (4/7) benchmarking "year"...
    done (took 1.797042119 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.797696681 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.796615668 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.798803393 seconds)
  done (took 14.3118115 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.800467156 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.962341111 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.033336281 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.48668962 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.802461158 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.803880104 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.778754427 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.802977734 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.806803344 seconds)
  done (took 20.00633745 seconds)
done (took 109.455824199 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.646841606 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.794472294 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.184279548 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.853324421 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.84545379 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.136715484 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.804640383 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.095657216 seconds)
done (took 43.091547099 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.850644073 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.365677429 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.402558106 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.357351367 seconds)
  done (took 12.856638369 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.782034341 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.327586451 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.832203012 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.377263807 seconds)
  done (took 20.070548443 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.171525712 seconds)
    (2/2) benchmarking "read"...
    done (took 2.147611115 seconds)
  done (took 6.056412044 seconds)
done (took 47.565577263 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802572926 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.801462486 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.801889711 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.799604729 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.800671258 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.798975196 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.799207719 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.806347671 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.800335511 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.801429937 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.801112172 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801156152 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799141095 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801026169 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.800097766 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8028909 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.799512817 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799508205 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.802044502 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.802109657 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800704579 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803326953 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.79867487 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.799504734 seconds)
  done (took 44.956739566 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.804066591 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.800902619 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.803582736 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.804403439 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.802646305 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.806293755 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.802258009 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.802263361 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.802288107 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.804369651 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802713895 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.80013705 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.804018381 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.801030465 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803861486 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.80147673 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.804964453 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800711088 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802907752 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.800849699 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.802536404 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802555493 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.801164152 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803098907 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.802498932 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.802032736 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.804757746 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.803053266 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804550382 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.801199246 seconds)
  done (took 55.817923472 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.809121521 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.815112081 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.804589964 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.805894676 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.804339845 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.804408693 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.802710819 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.804059339 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.803989058 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.80475631 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.80546113 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.804253119 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.804564809 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.806058655 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.803329973 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.80372301 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.804526242 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.804377477 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.806469346 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.80561255 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.804737685 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.806059186 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.80523654 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.805745548 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.806459826 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.80555031 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.805697843 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.806375656 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.805725467 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.809679303 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.806584651 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.8058261 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.804555065 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.804616001 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.806611934 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.808905068 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.811195196 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.813452671 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.804346999 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.804986968 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.808337128 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.805713945 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.803939577 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.804950421 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.804302789 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.805010312 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.806483545 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.807658467 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.806049999 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.80577757 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.806596314 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.807724701 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.806547521 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.806505272 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.806826013 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.805681828 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.806333858 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.808068867 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.805649302 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.806194098 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.806638759 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.806244369 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.808562499 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.805492963 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.809162853 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.805298848 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.808011473 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.806893505 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.810538352 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.807813345 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.807978431 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.808827344 seconds)
  done (took 131.792345582 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.808679827 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805411892 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.804572113 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.805290519 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.805585227 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.807772038 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.808598522 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808975542 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806793058 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.808700115 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808871123 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.80609555 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806771899 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.80750948 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.808111551 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.805599936 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.808487273 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.805591716 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.809209513 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.809614535 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.809258902 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.806626027 seconds)
  done (took 41.49954003 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810514256 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.808745922 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.806881717 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.810646848 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.805531423 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.812857068 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.809402882 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.808352506 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808185099 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806572233 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807653175 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810853943 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.805679071 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806570507 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.807402798 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.808478292 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.811402126 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.807297546 seconds)
  done (took 34.291254243 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.807380241 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.808112376 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.810714902 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.809452007 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.808104497 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.810645205 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808392208 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.810010669 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.810172206 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.809053422 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.810874217 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809477542 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.809544248 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807930237 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811804222 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.809197025 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.811307151 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808259185 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810870017 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.811948156 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.809702398 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.810844356 seconds)
  done (took 41.553779775 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811468712 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.810995446 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.809426528 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.809485232 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.808778393 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.811057409 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.81199115 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.812142258 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.809872276 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.813588291 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.809332914 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.811052907 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.808758523 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.81156543 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.809295084 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.808672057 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.810321464 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.808664619 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.811200123 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.81073955 seconds)
  done (took 37.949183568 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.813754883 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813239487 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.812572938 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815140643 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814320103 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.814686553 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813201738 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.811617735 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.814502448 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.815590276 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.812105784 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.812545195 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813924474 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.814586874 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.813578598 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813374791 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.813214125 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.814173826 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.813099371 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814266367 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.816287112 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.814048144 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.81523578 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.814740187 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.815191851 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.817026542 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81329286 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.814812865 seconds)
  done (took 52.536323074 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.813456263 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.813186117 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.816730421 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.81061126 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.811155522 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.812143969 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.809973197 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.814537759 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.812684066 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.812933759 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.814517158 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.81400636 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.814210996 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.816967478 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.814104052 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.816521139 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815265983 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.811497901 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.814384021 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811478837 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.813833801 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813803098 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.813821856 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.81182001 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.814489846 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.815944336 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812443494 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.811739465 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.815033307 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.813793198 seconds)
  done (took 56.150628988 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.833037809 seconds)
    (2/2) benchmarking "in"...
    done (took 1.833193217 seconds)
  done (took 5.410395086 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.812597481 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.816284886 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.81500674 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.812151315 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.813379313 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.816901224 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.817383467 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.813304031 seconds)
  done (took 16.261616762 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.816647071 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.813574351 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.815236765 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.815900864 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.816794296 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.815422537 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.824461241 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.814611948 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.821122329 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.816894378 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.822033073 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.824467463 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.818552096 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.81727021 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.815428612 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.818054507 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.815484862 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.818725091 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.815797642 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.820978039 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.817172608 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.817358872 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.817618717 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.813077925 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.817270141 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.828394366 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.819979105 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.816586301 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.817452304 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.820678394 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.819840135 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.814883331 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.816934832 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.818282807 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.817345091 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.819112931 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.82794078 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.816567456 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.821863574 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.819812081 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.816950872 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.816181033 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.818461511 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.817814558 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.818911282 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.818759317 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.816959663 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.81545693 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.817047827 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.819969106 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.821951536 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.819785971 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.815152444 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.820945047 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.818608983 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.823421345 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.818197345 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.819975399 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.82817779 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.827477675 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.831208464 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.824194219 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.820039122 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.821329658 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.827052978 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.843285486 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.826847237 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.815827641 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.815985252 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.819555397 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.825230169 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.831409029 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.829470064 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.820810781 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.821254194 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.818394183 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81663987 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.819822691 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.826165741 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.821481903 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.820771241 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.818609298 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.828309481 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.841567677 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.819803827 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.821387368 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.820427669 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.819875676 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.821452228 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.828218738 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.820000788 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.819506085 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.817906244 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.819983614 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.821532027 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.821651429 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.819313746 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.821702047 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.816636365 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.820774925 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.821443421 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824772078 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.829998384 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.822664503 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.821590819 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.827086643 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.821126692 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.821081632 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.826452207 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.822031273 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.820991382 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.819899708 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.828760481 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.818405432 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.824233478 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.829711632 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.82178733 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.822103562 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.822869848 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.822541347 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.831673223 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.848137013 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.821658468 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.821414901 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.828562103 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.833740105 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.822504037 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.823611993 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.822438245 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.821747864 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.818399725 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.823493809 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.822600073 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.821956393 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.823349567 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.825185402 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.821227758 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.822576837 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.82429369 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.82412273 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.82510251 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.821862759 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.823211818 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.825959319 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.822975379 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.824834812 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.830123804 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.822659952 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.824276459 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.822025316 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.820034307 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.822919405 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.823570813 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.824147596 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.823594449 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.823484227 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.821989989 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.82511682 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.823165832 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.823970292 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.82449735 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.824224111 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.827655468 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.825433075 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.825905046 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.822888475 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.819920393 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.823678264 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.823556953 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.823867884 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.824497148 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.823726169 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.827881206 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.831977984 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.82373424 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.824462395 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.826214596 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.825627024 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.826799136 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.825453787 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.827708625 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.833549263 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.824439732 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.830993329 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.825460069 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.824813798 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.824980701 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.826620164 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.825221727 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.826351769 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.826959424 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.832310179 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.836514558 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.83394372 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.826730821 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.829167186 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.82530069 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.829518956 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.828679947 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.826019707 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.825234059 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.825505092 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.823761648 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.827014929 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.826516402 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.825900872 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.823905693 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.826504895 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.824616045 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.828934448 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.825429986 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.826323871 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.827920029 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.824037022 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.827982151 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.828013025 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.825823729 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.823559226 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.824824181 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.826913152 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.825786353 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.8284704 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.83273178 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.822645027 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.827634195 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.828336991 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.827700954 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.825824763 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.826839336 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.82823562 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.826067274 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.835450374 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.826876777 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.831063122 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.832799152 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.827697159 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.825798759 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.830423722 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.826943097 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.827805325 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.831225367 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.836550967 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.827285662 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.830415929 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.832840476 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.828173839 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.827035177 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.833053135 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.823909908 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.826489202 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.828467739 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.830031379 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.825860946 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.828212082 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.828336108 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.829020111 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.83011998 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.828257107 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.826934157 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.830591968 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.828610411 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.828705 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.828968511 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.830032761 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.839354884 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.83286421 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.828272163 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.831687731 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.830358243 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.832313367 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.828935162 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.830079106 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.826792729 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.842747844 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.837226717 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.834609468 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.830174946 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.829971734 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.836081825 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.829785903 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.833831266 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.829803827 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.831554463 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.828785618 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.828943954 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.827618475 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.829506322 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.82990997 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.830210042 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.829869517 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.834323102 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.82924639 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.831153947 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.832387315 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.829688309 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.829989573 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.829570476 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.830691047 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.831783116 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.833426176 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.829535967 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.830677348 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.838862567 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.831542626 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.834438619 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.828400266 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.829983088 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.829603367 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.830281473 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.831208365 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.835669616 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.840662539 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.83322764 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.83900267 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.831753232 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.841215242 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.831556043 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.832211636 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.839925888 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.827442618 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.828998529 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.832042292 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.83093106 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.838702284 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.831856254 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.83119595 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.838720742 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.83217819 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.833986519 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.832666821 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.832576488 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.83118029 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.831207075 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.841357478 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.833057385 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.835527518 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.836032571 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.831630478 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.833902367 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.831819892 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.832222962 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.835891958 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.836443684 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.832473765 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.832723715 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.834668339 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.833547267 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.834221906 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.833709109 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.829823639 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.832723641 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.841270819 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.83274283 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.837747795 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.83184566 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.84023515 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.833307882 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.841365392 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.83480569 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.834035132 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.833505745 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.83347176 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.834787732 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.833994721 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.835852016 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.835025995 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.836590606 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.837185493 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.834740379 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.83557956 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.834612443 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.834579443 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.832815118 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.842640993 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.858114047 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.835499194 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.838344152 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.832239112 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.836991116 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.838488508 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.834627863 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.835125527 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.837477886 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.846744893 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.842728309 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.83436615 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.836339841 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.834906922 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.836551337 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.834713068 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.835615217 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.839178731 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.835074357 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.83712764 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.836105078 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.840177748 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.834731996 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.836966863 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.836039253 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.838278372 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.845227401 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.836996115 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.838651646 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.835751831 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.835226436 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.836076404 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.836234387 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.836431217 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.836786341 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.8373523 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.837170151 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.84446534 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.842421847 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.839005834 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.835015132 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.836710253 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.835475618 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.838155031 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.837062548 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.834885645 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.836817522 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.837128269 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.83711067 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.837297697 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.835736442 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.836540831 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.838047505 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.836829683 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.838449596 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.844529928 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.83644163 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.832691876 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.836596666 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.836829384 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.835481376 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.839071533 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.844808128 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.839695976 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.848909414 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.84627976 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.84243237 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.836540091 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.841304845 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.845271961 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.836139583 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.839071306 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.837918635 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.839740088 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.839305414 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.84145714 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.841082122 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.843839907 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.838679964 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.840247503 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.848036756 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.839212863 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.840886466 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.841096566 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.842301323 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.840563413 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.835954448 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.840085021 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.83892695 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.849053184 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.839009194 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.84173522 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.841042986 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.835970094 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.838527397 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.843629791 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.838556527 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.840161284 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.835887357 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.841719406 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.839119959 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.838519045 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.83615207 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.838793024 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.840398703 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.841789829 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.846565619 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.836427496 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.840250102 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.839230726 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.840408475 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.840580373 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.838732574 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.837628728 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.838673482 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.842082913 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.840541702 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.840447354 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.84200631 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.839832494 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.841378014 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.841523486 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.841143865 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.843124015 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.851954135 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.848673327 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.839876836 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.840036249 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.842077132 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.843499549 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.841013619 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.843080596 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.841479348 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.843306714 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.83983074 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.841822688 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.841891908 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.84392947 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.858219418 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.841006106 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.841815319 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.841044658 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.845187503 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.841390189 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.838556224 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.84324176 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.843794175 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.843632309 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.850130825 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.843071215 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.845921237 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.84155742 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.84209696 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.844875769 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.843403309 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.852471389 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.844456 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.842913374 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.842478186 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.84533458 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.856939104 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.842651685 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.851337292 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.874307314 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.842782034 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.843166515 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.844006529 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.841599795 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.843695361 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.843264572 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.843509521 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.842381205 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.841835426 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.842882286 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.844093215 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.849354203 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.843397929 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.843267633 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.842286578 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.84268256 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.845570181 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.841892046 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.843919795 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.842374914 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.84413662 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.842904561 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.844988066 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.843799968 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.857146674 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.854138576 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.844266968 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.844938569 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.840388757 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.848119124 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.846840299 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.854869282 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.853398263 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.844989814 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.84541176 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.846937601 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.84775226 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.840669933 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.846884311 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.844000554 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.844180609 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.841848766 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.858635572 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.855227096 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.849639523 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.845630756 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.846440578 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.845129398 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.845718372 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.847016371 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.846446763 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.847330576 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.84599301 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.850381036 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.844643715 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.845080749 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.848282884 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.854292681 seconds)
  done (took 1093.890037399 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.84332081 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.842502242 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.841759585 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.843536459 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843240001 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.842231516 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843648466 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.842756366 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.844075049 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.843479971 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.842596405 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.843025535 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.842975277 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.843900462 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842742017 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.843350293 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844373504 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.844125038 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.844742251 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.842669467 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.843387964 seconds)
  done (took 40.482985531 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.84540644 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.843045939 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.843640052 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.84683551 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.843941657 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.845838983 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.842780877 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846180103 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.847126607 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844884506 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.847742633 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847233874 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.84475205 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.845736724 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845190984 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.845827655 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.84906176 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.845768235 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.846364854 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.845491573 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.84731458 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.845277846 seconds)
  done (took 42.381970931 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.848829422 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.850353975 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.847981367 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.844650822 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.84844103 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.845186345 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.849562914 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.849254262 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.84956589 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.848670395 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.848436395 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.848451675 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.855466705 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.854455734 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.850901838 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.850112584 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.993157614 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.85115361 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.849948794 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.849041828 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.845390312 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.856527434 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.846317382 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.847170299 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.848607017 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.850114845 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.847908255 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.849775321 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.85128896 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.851725769 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.85325994 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.849545948 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.848863283 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.851337242 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.848654719 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.850973795 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.854089211 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.851981472 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.847466504 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.849152992 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.86151542 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.871949357 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.852922538 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.855663816 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.849887081 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.849954916 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.85250781 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.860821314 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.847607972 seconds)
  done (took 92.615676673 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.849377255 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.850856487 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.847943125 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.851153158 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.851514802 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.849568597 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.852161926 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.849461945 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.848185041 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.849257581 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.850518456 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.848532593 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.846260968 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.850768093 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.850862151 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.847081279 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.847974204 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.847687142 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.847566073 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.848722794 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.848234549 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.850356062 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.85087201 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.848484869 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.850567147 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.848201336 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.848764063 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.850987575 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.848086185 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.84969462 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.851805165 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.852192411 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.852648083 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.848763714 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.849020467 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.85044746 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.852799964 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.850192247 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.852073618 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.850245962 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.852306152 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.853786468 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.853156549 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.853843368 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.849952283 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.850461298 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.849972943 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.849670442 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.849167287 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.854350022 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.853897803 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.850356249 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.852892415 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.850078638 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.853097937 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.852615612 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.849606384 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.850542535 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.851863562 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.850390729 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.850119064 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.852873829 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.850364441 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.852775187 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.851823941 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.849821769 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.848687366 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.852026774 seconds)
  done (took 127.611297966 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853002603 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.854107737 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.853522331 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.854118111 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.853490009 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.854684337 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.854279697 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.854497965 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.854438912 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.854193955 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.854787643 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.852949574 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.854184741 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.853529697 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.854795728 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.85509298 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.854392825 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.853997929 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.854772551 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.855574198 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.855027499 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.856754707 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.855206477 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.856365914 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.855523151 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.854971612 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.856559153 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.855601781 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.855889825 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.855037024 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.856612417 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.85564939 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.855549337 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.857100679 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.856176011 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.855802303 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.856188326 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.85681067 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.855479283 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.854788483 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.856068081 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.855828947 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.857628736 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.857316517 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.857351777 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.857096736 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.856753113 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.856304687 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.855336267 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.857441442 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.858512276 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.856899594 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.858020425 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.857690819 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.85771429 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.855339855 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.858924697 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.85711795 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.857674699 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.857398679 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.857061644 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.855642926 seconds)
  done (took 116.840016372 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.855962279 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.855389023 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.855402201 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.854335194 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.85646985 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.854135131 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.856698379 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.857022386 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.856169722 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.857532603 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.857203127 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.853804283 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855959895 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857007034 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.853320866 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.857519539 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.856905269 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.8543241 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.857555638 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.855944475 seconds)
  done (took 38.904186421 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.855714355 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.858958401 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.855610733 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.856317283 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.85907444 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.854844463 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.858117369 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.857813632 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855429298 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85866521 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.857877504 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.858732114 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85568402 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.855709717 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.858643085 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.856234061 seconds)
  done (took 31.498837431 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.857714495 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.858830976 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.85972044 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.859990135 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.857346681 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.856238049 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.859079648 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.855701724 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.855774696 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.858313851 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.859321113 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.859820647 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.857766737 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.860541347 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.855578753 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.860050014 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.855525044 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.85689102 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.859697266 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.860711263 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.857918021 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.857323108 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.860429147 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.86012138 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.857207014 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.858719634 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.857108862 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.858146507 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.857133479 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.859494648 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.856486381 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.857313068 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.857301816 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.858368314 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.862034083 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.85758817 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.861198251 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.859612139 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.863021786 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.862365262 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.86025455 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.85906777 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.860831671 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.859132812 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.857147021 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.859869412 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.859460588 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.857900482 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.857811605 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.857361196 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.860453395 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.861929804 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.861457718 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.860959669 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.861165578 seconds)
  done (took 104.026423051 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.860268138 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.860602142 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.858629668 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.860600912 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.86125837 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.857189254 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.862068043 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.858685617 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.857231589 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.860759687 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.859938079 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.860104402 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.859710496 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.861521299 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.859855873 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.860946587 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.858926524 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.860281729 seconds)
  done (took 35.268043089 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.85799324 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.859088184 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.861207493 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.857215764 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.860459475 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.862182083 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.8580826 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.863286293 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.862904898 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.860910359 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860410174 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.863041386 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.86297155 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.86354975 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.860040242 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860122141 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.862239222 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.863108781 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.859296277 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.860779921 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.862438652 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.86411971 seconds)
  done (took 42.73533049 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.861953806 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.861255909 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.879914032 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.884092964 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.882831707 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.89875544 seconds)
  done (took 13.061644113 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860888672 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864178712 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.861721522 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863971929 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863416765 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86107214 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861355615 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861623476 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863094302 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861624489 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862904981 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863216672 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864182001 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862556699 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86300105 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863525436 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86265811 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863384193 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862572323 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865769323 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861902146 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864952383 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862035383 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86130218 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862260975 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863593834 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86483563 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863602454 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862851659 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866266286 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865842328 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863409858 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865384779 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862938138 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866382077 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865568032 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863450789 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866084342 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864975605 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862612271 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.864687755 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86557142 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86454554 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863989446 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867353683 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863559119 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863766239 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865463385 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864642781 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867064768 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865192061 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86541745 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866934478 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866050905 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866738656 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866739077 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864461623 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8654478 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865631226 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864744843 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86419653 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867047052 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86464805 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863550337 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867307345 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864710365 seconds)
  done (took 124.829105438 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864295723 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.865027724 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86474391 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864831016 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864845451 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865142311 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865226543 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865113221 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865367943 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864947938 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868764247 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865654374 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86567858 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865287294 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864843222 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865401801 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86623013 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866309708 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867395821 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868778798 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8666743 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866798417 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866167813 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866284307 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865105175 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868528067 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866168795 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867533513 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865992146 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866401527 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867904793 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86574939 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866394864 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.866283543 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867467314 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867195922 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866983566 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86618706 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868452303 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86819677 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865737309 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869404319 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867717006 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866652047 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867840361 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866391213 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867675367 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867315086 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865891226 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866220325 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866808286 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866778521 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866922638 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867948935 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866170418 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866613222 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866090312 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868809579 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868057344 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870079846 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867353653 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867779048 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870691307 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868069553 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867659923 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867346676 seconds)
  done (took 125.000893118 seconds)
done (took 2549.096484394 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.923235946 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.94174541 seconds)
  done (took 15.661868254 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.034203055 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.983873595 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.868899613 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.867779297 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.865502205 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.88804064 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.879150669 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.867453124 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.869837471 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.869258584 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.870143424 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.056233127 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.91960941 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.865722217 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.869561208 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.960867399 seconds)
  done (took 52.338972818 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.87310355 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.871441632 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.885982691 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.87741278 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.872869652 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.884000165 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.905884865 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.874406532 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.908391228 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.884004838 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.940727613 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.880198386 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.873513625 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.922432806 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.884892663 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.887683748 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.965176896 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.944894237 seconds)
  done (took 35.936388605 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.950458492 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.868785937 seconds)
  done (took 10.624577977 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.871436635 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.869734307 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.924153997 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.887795966 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.896313773 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.884093754 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.8668807 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.897483153 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.903326589 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.877402668 seconds)
  done (took 70.68182599 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.880105002 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.874741996 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.876117833 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.874948247 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.866277688 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.869127536 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.872598932 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.874054689 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.523905025 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.910686339 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.879291419 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.880087965 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.875387818 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.87782767 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.873395762 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.901006675 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.997849495 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.873511547 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.873224439 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.882041724 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.876053826 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.947225913 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.885914934 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.872501454 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.905900672 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.528217524 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.881091191 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.881779358 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.999233517 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.8735576 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.874708852 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.877697056 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.877889248 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.257123056 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.149256518 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.874065732 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.88610471 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.885569864 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.872730821 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.005123951 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.87701761 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.881209977 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.792496652 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.125870863 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.98342216 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.920256062 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.221508815 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.887853617 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.879247374 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.907689529 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.876427675 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.879674693 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.889373708 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.396265142 seconds)
  done (took 132.874303728 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.870620035 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.1346771 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.02635103 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.870730844 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.157811214 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082419191 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.871640221 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.920195296 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.871519205 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.100717337 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.092951596 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.982371969 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.871855057 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.87325654 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.871362294 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.866956477 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.034809666 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.946591432 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.871185495 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.869329121 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904343048 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.113421043 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.998922353 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.875490031 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.89406285 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.085751844 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.997396723 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.980759668 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.3184469 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.870872226 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.936697317 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.871645147 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.873735491 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.870392521 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.02893735 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.969960344 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.959341739 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.873144704 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.870284514 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.870078023 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.548223967 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068593972 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.968796401 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.016111848 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.126510867 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.077510283 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.657373114 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.871542339 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.612805799 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.036400592 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.106082118 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.106960825 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.997287941 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.8739387 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.137624286 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.872072703 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.871356172 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.106115803 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.115427445 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.974917661 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.87426121 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.872406918 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.871746296 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.122217372 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.872213407 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.967531354 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.875360507 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.870597184 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.97147263 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.975081357 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.123107453 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.087069083 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.905275781 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.170595932 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.343841038 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.123740489 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.942137547 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108498439 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.876272622 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.87104346 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.961554605 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.721044222 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.073344715 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.125444826 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.12856685 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.910204412 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.600147671 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.872381931 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.104509802 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.098981444 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.126211952 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.116270027 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.02441214 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.18100112 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.873092349 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.87394364 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.106788885 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.011332326 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.874342503 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.237079017 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.110794873 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.45596181 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.906223667 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.185460502 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.009403138 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.874740983 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.519374853 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.877970602 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.103160281 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.918407321 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.876281095 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.877554561 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.095838498 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.857167107 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.876043229 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.585230667 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.939240688 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.874878797 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.111255352 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.87680718 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.140306559 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.875395554 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.116888275 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.990823593 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.909684056 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.050643585 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.119921207 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.876198712 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.135727539 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.12285824 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.992665715 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.148684296 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.800236993 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.877794874 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.16944249 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.877192426 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.875478815 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.051463009 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.87815556 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.111005591 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.878382966 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.164194772 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900046768 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033923116 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.876467284 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.134385878 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.910598349 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.931062509 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.877130135 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.01007709 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.879246118 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.876695479 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.033213042 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.880710126 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.875685363 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.405945354 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.877345648 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.035108779 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.113741248 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898822541 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.952768934 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.551556457 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.87794445 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966919237 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.904932522 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.222171571 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.877719206 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.094762001 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.877615411 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.411047135 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.878423919 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.122217254 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.110106231 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.879866907 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.878513265 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.787906128 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.877880754 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.879078813 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.040545721 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.693285164 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.877070466 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.083536742 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.88079938 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.009745081 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.878640742 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.953423573 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.231225394 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.874705235 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.875394797 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.87575899 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.878456482 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.876505507 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.091139811 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.906627876 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.411998034 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.016495141 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.148435184 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.200206239 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.130281088 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.921329789 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.879333937 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.121523828 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.876714589 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.942162852 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.875425984 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.896169998 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.110765884 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.877298931 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.090548617 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.159301623 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.871304987 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.926842566 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.875146326 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.872773512 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.789069477 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.02654911 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.963064315 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.875894356 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.87501433 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.990888428 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.997321414 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.085858135 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.876967862 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.101497336 seconds)
  done (took 904.767765171 seconds)
done (took 1224.68110034 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.87385053 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.87280998 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.861460886 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.873413563 seconds)
  done (took 29.287857052 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.882349034 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.87682963 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.879381258 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.877534349 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.880169735 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.879030912 seconds)
  done (took 13.081522808 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.926930134 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.868576708 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.871068057 seconds)
  done (took 21.472480482 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.946837787 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.256164203 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.992845039 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.2948926 seconds)
  done (took 10.29715559 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.879450513 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.879423045 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.879123283 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.879787809 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.880047159 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.88280086 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.880441609 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.881424682 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.883505237 seconds)
  done (took 18.73323523 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.231831937 seconds)
done (took 98.909635277 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.897396387 seconds)
    (2/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.829017019 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.213861077 seconds)
    (4/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.342984445 seconds)
    (5/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.077545627 seconds)
    (6/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.426044155 seconds)
    (7/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.143027322 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.019315438 seconds)
    (9/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.051049588 seconds)
    (10/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.899139945 seconds)
    (11/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.368357101 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.928949561 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.944931364 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.908537079 seconds)
    (15/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.039562851 seconds)
    (16/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.902120712 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.222390229 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.100256287 seconds)
    (19/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.050553749 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.681139357 seconds)
    (21/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.168397238 seconds)
    (22/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.063470738 seconds)
    (23/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.870881706 seconds)
    (24/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.329981722 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.267669517 seconds)
    (26/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.344538612 seconds)
    (27/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.870568716 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.008085639 seconds)
    (29/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.460755347 seconds)
    (30/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.786512092 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.871437056 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 8.120830347 seconds)
    (33/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.058298038 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.122620821 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.210128384 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.979535463 seconds)
    (37/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.968651866 seconds)
    (38/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.008463323 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.996856643 seconds)
    (40/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.869374684 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.390209173 seconds)
    (42/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.018829699 seconds)
    (43/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.023740732 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.558280648 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.160440862 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.247717669 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.977318627 seconds)
    (48/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.884595245 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.05299978 seconds)
    (50/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.215886966 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.274331609 seconds)
    (52/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.229045196 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.885783345 seconds)
    (54/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.978425197 seconds)
    (55/309) benchmarking ("sort", BigInt, false)...
    done (took 6.88665173 seconds)
    (56/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.026738819 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.996290616 seconds)
    (58/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.224415643 seconds)
    (59/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.010963466 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.133544629 seconds)
    (61/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.969795036 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.977266977 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.962201228 seconds)
    (64/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.366133607 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.870431049 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.937289688 seconds)
    (67/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.904128437 seconds)
    (68/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.873375039 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.023516745 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.210972727 seconds)
    (71/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.419109797 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.184156182 seconds)
    (73/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.123986321 seconds)
    (74/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.07368586 seconds)
    (75/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.904708442 seconds)
    (76/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.226944299 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.137599931 seconds)
    (78/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.88902329 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.853954839 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.177099278 seconds)
    (81/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.144324963 seconds)
    (82/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.580086119 seconds)
    (83/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.984052374 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.009880791 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.969035869 seconds)
    (86/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.098047081 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.808092718 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.006273649 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.186151518 seconds)
    (90/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.077239912 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.601078465 seconds)
    (92/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.065661156 seconds)
    (93/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.172843808 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.877044896 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.650138375 seconds)
    (96/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.189624389 seconds)
    (97/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.879415923 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.503277288 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.191658532 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.010875755 seconds)
    (101/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.247748926 seconds)
    (102/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.910280376 seconds)
    (103/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.087478712 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.189387202 seconds)
    (105/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.97567105 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.097076311 seconds)
    (107/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.704242896 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.966247466 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.180546949 seconds)
    (110/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.96915456 seconds)
    (111/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.873951905 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.018300008 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.872342902 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.866046701 seconds)
    (115/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.889315874 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.854724355 seconds)
    (117/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.239489332 seconds)
    (118/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.45407334 seconds)
    (119/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.995683122 seconds)
    (120/309) benchmarking ("sort", Float32, false)...
    done (took 5.590022943 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.872581551 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.566950788 seconds)
    (123/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.930612526 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 2.328057643 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.905739889 seconds)
    (126/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.869668132 seconds)
    (127/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.032462327 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.162338077 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.893032244 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.131988592 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.100173973 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.14294241 seconds)
    (133/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.070966241 seconds)
    (134/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.91006197 seconds)
    (135/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.87164159 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 3.114983078 seconds)
    (137/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.08119973 seconds)
    (138/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.102563167 seconds)
    (139/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.997890451 seconds)
    (140/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.055689452 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.095737286 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.260767191 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.009563652 seconds)
    (144/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.21943877 seconds)
    (145/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.019500504 seconds)
    (146/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.049702343 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.161342619 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.127652039 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.919524848 seconds)
    (150/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.401401916 seconds)
    (151/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.918280245 seconds)
    (152/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.888859644 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.553114544 seconds)
    (154/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.916745562 seconds)
    (155/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.054074572 seconds)
    (156/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.913744419 seconds)
    (157/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.971825533 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.886366482 seconds)
    (159/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.040432529 seconds)
    (160/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.998195208 seconds)
    (161/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.915958416 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.994888237 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.909908457 seconds)
    (164/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.0985106 seconds)
    (165/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.986476734 seconds)
    (166/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.978489622 seconds)
    (167/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.891965478 seconds)
    (168/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 3.49795549 seconds)
    (169/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.112658463 seconds)
    (170/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.263107624 seconds)
    (171/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.913427162 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.688878414 seconds)
    (173/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.324308959 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.235166755 seconds)
    (175/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.028293519 seconds)
    (176/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.022042061 seconds)
    (177/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.284885517 seconds)
    (178/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.993414369 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.913828562 seconds)
    (180/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.892740107 seconds)
    (181/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.178185207 seconds)
    (182/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.98907465 seconds)
    (183/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.061616778 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.92828056 seconds)
    (185/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.854216094 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.239063316 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.970159776 seconds)
    (188/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.464755214 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.091595928 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.951090564 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.963586974 seconds)
    (192/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.973928055 seconds)
    (193/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.894471906 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.987351699 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.972461781 seconds)
    (196/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.998046352 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.516911689 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.143133494 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.926673646 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.503493137 seconds)
    (201/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.053458389 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.852026216 seconds)
    (203/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.898549311 seconds)
    (204/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.239683468 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.689718391 seconds)
    (206/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.101747291 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.084012538 seconds)
    (208/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.890877897 seconds)
    (209/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.789800536 seconds)
    (210/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.92164878 seconds)
    (211/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.902285777 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.196040839 seconds)
    (213/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.940742778 seconds)
    (214/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.921111957 seconds)
    (215/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.978700284 seconds)
    (216/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.030886142 seconds)
    (217/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.936273726 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.275834824 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.432059496 seconds)
    (220/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.437329931 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.812384392 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.220072573 seconds)
    (223/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.98411521 seconds)
    (224/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.022829679 seconds)
    (225/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.916706844 seconds)
    (226/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.763283485 seconds)
    (227/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.18533949 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.077916055 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.88937153 seconds)
    (230/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.92155414 seconds)
    (231/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.896151081 seconds)
    (232/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.968294311 seconds)
    (233/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.984246975 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.894986981 seconds)
    (235/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 3.050332151 seconds)
    (236/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.439191289 seconds)
    (237/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.926159719 seconds)
    (238/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.281062339 seconds)
    (239/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.965949271 seconds)
    (240/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.035609453 seconds)
    (241/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.360063192 seconds)
    (242/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.472435914 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.9206427 seconds)
    (244/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.920797547 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.895311016 seconds)
    (246/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.239600123 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.008415828 seconds)
    (248/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.896028571 seconds)
    (249/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.943105009 seconds)
    (250/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.778701727 seconds)
    (251/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.997152917 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.987437718 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.881995758 seconds)
    (254/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.977162974 seconds)
    (255/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.026648443 seconds)
    (256/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.899180995 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.774495851 seconds)
    (258/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.895921915 seconds)
    (259/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.138787617 seconds)
    (260/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.382348547 seconds)
    (261/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.986505071 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.923148109 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.08680806 seconds)
    (264/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.508746622 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.922658029 seconds)
    (266/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.923607134 seconds)
    (267/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.960007681 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.897216189 seconds)
    (269/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.213353445 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.027826207 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.921580992 seconds)
    (272/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.998385676 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.26133177 seconds)
    (274/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.021562789 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.973000148 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.037984114 seconds)
    (277/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.376851388 seconds)
    (278/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.139513681 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.9046315 seconds)
    (280/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.280596403 seconds)
    (281/309) benchmarking ("sort", Float64, false)...
    done (took 5.692895606 seconds)
    (282/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.490093632 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.900982568 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.995400552 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.982847208 seconds)
    (286/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.408910143 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.147264848 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.981961432 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.584443873 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.051345683 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.652360836 seconds)
    (292/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.122668066 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.815157266 seconds)
    (294/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.90666516 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.930273509 seconds)
    (296/309) benchmarking ("sort", Int8, false)...
    done (took 4.896424284 seconds)
    (297/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.206236305 seconds)
    (298/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.182308617 seconds)
    (299/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.888596355 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.004939997 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.351569749 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.191172743 seconds)
    (303/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.061177605 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.918888337 seconds)
    (305/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.952969465 seconds)
    (306/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.074909195 seconds)
    (307/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.966741983 seconds)
    (308/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 3.399530968 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.82394132 seconds)
  done (took 1015.773982101 seconds)
done (took 1017.655561703 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.921255946 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914576186 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.90316896 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.916359753 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.008868558 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.924944697 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.905491684 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.898109945 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.946195905 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.941595677 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.891120199 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.920588205 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.895537483 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.896091443 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.890586702 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.904499921 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.1973881 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.911506165 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.911790722 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.896216685 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.904702884 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.888849205 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.937319677 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.921843026 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.888326464 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.886579131 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.889276552 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.905712476 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.997885672 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.886559959 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.883565439 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.895358429 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.189777377 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.900394272 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.876960388 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.899851549 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.891435171 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.889047447 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.883840623 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.916608181 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.278443095 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.906896978 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.881334818 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.878914147 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.882321655 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.879494855 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.878247416 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.881325256 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.890157949 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.891117782 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.27169771 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.917584368 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.877642591 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.875002871 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.88867237 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.87288359 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.874300741 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888248352 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.891987432 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.888109948 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.171996064 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.891225121 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.870595455 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.885425458 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.875439419 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.301577988 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.889696526 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.871874285 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.266194179 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.898406622 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.303073364 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.899816442 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.864783938 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.877901235 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.897062188 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.170591561 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.874487127 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.860066826 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.869371241 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.860266805 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.872044493 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.871331301 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.86221714 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.859239429 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.873674458 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.89323689 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.865785246 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.858411057 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.865366009 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.878971527 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.863811759 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.872353297 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.858812602 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.85038033 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.862815274 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.858778889 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.859817241 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.856458254 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.857047914 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.863089129 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.25120227 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.903810487 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.847012975 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.848150675 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.85077185 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.865073844 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.250717259 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.880579319 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.871717357 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.896526974 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.850004895 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.147581636 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.87108519 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862124696 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.853907809 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.848687848 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.842130458 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.146283607 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.264044182 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.887832999 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.845322209 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.84215904 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.862752227 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.843871559 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.837012063 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.148261363 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.861515575 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.859034373 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.960046234 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.847955182 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.869748584 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.839527118 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.841174528 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.870187426 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.853915049 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.869979638 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.839887393 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.852975846 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.856923422 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.831490904 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.845904399 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.845152343 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.835429108 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.844619523 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.827848389 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.864969524 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.846562779 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846704229 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.853256624 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.957382162 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.828112746 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.128671545 seconds)
done (took 292.95198489 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.897372599 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.823689356 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.924028777 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.827781866 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.904763946 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.909224576 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.819645719 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.820172354 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.82228707 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.192396139 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.817818654 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.817647975 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.81392498 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.815462552 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.902371328 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.818571592 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.81976104 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.152409932 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.817997721 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.888142785 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.810950254 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.812595772 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.814106885 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.188975584 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.810911913 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.809804805 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.882718609 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.811718548 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.149812485 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.808078948 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.80755509 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.146583661 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.900391551 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.826897104 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.817797701 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.81548881 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.88942477 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.810895238 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.887962525 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.88820993 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.910683399 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.845998008 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.801889175 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.798769292 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.804612323 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.806749352 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.796474751 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.827955405 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.7977955 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.797387431 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.134294185 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.809314787 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.805485373 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.796589222 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.795828059 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.819515526 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.793553754 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.799753189 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.889397611 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.800545223 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.858463743 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.169848118 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.167618256 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.796838004 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.79080129 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.791374487 seconds)
  done (took 180.259064256 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.862566907 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.865651279 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.858604026 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.793798896 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.842016524 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.86385009 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.791254825 seconds)
  done (took 14.599683916 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.796747451 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.791326203 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.841799984 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.842938906 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.790282845 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.938269255 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.789331199 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.800601511 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.791045036 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.838466768 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.788178413 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.789177837 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.795041231 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.789071211 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.8339654 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.798117217 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.901706326 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.788396427 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.787496363 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.93705688 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.782966052 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.791900575 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.840492929 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.797199738 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.785325354 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.790713556 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.36925708 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.785252726 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.782302575 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.786137331 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.781909947 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.827854604 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.786460557 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.786070672 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.782594731 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.901091313 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.785540795 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.783208292 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.786298185 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.782690872 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.785547279 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.78713834 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.785931436 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.783369361 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.786458225 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.809832845 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.786659219 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.786460173 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.786685285 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.787516427 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.83731918 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.788405401 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.783851364 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.784648324 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.842570383 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.792724081 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.789151813 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.783760262 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.788183886 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.784831681 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.938688 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.833915104 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.787399709 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.835204597 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.787558329 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.786923391 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.785795219 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.78656516 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.882036301 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.787255924 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.834915141 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.784532227 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.945179639 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.811481708 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.788807093 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.791356798 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.79126904 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.788436003 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.779626639 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.793445438 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.784416113 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.789254337 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.792620521 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.794410349 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.784047245 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.900733844 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.895364759 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.785449815 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.802544736 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.793845481 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.786072657 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.840613666 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.789041192 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.787499446 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.842689815 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.903300079 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.84320224 seconds)
  done (took 197.761317387 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.793612446 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.797691474 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.790001203 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.805181858 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.789133176 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.78730643 seconds)
  done (took 12.478794781 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.790748933 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.790822141 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.789244737 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.788971281 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.78884178 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.789883913 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.79133273 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.791017963 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.79486212 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.789886922 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.790992024 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.792436442 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.792076575 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.791563501 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.791125698 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.790046876 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.792294788 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.78739602 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.79026745 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.792274877 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.94016296 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.792139373 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.793592317 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.792153515 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.79625121 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.79054882 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.798577095 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.791435131 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.79165557 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.798973556 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.79628685 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.792473304 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.792055216 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.79676666 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.795856371 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.792759172 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.794215753 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.792313224 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.788592334 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.792154123 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.792196255 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.7936971 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.792050382 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.793297933 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.792594425 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.795927044 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.796406395 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.801848551 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.794091139 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.793831667 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.794157548 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.792215649 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.793011939 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.793733707 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.79432473 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.798225952 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.797598262 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.795208526 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.793488656 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.794929237 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.794915165 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.794857166 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.794468051 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.798559599 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.80045011 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.794494137 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.795034425 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.798071075 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.794155095 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.791741955 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.794318359 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.79063825 seconds)
  done (took 131.987049073 seconds)
done (took 538.852022503 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.957168438 seconds)
  done (took 8.676378985 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.913259886 seconds)
  done (took 8.756706759 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.074816862 seconds)
  done (took 9.879960419 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.880066994 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.883138807 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.879767365 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.875215299 seconds)
  done (took 29.340593987 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.08398279 seconds)
  done (took 8.886935683 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.894442486 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.868521626 seconds)
  done (took 15.597754466 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.999902619 seconds)
  done (took 8.803564073 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.962217002 seconds)
  done (took 8.785705594 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.89333044 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.905146277 seconds)
  done (took 15.615517202 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.856624734 seconds)
  done (took 8.660606246 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.473008962 seconds)
  done (took 11.376390135 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.896527693 seconds)
  done (took 8.803620085 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.947648182 seconds)
  done (took 8.750999203 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.913070095 seconds)
  done (took 9.71652669 seconds)
done (took 163.370966519 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.890148094 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.87531418 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.873723874 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.872917449 seconds)
  done (took 29.315576228 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.911921995 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.912888268 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.914409114 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.924207142 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.917238848 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.913231632 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.905333026 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.905684095 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.924981473 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.916652541 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.915546561 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.916184936 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.914910449 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.906016211 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.916667814 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.915640191 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.92433781 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.915610131 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.905116455 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.916918848 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.880124031 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.924742876 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.917262761 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.880552543 seconds)
  done (took 47.70201573 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.081506513 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.951588599 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.033139315 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.932726887 seconds)
  done (took 9.804054635 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.933343315 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.934010042 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.945683721 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.98489123 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.007975176 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.944276658 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.904511313 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.903236973 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.889226667 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.93471973 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.010833029 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.932085074 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.027965998 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.881110929 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.066438535 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.882280591 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.882787731 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.933308804 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.985022299 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.996922262 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.882250423 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.932832831 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.934420802 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.924854168 seconds)
  done (took 48.459505997 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.87692535 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.88843808 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.88045933 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.875817916 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.874611617 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.87595089 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.881513034 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.880173979 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.893744539 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.874163247 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.872497524 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.873396927 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.873755321 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.871577288 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.872003697 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.885330336 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.885637105 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.872821404 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.874309794 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.878151556 seconds)
  done (took 39.364462959 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.866742955 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.72101825 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.218378131 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.12181413 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.866036269 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.866962077 seconds)
  done (took 31.458406778 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.885502 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.877358878 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.873114355 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.92860986 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.005258305 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.875527606 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.873882504 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.88303419 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.915001359 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.93609177 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.891555925 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.895664599 seconds)
  done (took 24.638781623 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.867080206 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.880143249 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.868096217 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.895665908 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.88259719 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.875751968 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.882790424 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.864828788 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.883105342 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.887764626 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.873340485 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.879489065 seconds)
  done (took 44.341517829 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952490247 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.758180698 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.909951319 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.577227813 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.332954986 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069189331 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384141586 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.191466368 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.858030031 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128658192 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.911046306 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122977511 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.135326001 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907145136 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.877650305 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.383293583 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181731771 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109702829 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903298032 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.686801705 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.26581736 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.816598443 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.71067658 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.037331583 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123469441 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.044573879 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.174299343 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.870816325 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044413706 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945957626 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924280713 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.913015254 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187362103 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282657368 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006903405 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925413496 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.56959094 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.634547792 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.903847246 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.630383176 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.818012793 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.037914767 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921489949 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915603208 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.849382579 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.470442721 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256204849 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.921124868 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.626231611 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.916127943 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925934088 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00404083 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.919576036 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.730601881 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.904195754 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.191460956 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.91368653 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922271179 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.4899596 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.978397062 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.578033223 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.852249505 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.111427004 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.645180632 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375430118 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.061225698 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.919630665 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920749917 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851887771 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.634076693 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036708146 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.059770116 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.932061672 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.566665098 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224787317 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.930423199 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.990225985 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194220277 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.742032398 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.850322767 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145610203 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.872087353 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851188014 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.776437013 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.851865158 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172670475 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945735203 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.544688924 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950448839 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.254312838 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.927320746 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936211915 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924857783 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.141228469 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.48463388 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919081504 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.659228906 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192609731 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937475285 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.261789486 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852865002 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.917580531 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173214667 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.129384083 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.209343864 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.401799329 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086026796 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915554933 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.008734869 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.898000756 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.927197895 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.189977252 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972980794 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.979674987 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046529386 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.878574055 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209551049 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938849019 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.094239348 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.923065256 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179570958 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.237738575 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.200074535 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983543139 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.921000524 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.921224523 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.717235277 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.541397057 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.18606533 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.920285265 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.459404037 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.927237076 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.922161787 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856538854 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.698622501 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.919105247 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.018050733 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.147933505 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.792384734 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.318254921 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857024434 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.067706424 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.036392768 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.14087251 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.565818679 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.992666689 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177664853 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335739875 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.186836836 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037446089 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942559865 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012951237 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944322601 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.267075732 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.282325452 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.925815863 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.926646026 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.718594768 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.983616651 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921754525 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.927614786 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.720132979 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19651452 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.940547354 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.922331898 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.811143939 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.936244905 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988852504 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.927605675 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.932514983 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.456121557 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.674406126 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.930691775 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.535243241 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144000087 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932927966 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.608990299 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.101501877 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.005856133 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.19015423 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977687981 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.855636564 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.635023024 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.616491074 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923658026 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858797165 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.923537318 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933177614 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934105004 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.307483132 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.199780953 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.96038067 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.629188092 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.033536978 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932743034 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.928136884 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925461836 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.445669444 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.967475956 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.460648139 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.040730689 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063090601 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.938411416 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.860670727 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.929232013 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930578013 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.926647821 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.880948437 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97860695 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.67424811 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37602417 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.178644029 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.579303454 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939994263 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.661695816 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.047894483 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.962138533 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.678026516 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923495159 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.028242559 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003361581 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.93555504 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.634427302 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.69059002 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.492750662 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246980279 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.226922109 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364117629 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.364284052 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.299287264 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.272161076 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159434119 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.456034673 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.987075318 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.27215784 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870534309 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010695242 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.569921779 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27386434 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937664587 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153922545 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315723684 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.714072896 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078172345 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.137731893 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960952261 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.769857531 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.960424246 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.128658978 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070117859 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.727707566 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136691105 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261712599 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.671381061 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.026225298 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.926363513 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.615062808 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003161655 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.635336044 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.289460166 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.497019778 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.89734847 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413936255 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.927669011 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.372183652 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278244227 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.305091483 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.016534396 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863448316 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.938846074 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.938923866 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.928845432 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.906827581 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.811548287 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.190056251 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937820701 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163566967 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.248889019 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182412221 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.828928982 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.932644696 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928558727 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214583631 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.627224455 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161972279 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.304467211 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.51149965 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933894006 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.863606499 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862581597 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.622242151 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.938266783 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.905408859 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143394706 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.111002677 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.916174707 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340073885 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245162933 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.18361557 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.942088527 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.202128612 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.199268221 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.662785099 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956063124 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.030094831 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.659965291 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.037337475 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.197707505 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166199241 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.730498171 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.157791676 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.977705665 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.738294528 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.929413921 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.142874339 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.199173717 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.920428559 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166144937 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.648249521 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.94537249 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312919873 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986032746 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.885170573 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.093624318 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.123972412 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939983203 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013592849 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940171336 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.940366815 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.941825581 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97746751 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.884803929 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.054468036 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.943788447 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019674421 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.982781551 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.518620709 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.937359826 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2054371 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297212699 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.251306212 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986065211 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.931235295 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931670085 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865566871 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065518817 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.377634887 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205204644 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.063921841 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.229582599 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959347928 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.700568935 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.24485342 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247965778 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206889824 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.827141 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933665914 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.044140046 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.200126507 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943389844 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.144007738 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156375877 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235742031 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396400111 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.10469143 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.378648274 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206011021 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.304976729 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.935437969 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522704079 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.949491019 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.689078729 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.967069355 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.904992252 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208633401 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944555583 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305306482 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.950068343 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.132393866 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.451511582 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.656892379 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.293165907 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.906042239 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.986106735 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208017491 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.310653109 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241649894 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005621536 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945659253 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.639050189 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074060195 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.843286609 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.224152926 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.936164312 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146705728 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.646379633 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.945489764 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212531593 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238099643 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.931854625 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.865520572 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97184456 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.945859173 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.160312383 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195110024 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.181069335 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945491592 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.94470108 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.754235856 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.211307271 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99095645 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868639062 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.936683962 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032725356 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.179665686 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956196809 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.625101199 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.647210132 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228987668 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.849017781 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957663757 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364933309 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380609386 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25542401 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.459814276 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160576826 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.488757078 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.808617425 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.314909405 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.943609676 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368123366 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.323006521 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.940306685 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.479222338 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051919564 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.20720734 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253474023 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.953533843 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729616167 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.978276212 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159176814 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.543813287 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87612593 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.93372452 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.99886073 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.936415951 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.068898658 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945979639 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.889659483 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835697917 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.761298557 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432659099 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.940272399 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.923358559 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.720172737 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.5100043 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050402105 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082690597 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941775882 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.656425995 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.230960381 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.192743257 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.472019425 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.013053753 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.944628262 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941041573 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.867378428 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.135623661 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.318595531 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231999385 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.310770735 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.053710119 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.942078292 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.15395739 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150567264 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.908238732 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090054366 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357298337 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054673459 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.692772422 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.621268161 seconds)
  done (took 1713.972974469 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.975004141 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.980989541 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.947042602 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.053255784 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.985242143 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.023104318 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.030256128 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.982961025 seconds)
  done (took 57.847182548 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.941565176 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.161269693 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.950720702 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.940258205 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.972077508 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.941750478 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.13822553 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.950095668 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.966427954 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.951209532 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.940502303 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.939505499 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.258894687 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.964713808 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.943314558 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.970200956 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.956557544 seconds)
  done (took 75.798574784 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.944884584 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.127956374 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.971216791 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.962067465 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.901686592 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.951300073 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.909511686 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.962450955 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.940279332 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.176712044 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.270363475 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.959644043 seconds)
  done (took 90.950718189 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.958022606 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.95094965 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.950457797 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.950706181 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.951170665 seconds)
  done (took 11.640680335 seconds)
done (took 2227.185976161 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.251584216 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.171417134 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.176026087 seconds)
  done (took 6.2203904 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.094459796 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.140987269 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.260669422 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.281017407 seconds)
  done (took 10.652747676 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.237438751 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.343014309 seconds)
  done (took 6.453007345 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.317890273 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.970747138 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.342495174 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.944048032 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.943783889 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.942521327 seconds)
  done (took 22.708424996 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.948376917 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.951459828 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.94892734 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.951295646 seconds)
  done (took 9.674087766 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.930629549 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.670401194 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.927646811 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.938028094 seconds)
  done (took 21.340283679 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.69712545 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.346817409 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.692601675 seconds)
  done (took 9.611101704 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.437667314 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.880995612 seconds)
  done (took 9.192361544 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.199839819 seconds)
  done (took 4.075117239 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.978192084 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.218199184 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.465198575 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.4656764 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.547156063 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.778693827 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.251003516 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.175440151 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.409696475 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.398590337 seconds)
  done (took 25.562767922 seconds)
done (took 141.244852944 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.317080468 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.186048823 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.146384463 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.286407815 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.172731216 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.146327128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.156071008 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.271970012 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.785817858 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.783075475 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.288964982 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.191049333 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.103299417 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.188997241 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.106432896 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.191737701 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.171390178 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.34008833 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.981660892 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.182957666 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.160397028 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.912270176 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.12629597 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.925557658 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.175243461 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.097325181 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.489129833 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.954695927 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.130873721 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.498344597 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.097680307 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.334549092 seconds)
  done (took 173.775872188 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.93683955 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.94460432 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.945210576 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.944906085 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.316121758 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.946868028 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.945452352 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.944179601 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.231602838 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.214274607 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.947166371 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.30746665 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.948016875 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.94454351 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.94722529 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.946094561 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.396107514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.947218344 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.946114048 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.945196554 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.943299656 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.134005947 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.946411127 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.140895345 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.35473088 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.947404524 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.947520571 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.948781645 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.946123571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.945129455 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.945972835 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.948424228 seconds)
  done (took 210.673116885 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.949679416 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.946534757 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.94819633 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.946937793 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.947690494 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.946012552 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.947925946 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.946879617 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.518346262 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.51477831 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.948042433 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.949861891 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.945542189 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.946842166 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.95437571 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.946607253 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.958870567 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.958816917 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.960094818 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.962574475 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.967239401 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.701694635 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.967282938 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.725834081 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.965290896 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.967334124 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.947527804 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.969757269 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.972420842 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.969654236 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.973193541 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.94854981 seconds)
  done (took 223.099608043 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.156012814 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.958979987 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.958938338 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.888568188 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.959187666 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.958563161 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.898318244 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.147377945 seconds)
  done (took 19.835985223 seconds)
done (took 629.267647027 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.422876882 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.264981912 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.131830825 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.980021805 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.232193029 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.014096375 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.978525141 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.045611718 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.719365404 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.047611272 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.668214053 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.997491325 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.756613563 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.002539603 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.102451004 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.036727468 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.525270599 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.614001018 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.15983126 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.041804757 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.154768841 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.920576284 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.06094642 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.74059587 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.773961146 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.967617097 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.213775161 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.528738598 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.987519805 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.145294226 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.782528582 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.418046278 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.990813945 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.976863327 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.03565105 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.015131863 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.39368603 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.988412112 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.10544571 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.723331656 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.049184281 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.601706218 seconds)
  done (took 107.197314501 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.950330701 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.948837176 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.948171025 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.949110831 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.949673207 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.948910952 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.948728092 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.949160709 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.948473001 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.948428151 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.948958922 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.951177299 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.949645348 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.950677336 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.949439098 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.949071107 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.950649321 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.951033232 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.94944613 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.949127954 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.949996324 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.948724699 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.962028855 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.949027871 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.951162698 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.949651371 seconds)
  done (took 52.593859607 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.962175435 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.129616192 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.223363511 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.978479149 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.96164342 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.965857545 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.980460214 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.967357613 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.964021427 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.962524351 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.05417338 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.966471412 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.98120691 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.222714144 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.975944511 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.963378914 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.962316219 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.962385844 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.137289316 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.977276514 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.980376216 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.965561197 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.981918146 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.975288795 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.964852382 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.962043619 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.966831616 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.433278004 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.969536797 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.057987545 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.004922028 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.98250797 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.384669466 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.707044231 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.014900595 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.971476924 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.963092758 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.061678285 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.968278434 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.962762625 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.981484869 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.966420599 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.223744234 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.470293985 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.977502321 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.961350726 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.44721614 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.067144767 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.00389821 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.972666 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.226478927 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.981412106 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.965867146 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.963902842 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.000418799 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.970902324 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.963546552 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.292465068 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.974341809 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.982369019 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.969483281 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.965921509 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.143008038 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.971405367 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.131189171 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.973190938 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.972183385 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.966020127 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.225908283 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.977761894 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.471913986 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.977741446 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.964226559 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.058967949 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.135635108 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.47252497 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.977545315 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.143360429 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.402327703 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.989567673 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.972614656 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.424488716 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.993706772 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.971593639 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.968543226 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.967026615 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.963705723 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.010773107 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.981653305 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.398166007 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.476514642 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.308808649 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.99270645 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.978366031 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.964931139 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.28791626 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.971201779 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.963939365 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.218629325 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.474571512 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.97444794 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.971832386 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.45951147 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.979366989 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.983727397 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.972753766 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.23150136 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.978464416 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.01427498 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.9662973 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.972385584 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.96974521 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.985467847 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.970850944 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.968469934 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.453443657 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.079732956 seconds)
  done (took 243.971174947 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.964130702 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.988400283 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.960896745 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.991564515 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.960431349 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.9674116 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.959257957 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.960564732 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.966660739 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.958980682 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.959744521 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.960062796 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.964099547 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.084442572 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.981946881 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.967284998 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.573616007 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.964021643 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.963605306 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.975356233 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.615802999 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.965411305 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.963360504 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.005389591 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.962189632 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.964803798 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.033051394 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.969707643 seconds)
  done (took 170.446191741 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.968717037 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.08450213 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.982525599 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.996047577 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.975598815 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.965817781 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.992749822 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.980615026 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.972444798 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.966460403 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.96815222 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.030507656 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.977867514 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.071576943 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.997773872 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.997508676 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.071424893 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.973475366 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.966599877 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.966895008 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.99791097 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.958791489 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.032354509 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.096968376 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.983402601 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.086675575 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.972329621 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.970087993 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.96709082 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.088670234 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.984555496 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.030111466 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.995326677 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.984499814 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.093851714 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.088801374 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.07681249 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.995408355 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.970253795 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.96699489 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.967866796 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.958139474 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.091085657 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.986328068 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.970301537 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.07984359 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.986884888 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.971182355 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.980126177 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.967789303 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.983179406 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.989235131 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.038264874 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.10009249 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.002827189 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.992593951 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.993566479 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.24772165 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.980481451 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.072156801 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.962015081 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.089940623 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.989196305 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.958965753 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.970363748 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.974695831 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.998197225 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.997943109 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.0747961 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.97539529 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.073807056 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.003654517 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.973472576 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.969187662 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.973726105 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.092752207 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.089636981 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.004797744 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.005862116 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.000496534 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.96359853 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.973068429 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.961612294 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.989774981 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.973385253 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.091517544 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.08846098 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.977838128 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.975778593 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.974390705 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.975103299 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.998422795 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.095792415 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.004937206 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.069274213 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.03880545 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.044289279 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.984759324 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.984834646 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.972392452 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.036166212 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.982951977 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.982937522 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.299117067 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.04425373 seconds)
  done (took 213.165789627 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.457232624 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.024434508 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.029752751 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.281813499 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.409718414 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.860217173 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.015674976 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.021069252 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.043565738 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.208596029 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.094517541 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.040639135 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.005764683 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.993752374 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.018621377 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.041696233 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.031535272 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.358479026 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.144061606 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.102105394 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.998197691 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.331303752 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.344207321 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.42265189 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.05673426 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.372461157 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.708699972 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.162687764 seconds)
  done (took 64.482632268 seconds)
done (took 853.735930167 seconds)
SAVING RESULT...
DONE!
