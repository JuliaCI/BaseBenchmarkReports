cset: moving following pidspec: 713
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.240944358 seconds)
loading group "string"... done (took 0.58989812 seconds)
loading group "linalg"... done (took 8.198801848 seconds)
loading group "parallel"... done (took 0.173653924 seconds)
loading group "find"... done (took 1.285587323 seconds)
loading group "tuple"... done (took 2.037907611 seconds)
loading group "dates"... done (took 1.333721347 seconds)
loading group "micro"... done (took 0.203318549 seconds)
loading group "io"... done (took 0.932738784 seconds)
loading group "scalar"... done (took 40.334841192 seconds)
loading group "sparse"... done (took 12.674018823 seconds)
loading group "broadcast"... done (took 1.003955835 seconds)
loading group "union"... done (took 14.580026293 seconds)
loading group "simd"... done (took 4.867863006 seconds)
loading group "random"... done (took 9.423828454 seconds)
loading group "problem"... done (took 1.695567165 seconds)
loading group "array"... done (took 22.964014957 seconds)
loading group "misc"... done (took 1.724826685 seconds)
loading group "sort"... done (took 3.507615484 seconds)
loading group "collection"... done (took 18.904124146 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.550694265 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127804637 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141154494 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124041045 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154309617 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120402316 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126974639 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086519025 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.86402375 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147957676 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115521615 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.424408388 seconds)
done (took 5.3619619 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174910679 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092118591 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082078571 seconds)
  done (took 1.228545204 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067321798 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131259372 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068976612 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069087553 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071842221 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068716709 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068822459 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068375301 seconds)
  done (took 1.601920558 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075142984 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070848948 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067949416 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069926518 seconds)
  done (took 1.337732504 seconds)
done (took 5.47318133 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.810291882 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.2151053 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189360916 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.417406852 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.13832558 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183248356 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641657818 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315597434 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.196736826 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.0971004 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116124701 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.400684533 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127626081 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649700284 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078528986 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096073926 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143787982 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.44205753 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071484218 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08665398 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095154415 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133689716 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08346446 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077578137 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152597137 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070630189 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143727763 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08530317 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069241044 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.256066573 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175405781 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659016777 seconds)
  done (took 10.511054839 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.105268537 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.10304659 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070916502 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128492653 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101566227 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072542936 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078275587 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069716272 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093075439 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133158175 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095028679 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111895706 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068446059 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072092424 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085808677 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20174963 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083254278 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084103147 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073401752 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081358628 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110859989 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.085055375 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083013013 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082898972 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132171859 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.173292968 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10037978 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100710002 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070204097 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084733118 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118091579 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131030023 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068425938 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068334585 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128516569 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09770937 seconds)
  done (took 4.641282441 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.018800244 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.155836646 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093719988 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139309347 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066952239 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11366859 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067657518 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08636026 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243695528 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.401178024 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.642831172 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.151726339 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120217892 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107810198 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073684996 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071845263 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069846416 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070133105 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.284413886 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10174089 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111020783 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085505993 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072628197 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071586863 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066729724 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073634118 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065717083 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070287159 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090366678 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078224094 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.332909604 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12824512 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070289124 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.957220282 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.169914409 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069921685 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10823722 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168630678 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097470324 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145097437 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069995259 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065751485 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.300170546 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067875957 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073632731 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068716995 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087509561 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112134603 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123511615 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067353455 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069204776 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172440474 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067739759 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084103257 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.216002971 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153120626 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068634067 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067037595 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.304207927 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095215982 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074204858 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067160402 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.198415906 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.119696993 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070658933 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096342855 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070029755 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071658509 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070553148 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368644343 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068953251 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.012994426 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071132775 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079161253 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072642478 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073963378 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08209882 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082171144 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094087401 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069344954 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076395241 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069032104 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068312567 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069402062 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096619413 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.392399487 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068764919 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074583591 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.0675346 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094470667 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100669745 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07217636 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067554996 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104111089 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070668461 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067343404 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069219259 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.121482915 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070049257 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112508533 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06939345 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.177256765 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098682671 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070042406 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102354845 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08248545 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073688678 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.468977793 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067472975 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074617625 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067823406 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070020712 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068861711 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.0661541 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080934941 seconds)
  done (took 22.190130983 seconds)
done (took 39.413254699 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247703614 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085352514 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086084577 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086160401 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086070422 seconds)
  done (took 1.73834289 seconds)
done (took 2.867583179 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128672592 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10190099 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067150031 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100347339 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066211256 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10937993 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103131456 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085430517 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10310851 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066508208 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100108756 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066623283 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06675953 seconds)
  done (took 2.305930356 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085143207 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084668424 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070681777 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083694926 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063998741 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083363169 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082628276 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090244558 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08269672 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073876247 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064430984 seconds)
  done (took 1.988335539 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083871954 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085294241 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071052001 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082931496 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063904118 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083151123 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082572364 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087184373 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082689528 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075422836 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064692715 seconds)
  done (took 1.976581558 seconds)
done (took 7.382389891 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078487948 seconds)
  done (took 1.178909022 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.539672194 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.5803115 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078522687 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.103401358 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197072244 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11164668 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.238593572 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085155281 seconds)
  done (took 8.218436223 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.108535542 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071950282 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07068983 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070984147 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07160384 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071459848 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071841845 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071147949 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072064105 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071106107 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071092677 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07197439 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072671227 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07066595 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071440826 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072633284 seconds)
  done (took 2.382309623 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099395126 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097507701 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075943394 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077037585 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07472102 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07406018 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076821591 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075928833 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073258645 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074942116 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077751041 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075835131 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075452332 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066420689 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075962564 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078786332 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073685989 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076559926 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077233335 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078475014 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077417772 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066197591 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075561624 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076910212 seconds)
  done (took 3.077437473 seconds)
done (took 15.969746132 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.107839566 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069210147 seconds)
  done (took 1.291553539 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08159299 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082622748 seconds)
  done (took 1.289891459 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.079693732 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064287596 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086402194 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.075623043 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065203776 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065287475 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085065762 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06582276 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065545517 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065694721 seconds)
  done (took 1.845026431 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067926802 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075431298 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070994183 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081167972 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072427853 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066409982 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071751161 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067363773 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076072339 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064988684 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070001822 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085282129 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.0698816 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087197251 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070722777 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069715314 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072608417 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068734322 seconds)
  done (took 2.435426375 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065066206 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065525324 seconds)
  done (took 1.26205784 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068734872 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065528868 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067762964 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06814687 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064979008 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064054893 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065427475 seconds)
  done (took 1.592088974 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.411506017 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.125186246 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33706466 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072948713 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08283853 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262183017 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06615052 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071453864 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07162884 seconds)
  done (took 2.67226795 seconds)
done (took 13.523040671 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082869315 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088506686 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099636348 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.417525855 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095760389 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070101616 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11565852 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184297457 seconds)
done (took 2.295829877 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211062967 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.833250815 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.493857849 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212530678 seconds)
  done (took 2.673487476 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352803148 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.198956357 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078630488 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069016505 seconds)
  done (took 1.841199752 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06913992 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071629389 seconds)
  done (took 1.279187478 seconds)
done (took 7.145721723 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066983904 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065824575 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.067405565 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066100869 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06620811 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066606094 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06611244 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066183392 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09124443 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06587331 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066375521 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066231549 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066343279 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066735888 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066684901 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066376974 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066955241 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066624265 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066326802 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066485544 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06629989 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066529324 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066907288 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066427849 seconds)
  done (took 2.789874617 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084664608 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068926505 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070702364 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070045271 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071419604 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070887354 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070463514 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069017967 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070564523 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068570399 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071481741 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071406339 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06846775 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071321425 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068834559 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071026298 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070531269 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069216356 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068713412 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071510917 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070541571 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068861897 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071114956 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0704106 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070806339 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071200833 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068339717 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069570586 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070472232 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071126929 seconds)
  done (took 3.268626099 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06786706 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063298105 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063147315 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071760779 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062684011 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063411268 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063254503 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063220305 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063768783 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062744009 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064589342 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063311162 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062937699 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06364782 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063364612 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067529835 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081319004 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063226384 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062948934 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063257585 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067221271 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062783888 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063107226 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062616043 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06570934 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062573156 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06305116 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062716611 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063663413 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062731624 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067261594 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06690532 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06295461 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071822347 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067505787 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062712238 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066719879 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062346154 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06372318 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063175576 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062776073 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062736168 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063257219 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072093893 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062952612 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064490155 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063245796 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064035931 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063043723 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065406478 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062705142 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063364482 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064752657 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063924606 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068057968 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062988989 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06348003 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06299814 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063717577 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062683403 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062773224 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06245147 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066351156 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063354398 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080268678 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071629727 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062612029 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064190486 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063224346 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065663638 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064664554 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078772189 seconds)
  done (took 5.831478193 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088656212 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090304705 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068397477 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068111416 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063962172 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063532592 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072435674 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06384607 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068794903 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083433234 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063868225 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06832754 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068032621 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068074008 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063761789 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068490035 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072531661 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06438411 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063890841 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067813518 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064170991 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071987587 seconds)
  done (took 2.700993508 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150012321 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070458412 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108399598 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074696957 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072831061 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074964516 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069641302 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070204404 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070016296 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070658695 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070342789 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069978527 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072863509 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070246181 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070404063 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070016111 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069987326 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070879076 seconds)
  done (took 2.552935697 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081192251 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069209935 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089892498 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069087905 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068909533 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068730897 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073326836 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074259838 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069043025 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069320839 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07448002 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069166319 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069000696 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069153005 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068841716 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069897384 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068748589 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069274196 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074105343 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073479349 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073505419 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074469949 seconds)
  done (took 2.741698291 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090233085 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068292434 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084990454 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069979084 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064371762 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063860916 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069753975 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068353544 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06963076 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067876954 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068469324 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063661946 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071136972 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06839877 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071252186 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069002416 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068014841 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068927813 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068467389 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063975064 seconds)
  done (took 2.555351149 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086592791 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066436343 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066969989 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073238076 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066651039 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066736095 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073142803 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066892164 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066805777 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088087293 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067002662 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067097777 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073762314 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071011003 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067230485 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073254761 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076254777 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073544794 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067502051 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067202477 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087680592 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066899206 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073141441 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067296843 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066744626 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066948115 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066885201 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071333985 seconds)
  done (took 3.150922417 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067543985 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066230744 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06635169 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066080523 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06732808 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066802536 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066495191 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067029386 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066234913 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066610087 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066333291 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065988504 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066320053 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066722928 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066444167 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066185342 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066846214 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067005053 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066635279 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066975459 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06613694 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066226704 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066459805 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066202813 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067244385 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066525515 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066137184 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066819064 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066200708 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066260506 seconds)
  done (took 3.159214958 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078193 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075415577 seconds)
  done (took 1.315777684 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065938409 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081188966 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063334143 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074603941 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072586056 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066833667 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073283237 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072947478 seconds)
  done (took 1.726686625 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087673378 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078245148 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06600302 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078225368 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076802479 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086421876 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128425285 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064558749 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073950867 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065750151 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084872197 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067602278 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076240471 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071129431 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075949181 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079197081 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063171893 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070874464 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067282867 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063217003 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064765019 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07772359 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073745651 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062730608 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069552154 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091219538 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08017746 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063682403 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070811661 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076292167 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074452853 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061336429 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064031042 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064011895 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062050989 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07482306 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082464669 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07073298 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076614739 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064532419 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072155084 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061854241 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072678168 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074770756 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079827732 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064118354 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064053062 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06303062 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06596142 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071480414 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063331045 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069834229 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063077558 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077405343 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073061923 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080876478 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063998248 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071169001 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071893229 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072506452 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07691903 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070881349 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074594183 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064765745 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0805887 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073310969 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076277657 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062216703 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060975601 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062013622 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077612974 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09198915 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073176742 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063914545 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066189016 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062980571 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072485297 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065809432 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074904654 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076736931 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064907516 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069967293 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077688782 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069679902 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072148308 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071625713 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063613073 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068529895 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06618345 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085300794 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064192904 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063142822 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066104428 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080985622 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075043733 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064932077 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066257814 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076794824 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062585049 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065945112 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065671555 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07066038 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078984578 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068456884 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068717952 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077780351 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073783499 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0696542 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071093146 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061558053 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064826175 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066438792 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075807778 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061407336 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07103583 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068135172 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064085901 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075853434 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062642515 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063579826 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07643674 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075703423 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062581608 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061443431 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070899647 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063760733 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066115755 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077502318 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06241968 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061984626 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061881465 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072153237 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063191222 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071617453 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067582438 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071228156 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061533598 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.187412154 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071149054 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079880758 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070472405 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072838488 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076774351 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072215174 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065406118 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078292303 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072618703 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067678741 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074908913 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069538282 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06317546 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067903605 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072611161 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063999683 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072581272 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067686533 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071969898 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.0656484 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063938021 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071623573 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066401675 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067318285 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070304483 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06403105 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081300815 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071294015 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06347823 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062610021 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072474996 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066689923 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064658744 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067270347 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071677694 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065521852 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063937682 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06514307 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071926799 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073487521 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068822561 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065890691 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075711922 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082801985 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064897392 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072349826 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065164049 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066720892 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066160748 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080716285 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075967906 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069855166 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072409628 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062790094 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074841673 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077687234 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068115457 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063561071 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067520659 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069346946 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077261941 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069175832 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065668176 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063595579 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071032589 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068047043 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071993392 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064963037 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067425622 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070532631 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063498311 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071423986 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065011682 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077898531 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070953124 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061669474 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066565027 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0622932 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074875797 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063314452 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066870026 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068069128 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065667354 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064825933 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071922688 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062299635 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077628778 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078516576 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070613476 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067924031 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065054106 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077645783 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070778855 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072528512 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072184014 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075414194 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080939825 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067778247 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072155547 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080795222 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065158079 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062371818 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074795464 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066717763 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063640602 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064210626 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063770617 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072788759 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07224417 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075268561 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062275599 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07215989 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063939062 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06715539 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062912038 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073148245 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071569136 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068969829 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076597222 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065034514 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064346104 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071724602 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064094959 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064593458 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064602995 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070951839 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064622464 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070024861 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066705474 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070265498 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066658034 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062086992 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069756303 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06412193 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069430422 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073316953 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063304355 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070111207 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070685044 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064908212 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07021941 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067661022 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.196485408 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072536611 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071308348 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071837042 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073058188 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063984836 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078015858 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065884085 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078601753 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070401696 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062878982 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071453738 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072207102 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070698596 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066445315 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065702513 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070466693 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064427237 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072102104 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076322449 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0662962 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081547896 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077524232 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071292391 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072293902 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070965971 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071036864 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068346835 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069944299 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065738105 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071552459 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065001297 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074711931 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072423253 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070490298 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071968818 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065633735 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070376152 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066183641 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063071864 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068020265 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067876665 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065415847 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078590272 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065822893 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068204604 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064973132 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066566165 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064728409 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062928591 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072872885 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073312786 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066443157 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076191946 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068511008 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071717309 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082051065 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063044116 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06431485 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063589605 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067002192 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078348621 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066011711 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079360432 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070410737 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067826985 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063217924 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06599232 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06455784 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062993389 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063662056 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074123702 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067856567 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064742677 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065754314 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071638527 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066364442 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078935528 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065138752 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070265743 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065955166 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063599734 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067915354 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068112736 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072752504 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066440958 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067220495 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063047462 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065239834 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070453429 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071971188 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065691129 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.07115199 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078036648 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065116878 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072630476 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06796894 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063432635 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072681973 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065137911 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065222269 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06782819 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073183396 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072752493 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066055557 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080097416 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065572073 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074414797 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065899611 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064077148 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065097407 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065397532 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065471153 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067816861 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066045685 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078194873 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063034159 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072025265 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070527154 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068400171 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075566534 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065870551 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071204646 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070435799 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066441028 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071065199 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078038658 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068414704 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072563432 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065676756 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070244345 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074857894 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067172436 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076751059 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070066031 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065133122 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070354275 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065817012 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064218058 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064372163 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063583616 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074672343 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064748348 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067372304 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06662946 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.19735457 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072566849 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069766775 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080494528 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074287888 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07439521 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064405265 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064093398 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06655423 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067358748 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071509842 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073165117 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076378584 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072464093 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069383826 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064924584 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080352831 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07579801 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073554288 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067237175 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073670526 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06761658 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072842086 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070341357 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071223626 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066555587 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073853345 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071461458 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068054034 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076422589 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074989863 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066914718 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071836466 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072243579 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070701038 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064058379 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066106905 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072395597 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074775856 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072844991 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065577367 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081513309 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066965258 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071131975 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068143506 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065147877 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074521141 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064278454 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07216906 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066595254 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066893635 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064206184 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068524643 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067570722 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072893631 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068327937 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064118627 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081916054 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080834805 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072491302 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065314302 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064804452 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063723002 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063701278 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068288548 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0666008 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071689442 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081470363 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068382607 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068342732 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063901391 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066001028 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073317492 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074085247 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063381477 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06401387 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068720064 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072077186 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077824443 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064887905 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065475849 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073364212 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07264607 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063733441 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068863759 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062952453 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073584949 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082928477 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066492275 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071790645 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076703782 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079353096 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066130726 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064192321 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066209037 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072167379 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071669692 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066421712 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06675316 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085962401 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073155081 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0681502 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065112571 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072478121 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068421212 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079694127 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066749004 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066461144 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074263053 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073371525 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072927582 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075957771 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077068452 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072344402 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07164292 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064862047 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070540126 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064084887 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067589698 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065980648 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065639089 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071374906 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072192709 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067374852 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080144868 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079028628 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067699941 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062674784 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066296415 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065556515 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061461622 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065417616 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063229936 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062929254 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062682449 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063303394 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.07052109 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073236591 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068466182 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06452526 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064307977 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061690831 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073691956 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071191874 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070300162 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061758778 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.198636862 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066394795 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074450505 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069369565 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068295992 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07377241 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072260928 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072357524 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063782115 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077599612 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065043503 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07264238 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068523325 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065954898 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067232265 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073790391 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070818253 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066612654 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073079635 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072346073 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067941259 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063997343 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063522354 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075474912 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064271252 seconds)
  done (took 43.275763225 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102833011 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06530165 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064160602 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064590177 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074343158 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065297104 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064831428 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065447094 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065479077 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067406878 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064568405 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06427655 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072222121 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079810742 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074580942 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068604973 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064491309 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064885624 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06381191 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065628293 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072473241 seconds)
  done (took 2.707241371 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072621548 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080782416 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076832262 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081774135 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073541763 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069664001 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077862766 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069191012 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077716642 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075063183 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078170969 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069419144 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074992336 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075116288 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075255808 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070085914 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078552366 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074478599 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06987332 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078869839 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070422049 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077842535 seconds)
  done (took 2.887515143 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066733233 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065880714 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072508709 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063759112 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065284901 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063506202 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068575791 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063791728 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068813921 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06830218 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068404777 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068285545 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073172134 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063900327 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069399639 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063531242 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110969233 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067970535 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064152095 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066475402 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064429713 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072977201 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063998724 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064581426 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06829914 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068384861 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06627601 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063899315 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065394486 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067787414 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065851788 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080656083 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071558678 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070898623 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067284253 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067411355 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064581805 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064701569 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063586756 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063347054 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071267144 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063674608 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068410948 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072084136 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063562823 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063063011 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071570078 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065305355 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063271515 seconds)
  done (took 4.574088703 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07704671 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113618977 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069796819 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092617102 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078549169 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070971175 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069670168 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094243933 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06537752 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066228717 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079725352 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080435702 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067934659 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06900142 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07194093 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067417658 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06789143 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066495966 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070289786 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066970116 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071042411 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072113777 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078715088 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079345294 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068617966 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066458016 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066836922 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068774415 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079101492 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070981695 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069394898 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069752673 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079036353 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072038176 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066845529 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066587062 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07985343 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067382929 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067257385 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064919414 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067073031 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069089308 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071468223 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080084967 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067352732 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072684105 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067188262 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064905328 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07902723 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067207518 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071830076 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080185363 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067971615 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067886676 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068584971 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07933791 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067281194 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.0658817 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067140985 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07843487 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065018006 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067987848 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079712138 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.0667989 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070841079 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079959024 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072168943 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067984467 seconds)
  done (took 6.324090959 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075060614 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096371159 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078945854 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079232387 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073160561 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073530235 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073655724 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073328234 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073142029 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07684878 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073493218 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114228352 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069678297 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075326585 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073279552 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075236361 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075086431 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076060151 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075468666 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075121473 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075255195 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081340685 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075593397 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082034626 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07845784 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071366039 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074879968 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075131736 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081444499 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074833285 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078365606 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074903951 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075006428 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082252841 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078341548 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075114851 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065222994 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075036458 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075191447 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07542256 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070886471 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081743009 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075224406 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07079804 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07504674 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075405588 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08162371 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078776831 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077117275 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079587777 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075105985 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081466824 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074657303 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075327339 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081494793 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08413077 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081672556 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081569994 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075248445 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081407847 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081438967 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08429862 seconds)
  done (took 6.089599612 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081062281 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071815695 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083554288 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063845556 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063077956 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074273711 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06406143 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063511724 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072345781 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075245286 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07445418 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073957048 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076578324 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074578042 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074181266 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076718603 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073960684 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074503929 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07268917 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074261638 seconds)
  done (took 2.742905848 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078971699 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08298909 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070023621 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074079789 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069322818 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074064953 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068846585 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069234604 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06953551 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069366209 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07548889 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075754247 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069971493 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073862898 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075352104 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074344128 seconds)
  done (took 2.443569804 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086579727 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072991006 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079312254 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065184965 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068906716 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064525009 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065032218 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063437856 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064338908 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078280647 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065182077 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076351742 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065191412 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06387559 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064320912 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070808254 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064388952 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064949703 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064781789 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078436363 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072178417 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066541259 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069012875 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065267242 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070879987 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072270899 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066622817 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069100095 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065062553 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065129481 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071116669 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07197624 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065016952 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065520406 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064118038 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064829295 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064905057 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065614272 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070732678 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083632773 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063344654 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070040553 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065165753 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065907532 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064127232 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065727465 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064182553 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071176229 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065241664 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070998567 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065253472 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067566384 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065563543 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072945739 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067954074 seconds)
  done (took 5.03224064 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080852298 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06893044 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063668107 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063377575 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068771822 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069877517 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068718182 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069195333 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070319849 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06370277 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070244837 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069041577 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069999949 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069608857 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0699553 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069595115 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063671098 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069432068 seconds)
  done (took 2.527020947 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074987348 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068705096 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073835114 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068751773 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068099141 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068071271 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063545841 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064059328 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063908856 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068724223 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068619388 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068528326 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064101171 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068945892 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068809792 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068443852 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068219855 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063853971 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06842452 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063804316 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068353434 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064006352 seconds)
  done (took 2.764153668 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097907964 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085397718 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14287363 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081719755 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088530474 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073907556 seconds)
  done (took 1.850330647 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095076468 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100354033 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069094668 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069448287 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074513485 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072287661 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072197133 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072530469 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077239107 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077763657 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072420531 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075594164 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075076824 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078681452 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07548274 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075095841 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072946727 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075466196 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069272856 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082518875 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07273319 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077174613 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073054179 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072363245 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073180649 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079048324 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077373838 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076654025 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072208442 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077282885 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074965258 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072494674 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077506407 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077486497 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069350478 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076962557 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072763587 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082500592 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075148235 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078865794 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068963963 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074975748 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07714951 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076648315 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077362143 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072431633 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076425527 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072534236 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072676635 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083986667 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075093535 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079138593 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074669882 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076898375 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076624886 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083336239 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076945557 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078721103 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074564456 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077328904 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078476697 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074473167 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078637826 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076836292 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07466724 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078359824 seconds)
  done (took 6.313096139 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107265464 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069653498 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072780719 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0773106 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077041504 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070834616 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070775562 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070789383 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070423518 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067904437 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105236066 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071142836 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077859672 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077267015 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07117513 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071382101 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071273676 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077174772 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06805579 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081810954 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071802382 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079196085 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079124456 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079383967 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077158485 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072931429 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070869627 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07108998 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072207866 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072485094 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076420897 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072791557 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079108776 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069579369 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078925176 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072971595 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072641512 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076637218 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0726378 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074838066 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079380393 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082454137 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072866289 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072267585 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077528344 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072481636 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07221199 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069445074 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072292787 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069343418 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077105587 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077190141 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078070375 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078679381 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072455407 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072781737 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072282088 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072226743 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072290904 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074666314 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08030449 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072414013 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083468287 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072179188 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072255144 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0780211 seconds)
  done (took 6.271138311 seconds)
done (took 128.734276982 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210922089 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184767914 seconds)
  done (took 1.6638913 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076393351 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104574666 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08259768 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133585427 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070949556 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10528162 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103932385 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083430464 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071365582 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071174005 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071672393 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07598016 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138850218 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07111718 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070893265 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073692364 seconds)
  done (took 2.692574901 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106763133 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.170790966 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111209652 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070368878 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106435069 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077613322 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069443968 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082189555 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076113004 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.07092927 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076970543 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074997691 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071304331 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077634054 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075738654 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076722455 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071073317 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077127142 seconds)
  done (took 2.832214499 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106239274 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097243828 seconds)
  done (took 1.498583711 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.177848432 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.132886994 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201456235 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34531567 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.155735421 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.420580766 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143295418 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14115797 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115677457 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135709512 seconds)
  done (took 3.25920253 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10669164 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173411217 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.29750685 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120090766 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07585659 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090208354 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12203812 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081361662 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08330069 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082912237 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083557492 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07826004 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103072624 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076635446 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075975143 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077746275 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105988588 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07740982 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077935447 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.08121509 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.1089755 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071781431 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078942642 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077000176 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.082082147 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081329701 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071210156 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069641656 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078191765 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075678655 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078962881 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.087236466 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080522155 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106056654 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073986392 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107458678 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078212489 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077918952 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07817483 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078897575 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082308404 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082626727 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080314801 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079588688 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072862645 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080575736 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.07191876 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071424192 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082838446 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072851013 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082734533 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081993048 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108692961 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073056804 seconds)
  done (took 6.155579596 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112404649 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106126317 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07146007 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112488042 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10369138 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07027393 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105322247 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098714453 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107977192 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070713665 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068891848 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070984777 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079305985 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080661475 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115436934 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108065387 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072626469 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069917121 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108315613 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107649847 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069885618 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102117637 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098057043 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106953684 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068527079 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070625973 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069083376 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070704072 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075813965 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077157249 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069463422 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079047526 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083495903 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07687751 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068104704 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068939693 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069224726 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08018253 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078438345 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077854056 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076303874 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068279446 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068731934 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070190001 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070406126 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067869237 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077300194 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078220623 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077321725 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069007497 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070902092 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069360985 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070569061 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07809384 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075686938 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078988085 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078101111 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069175326 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068912056 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071466296 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079130165 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078125044 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077620552 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069549052 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078052245 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068840372 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079164864 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081603762 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068931781 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072756126 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068687573 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068882782 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069909362 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075819163 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07827116 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072538901 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070746735 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070980743 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081089074 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078795988 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070810056 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07782367 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068111247 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068558557 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070661579 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069880715 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076024457 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078007312 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07024645 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069280707 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068603939 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07032708 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069594507 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078384981 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080570377 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079490053 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079230018 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07175042 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079057284 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078276802 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072022209 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078897371 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069442711 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06972262 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070576406 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077004455 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07500894 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078253237 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070451258 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069822238 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077558027 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079299293 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070138371 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076811667 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077090222 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074955287 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067130389 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077643705 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067870941 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075942803 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067552472 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076516734 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.200853197 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078462496 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070264159 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068788077 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070482843 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077906037 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070589106 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069850561 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070801121 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069127105 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077880151 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081392926 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071480003 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076736662 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076664802 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070959266 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077309717 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069747339 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078027795 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069304234 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070599015 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068257802 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08287811 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070143541 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069530622 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069423311 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081253901 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069557069 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081302816 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079165711 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070695701 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084740979 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079089713 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076494864 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078927933 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070697559 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069664712 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070379008 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071393007 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079154316 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080492531 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072930102 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070786116 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078864452 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082045168 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070637771 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079324486 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079806175 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079924979 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071510666 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071145136 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082516395 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082365975 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079790818 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079671467 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080437273 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071657229 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079816584 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080134366 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071558909 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087315677 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071763342 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084196963 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08039597 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078239729 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080799118 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081370453 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08184676 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082256975 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084211722 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071033402 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071295885 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079762898 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071716875 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071159582 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078954366 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072498995 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072179175 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085120751 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069404744 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07877208 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068584711 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077660022 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067908681 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070170343 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082065665 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069348773 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070253598 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077317095 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069557372 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077384103 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080550004 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076856598 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068960826 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073042594 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078425872 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077644181 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068926864 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068590193 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070207433 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075839078 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075162807 seconds)
  done (took 18.579722593 seconds)
done (took 37.986289455 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212973175 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155800395 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183934987 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115093012 seconds)
  done (took 2.064335832 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.111967612 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102293339 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091427454 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067830354 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09733913 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068302315 seconds)
  done (took 1.87039268 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.290453257 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.195391216 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178606727 seconds)
  done (took 1.99329891 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.214472995 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195888171 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465252058 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284152956 seconds)
  done (took 2.58856678 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145289596 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.084872457 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065231683 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084391453 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.1269227 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.150860359 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092947276 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.118358133 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076470637 seconds)
  done (took 2.332102281 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147346619 seconds)
done (took 12.352468754 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.104472429 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077201415 seconds)
    (3/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.279641648 seconds)
    (4/309) benchmarking ("sort", Int8, false)...
    done (took 0.16306457 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075888258 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.1211255 seconds)
    (7/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075274575 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071558173 seconds)
    (9/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.207163726 seconds)
    (10/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.108793353 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.087898905 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.168523825 seconds)
    (13/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078434078 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110512336 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079701615 seconds)
    (16/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.083142577 seconds)
    (17/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.18888854 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.405432644 seconds)
    (19/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083172883 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077549707 seconds)
    (21/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.210533115 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075604698 seconds)
    (23/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.181842026 seconds)
    (24/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076111438 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.10284994 seconds)
    (26/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.207481932 seconds)
    (27/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.091960305 seconds)
    (28/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.172345924 seconds)
    (29/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.075887357 seconds)
    (30/309) benchmarking ("sort", BigInt, false)...
    done (took 0.203152721 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087972631 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07646698 seconds)
    (33/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.185169302 seconds)
    (34/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.182147721 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070029688 seconds)
    (36/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082228281 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.153639909 seconds)
    (38/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.201598683 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18648774 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.242353402 seconds)
    (41/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07205776 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076224828 seconds)
    (43/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.170115293 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090179731 seconds)
    (45/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067689628 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067116539 seconds)
    (47/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.171582738 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075195156 seconds)
    (49/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.097471463 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090562912 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175576708 seconds)
    (52/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.180566188 seconds)
    (53/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.097267231 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.122064758 seconds)
    (55/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077520115 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 0.160792051 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.135177138 seconds)
    (58/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.172509155 seconds)
    (59/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.212558135 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136418682 seconds)
    (61/309) benchmarking ("sort", Float32, false)...
    done (took 0.136576418 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.095889878 seconds)
    (63/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.222707709 seconds)
    (64/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081966038 seconds)
    (65/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.222809592 seconds)
    (66/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.181532901 seconds)
    (67/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.181582356 seconds)
    (68/309) benchmarking ("sort", Int64, false)...
    done (took 0.06987653 seconds)
    (69/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.234898012 seconds)
    (70/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078343788 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085387175 seconds)
    (72/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067597078 seconds)
    (73/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077807328 seconds)
    (74/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067378073 seconds)
    (75/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076446854 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067445039 seconds)
    (77/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.167584085 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067978403 seconds)
    (79/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06785028 seconds)
    (80/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.071272188 seconds)
    (81/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066876319 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13500093 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087849895 seconds)
    (84/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.162047727 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06691024 seconds)
    (86/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.17994485 seconds)
    (87/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075552099 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123263605 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067449792 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078616492 seconds)
    (91/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.405208919 seconds)
    (92/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.181266597 seconds)
    (93/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.082124359 seconds)
    (94/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.205095525 seconds)
    (95/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.133400205 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.189445278 seconds)
    (97/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.079276335 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126270099 seconds)
    (99/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.130779583 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067986989 seconds)
    (101/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.080325143 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103697668 seconds)
    (103/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077583979 seconds)
    (104/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077108477 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148548568 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075596193 seconds)
    (107/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.136727671 seconds)
    (108/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.070464505 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093863696 seconds)
    (110/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072430365 seconds)
    (111/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069910736 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075289254 seconds)
    (113/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.17775903 seconds)
    (114/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.129904826 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.222412337 seconds)
    (116/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.179968404 seconds)
    (117/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.123212244 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.070102919 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068357887 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.12541569 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068512239 seconds)
    (122/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.096207817 seconds)
    (123/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.081424638 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068262219 seconds)
    (125/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.08136267 seconds)
    (126/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083987103 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076857861 seconds)
    (128/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077712191 seconds)
    (129/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077468645 seconds)
    (130/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.131501967 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068718453 seconds)
    (132/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.069490015 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068161369 seconds)
    (134/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.069390308 seconds)
    (135/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072424431 seconds)
    (136/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.132385129 seconds)
    (137/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.201433835 seconds)
    (138/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076505059 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078409154 seconds)
    (140/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.078150226 seconds)
    (141/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069665692 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.087410033 seconds)
    (143/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.08105033 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076192649 seconds)
    (145/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077524138 seconds)
    (146/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068887911 seconds)
    (147/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076693024 seconds)
    (148/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076450331 seconds)
    (149/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077863749 seconds)
    (150/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.201346108 seconds)
    (151/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077838279 seconds)
    (152/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069972795 seconds)
    (153/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079962148 seconds)
    (154/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.070352431 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067642038 seconds)
    (156/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067849862 seconds)
    (157/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067850322 seconds)
    (158/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.218663353 seconds)
    (159/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.081526625 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068283297 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097819756 seconds)
    (162/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093275383 seconds)
    (163/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.081229418 seconds)
    (164/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069350346 seconds)
    (165/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.080859982 seconds)
    (166/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.17730921 seconds)
    (167/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.194504857 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.202646669 seconds)
    (169/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.13748781 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079992274 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089128474 seconds)
    (172/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171846244 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.154738259 seconds)
    (174/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068460168 seconds)
    (175/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068570603 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067962368 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.129801762 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136662244 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.198531087 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06924006 seconds)
    (181/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074500689 seconds)
    (182/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075886329 seconds)
    (183/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.06885651 seconds)
    (184/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069596369 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.079216084 seconds)
    (186/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068035643 seconds)
    (187/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.071614383 seconds)
    (188/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.177753712 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.132433746 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091284901 seconds)
    (191/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074526404 seconds)
    (192/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.176048696 seconds)
    (193/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066453161 seconds)
    (194/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065514934 seconds)
    (195/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.134102128 seconds)
    (196/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066898366 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066511407 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139240811 seconds)
    (199/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067607344 seconds)
    (200/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072097779 seconds)
    (201/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06654838 seconds)
    (202/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068204535 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072650399 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065063595 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086660067 seconds)
    (206/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.086499565 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.065289797 seconds)
    (208/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065118721 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071839201 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06559494 seconds)
    (211/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.242520624 seconds)
    (212/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.071326662 seconds)
    (213/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075462643 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093543691 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089019498 seconds)
    (216/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.078843117 seconds)
    (217/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069475251 seconds)
    (218/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.08929744 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077982684 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075308373 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089002376 seconds)
    (222/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067573595 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137728924 seconds)
    (224/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068245123 seconds)
    (225/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096033999 seconds)
    (226/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067883097 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077149809 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069947199 seconds)
    (229/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.130758386 seconds)
    (230/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.070794045 seconds)
    (231/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077702846 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116601748 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090984538 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068731971 seconds)
    (235/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067321465 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068737403 seconds)
    (237/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076633523 seconds)
    (238/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.08250088 seconds)
    (239/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075476399 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067214198 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.069161735 seconds)
    (242/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.13634457 seconds)
    (243/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187065215 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.124230252 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09247228 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070854098 seconds)
    (247/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073189321 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068792129 seconds)
    (249/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069180859 seconds)
    (250/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.069365339 seconds)
    (251/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077170898 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.11229074 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06788421 seconds)
    (254/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093576045 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131673495 seconds)
    (256/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.071234929 seconds)
    (257/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077095039 seconds)
    (258/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068013899 seconds)
    (259/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.072578624 seconds)
    (260/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.069501876 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128829142 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068820491 seconds)
    (263/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069428567 seconds)
    (264/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070839102 seconds)
    (265/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082422085 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077723889 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069263049 seconds)
    (268/309) benchmarking ("sort", Float64, false)...
    done (took 0.135310568 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126406323 seconds)
    (270/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.081484695 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075685518 seconds)
    (272/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068109439 seconds)
    (273/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096219589 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069025556 seconds)
    (275/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.082655912 seconds)
    (276/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08564653 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091547652 seconds)
    (278/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.081790853 seconds)
    (279/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070732369 seconds)
    (280/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068344588 seconds)
    (281/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069177263 seconds)
    (282/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067463078 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093960528 seconds)
    (284/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082142353 seconds)
    (285/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.069024586 seconds)
    (286/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068662723 seconds)
    (287/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067453139 seconds)
    (288/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076080749 seconds)
    (289/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.069806587 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175093696 seconds)
    (291/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.068563351 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076882756 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069362955 seconds)
    (294/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071652198 seconds)
    (295/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067425807 seconds)
    (296/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.069062913 seconds)
    (297/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.068601912 seconds)
    (298/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068033057 seconds)
    (299/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.079228141 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074973661 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093134903 seconds)
    (302/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072557215 seconds)
    (303/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068985458 seconds)
    (304/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074887682 seconds)
    (305/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.068934278 seconds)
    (306/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.071627511 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.068192333 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.068211102 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092844496 seconds)
  done (took 33.733411024 seconds)
done (took 35.074409282 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088982197 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102961553 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076798867 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09644627 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083894585 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099208329 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076659444 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081699168 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08427031 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083001789 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081848987 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.074826519 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07791715 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077690686 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075907037 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101113802 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082639715 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07658983 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076682229 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068285388 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076991452 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068947098 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068288803 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075090117 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080013209 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075762772 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078117002 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077672745 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069064884 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06907184 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073552254 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077637726 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068461459 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081128977 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077920283 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077197946 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078466698 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081158875 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068756127 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068604196 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078615822 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06865419 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077010599 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074955893 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073770548 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075290502 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076481844 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081093936 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100832576 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07410539 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078622236 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079366348 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080466617 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073749301 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073415654 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07655659 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074375955 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100368351 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076881568 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073665691 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078297394 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078032524 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074851586 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076568012 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076626921 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079135372 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080827145 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074990242 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079242171 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075407687 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068495329 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076893708 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073036086 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068893629 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079630122 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081345149 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068137229 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072676186 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076406834 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076773155 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068436957 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076229253 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067561222 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073146617 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073361727 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07518448 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073131792 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075322937 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067687944 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077139069 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075595317 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076751499 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068305404 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081577631 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068412497 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074555271 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068622312 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068098853 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067583182 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073223772 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06766702 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073150011 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076683499 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067784121 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072949171 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081757044 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067934804 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07537754 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067660674 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068532237 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079450538 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078326156 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067848258 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073060616 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067311266 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073285124 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067496214 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067629453 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067943037 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068071751 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073143221 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067984297 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073293092 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073470913 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080373631 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067532661 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072384269 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072403221 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067476299 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074359425 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067891657 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067265299 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067298171 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081686706 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072663676 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067478807 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072794555 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072515536 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075425875 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066789824 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075783061 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073612887 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07174393 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073597107 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066745406 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078494239 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072593321 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070498633 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064480377 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065076042 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.0645162 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064760839 seconds)
done (took 12.862096822 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074283539 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.12197061 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096821616 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096823794 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08610382 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069795241 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076965625 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.093251147 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068668791 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096356476 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088519647 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08818193 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109772233 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066292734 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067723503 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070320133 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070339042 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081906475 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097217933 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091667445 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.109321596 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06901736 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.089285081 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090785426 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086800336 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093925219 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06997825 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07002138 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071935866 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090375199 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094677611 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072118435 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070401289 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.093924996 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.086812396 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080339035 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06767124 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.076434122 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067921483 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066951954 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070734491 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.091363233 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078163883 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080620192 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070850711 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077230561 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070122904 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08571301 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088565815 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078140832 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085140789 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.093950069 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073388742 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086066845 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06890155 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08555396 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078858377 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069551055 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069720763 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074345739 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06949238 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071631702 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081322723 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079348252 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074524507 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084950856 seconds)
  done (took 6.764518185 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088102921 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.0967414 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08616262 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087042932 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068540511 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069020913 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068976389 seconds)
  done (took 2.005991404 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069892286 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09367024 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093871762 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093666505 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084083557 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.094302611 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077561293 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06965067 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099079152 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068677182 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089634031 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101037847 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073518108 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081338838 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09413311 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069210817 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094179211 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069532205 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070884496 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094478192 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074619896 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096801606 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081452005 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070061485 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082599844 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069930378 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102780905 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078056351 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070800268 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071136801 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07069512 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.097285358 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08240768 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.084426564 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070872023 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084862174 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083797321 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072638805 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080322757 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07911889 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082892596 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070688495 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068044954 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.07119227 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07269182 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080732631 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068425992 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.07091595 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070772859 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089449158 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068329273 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082057669 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073799857 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075843511 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075575983 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074787644 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077909137 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070900443 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088889283 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070586914 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087377292 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086501946 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082965597 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086177135 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069826348 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082288906 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083071245 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070780331 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071191091 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070865526 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086534701 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072886239 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071178213 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081292537 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069350098 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094304922 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093945638 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06922367 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083316859 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070009447 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070780785 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081226037 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094368018 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075050122 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070373724 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073820806 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071490893 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072559098 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068165481 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072920001 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070166324 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075027081 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070849629 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07307477 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071582566 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085867799 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068231626 seconds)
  done (took 9.063314049 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072569203 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070724491 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072092222 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070247369 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070798909 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070560497 seconds)
  done (took 1.897708773 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095060319 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07028087 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083115952 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070935859 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107130556 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086542849 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087092848 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080432076 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084680465 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.0819044 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086580008 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089713613 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091434681 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.0731741 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086509654 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071593488 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086841414 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07545014 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08172792 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073060322 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084481879 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073261851 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073218858 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.090109216 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074289667 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071677003 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080304022 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081967671 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081687697 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08036102 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072977336 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074661819 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077984873 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080483313 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086810558 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077775872 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070713141 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077378412 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073895533 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074313278 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08903586 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073381446 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073194316 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077284196 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080728263 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.08088698 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077199928 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079734427 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085912069 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076981672 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076996843 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071398467 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074550857 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077095771 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077802821 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079550808 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076751178 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086177834 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072488779 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077477601 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070617542 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074301141 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079843504 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073478675 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.076733605 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074749043 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074643057 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070315411 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070762195 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068281032 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07421001 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068700248 seconds)
  done (took 7.10496131 seconds)
done (took 28.295304988 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.523861009 seconds)
  done (took 1.944327985 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.622089967 seconds)
  done (took 2.072866627 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.531711786 seconds)
  done (took 7.978145541 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.386172405 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.453433487 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.743193247 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134473278 seconds)
  done (took 3.198690013 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708163602 seconds)
  done (took 2.16593823 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239621332 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224746774 seconds)
  done (took 1.933026564 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.350782969 seconds)
  done (took 1.795629534 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.083812778 seconds)
  done (took 2.531809648 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.239376984 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164129774 seconds)
  done (took 1.856851247 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.452265632 seconds)
  done (took 1.903295156 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.206971405 seconds)
  done (took 5.659218319 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229916067 seconds)
  done (took 1.714705336 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238016148 seconds)
  done (took 1.692357207 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.742220112 seconds)
  done (took 3.194468574 seconds)
done (took 41.103290616 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087457026 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.088609545 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086128987 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081939369 seconds)
  done (took 1.775887375 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078415238 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073394012 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076966411 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071550961 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075368017 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071557112 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073260507 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075161293 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073326642 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07378116 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072429096 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07310476 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076816892 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074996863 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070474039 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074839203 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075227575 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071631898 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074445208 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07176626 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069610762 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07409023 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074259888 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070561697 seconds)
  done (took 3.222085141 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082814983 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076469028 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077482071 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072522126 seconds)
  done (took 1.771304657 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079947543 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092151068 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088038957 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078332675 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089554641 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084134691 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068429912 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069075999 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071454264 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079991156 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06916535 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096739677 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089239037 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080050802 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082046097 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066617967 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069159595 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088224494 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080518307 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080573635 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071640768 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080295498 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069500818 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090133039 seconds)
  done (took 3.371792565 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085375478 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.068917643 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084427087 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094388246 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094293814 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069255614 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.083263418 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096129196 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.137530698 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067075075 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072757364 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06713794 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.106280115 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067045065 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081756412 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109988025 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113759361 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071016463 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10091824 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069158397 seconds)
  done (took 3.209210563 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.087097389 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075516298 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073360759 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068532912 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079343863 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076316322 seconds)
  done (took 1.930375501 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071983505 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071058183 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071011136 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068969203 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074946081 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070354543 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069125063 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071180412 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070901675 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070650218 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070229821 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069677875 seconds)
  done (took 2.315575937 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.198992826 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069345595 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070997854 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066965774 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07363758 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069937129 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085580606 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071101534 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.098165409 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069915139 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070139752 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072296532 seconds)
  done (took 2.485689526 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197405653 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076966019 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227472438 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149603315 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107102804 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112340665 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111250657 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108430397 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133440561 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098171232 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15375082 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160089676 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103616735 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129737347 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087744594 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119860297 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144321419 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156068006 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102996112 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154758415 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135296402 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122615709 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145660051 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100574664 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104388951 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114381226 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07225444 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077834211 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159092393 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123285972 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135838765 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105724786 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090108424 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170060861 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157095346 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132197719 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142626488 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081888088 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.118311764 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133080637 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197133 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09060419 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151379169 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102380599 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080397327 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126879836 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112943117 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117859997 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102783135 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087936457 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275510869 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17354484 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.128357305 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084558308 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117220003 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105448 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11015089 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114299983 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168779089 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150001891 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121328996 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070114096 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107166223 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143613105 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127004037 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105558193 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.118347783 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090558613 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124713481 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149639454 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119070787 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136006972 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112640748 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086262318 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115868501 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13059999 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121169197 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162409787 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118839022 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072190711 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116050775 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096530722 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078921038 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146493676 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07682132 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169547336 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099601029 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.125010626 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130320702 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109170984 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10869299 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152046696 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134833155 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101501548 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084934657 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099674722 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11463491 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137491519 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084514136 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103446628 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109106735 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077581192 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126456763 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075113806 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116792022 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093829451 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11365275 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119894861 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076777997 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115362697 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245882139 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100778296 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12659525 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152195846 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088866809 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080993513 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157194201 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117148627 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100911229 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135235885 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151304301 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.119211906 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095721113 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137901201 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164272435 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08784127 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153398087 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099522624 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082032513 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102814208 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118025902 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106847652 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119261738 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079838105 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116078651 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154673657 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073383878 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094221562 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127492651 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080407053 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078884865 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10237741 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100578633 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094343185 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098392904 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101208882 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130790132 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118336398 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103099454 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118684692 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094584334 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156424224 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085590645 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103022322 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101628718 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071482277 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127051859 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147473957 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077720769 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151227027 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115932236 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113111704 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116490377 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084135005 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129421882 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076808981 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070961687 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131589865 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108243755 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10485824 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.139800293 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256661295 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120247612 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116415671 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125797859 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123660417 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.123650039 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10401888 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087034557 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110710613 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124661106 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072835272 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089616852 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080391842 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099481492 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091631521 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081841407 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132745063 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116155292 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107419776 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110782381 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097265492 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142764322 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077091818 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118216237 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117720272 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092872268 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.146663682 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144406442 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126239628 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098479252 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130230438 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07287612 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07434703 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088733635 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120826667 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083303869 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082319721 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109492308 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142389258 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124121192 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132915002 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121988361 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113920323 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153458249 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074176079 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120114674 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138964854 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117835242 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102756837 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088467062 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094924454 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138084328 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103491687 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173273502 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112766977 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121423746 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150880483 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101556859 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079827239 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103238483 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127527451 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100020753 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.286760238 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097476372 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085642148 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104286973 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077694578 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098597133 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120939821 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11458399 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13201779 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107905674 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124685242 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076351711 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10848091 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118439142 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118229629 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082422865 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112229255 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156958232 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096705467 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113294838 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144865918 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079974368 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.137455107 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166054569 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138930972 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083297649 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1015541 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117951106 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124610032 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117089387 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134614745 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102785505 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132203674 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112138193 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086312019 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087518413 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094796136 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102900776 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.114006326 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.102485944 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110424079 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094164986 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125259073 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099521008 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107175509 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113495259 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099468498 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096582773 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095534675 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169436208 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117181913 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161937989 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099779429 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.137834043 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153718165 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076089729 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079556442 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081094658 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132726313 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085110038 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124923083 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.257551325 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117793463 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12278394 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135637805 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098789664 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073009827 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109838181 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131373747 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121616345 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098094774 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103824495 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153800083 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118948332 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080649187 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112595377 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116226554 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105271717 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168524882 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082477068 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11023544 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078150568 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081107803 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124120101 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145006064 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084468102 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105028844 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120304115 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110892576 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124813457 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098931611 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111934776 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130247681 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143830203 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124946421 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089840146 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108555882 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123248178 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146873541 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103586572 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101520664 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166912151 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145969796 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155155807 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088993591 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114527627 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10974422 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105678969 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130281559 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082146012 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154810503 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082544903 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130676406 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100628464 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08987172 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123727852 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111611952 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088591545 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137639766 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113518042 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082585349 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078733575 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258704449 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115249985 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099914828 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074151801 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131984517 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073354087 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129415324 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160856875 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079299064 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102749211 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093781973 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081252594 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100431858 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099234731 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084146563 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097959982 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159877083 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085121694 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139564785 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126989393 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107051588 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130509282 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101080736 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640751316 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080614156 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147944074 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114773767 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167750714 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096406962 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115821412 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109028946 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116545063 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135772504 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099530864 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176840567 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124001446 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117282117 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079064108 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098499764 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099867067 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086629922 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103126263 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109961905 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108926975 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092215101 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113219323 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116667334 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080803448 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094407786 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146864967 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111436539 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133848637 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129871216 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082303496 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112217511 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128402441 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077381283 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.111834482 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138599432 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.251242924 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099472821 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082026606 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098885762 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163621635 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072750868 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148712542 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115031931 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107326368 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11192651 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.106233414 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125414074 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101195351 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117484507 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092937489 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.106195011 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147444104 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08537207 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080464725 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105726679 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110250284 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.0989681 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096856762 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09781408 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143401256 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072994169 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097608858 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114229357 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138820436 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161131261 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.10312499 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082696396 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116151788 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115446974 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110461193 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116830654 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080819627 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080465943 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079937011 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098849733 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.121451503 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111470556 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119405665 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107167977 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151217566 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085176672 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228718014 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095992501 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103528562 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087580746 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078647923 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093935944 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093764812 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100218324 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108211809 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167040071 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096374156 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091119068 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093077362 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075569233 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083323412 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121020714 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103852746 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110834221 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099550845 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079324121 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24683366 seconds)
  done (took 57.508045459 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122691208 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.097993321 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099532958 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14504653 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122250933 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200958337 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15209013 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189637149 seconds)
  done (took 2.6869958 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072254642 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098913933 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107815571 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.086092493 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070363458 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071505236 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232899157 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084872035 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068362161 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091952741 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078262757 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069727018 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.443837613 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070390499 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068577404 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07641872 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068183866 seconds)
  done (took 3.420676009 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.388773638 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612749841 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.349092762 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076977888 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.980461166 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.094342893 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.205801562 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.143633296 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082798872 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538086982 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369798269 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137191871 seconds)
  done (took 18.549743183 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086709407 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079790934 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094652191 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.095049296 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081380279 seconds)
  done (took 2.004962696 seconds)
done (took 105.754665815 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085849868 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.437001207 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069704242 seconds)
  done (took 2.102021499 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09561578 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.09312137 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.093136351 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.091453738 seconds)
  done (took 1.953847662 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078598549 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080073267 seconds)
  done (took 1.729634576 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.23326901 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.180675271 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.101426185 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087295243 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083853981 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084656768 seconds)
  done (took 1.831375162 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077367076 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075995649 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076636301 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076575445 seconds)
  done (took 1.877115684 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.071863941 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070129821 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.072188454 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074881641 seconds)
  done (took 1.858093618 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088958084 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088421559 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082990506 seconds)
  done (took 1.831838027 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106162452 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094850363 seconds)
  done (took 1.77059277 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085301877 seconds)
  done (took 1.65753966 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093961659 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103786096 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137822436 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.120194537 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.144174941 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.12000814 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088511749 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089113604 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082732789 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089801368 seconds)
  done (took 2.643848445 seconds)
done (took 21.420957478 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083061117 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.380562391 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363914892 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09639991 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674115878 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360970781 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.990076123 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097525522 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.146288686 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072019709 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089969631 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654049376 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978659344 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329893732 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967754506 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332099468 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653071734 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072720085 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071859198 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071831297 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.970662533 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069022038 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071598903 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073027391 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651579964 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377000543 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072695163 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.334005848 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072960849 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075150955 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.361107283 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073636297 seconds)
  done (took 16.240464091 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075022059 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127156425 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076624914 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089681953 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074840487 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073868698 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075727369 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073107432 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126084219 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072766455 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089987138 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071895058 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075772173 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073012159 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092191616 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071620441 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070929103 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071765275 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069978652 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070609275 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088964631 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069866723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070440661 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070840043 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069971424 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084692379 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073498504 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070580811 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073701702 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074140768 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075848243 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074307916 seconds)
  done (took 4.110261159 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121746264 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131642376 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077890019 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109858804 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113511663 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072380562 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147769205 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094548548 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131980867 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072605162 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090469775 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072479533 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106937617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073341038 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094267231 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073839439 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07486541 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073890747 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073829293 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073391966 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093843294 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073763111 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073238607 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074229607 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073616447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087784157 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07359354 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073393375 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0733522 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075460884 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076789506 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074420461 seconds)
  done (took 4.39737134 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07497248 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076117818 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083678706 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085128431 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070649041 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073092925 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074121728 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070797242 seconds)
  done (took 2.204052925 seconds)
done (took 28.532694495 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082573147 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070691566 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074897635 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090616052 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077264394 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082722613 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068542438 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07777334 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075477145 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07565972 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076956443 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070659277 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073694625 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068478496 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075730429 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069865589 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.085039927 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073851557 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084217182 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084758936 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073024103 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076365149 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078546972 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08468272 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.085142221 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084986758 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08046611 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076391075 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071244116 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073850757 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074787719 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084245886 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.084583025 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.085144393 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070374422 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070559553 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075615181 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072484535 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086086768 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079938868 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072643514 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080010284 seconds)
  done (took 4.825897363 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09003689 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091670393 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083769156 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080550841 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091144659 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082936132 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087051373 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078192678 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078073451 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086573318 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074631202 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081959508 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079643349 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073508283 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078680223 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076077049 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081438476 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075846574 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078890625 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079495173 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088024025 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073466661 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088424652 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080216467 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07591557 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081251479 seconds)
  done (took 3.717280878 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077715851 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088825569 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094278695 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145438336 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112494587 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08102834 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082547079 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092581412 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097905032 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069476412 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074087474 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09362819 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.0936134 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076260645 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07013937 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087691872 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086079382 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073316874 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078785554 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101134529 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092903594 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08894534 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098254056 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088993425 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070784768 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073978308 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076650908 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.088381169 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073661141 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082594682 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074437203 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.078431357 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072851359 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081886935 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073893398 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070539238 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096422224 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082567249 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083838424 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.0717426 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081058585 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071952874 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097093575 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132216201 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070589748 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075426624 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075607084 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082802597 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070306545 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098963212 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08357472 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070862697 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071593019 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070168402 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070710505 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07356678 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073099554 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07465598 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081653903 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078421904 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093213922 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076397087 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089678087 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070762943 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081668851 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070761866 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072469503 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.07024657 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100119396 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07249685 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116962922 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07250696 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070027438 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082799719 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081132611 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077583989 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071215185 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089649826 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083205924 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075254563 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079724998 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074904008 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075277268 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102305558 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07131045 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070930722 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069900439 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07508766 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074556392 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071560266 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082643603 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068746877 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072462653 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08783421 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070938848 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072296248 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075173472 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074215129 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070624246 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083080322 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075339819 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07302958 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081459254 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072074337 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07509694 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084514389 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077854557 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069929304 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073843905 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075135138 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072449779 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072441325 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07502139 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073045188 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078197415 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078354921 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077284436 seconds)
  done (took 11.028872655 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.171810101 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161876645 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074048015 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153985979 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080597452 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083881292 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156958602 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099537361 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071981125 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073401408 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072135205 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114226448 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109863335 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.123048071 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085456889 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072948632 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094802805 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119571236 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159120702 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153314935 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094741047 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080422581 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074636764 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073731969 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074078353 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082137926 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086739274 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078278318 seconds)
  done (took 4.505357761 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081839108 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.108007564 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075887791 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094799451 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092308052 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072454206 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073758794 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073377749 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088500009 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081666651 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072322383 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07750537 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076007896 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075367119 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072634692 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079096967 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079331729 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071525354 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076175514 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077602941 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082889153 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097500601 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076295752 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071931867 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074496961 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071818839 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.080195321 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084478868 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072164418 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.108104671 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069435868 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07688241 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.089398025 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07252855 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071587482 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072145093 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071850137 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071990184 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073286768 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070676154 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.07051284 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075668666 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070627424 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079848857 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.085102278 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073826851 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073952509 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075020866 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07508534 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069579735 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075090941 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074390715 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075106639 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079573727 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076485029 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074808401 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072990743 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100164848 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078314819 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071522289 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070478701 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070941946 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074336421 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.081325045 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087078189 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074579627 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070440769 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071932859 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.085262909 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084862529 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071068688 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07643829 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069682549 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073937797 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074437279 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07453235 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073045686 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071304224 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071501674 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074999067 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.072627975 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071377996 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.071226995 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07503995 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070187329 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070694313 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072428437 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073752623 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080916285 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071678167 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075653809 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072767666 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070885294 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074786481 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.078223427 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07510976 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082789271 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083082795 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071258361 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06825179 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084624546 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07248613 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06868885 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074970551 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075156646 seconds)
  done (took 9.666177 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096439728 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071913511 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089136227 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096471209 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.081940388 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078397164 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082075601 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071675794 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089119946 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076694708 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078844298 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06861264 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082275788 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081656224 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072257473 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082254124 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073949905 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087105505 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084457627 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067949926 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078366917 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081476312 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081645077 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084439976 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08315941 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084622851 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081171161 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079541046 seconds)
  done (took 3.903381481 seconds)
done (took 39.234880849 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.68358213 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.912830229 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.653231606 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.890395427 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.711983794 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.879136624 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.7527228 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.653590463 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.903385235 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.696870089 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.886053636 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.885826445 seconds)
done (took 64.243316892 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.684370265 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.808815042 seconds)
    (2/2) benchmarking "String"...
    done (took 1.91048724 seconds)
  done (took 5.311591925 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.88176906 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.451604354 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.892408041 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.653767494 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.657573277 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.924480889 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.437127682 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.097066023 seconds)
  done (took 29.708038613 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.825413375 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.876955063 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.377039174 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.393351153 seconds)
  done (took 15.113206355 seconds)
done (took 61.381448977 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.679924314 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.690086382 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.653930968 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.650977176 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.752092352 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.662341473 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.791386992 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.680551532 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.657131568 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.655673913 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.657743004 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.139458416 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.664337577 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.778727598 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.657880901 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.655618145 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.668319111 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.197307867 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.813946379 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.665344492 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.680872158 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.706737293 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.659975557 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.654779021 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.706749608 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.653461713 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.052227798 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.666629981 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.478546719 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.655081337 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.704412866 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.990127532 seconds)
  done (took 199.974358685 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.656698836 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.876234145 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.946478384 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.67699613 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.361617316 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.844391043 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.761185447 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.386101112 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.657855957 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.672000041 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.791109298 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.654839435 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.812610338 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.624786886 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.695345318 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.688417054 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.939477615 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.825773118 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.695642233 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.82189087 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.669287713 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.623489181 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.605507372 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.784379929 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.657190095 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.684417918 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.664512718 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.684505734 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.845597015 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.909066144 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.665074455 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.690761052 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.857473904 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.526235919 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.662192009 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.667368238 seconds)
  done (took 166.182826397 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.836379014 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.661181884 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.657629251 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.659968629 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.666634419 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.659207358 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.783155259 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782940164 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.320411554 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.99394616 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.713978849 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.659450076 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.435930087 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.658068499 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.726325875 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.669815585 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.654565574 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.662146751 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.674105565 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.679937719 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.652710046 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.654436516 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779656014 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.662652298 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.651580693 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.661736355 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.652006681 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.656395614 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.037162488 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.647813268 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.75858694 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.65132823 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.657445721 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.892653675 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.649008646 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.654059356 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.485733809 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.72216115 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.735175089 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.652644441 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.658924562 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.651681268 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.873459116 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.648709342 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.656086014 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.652789134 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.652223643 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.765050924 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.652295725 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.776139341 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.652199219 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.135469509 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.652957287 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.655674151 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.816679212 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.228475685 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.654815952 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.653756452 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.657339544 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.65251223 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.655996546 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.657896712 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.843912402 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.723340773 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.65462437 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.65376341 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.654552686 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.658430656 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.653285013 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.761363684 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.654115893 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.444148779 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.666489359 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.774600161 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.775825114 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.655759844 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.719413714 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.743457875 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.650568196 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.65447944 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.653423056 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.65630804 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.736580553 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.651917364 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.734985909 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.662705641 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.658005534 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.709496746 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.724682348 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.651707559 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.4838768 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.655610804 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.65431602 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898679943 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.716444304 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.651371675 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.660367153 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.735729774 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.775320983 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.366596745 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.65649467 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.910647589 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.729367938 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.651574067 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.774472926 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.656982573 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.737186237 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.660208116 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.657985316 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.689446061 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.658061278 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.669470814 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.650743047 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.65556913 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.027856505 seconds)
  done (took 386.875783791 seconds)
done (took 756.522353806 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.27483639 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.234164906 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.324377428 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.25638882 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.226800305 seconds)
  done (took 12.904958467 seconds)
done (took 14.494569766 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.733630762 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.74086282 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.675227534 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.734740326 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.67328131 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.736203326 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.717995551 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.679172403 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.706728535 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.679300142 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.705395449 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.678840274 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.66126023 seconds)
  done (took 23.713119499 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.879134952 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.87994874 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.723872905 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.882013274 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.696736302 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.879354349 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.80905862 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.798384121 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.79903178 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.667750744 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.666282518 seconds)
  done (took 21.274405322 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.890538977 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.891453034 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.730797224 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.88376119 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.700032945 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.884314673 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.820898428 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.807022212 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.799826548 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.669573999 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.66538211 seconds)
  done (took 21.334814528 seconds)
done (took 67.914337478 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.659705328 seconds)
  done (took 3.251510364 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.676516563 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.836279458 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.661059713 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.662441442 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.662200111 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.662307655 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.66192034 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.660283998 seconds)
  done (took 15.075899183 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.660668927 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.660996131 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.660642164 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.661499497 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.659627151 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.662051198 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.659504136 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.66066526 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.65905759 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.660270011 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.661917461 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.661625338 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.661773921 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.661728194 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.66119383 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.661605426 seconds)
  done (took 28.167363664 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.661462833 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.659640701 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.659997606 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.661787772 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.659842545 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.660192655 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.660930203 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.659499549 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.6598784 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.660422677 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.659336391 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.661649012 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.661898793 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.66166908 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.661906781 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.661187075 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.660870601 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.661643015 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.664863026 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.660106264 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.661386995 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.660885969 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.661862531 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.661605479 seconds)
  done (took 41.461180964 seconds)
done (took 89.546174257 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.36189171 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.501428373 seconds)
  done (took 9.456029311 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.665037133 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.661741089 seconds)
  done (took 4.999163672 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.662626243 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.661670603 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.662961949 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.66120977 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.662295797 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.661695673 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.661871304 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.661725543 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.661116428 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.662759489 seconds)
  done (took 18.213922196 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.662663588 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.661406861 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.662255086 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.663225476 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.664685799 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.664226391 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.661830731 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.6628217 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.662137041 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.662122678 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.663289328 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.664533833 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.66182874 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.665028425 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.664059037 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.662646525 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.66343082 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.662195628 seconds)
  done (took 31.529823152 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.663289665 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.662822804 seconds)
  done (took 4.920119923 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.662157874 seconds)
    (2/7) benchmarking "second"...
    done (took 1.662220941 seconds)
    (3/7) benchmarking "month"...
    done (took 1.661808302 seconds)
    (4/7) benchmarking "year"...
    done (took 1.662192947 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.66199738 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.662259055 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.663107507 seconds)
  done (took 13.231646116 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.663030558 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.81599158 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.88236333 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.310676239 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.669470002 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.67131785 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.57985546 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.673660065 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.673894015 seconds)
  done (took 18.535941387 seconds)
done (took 102.479327527 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.528770333 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.664246931 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.936475701 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.779591923 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.685020898 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.003895038 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.670513875 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.943551773 seconds)
done (took 41.815303522 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.749267953 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.436036318 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.491061585 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.707350178 seconds)
  done (took 15.236435431 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.667845417 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.992489407 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.690768965 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.544404679 seconds)
  done (took 21.502238521 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.032013559 seconds)
    (2/2) benchmarking "read"...
    done (took 2.017845589 seconds)
  done (took 5.655948369 seconds)
done (took 50.748370197 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.670357032 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.669893188 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.669868565 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.674608922 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.669906291 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.672165411 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.672541597 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.67052269 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.674255776 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.672288225 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.672574746 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.669968573 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.674407111 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.672489312 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.670812321 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.673833218 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.671879193 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.673422604 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.671461648 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.672864628 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.672057349 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.671335776 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.67377283 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.673741801 seconds)
  done (took 41.734254235 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.671727113 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.673539773 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.671920153 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.672139055 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.673715359 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.674874547 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.671918 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.674500565 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.671715188 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.676028277 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.673554763 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.675764194 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.674398497 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.672934396 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.672606716 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.674148419 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.67415163 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.671919031 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.673349212 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.67469442 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.672960052 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.671470064 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.67315787 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.67307994 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.674366656 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.674074492 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.67433325 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.673050092 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.67471499 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.672287291 seconds)
  done (took 51.806859705 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.673689834 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.674755067 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.67350248 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.673765921 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.675868655 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.675045673 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.674950794 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.675132065 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.674586797 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.672368543 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.678429326 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.675714073 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.673199707 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.675944266 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.674925713 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.674544782 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.6743855 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.672662077 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.67403207 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.675236387 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.676247792 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.673728603 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.67647506 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.675563714 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.677533424 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.677640313 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.675674874 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.678045672 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.678193271 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.676800571 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.680092121 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.67907782 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.678875777 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.676415437 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.676455221 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.677191262 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.67504948 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.678119268 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.675261138 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.677904848 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.676855054 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.679023119 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.676861192 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.677678213 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.676346229 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.679812213 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.676804047 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.678660861 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.67793229 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.67900207 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.677496318 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.676858643 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.678103058 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.676436146 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.676806278 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.676249183 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.676973493 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.675930825 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.678220048 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.677793613 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.675837889 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.679816024 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.676915583 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.678364509 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.679373706 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.677587793 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.67788357 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.678434459 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.678847248 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.678849742 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.67839357 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.680201724 seconds)
  done (took 122.330890066 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.679962573 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.67890153 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.675737602 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.677802873 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.677816955 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.676214188 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.675874416 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.675572584 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.674539318 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.677777763 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.681717989 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.681001263 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.680010808 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.679866861 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.677972357 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.6825603 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.677319392 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.676981301 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.675070001 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.67779035 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.678358419 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.676716131 seconds)
  done (took 38.528673934 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.678941862 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.676969551 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.677502027 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.679585508 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.678101751 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.679669913 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.679147945 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.678286587 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.678989005 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.679519457 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.678318857 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.676975431 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.679121098 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.681229135 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.679828379 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.678817541 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.679550026 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.679873489 seconds)
  done (took 31.828537926 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.680500379 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.680562348 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.680208112 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.680007984 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.679522485 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.67939726 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.679997957 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.681733269 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.682540623 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.682523375 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.681501797 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.681584495 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.682527125 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.682620705 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.681726424 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.68234432 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.681946509 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.679974717 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.681041502 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.680064793 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.680844553 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.681813513 seconds)
  done (took 38.59798005 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.682091703 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.682030877 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.682074669 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.684080711 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.683098462 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.684628725 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.683299504 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.682709594 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.682277502 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.681889995 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.684079877 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.682757018 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.683343772 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.684937002 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.68285806 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.681515444 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.682785274 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.681445482 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.685785446 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.683082841 seconds)
  done (took 35.273229231 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.686089807 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.68625102 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.684780382 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.686092626 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.683251227 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.686464673 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.685502214 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.686752877 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.685920693 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.685719948 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.687430831 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.684792253 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.684510773 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.682167264 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.687592363 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.686246148 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.686203937 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.684971595 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.684667683 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.686392721 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.686158861 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.686952106 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.684575734 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.686199056 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.687731163 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.684238361 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.686537771 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.688651374 seconds)
  done (took 48.818472754 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.685187541 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.684258557 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.683366133 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.687360227 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.684493205 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.686879172 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.685085307 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.684867898 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.686364882 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.683593068 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.684944382 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.685405733 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.682917511 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.685545137 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.685396631 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.684327466 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.683779801 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.686237228 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.685213202 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.684743815 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.688232082 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.684603917 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.687137664 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.684485465 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.68686178 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.687873011 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.687207514 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.68817822 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.688384936 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.685937855 seconds)
  done (took 52.185605661 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.707994364 seconds)
    (2/2) benchmarking "in"...
    done (took 1.705625503 seconds)
  done (took 5.028076733 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.687371932 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.687196588 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.686194365 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.686680994 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.688066687 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.686946437 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.686967087 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.687700959 seconds)
  done (took 15.114755007 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.68609097 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.68916772 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.688048525 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.68786672 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.68850893 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.686863061 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.694027566 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.688188449 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.689879066 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.687085869 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.69567097 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.698806526 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.689200041 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.685415914 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.688042624 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.688035176 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.687264366 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.688592676 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.689116313 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.690220561 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.690152713 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.691670257 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.691573422 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.687499659 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.687541318 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.699580152 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.693478331 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.68834747 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.688635352 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.692892444 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.691152863 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.689688714 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.692802319 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.689196238 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.688453108 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.687951452 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.701078201 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.691207981 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.694765503 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.690049754 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.688895671 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.690624156 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.690884029 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.691052916 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.690783003 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.690912861 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.690137289 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.688146883 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.690500159 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.690765295 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.701131956 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.690871344 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.689165304 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.695178072 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.692258043 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.697536493 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.688444872 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.692414935 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.703335727 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.701182619 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.698957815 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.698972296 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.690464529 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.688541404 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.698864354 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.715874341 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.696509991 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.687964624 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.692734797 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.692097266 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.696866693 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.702616173 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.698677096 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.689299329 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.691077543 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.692887831 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.693466253 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.690610718 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.700682508 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.694704831 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.692332925 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.69091136 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.698500188 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.716397785 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.68917007 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.690415144 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.690372596 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.689114283 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.69430373 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.704581064 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.691615615 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.691945802 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.690592473 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.692750146 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.6926633 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.694238624 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.691156313 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.695353679 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.692976403 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.692154364 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.691141983 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.699335131 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.704760285 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.69262687 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.692704049 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.699380155 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.690401172 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.690305473 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.700261598 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.693764606 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.69440867 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.694716984 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.702466117 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.694973892 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.696729926 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.700805273 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.69486592 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.696736226 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.694721241 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.694948996 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.705251097 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.726892328 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.694517337 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.695375747 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.698269862 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.70984144 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.691471407 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.697594933 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.694110153 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.692411312 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.693882097 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.692586047 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.691509908 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.694505746 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.697008929 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.699124583 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.692038579 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.693333784 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.695703521 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.697992487 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.697079484 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.694277041 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.699222165 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.696061993 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.695212832 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.697247561 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.699882214 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.693392593 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.695297394 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.696470428 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.696575582 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.695941685 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.69637312 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.697738967 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.698048633 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.697053085 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.697927353 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.696050973 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.70086746 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.694604989 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.697878867 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.696141177 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.703458744 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.695960395 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.700028999 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.694390347 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.696612492 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.696704676 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.697337642 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.694936376 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.696341796 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.694798996 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.701761508 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.70730779 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.69927451 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.697277511 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.70028228 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.698826072 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.697226941 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.696915631 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.701746645 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.710337368 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.696478559 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.706923965 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.70051484 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.699030283 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.700000258 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.696969061 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.699963343 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.697974959 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.701778075 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.705524685 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.707101228 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.710876212 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.700361746 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.704708363 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.699155966 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.704078475 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.700562551 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.697347326 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.700427916 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.699769412 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.697838301 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.699508882 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.698479347 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.699937418 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.697008328 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.698924913 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.700405092 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.69661699 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.701556596 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.702486417 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.699563395 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.701200591 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.69935205 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.700506134 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.699412384 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.697619457 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.69880583 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.699728401 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.699101711 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.701541895 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.702145003 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.700109 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.697942203 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.699273861 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.701154647 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.699092343 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.70105656 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.704687107 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.699668602 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.706149751 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.699954205 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.697761985 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.705863306 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.698005867 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.698547615 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.702150194 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.699745786 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.701610071 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.702690237 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.710634225 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.699144237 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.698679758 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.70160442 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.701395796 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.699779006 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.705893541 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.698163364 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.701576616 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.700313214 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.701580467 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.699970489 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.702272409 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.701322472 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.700253667 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.702344772 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.69930186 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.697841877 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.702191998 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.701199796 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.702926608 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.699481531 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.704275329 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.709606067 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.705922269 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.699683645 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.70319458 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.704398337 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.706661117 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.702527823 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.70027267 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.700128208 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.713144452 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.708769228 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.701563569 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.703336589 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.701343999 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.7091587 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.698600525 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.705717389 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.703131124 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.702664171 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.702065517 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.699869595 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.699634129 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.703088291 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.7007036 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.70400302 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.704141191 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.707398118 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.702289462 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.70292307 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.703934805 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.705040917 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.704114731 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.702486642 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.702800259 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.704711745 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.706140873 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.704732765 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.705637045 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.710422051 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.701174262 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.704429566 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.702399808 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.702956615 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.70358728 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.702540338 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.702605243 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.703934784 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.715678734 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.70753227 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.714138454 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.705861082 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.716581586 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.702522585 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.705214643 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.713711891 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.701590036 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.700566357 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.704467343 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.702768758 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.708476405 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.703115798 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.704141148 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.710785266 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.703200492 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.701150181 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.707846955 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.704488467 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.704558419 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.701057372 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.710181805 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.701546199 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.711029777 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.707149087 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.703293883 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.702415298 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.704476537 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.706336592 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.709891245 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.705584808 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.705980808 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.707152604 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.703107712 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.706070098 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.705427828 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.705664029 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.701211066 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.702938923 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.712924482 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.702588142 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.710303997 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.707091297 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.711630974 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.703919448 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.711784385 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.703961816 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.708369014 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.705205749 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.706961431 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.706157343 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.706033933 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.70729772 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.704927837 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.706447536 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.709018247 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.70935297 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.705218998 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.704032874 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.703286346 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.707556592 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.71804471 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.734378906 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.708123688 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.71125265 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.705665188 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.708419883 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.714007213 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.705085502 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.706057932 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.708387685 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.719839579 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.715867679 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.707357648 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.706289185 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.70826181 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.708253233 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.710459885 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.708709493 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.706870347 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.704690153 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.707972334 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.709204325 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.711628681 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.706778128 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.709827589 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.706337991 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.708189169 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.720179013 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.706486888 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.710225205 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.709031231 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.708260068 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.709362555 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.708003539 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.708859183 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.709306402 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.706991528 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.709753651 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.718453667 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.714137373 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.71252088 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.709567768 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.709006679 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.712566804 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.709966196 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.711585515 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.707569947 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.709397621 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.70850725 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.708958474 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.706631341 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.705144006 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.706285134 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.706529609 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.708411685 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.711484498 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.716908116 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.71221262 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.708114203 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.709416136 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.709159451 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.710647084 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.708863786 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.717112373 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.714988162 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.721629745 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.720779917 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.713366056 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.709976506 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.711182362 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.722065259 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.708699971 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.70942532 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.709459595 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.714391631 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.712515685 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.714303515 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.708244151 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.716660484 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.712161521 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.707844128 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.718094633 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.710005899 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.710577548 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.71235915 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.714908953 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.713562291 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.710928142 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.709610603 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.711973752 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.716564429 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.710998324 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.71022029 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.715031821 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.7098986 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.714311527 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.71756057 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.712549545 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.713921365 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.712065331 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.714350929 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.71117986 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.712188432 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.710301974 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.710114694 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.714411878 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.716562832 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.72400314 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.713784647 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.714124514 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.708120672 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.712939734 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.71058766 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.710829681 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.710598789 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.710702754 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.712052951 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.711760511 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.711708457 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.716922001 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.710429508 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.711397026 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.71625113 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.710910057 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.716138813 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.726074445 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.723073606 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.712497714 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.711607029 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.712648319 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.714381462 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.712277835 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.712097631 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.713956451 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.712490211 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.709537482 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.709391799 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.715294636 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.713813524 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.729815601 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.712041272 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.715839813 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.714221376 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.712639821 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.715390923 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.715378617 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.714593408 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.713828653 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.715904236 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.719722407 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.712050886 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.721574206 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.714188195 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.716779444 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.719643792 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.716993278 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.724844996 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.717803648 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.714803435 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.71096424 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.717732466 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.731028929 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.706145562 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.722378063 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.745578389 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.711268112 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.717938581 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.714291793 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.716305982 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.714623065 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.716128441 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.714423789 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.71658026 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.712168737 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.713224772 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.714962798 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.724366968 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.713752871 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.716885714 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.714209759 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.714121729 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.719166343 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.713364046 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.716481778 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.71677685 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.712256018 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.713692427 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.714824307 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.713340534 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.723203434 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.722216978 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.711384643 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.717179015 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.717436931 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.720287505 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.718613448 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.730211201 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.726170786 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.716263192 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.718925151 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.718525002 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.716852835 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.717663461 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.716308651 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.714635531 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.716739153 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.71658187 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.729628221 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.72465078 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.722864419 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.720169047 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.719835494 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.716585289 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.716833859 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.71742833 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.717661725 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.721540946 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.720002718 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.719561889 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.714011391 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.719129671 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.720644841 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.725904427 seconds)
  done (took 1017.673413814 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.717383425 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.715826828 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.719597643 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.717340899 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.717089512 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.716495613 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.721928815 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.718639015 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.716773549 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.718486229 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.717864781 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.719471274 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.721045489 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.719365347 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.718869491 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.721412271 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.716518382 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.720393698 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.720292358 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.716753886 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.719229701 seconds)
  done (took 37.73871448 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.718554833 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.720150175 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.720664503 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.718770335 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.72087241 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.721300156 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.718270547 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.720025264 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.718770286 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.720676571 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.719343067 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.717395784 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.720418076 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.722544645 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717122762 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.719785567 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.721588587 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.720392595 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.720565523 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.720879703 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.720188661 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.721983137 seconds)
  done (took 39.487782045 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.720823688 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.720783332 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.721240759 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.719159086 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.720513114 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.72108926 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.718120063 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.720692154 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.722115935 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.721448239 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.721024524 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.721000255 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.729759084 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.73251059 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.723841917 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.717585983 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.866495238 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.718761109 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.723270498 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.720882621 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.719620856 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.726111887 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.724388721 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.72076126 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.718914236 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.72134946 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.720788679 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.721568876 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.722237703 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.724542068 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.729474864 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.72268488 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.720042895 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.721483259 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.720219027 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.722296531 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.729882499 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.721914043 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.720076847 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.722888458 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.73101099 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.747374125 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.721282446 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.724993789 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.720732211 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.724310552 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.722725104 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.731810963 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.722600442 seconds)
  done (took 86.229735618 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.72270678 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.722839811 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.722648704 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.722459703 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.724768838 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.72234644 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.721709074 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.724548221 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.722386195 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.723485591 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.721914529 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.724208824 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.721831015 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.722625405 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.721420511 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.721813477 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.72074649 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.723072514 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.722513123 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.721453417 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.719462463 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.719486154 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.720945627 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.721391312 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.720748345 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.720712567 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.720812831 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.721984907 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.721241132 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.72212145 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.721889951 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.718219062 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.721563622 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.723891154 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.720499994 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.721243002 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.721521998 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.720843901 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.721667458 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.719383691 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.719960379 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.721230938 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.719828928 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.722729412 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.721760639 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.723211124 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.718994486 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.724622851 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.71975644 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.720689973 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.72065136 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.720216496 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.719820765 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.721856826 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.724264981 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.722272485 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.723144245 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.722080091 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.724608005 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.722431894 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.722112142 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.72208727 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.722802077 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.722669389 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.723840102 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.724367352 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.719655345 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.725131974 seconds)
  done (took 118.742030708 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.722912573 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.723360645 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.722398741 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.721746094 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.720909177 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.72463095 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.720453086 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.723429155 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.721300937 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.718502532 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.719752646 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.71962289 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.720177229 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.722887388 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.717377014 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.719542253 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.718159448 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.716685904 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.716405092 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.721248108 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.714610506 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.718539502 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.713852762 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.716599395 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.718329069 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.71790964 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.716456441 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.714221037 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.716709675 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.717317056 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.714790629 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.715586365 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.716145776 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.716243734 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.716841766 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.715524414 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.718402073 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.716177893 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.714648286 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.713529849 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.714498287 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.715260905 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.716501602 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.716879993 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.714577695 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.716323823 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.71636664 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.7153055 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.714484251 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.714590877 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.714077507 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.713953012 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.715347659 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.716057247 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.716066864 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.716357871 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.717732842 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.715774833 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.716077808 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.71977056 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.714855339 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.715988268 seconds)
  done (took 108.136711321 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.71640119 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.714659213 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.717756485 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.715570772 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.713881269 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.712448702 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.713437215 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.713846729 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.714642109 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.713492924 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713563869 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.71299548 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.714082279 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713136795 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.718341555 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714198031 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.71324437 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.715129854 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.717072428 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.713815468 seconds)
  done (took 35.937638067 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.713601634 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.715417425 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.714706803 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.715734623 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.7151891 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.71407289 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.715300199 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713804351 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712060451 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715555244 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.71644652 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.712731166 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.713676984 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.715554245 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.715073444 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.715772789 seconds)
  done (took 29.082078607 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.716762194 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.714183055 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.717080234 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.7140952 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.714174388 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.714857179 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.716266817 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.718343099 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.713889848 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.716639426 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.714481583 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.722013195 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.715200567 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.713966851 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.714997277 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.715362312 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.714487994 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.715305215 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.713024045 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.714890796 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.715100246 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.713310762 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.713628085 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.7090093 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.704473811 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.705639294 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.703605011 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.703392933 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.704171083 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.704597344 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.704399822 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.704461332 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.704412723 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.703818407 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.706303769 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.703536868 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.702821933 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.703954337 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.70540549 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.705710374 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.70674863 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.703101229 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.702839187 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.704874503 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.702634554 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.702812384 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.704395614 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.705142939 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.703740563 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.704471141 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.703481249 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.7030586 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.703492295 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.703118342 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.702441263 seconds)
  done (took 95.637819598 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.703068895 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.702246653 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.702765259 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.705461774 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.704189506 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.703254933 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.702636386 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.704176343 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.703742145 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.703033061 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.704327299 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.702925991 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.704199914 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.7039646 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.704225104 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.70498608 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.704124454 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.704357835 seconds)
  done (took 32.306226948 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.703935699 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.704703055 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.704687816 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.705976974 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.704395639 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.705372557 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.703433934 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.703594837 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.708691555 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.705954031 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.703549136 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.705004001 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.705681696 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.704479284 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.704202408 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.704143784 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.704812502 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.704215403 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.703866162 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.703661216 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.704418487 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.703822897 seconds)
  done (took 39.141483845 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.704561627 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.706562722 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.718002819 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.725022528 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.723997778 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.738141708 seconds)
  done (took 11.954192613 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702378866 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702334983 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.701382964 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701560276 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700811135 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700753069 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701652327 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701427528 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699697279 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701280688 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.702541725 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701101946 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700387877 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70016848 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700264229 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700628098 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701264488 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701575858 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700817467 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699522986 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699438284 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698659993 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699921842 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699486256 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699212666 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699161656 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699286047 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698123113 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697631079 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700407213 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.69642835 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697101006 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697145598 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69741936 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695789686 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697850696 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696690325 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696443348 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696253322 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697163569 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.696323602 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698473266 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696708614 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696151602 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695755928 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697626306 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.695612101 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698577991 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696254638 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697357173 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695842591 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698138185 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69666853 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698314406 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696880539 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696248329 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.695969378 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695869257 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695577605 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700142754 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696632465 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.69550052 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.695681953 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697741977 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695395375 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69884571 seconds)
  done (took 113.738243978 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695448824 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.697112219 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696228616 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696533499 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696613712 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696146515 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696074757 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696369428 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695673062 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696895479 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694657926 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69696936 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696259687 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696068586 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.695943898 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696156318 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.6966775 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696314816 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695502532 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695962607 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696010856 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697071719 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694714187 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696108206 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695990697 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695159706 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694516758 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696573724 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695375567 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695555084 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696248021 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695206117 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695403179 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.696494299 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696069119 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69580073 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695276613 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696146431 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694823338 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696468398 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.695742048 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693928798 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694940799 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.695454557 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695889622 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.694995244 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694436901 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694467698 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.694772842 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694602841 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694550999 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.695043413 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694878164 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694400298 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693334202 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694133653 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694447957 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695752476 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694329903 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694118095 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695965113 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693387443 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694484415 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69511701 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.693626964 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696773216 seconds)
  done (took 113.535834246 seconds)
done (took 2362.194247513 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.784717463 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.733173099 seconds)
  done (took 15.146519033 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.860101278 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.809970191 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.69611525 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.704564893 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.695132567 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.718434626 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.720889827 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.693913733 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.69490736 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.696231034 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.695923516 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.87760501 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.696476612 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.695461993 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.693977159 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.787741045 seconds)
  done (took 49.369980336 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.697397639 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.699699734 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.707694794 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.702085098 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.697430261 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.708357897 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.730078042 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.700742916 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.731656061 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.709029403 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.765898516 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.708268244 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.69735602 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.747052633 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.712739574 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.711951829 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.790158644 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.771619647 seconds)
  done (took 32.618713594 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.771744906 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.709410571 seconds)
  done (took 10.116530692 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.727738537 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.727762021 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.751694105 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.693244252 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.700299577 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.707894289 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.741645136 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.738360236 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.692038915 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.704488421 seconds)
  done (took 68.816859548 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.700065286 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.698114469 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.695676957 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.694828984 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.691687305 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.696094659 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.69495864 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.695477921 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.351439564 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.729074394 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.702088318 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.703318315 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.697071463 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.69794345 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.691961703 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.718187489 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.812852281 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.693418318 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.691372583 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.701753148 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.696357209 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.748968433 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.708241187 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.695035863 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.724953035 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.350544969 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.702335083 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.701608317 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.828010164 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.691083009 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.695630497 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.880182104 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.697215224 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.166548809 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.958781609 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.700449529 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.707726209 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.704292954 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.692551245 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.816979327 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.696497629 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.701775199 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.631377148 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.936699978 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.785898735 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.741580523 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.004056921 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.713248248 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.697034992 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.725604608 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.700337626 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.695807719 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.708536574 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.199980204 seconds)
  done (took 123.191492162 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.691887736 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.037852471 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.858649432 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.694471672 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97473732 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.897535218 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.695302876 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.739404189 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.696161627 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.92198036 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.948017145 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.797778275 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.694462316 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.693422822 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.694197186 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.691121998 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.846200939 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.763547691 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.694453517 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.691487589 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.718843891 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.933382547 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.815343213 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.6960036 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.72176566 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.902408792 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.815604709 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.794473414 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.484583735 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.69331458 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.754334797 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.696557647 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.695359536 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.694152578 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.8474172 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.786338214 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.777526243 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.695252272 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.696186579 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.693393977 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.350918231 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.890315887 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.786354593 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.823069552 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.947097851 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.89720509 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.47281982 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.693602447 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.427640558 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.855324824 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.920153963 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.921635215 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.814725851 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.697892396 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.029072465 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.695562942 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.694263501 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.943028789 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.912868766 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.789998365 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.696128038 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.693597004 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.694059615 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.931862129 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.696357183 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.787231728 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.697647239 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.694677228 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.79602412 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.79784697 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.930871812 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.912884827 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.730284139 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.039583787 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.201024778 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.946092915 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.764585011 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.950143156 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.703516655 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.700905594 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.777722215 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.544642809 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.953053612 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.942097848 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.944307812 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.736339469 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.423299167 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.702064267 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.926391274 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.92217643 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.959660669 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.949338511 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.936796457 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.017717593 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.702089979 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.700878401 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.931500372 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.825425012 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.7040354 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.042227675 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.930367731 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.228938159 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.726539079 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.002089322 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.832552225 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.704936378 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.329456038 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.703687182 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.929392285 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.742640302 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.704756985 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.703163468 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.919458221 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.688006526 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.703883271 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.358891255 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.763042741 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.707742181 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.934299188 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.70674541 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.969745875 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.708243004 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.931679599 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.185686029 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.732594772 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.876016679 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.949203639 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.706311301 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.940996404 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.944559246 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.817775503 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.921706083 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.409638612 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.704377087 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.988331291 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.706776328 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.703022365 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.872057612 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.704665897 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.844711983 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.706049573 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.996582203 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.724432961 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.932025273 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.708678533 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.955519727 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.734342116 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.752782533 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.707440536 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.822146514 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.706197811 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.625716587 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.859583006 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.120623055 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.703634685 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.25393769 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.705722113 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.850338044 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.928465872 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.724473952 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.775257832 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.3683515 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.704233166 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.786391726 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.727905237 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.086427452 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.705227347 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.955384597 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.707417923 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.704491378 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.703934263 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.936759051 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.888662398 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.707960519 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.705781225 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.60749256 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.704089596 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.704549737 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.885236381 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.185557717 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.704991133 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.905373188 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.707170087 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.834281404 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.709169742 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.781451522 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.037479237 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.706365887 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.706813649 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.706639113 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.705280548 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.706698905 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.91350486 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.730014256 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.203515389 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.840500589 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975945558 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.016397056 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.945325263 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.746848809 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.707768954 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.958647734 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.708126896 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.766933291 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.707953889 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.72756395 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.931431682 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.70873492 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.915185252 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.974196023 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.553294262 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.752961052 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.708412163 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.706333553 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.708992252 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.850900323 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.796809601 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.710201941 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.70908064 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.822204661 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.827873353 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.918726338 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.708898512 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.826793721 seconds)
  done (took 865.146043844 seconds)
done (took 1166.037468156 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.707287882 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.71007065 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.712504618 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.711509018 seconds)
  done (took 28.485809719 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.717430847 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.708662883 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.710129789 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.70918008 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.714223467 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.709675493 seconds)
  done (took 11.91412593 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.746189448 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.709668124 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.711785609 seconds)
  done (took 20.811790347 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.78114434 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.096376368 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.843870724 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.123720966 seconds)
  done (took 9.490249252 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.712907132 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.711704976 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.711058831 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.717018356 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.719950218 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.720795373 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.713366213 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.713947865 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.720015231 seconds)
  done (took 17.088734798 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.934383086 seconds)
done (took 93.369402348 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.719510468 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 3.368787019 seconds)
    (3/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.727893804 seconds)
    (4/309) benchmarking ("sort", Int8, false)...
    done (took 4.669193689 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.777456406 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.470753591 seconds)
    (7/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.812905655 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.81162363 seconds)
    (9/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.838049939 seconds)
    (10/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.375916623 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.971186603 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.737748717 seconds)
    (13/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.735984177 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.711898016 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.995128214 seconds)
    (16/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.711239998 seconds)
    (17/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.839842626 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.716489748 seconds)
    (19/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.505100864 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.87594269 seconds)
    (21/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.910250277 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.740329254 seconds)
    (23/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.71282086 seconds)
    (24/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.741850577 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.330462605 seconds)
    (26/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.87518899 seconds)
    (27/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.718961525 seconds)
    (28/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.826297427 seconds)
    (29/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.09049872 seconds)
    (30/309) benchmarking ("sort", BigInt, false)...
    done (took 6.714722673 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.804378225 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.035916077 seconds)
    (33/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.714172131 seconds)
    (34/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.812135186 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.716313441 seconds)
    (36/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.64582604 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.716103901 seconds)
    (38/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.080757135 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.716174394 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.713963585 seconds)
    (41/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.978512065 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.882782244 seconds)
    (43/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.810036631 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.976866573 seconds)
    (45/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.092774003 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.820088708 seconds)
    (47/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.950879719 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.94101039 seconds)
    (49/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.730095303 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.104057278 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.716291345 seconds)
    (52/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.870125325 seconds)
    (53/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.740432749 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.846075432 seconds)
    (55/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.712358161 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 3.731993798 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.749712392 seconds)
    (58/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.792105924 seconds)
    (59/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.975904518 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.718248131 seconds)
    (61/309) benchmarking ("sort", Float32, false)...
    done (took 5.411625455 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.716312751 seconds)
    (63/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.938331487 seconds)
    (64/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.849217192 seconds)
    (65/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.05856119 seconds)
    (66/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.820028233 seconds)
    (67/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.716384681 seconds)
    (68/309) benchmarking ("sort", Int64, false)...
    done (took 5.512610353 seconds)
    (69/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.035755902 seconds)
    (70/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.719821958 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.088338045 seconds)
    (72/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.716738897 seconds)
    (73/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.831202511 seconds)
    (74/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.29212825 seconds)
    (75/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.735412406 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.019193024 seconds)
    (77/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.81706706 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.046219771 seconds)
    (79/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.954308435 seconds)
    (80/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.936551363 seconds)
    (81/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.803049955 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.840953849 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.643429603 seconds)
    (84/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.722484803 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.256125445 seconds)
    (86/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.717495828 seconds)
    (87/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.450221261 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.71677873 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.065198862 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.178010642 seconds)
    (91/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.612144188 seconds)
    (92/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.852577809 seconds)
    (93/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.746300743 seconds)
    (94/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.132328803 seconds)
    (95/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.875866625 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.733933031 seconds)
    (97/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.81096442 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.72903905 seconds)
    (99/309) benchmarking ("map", identity, Int64, false)...
    done (took 3.213998984 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.980182119 seconds)
    (101/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.733946982 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.078363278 seconds)
    (103/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.755591374 seconds)
    (104/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.750416543 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.727067181 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.915429765 seconds)
    (107/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.930634008 seconds)
    (108/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.732962564 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.737395308 seconds)
    (110/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.795293864 seconds)
    (111/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.917795623 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.747977448 seconds)
    (113/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.977905393 seconds)
    (114/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.029962181 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.729979647 seconds)
    (116/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 3.345694025 seconds)
    (117/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.685183873 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.733855649 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.683411278 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.73474648 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 3.489525346 seconds)
    (122/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.628759614 seconds)
    (123/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.990512609 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.128682033 seconds)
    (125/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.238221529 seconds)
    (126/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.29881771 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.943441859 seconds)
    (128/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.731346571 seconds)
    (129/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.751094778 seconds)
    (130/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.836590242 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.992268987 seconds)
    (132/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.919728767 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.946142561 seconds)
    (134/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.807791419 seconds)
    (135/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.792215975 seconds)
    (136/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.803485303 seconds)
    (137/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.127294489 seconds)
    (138/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.818318516 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.758315482 seconds)
    (140/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.728599276 seconds)
    (141/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.998314402 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.063515075 seconds)
    (143/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.858874691 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.977715075 seconds)
    (145/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.882591293 seconds)
    (146/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.881902492 seconds)
    (147/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.762132107 seconds)
    (148/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.752349675 seconds)
    (149/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.740652075 seconds)
    (150/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.047882467 seconds)
    (151/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.873808556 seconds)
    (152/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.120571158 seconds)
    (153/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.735842244 seconds)
    (154/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.141584228 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.752402894 seconds)
    (156/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.899191635 seconds)
    (157/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.918797325 seconds)
    (158/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.075289637 seconds)
    (159/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.640723005 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.416211673 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.713967682 seconds)
    (162/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.749157812 seconds)
    (163/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.966082763 seconds)
    (164/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.525653426 seconds)
    (165/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.987350854 seconds)
    (166/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.617752547 seconds)
    (167/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.917244784 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.084315137 seconds)
    (169/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.899971998 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.736095437 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.747000273 seconds)
    (172/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.858047773 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.735192736 seconds)
    (174/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.736841961 seconds)
    (175/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.986089961 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.047246151 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.868015362 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.731092444 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.907038599 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.12980464 seconds)
    (181/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.892606679 seconds)
    (182/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.759294294 seconds)
    (183/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.811709465 seconds)
    (184/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.808284821 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.074469896 seconds)
    (186/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.990205653 seconds)
    (187/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.051187764 seconds)
    (188/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.9327624 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.87675268 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.04931664 seconds)
    (191/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.742811467 seconds)
    (192/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.912994858 seconds)
    (193/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.068866986 seconds)
    (194/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.649151363 seconds)
    (195/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.877502859 seconds)
    (196/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.041011994 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.045277229 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.87661444 seconds)
    (199/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.183123438 seconds)
    (200/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.755038975 seconds)
    (201/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.052963438 seconds)
    (202/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.742439636 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.213622815 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.157076869 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.727857074 seconds)
    (206/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.077851802 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.198984375 seconds)
    (208/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.843705116 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.972859246 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.734843603 seconds)
    (211/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.838604796 seconds)
    (212/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.043131264 seconds)
    (213/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.768097561 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.530704777 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.647622779 seconds)
    (216/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.195396867 seconds)
    (217/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.958846033 seconds)
    (218/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.113122754 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.390631997 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.928421555 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.437243979 seconds)
    (222/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.843156683 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.735493371 seconds)
    (224/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.740328288 seconds)
    (225/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.81777702 seconds)
    (226/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.950057766 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.75594992 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.115231651 seconds)
    (229/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.031800646 seconds)
    (230/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.737782104 seconds)
    (231/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.94970206 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.865533427 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.859624929 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.137668085 seconds)
    (235/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.830156712 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.039963009 seconds)
    (237/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.762173017 seconds)
    (238/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.982712173 seconds)
    (239/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.74660486 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.867924118 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.054806029 seconds)
    (242/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.746567593 seconds)
    (243/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.736852703 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.74139173 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.935496854 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.740377545 seconds)
    (247/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.508042285 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.120804029 seconds)
    (249/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.741862235 seconds)
    (250/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.02299112 seconds)
    (251/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.83184068 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.857965944 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.82905719 seconds)
    (254/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.734916843 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 3.359693848 seconds)
    (256/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.765070782 seconds)
    (257/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.916853681 seconds)
    (258/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.872250748 seconds)
    (259/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.960913698 seconds)
    (260/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.064644495 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.878362137 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.416069387 seconds)
    (263/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.737801355 seconds)
    (264/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.963125281 seconds)
    (265/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.302758421 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.091316535 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.734877731 seconds)
    (268/309) benchmarking ("sort", Float64, false)...
    done (took 7.112706483 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.866339842 seconds)
    (270/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.869667393 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.761059275 seconds)
    (272/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.8835107 seconds)
    (273/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.771014351 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.735899433 seconds)
    (275/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.355973373 seconds)
    (276/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.595308315 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.650049736 seconds)
    (278/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.736071854 seconds)
    (279/309) benchmarking ("perf_sum", Float32, true)...
    done (took 3.108265937 seconds)
    (280/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.755672429 seconds)
    (281/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.450193179 seconds)
    (282/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.925038907 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.372346864 seconds)
    (284/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.238607682 seconds)
    (285/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.823606701 seconds)
    (286/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.47287903 seconds)
    (287/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.813072659 seconds)
    (288/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.82930511 seconds)
    (289/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.742973713 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.039876457 seconds)
    (291/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.185036604 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.495150286 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.732462665 seconds)
    (294/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.967315666 seconds)
    (295/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.73514354 seconds)
    (296/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.472124073 seconds)
    (297/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.849002104 seconds)
    (298/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.821979187 seconds)
    (299/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.185098254 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.770946993 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.409397787 seconds)
    (302/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.907102555 seconds)
    (303/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.951833588 seconds)
    (304/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.754543109 seconds)
    (305/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.733322581 seconds)
    (306/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.055525354 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.950508399 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.932586472 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.36578874 seconds)
  done (took 964.649621637 seconds)
done (took 966.359715579 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.763424808 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.753973913 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.736245809 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.757466266 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.850404182 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.784943889 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.75270062 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.741786734 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.787644497 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.786592203 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.735331268 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.782347084 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.737617934 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.73853418 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.736524741 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.75455636 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.050870681 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.769032588 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.754937106 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.75025256 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.754434355 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.735967376 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.787844989 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.782208115 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.740761273 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.7426257 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.740219215 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.75844369 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.850539139 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.741203369 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.745305596 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.751282305 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.050545343 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.768629776 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.735902294 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.757764602 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.750301357 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.752125525 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.741855597 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.771636239 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.138163704 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.782037023 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.740322659 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.739319196 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.740154244 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.745360523 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.73983073 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.746804916 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.754404926 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.755533443 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.130645208 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.799332879 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.742843557 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.739796386 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.752694601 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.739527908 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.744179441 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.75629309 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.759995479 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.757217365 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.03971845 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.776208675 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.744657985 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.759298543 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.748679828 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.169386568 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.784745701 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.747141297 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.139919193 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.788313648 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.169953751 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.796525656 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.74360617 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.755093937 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.773284778 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.05293407 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.770164164 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.740533242 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.749407243 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.73879618 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.753518678 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.757340017 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.745619661 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.739930534 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.756600298 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.790223231 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.75453558 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.742874649 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.755004886 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.762078439 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.750654619 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.752285186 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.745727844 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.741515532 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.755000732 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.74447612 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.74440948 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.745172649 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.748485447 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.75539876 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.140269923 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.808618102 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.739053736 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.737858887 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.741319176 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.756518782 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.140775388 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.785024203 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.766638845 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.791401046 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.745538586 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.04322955 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.778275373 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.760157416 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.75365023 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.745077372 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.741107074 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.042744724 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.167039871 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.803655539 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.744068887 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.742836118 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.76047251 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.746171777 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.740943473 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.052882525 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.777965706 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.758954595 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.866155037 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.755950645 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.776980387 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.742801733 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.747245906 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.793917106 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.760668361 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.77793186 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.745393997 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.760649603 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.764012424 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.740278616 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.756878575 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.756427122 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.745222328 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.752997368 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.740836868 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.797449442 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.759883873 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.760426862 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.765386082 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.867358233 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.743355383 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.040824115 seconds)
done (took 274.532241827 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.833349201 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.741974081 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.838112976 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.744428498 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.842564972 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.819790925 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.743379857 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.746401377 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.746054255 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.278271831 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.74618522 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.751040758 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.745355714 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.744774332 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.823542163 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.745705096 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.742917877 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.190292028 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.746187807 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.829249473 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.744333917 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.745073122 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.744057553 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.230640959 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.743172674 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.743813303 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.827476382 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.744639794 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.185741213 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.748944535 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.746552015 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.184145861 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.825388764 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.771157276 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.752543724 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.747780293 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.835972078 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.755508824 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.812754139 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.82539581 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.842388459 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.777242536 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.743648011 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.747690533 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.748711275 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.743880216 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.74340287 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.77434184 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.746571838 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.751119439 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.223964706 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.752473458 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.749320216 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.744475184 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.745254889 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.772006917 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.744003714 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.744868081 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.831146108 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.746782991 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.815117044 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.232093238 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.24097444 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.74457451 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.745651981 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.746494218 seconds)
  done (took 176.990550719 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.814307582 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.822753472 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.812046319 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.750755364 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.792439152 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.811337511 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.750198327 seconds)
  done (took 14.229686258 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.752898057 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.745620582 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.79470321 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.796586118 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.745281974 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.900490085 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.745713437 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.758138396 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.753314775 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.773950928 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.746703439 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.747682581 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.75549296 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.745447182 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.795425915 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.759001465 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.862716874 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.752483244 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.747945277 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.894920519 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.750931371 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.754480179 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.771256844 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.757554354 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.747047496 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.754852051 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.309299467 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.747548545 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.746414349 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.747850343 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.7475855 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.787866981 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.74944535 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.744195297 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.749475632 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.866114414 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.746260329 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.749762582 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.746662481 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.747035946 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.747031224 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.747106297 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.748807493 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.74849455 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.749212475 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.769235308 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.747387811 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.747634159 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.74765156 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.747544633 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.774547874 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.748001975 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.747672434 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.756863788 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.794357584 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.756448036 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.748734024 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.749060023 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.746684897 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.748526473 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.897371444 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.799934574 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.747958154 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.797348058 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.75053245 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.751930869 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.748238246 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.749842642 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.838464197 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.752098503 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.800616474 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.751140498 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.907766591 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.773131568 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.751639291 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.753818537 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.754661494 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.750356363 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.748768082 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.759516088 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.749239304 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.750825996 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.754779707 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.751578923 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.750542549 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.860547748 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.890961211 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.750925859 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.752468736 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.756998321 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.7500845 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.796753636 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.752570707 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.752067266 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.805085326 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.864745197 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.778951523 seconds)
  done (took 193.902052532 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.757237953 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.755674712 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.754203705 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.771077772 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.749007576 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.75389105 seconds)
  done (took 12.223058639 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.756172537 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.756261628 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.754003178 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.752909084 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.751035087 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.7539917 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.750254582 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.751520105 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.754084256 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.754502075 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.753260833 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.751504045 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.753852652 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.754645351 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.752568452 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.754102454 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.755417714 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.752299371 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.750342511 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.754239944 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.001790421 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.752274428 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.75495321 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.757293101 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.756755996 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.754312838 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.76624277 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.752832739 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.751461931 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.760502793 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.754281458 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.755952677 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.75568192 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.760951753 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.758041149 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.755054398 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.757286704 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.754043526 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.755431023 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.754323787 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.752588918 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.753296915 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.751640339 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.754550594 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.75647474 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.760475508 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.756625451 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.771523047 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.753061556 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.754668688 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.752962089 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.75308622 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.755966283 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.751471786 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.761984671 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.761943752 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.760663779 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.755407469 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.753360264 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.756014746 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.758299935 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.753802153 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.756542563 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.759121464 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.763968533 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.757378425 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.757799277 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.76026031 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.755939455 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.754571846 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.754362591 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.755519274 seconds)
  done (took 129.337355629 seconds)
done (took 528.378794354 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.002078314 seconds)
  done (took 8.686926591 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.919678016 seconds)
  done (took 8.669400745 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.272269802 seconds)
  done (took 9.960013671 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.7847121 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.7699758 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.763811179 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.757427433 seconds)
  done (took 28.786652757 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.02116289 seconds)
  done (took 8.709228579 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.778219784 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.753463263 seconds)
  done (took 15.291864689 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.838141072 seconds)
  done (took 8.525294553 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.867401075 seconds)
  done (took 8.564252892 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.762729113 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.784133644 seconds)
  done (took 15.259111955 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.760886146 seconds)
  done (took 8.450398576 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.962534673 seconds)
  done (took 9.754455817 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.782086473 seconds)
  done (took 8.542669549 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.794884012 seconds)
  done (took 8.481174388 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.857836181 seconds)
  done (took 8.545609375 seconds)
done (took 157.914070504 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.763198891 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.761561597 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.759084698 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.756849691 seconds)
  done (took 28.726862968 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.792147029 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.790826431 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.794057056 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.804876285 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.793913869 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.794051014 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.784843604 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.786475967 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.803657234 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.793907765 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.7944617 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.794803679 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.790481895 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.785132292 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.795515364 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.794801573 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.801315188 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.793535556 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.784405677 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.794292851 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.757672396 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.80407874 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.795268919 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.759720497 seconds)
  done (took 44.672892922 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.948472685 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.828683784 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.913869373 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.810907837 seconds)
  done (took 9.187951459 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.812222521 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.812587786 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.825391721 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.860962092 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.885860871 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.822893269 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.790036015 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.778971854 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.769464604 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.814150968 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.891252916 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.805443589 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.897965847 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.761277866 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.945390034 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.76006771 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.75909691 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.813211044 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.861165286 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.875076895 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.760857754 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.812382526 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.815802442 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.809087205 seconds)
  done (took 45.427679132 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.762074407 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.769230384 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.770371461 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.761620112 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.765361765 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.760403581 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.770012188 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.764643606 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.784941344 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.764178031 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.762060754 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.763168446 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.769027397 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.760074546 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.7625932 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.77595662 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.778143908 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.764137064 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.76715757 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.768300605 seconds)
  done (took 37.034587279 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.762808633 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.606299521 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.104541447 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.01347768 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.759654465 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.755772124 seconds)
  done (took 30.690637531 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.773182716 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.765275744 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.761668725 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.821502388 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.901020746 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.767743618 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.760913506 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.772403045 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.804194177 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.822995252 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.781580959 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.787212621 seconds)
  done (took 23.211652353 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.763080306 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.762355504 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.76187788 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.772303345 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.77113255 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.770632188 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.770840875 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.759992443 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.773683883 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.782253256 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.767720562 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.773851075 seconds)
  done (took 42.924747373 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839503697 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.638621732 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20876566 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22892082 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.281827149 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.960426415 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.76207803 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.846020295 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.759551724 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.032943659 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.161305281 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972073484 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.9996351 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.505505848 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.758489595 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.243996148 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058181799 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984517594 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788043185 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.472421018 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871697541 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271296032 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.430732405 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.880970103 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.964503051 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.88634721 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.022457229 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.709492577 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811469931 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766857728 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765830291 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.758441048 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.030978682 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87943225 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830381197 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766547951 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.175606574 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.466957988 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.764539365 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.435114584 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.302271646 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.883800601 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764506783 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.761110353 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.6876301 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280961754 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850397933 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.76263339 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.460247714 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.763569359 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.767375701 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835723339 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.763837011 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.571160576 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.445065643 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.0260086 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.762196299 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766327144 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323746308 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802085772 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378858715 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.693604952 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.851442339 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.431556968 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230347723 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.920657865 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.766202617 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76188092 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.688275786 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.435755576 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882914854 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.896449989 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.77697739 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403635922 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055976179 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.240211483 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.8222139 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052361877 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.54722975 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.696538162 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981346456 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.711884122 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.689187643 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.592618275 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.690032768 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981623231 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798282732 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.366940396 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800687298 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.848681714 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.766807864 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778480388 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764089689 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.977117451 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.659299718 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.761861537 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.12123108 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.031172398 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780674448 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.855436334 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.692895125 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.766897239 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012742348 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.970731232 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.001537264 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.250604925 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86157989 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.698864983 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.775976586 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.687843197 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.77552111 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.043628049 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836882113 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.826571879 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894644272 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.717201176 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026789438 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.721749037 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.866260719 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.180677411 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.011521761 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.112635599 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.015039751 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830148227 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.772883826 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.766630574 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.504301747 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.383960212 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.983109783 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.781012837 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.241569833 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.775334281 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.769298082 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.704485011 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.38767509 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.195000811 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.85979982 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.980636135 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.719068106 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044803472 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.696035892 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.906008841 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.759721217 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.98191349 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.424864114 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.864659657 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021335791 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.128838705 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.986587243 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.7786274 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786238411 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862433386 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784346238 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.179515184 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.01444176 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.770441311 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.772325095 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.499187169 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.83324893 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.772348337 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.772631745 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.294843624 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049231173 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.793663811 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.773613782 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.645652902 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.781137932 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833211331 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772250792 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.772997869 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.288490888 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272220842 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.773581061 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.419603248 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985687242 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771813248 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.480194135 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96378592 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.783148689 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045009098 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839325525 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.697093791 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.470632669 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.472656933 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.770301791 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.698575341 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.767250284 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774095548 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.776200599 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.960127648 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.05672746 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823803303 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.435018403 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.888217086 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775833342 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.772658962 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.7709645 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.289549181 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825891686 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.258745399 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.901528048 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902817336 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.784349445 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.701495667 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.775361084 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772796782 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.773713939 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.719286435 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823057161 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.458257085 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978786773 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01951462 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.178042826 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.778142488 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.441353461 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.896991614 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.785062564 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.131373318 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293247363 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.870481352 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830540984 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.778366694 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.450122924 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.507631297 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.335830476 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080162441 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103283316 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132825488 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.156826392 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.09380636 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856728544 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998840121 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.294093949 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.830658565 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.861201822 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711319542 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78705546 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.430566622 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133128619 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782599972 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991324652 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067126329 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.206638257 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91718367 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.975920283 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802689121 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.555765884 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.797889746 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.309671034 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795262423 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.231908613 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992965586 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857527621 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.137366837 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.86619392 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.775076447 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119619278 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817149747 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.475375758 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.127454845 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.146827692 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.321643193 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007754789 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.775007923 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.216074371 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14754057 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.94767002 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.892335645 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702644404 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.781833991 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.779755414 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.785603289 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.750197031 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.616201857 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.016135129 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778828786 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005354153 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.878173908 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151167717 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.685480201 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.778485347 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.776837185 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027615852 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441533315 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930222053 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.052324443 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.349490049 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.785663751 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.703663477 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703414968 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.476296746 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.77764009 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.74160696 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992045699 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.880334313 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.454598855 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.125837759 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084219191 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.021247869 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.78932818 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.056778374 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053824611 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.266475112 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797167925 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.875210987 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.152917277 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.535163773 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.990147448 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.001490136 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30741724 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.994850943 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229335739 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.752098462 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.776381857 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.98468312 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.994437204 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.223327765 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963472271 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.486607239 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.784762968 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139787615 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843419287 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.217022707 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.976582915 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.864159085 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.78418666 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856623351 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782537761 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.786928448 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.784533711 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786886998 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.22636358 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907460196 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.789942013 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855921393 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854545555 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.357282584 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.785584921 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055431225 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144350073 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.12793138 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.845191924 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.779782253 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78740606 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707333699 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907529624 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.221357858 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.052038357 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.900132644 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.912088319 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798402675 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.153609527 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.026385133 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086995507 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050180231 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.662808614 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39808556 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.89501557 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.995647617 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785009669 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.983463287 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002910257 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089083267 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351066876 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.892935055 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.968241094 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050463861 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.139828126 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.780699531 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362088389 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.790017163 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172614079 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.815285745 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.236655041 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04532441 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784174285 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898838668 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.782657803 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.979929281 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.230300425 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.452619265 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.135953987 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644062607 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.784313617 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062659408 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.121616927 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08585649 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857044576 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.787074558 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.470885643 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91324082 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.654787943 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.009720503 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.782538678 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984432374 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.49129019 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.783084327 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063279898 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089043845 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.780411941 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.689380427 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812982327 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.786056487 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.994081316 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012629699 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025576216 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78476837 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.783146676 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.587864329 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066032029 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846603038 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707253426 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.78388935 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827460122 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008299442 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.801597101 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.297480702 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.483427347 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068891825 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.68933653 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798641644 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.162567024 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.166846473 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126517506 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.312270327 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019756437 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.337401647 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.595136695 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157482382 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.784523963 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.158566428 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15854798 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.784729642 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.257049789 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890823707 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.058060144 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107321276 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.792234377 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.516826114 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.820525674 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996511433 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.138721762 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717158078 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.787875886 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.833028934 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.784834765 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.798200546 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.792641651 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.722598911 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.199164373 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.619478212 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341429727 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.786115369 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.915122609 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.220614795 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.30562471 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888701636 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799968752 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793890296 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.497790337 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.07354761 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.028085359 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.271648903 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.876184083 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.786518394 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.7849885 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.70440601 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.967548238 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.97265567 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071802587 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.111949689 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.892173163 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.787259523 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.99570845 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986945838 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.233317035 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925308071 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.882133738 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896399776 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.7255464 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.491245756 seconds)
  done (took 1616.582804841 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.792669095 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.799690485 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.799140241 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.867349213 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.805915821 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.806604096 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.83557481 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.882729938 seconds)
  done (took 56.309141346 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.789953537 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.955494809 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.792665372 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.795294833 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.794034574 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.792916571 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.954413801 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.801241348 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.793820687 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.797331752 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.791838948 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.790036086 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.071548519 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.809347479 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.794814364 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.789877968 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.793847518 seconds)
  done (took 72.835346932 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.796364477 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.038398258 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.82553796 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.795270349 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.765584732 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.806760315 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.857461194 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.798840495 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.795529635 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.035566931 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.088511534 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.801238076 seconds)
  done (took 89.128195328 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.804859589 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.793695158 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.795348543 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.796963776 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.795189323 seconds)
  done (took 10.716531947 seconds)
done (took 2109.155776005 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.021648182 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.989256582 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.037144724 seconds)
  done (took 5.746868109 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.934149158 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.98262623 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.09581693 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.117118495 seconds)
  done (took 9.855439804 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.098096827 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.170945505 seconds)
  done (took 5.991004408 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.105030344 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.819151995 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.163304484 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.791262984 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.797526881 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.794461119 seconds)
  done (took 22.111448385 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.794610721 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.792777099 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.789579486 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.790406371 seconds)
  done (took 8.891936347 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.788319169 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.479171913 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.787951332 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.799300833 seconds)
  done (took 20.578195801 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.940420141 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.907741064 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.942488806 seconds)
  done (took 7.51280041 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.012059048 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.587623493 seconds)
  done (took 6.319870989 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.94881966 seconds)
  done (took 3.671543219 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.821322193 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.062537205 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.290849047 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.835226742 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.428329553 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.043544532 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.135561202 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.01667358 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.235123911 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.273203154 seconds)
  done (took 24.867732173 seconds)
done (took 130.377423342 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.358417361 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.826586377 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.000323234 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.157348321 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.054993459 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.000109436 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.013863115 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.150063344 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.839492174 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.825421588 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.162254768 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.09307686 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.966469757 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.814829707 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.969937753 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.816686854 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.023510736 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.176497239 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.882310487 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.082394873 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.029544669 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.799180529 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.993784219 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.812368617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.030563447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.950984332 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.34324687 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.821493138 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.9808147 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.354515896 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.978879497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.215847586 seconds)
  done (took 166.252745575 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.797116709 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.794146031 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.795946511 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.794637469 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.253421017 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.797080113 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.799961732 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.795344724 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.198765441 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.194405179 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.797126618 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.235796135 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.799249554 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.795354654 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.797591966 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.795604885 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.348649119 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.796660715 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.79631115 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.796003173 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.794243721 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.070022777 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.797957434 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.084121965 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.35604271 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.798890427 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.796727091 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.795620058 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.796457549 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.796026801 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.799304833 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.798262566 seconds)
  done (took 206.593293341 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.796375245 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.799390958 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.79919754 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.799445141 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.799500407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.800546839 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.798345101 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.798685269 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.43059619 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.417718057 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.799967294 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.795614641 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.801207311 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.796107753 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.799736684 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.798038301 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.797085547 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.797032424 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.799263938 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.801344675 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.798612305 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.527510852 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.799468656 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.531078816 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.797765525 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.798053514 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.798442259 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.797425108 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.798763915 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.800414087 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.799749016 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.799842411 seconds)
  done (took 217.998892109 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.046992196 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.801467663 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.799416654 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.719376722 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.798845007 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.798768206 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.778982192 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.044211038 seconds)
  done (took 18.519375244 seconds)
done (took 611.098897548 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.19361792 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.032806446 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.9841145 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.821104362 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.088220983 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.870705084 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.821314802 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.8857388 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.639014282 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.896985421 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.455502912 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.842367531 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.556323112 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.847874357 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.942106187 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.876217699 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.408375257 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.518898404 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.996052025 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.903185719 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.004024465 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.734389028 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.901171951 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.678407902 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.593682819 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.766369841 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.856627716 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.417624348 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.831055913 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.981071239 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.480379396 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.080249095 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.833754329 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.817834987 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.873703265 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.853668564 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.034524819 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.832839031 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.946090007 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.526002198 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.907362977 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.542909762 seconds)
  done (took 99.804583023 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.811876625 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.806456327 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.807307887 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.807709979 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.816684054 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.8067895 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.808340502 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.806810214 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.808076438 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.80686277 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.807086261 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.820197263 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.80688997 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.816365685 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.807098843 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.807368777 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.806961857 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.81682663 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.807594626 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.808642858 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.807573048 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.808259316 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.80322299 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.808646035 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.808548514 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.808657494 seconds)
  done (took 48.78518671 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.802959329 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.960952218 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.050608574 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.822621675 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.8037556 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.806098737 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.821524138 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.807421027 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.804564472 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.804119318 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.893094828 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.808860464 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.823325161 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.052107767 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.821107373 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.803544059 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.803856313 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.803507887 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.971174554 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.821018695 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.823980957 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.808326424 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.823103881 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.817863931 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.805823584 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.80551826 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.806919364 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.241158654 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.815990249 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.894223903 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.864295463 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.826748494 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.189383207 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.061538286 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.86193893 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.812850506 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.806507473 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.898216618 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.810053711 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.803868598 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.825346903 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.810740334 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.048749057 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.330554596 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.818449996 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.803852725 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.257344716 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.911472692 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.847649798 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.815307305 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.055430309 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.823530133 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.807450451 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.807051127 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.844679107 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.813773738 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.805194974 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.120381302 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.815224705 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.824117218 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.814347283 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.807715222 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.975384267 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.8179993 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.964429638 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.818844879 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.813920059 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.807984077 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.05622866 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.822914656 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.338777572 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.821551988 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.807064342 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.896356353 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.970291067 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.281855091 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.819864443 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.977471874 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.202498499 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.831830398 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.812351187 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.230853124 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.833713535 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.815742577 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.80837085 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.810782266 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.805078595 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.851829529 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.822084625 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.251274383 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.337960983 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.139696583 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.83420792 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.821183184 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.809063206 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.125030237 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.815908385 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.807266694 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.045517144 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.343794871 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.821592421 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.814667648 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.317809885 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.823519248 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.825993932 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.814736435 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.059017791 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.825483086 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.850757342 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.803157283 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.814859317 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.811455714 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.828118495 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.816470613 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.810749694 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.307409636 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.918028319 seconds)
  done (took 224.621990904 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.810207396 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.81124243 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.807559281 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.812008988 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.806148276 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.81041821 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.806465224 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.808789401 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.808522225 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.804871898 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.807610433 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.808629534 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.812924919 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.80912745 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.816033105 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.81035074 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.411867327 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.810449092 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.807285262 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.80941694 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.454783516 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.814545831 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.808016677 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.808415789 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.807067532 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.809445297 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.811704544 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.815247398 seconds)
  done (took 165.660848521 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.811501276 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.922468764 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.828864738 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.84009749 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.81821508 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.810221125 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.908961314 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.826695531 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.815592036 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.814339709 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.811478227 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.870175483 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.821455712 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.910112425 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.841470406 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.917494525 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.915490964 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.81799535 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.811235722 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.810757379 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.841230129 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.818158403 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.872887771 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.930056976 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.826513343 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.924709466 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.83017912 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.811799618 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.814401974 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.921962848 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.83453325 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.872556729 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.838323249 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.827799384 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.928662447 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.927764234 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.917996285 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.914544576 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.816408727 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.81531427 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.813240235 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.81546607 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.928041129 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.834964598 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.81140174 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.927368232 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.829486395 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.811564219 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.813082112 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.81285921 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.827281648 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.831135099 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.877091842 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.942441228 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.848371641 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.83846097 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.910773081 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.940847233 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.813144168 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.912052505 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.819716794 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.926431273 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.833393306 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.814286738 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.815334482 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.81851804 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.841341874 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.921005671 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.921326142 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.821194246 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.912321173 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.851311158 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.820976617 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.814655431 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.815409565 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.925500402 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.930040444 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.850245876 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.849808408 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.844568568 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.821708371 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.81184333 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.8147572 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.831397108 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.819976342 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.927024025 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.930828472 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.821390798 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.815704241 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.813066234 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.817499164 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.83897577 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.935124026 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.850023537 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.925222434 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.881524229 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.889861362 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.831096436 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.829209589 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.818421225 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.877030926 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.830712593 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.827240693 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.102350922 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.873739863 seconds)
  done (took 196.774598558 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.185639101 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.864081063 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.87227336 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.127740219 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.17240341 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.777898079 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.863846375 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.862835689 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.8877624 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.043011917 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.929765291 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.883274623 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.852348295 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.836951178 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.861027795 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.884089626 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.871441723 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.208938722 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.085610303 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.036955949 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.852105369 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.165639108 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.175413415 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.466481007 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.917137855 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.26675886 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.424463484 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.999229341 seconds)
  done (took 60.126946232 seconds)
done (took 797.505354069 seconds)
SAVING RESULT...
DONE!
