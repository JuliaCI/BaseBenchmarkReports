cset: moving following pidspec: 3488
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.365824402 seconds)
loading group "string"... done (took 0.567957882 seconds)
loading group "linalg"... done (took 7.322004964 seconds)
loading group "parallel"... done (took 0.166358119 seconds)
loading group "find"... done (took 1.137421806 seconds)
loading group "tuple"... done (took 2.03364687 seconds)
loading group "dates"... done (took 1.285378795 seconds)
loading group "micro"... done (took 0.238381373 seconds)
loading group "io"... done (took 0.962707718 seconds)
loading group "scalar"... done (took 40.330969696 seconds)
loading group "sparse"... done (took 12.86632333 seconds)
loading group "broadcast"... done (took 1.006182424 seconds)
loading group "union"... done (took 14.131337022 seconds)
loading group "simd"... done (took 4.713408846 seconds)
loading group "random"... done (took 9.630879951 seconds)
loading group "problem"... done (took 1.989417998 seconds)
loading group "array"... done (took 22.378657099 seconds)
loading group "misc"... done (took 2.014206841 seconds)
loading group "sort"... done (took 3.416285265 seconds)
loading group "collection"... done (took 19.684286606 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.585582102 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.157948457 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.152151588 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.150402543 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200770339 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146502923 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161010334 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099066717 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.980442153 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180876594 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15414393 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.534450626 seconds)
done (took 5.24829256 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.218279152 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097261183 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105557979 seconds)
  done (took 0.894065408 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078591376 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14797842 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09876618 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.0798248 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096829057 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079021496 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09711107 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.093932961 seconds)
  done (took 1.390507962 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088190608 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098713648 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082839487 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.098125724 seconds)
  done (took 1.05607013 seconds)
done (took 4.34129949 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.737255736 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278415568 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203648897 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.471298611 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.201971591 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.220414505 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678934839 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.342642239 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.255192452 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102365581 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.13865862 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.401449961 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139722933 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685497922 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09256299 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127801771 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179279664 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.452420389 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082612687 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112014849 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117363192 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14337839 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131580446 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093394477 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.188067268 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083661624 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.200137619 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110230483 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081004954 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.282228611 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201920163 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688475585 seconds)
  done (took 10.958591146 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.1126458 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134935449 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100075097 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140138675 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136113551 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101367692 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084821751 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097683501 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124090508 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177791812 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116503448 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140275579 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097168465 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083729671 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117392363 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247472712 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121937731 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101005919 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102110458 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089750818 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140219226 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113821978 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109712043 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095305074 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16866705 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223881767 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11339571 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127414099 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09858982 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113809956 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144764328 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144345836 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096703235 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081019333 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175699241 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125697175 seconds)
  done (took 5.210580581 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.117080433 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193808766 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124396765 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.173790036 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081863875 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146751344 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.09598991 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115391114 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.262044984 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.190369547 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.501679388 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142060105 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101838127 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10085657 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084053373 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099130182 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.488426046 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.15799663 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134111035 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097796806 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107503374 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103158675 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365686965 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081663747 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096842698 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083108774 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082822655 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.172341395 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083421736 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.225912425 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12125162 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082281762 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134874813 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214815428 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111409012 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137130622 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097698897 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080547927 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179654296 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.156602604 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106001702 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079577235 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124088368 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137968038 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13768514 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098864489 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081798362 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.201730643 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099007512 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097108259 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09792467 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.937012841 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18042604 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.121233428 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100985182 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.310197324 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100156186 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098086675 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078997196 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.277931527 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.201697261 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100894632 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09782669 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08093587 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095204436 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.0833445 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097979304 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381547778 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084440608 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109012637 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.680588819 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08409688 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098224439 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104983984 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089216802 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116427619 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077877385 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098479907 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082660107 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098927861 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080030889 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101856581 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108878091 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.221323947 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081655925 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.099616416 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078622206 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119197577 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128457342 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085472682 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097973257 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131506383 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084826955 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099457603 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118017647 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100886657 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109844572 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085430513 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144572683 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09931026 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.136452068 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094629703 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125495439 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101722036 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116192962 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114870486 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101439082 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.171497945 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079811903 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.098064112 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081599393 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098063651 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082675961 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101890657 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111372085 seconds)
  done (took 22.994379684 seconds)
done (took 40.973783219 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.329760403 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104812418 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105184237 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108835235 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103495057 seconds)
  done (took 1.525492601 seconds)
done (took 2.268707459 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.16605303 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115803721 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096486277 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.130029121 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078024015 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.13594518 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.13344479 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096104244 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.135796338 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095650526 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.129290238 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078837931 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093358937 seconds)
  done (took 2.260501975 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097103579 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116142784 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083498133 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112361394 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076948687 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112204504 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093408141 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119721825 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110692765 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086407972 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094997051 seconds)
  done (took 1.841515793 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095793924 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114353631 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083905913 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111853948 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078675122 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112751718 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094357871 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118688053 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112074541 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087666054 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09464053 seconds)
  done (took 1.845376175 seconds)
done (took 6.682891858 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092985931 seconds)
  done (took 0.828043976 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.929243254 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.587036238 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113218277 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.152853555 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.325089591 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.174136718 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.474189106 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12842316 seconds)
  done (took 10.837972443 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.14623142 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084052528 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.101554119 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084673189 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.105211577 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086759417 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101202472 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101666177 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082904345 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102635947 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084106582 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100986549 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103158752 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086234199 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100211286 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084004795 seconds)
  done (took 2.366001543 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11982295 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11883181 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108002444 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110083892 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087428767 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106914363 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106446985 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089219277 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102276153 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10369537 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090815796 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105979901 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104332905 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079759741 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106046329 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108753447 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086388918 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106585895 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106889646 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090892464 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107788485 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096582921 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087864968 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107075068 seconds)
  done (took 3.297248778 seconds)
done (took 18.070153978 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159644107 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109904273 seconds)
  done (took 1.015864686 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096775267 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11423151 seconds)
  done (took 0.961635095 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098759563 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097061196 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122215082 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110700996 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081221976 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09764034 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119944005 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081806146 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097842456 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09792453 seconds)
  done (took 1.758696485 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083206287 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111335407 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102341221 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095715583 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106542889 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096953932 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089774612 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100350702 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111521754 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078009758 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103648042 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114390027 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086682313 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116349804 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106603839 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101411999 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086143624 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099080022 seconds)
  done (took 2.540800981 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08219969 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098895929 seconds)
  done (took 0.933667814 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081819659 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094677817 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081975921 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098040415 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094867717 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077684449 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095719618 seconds)
  done (took 1.377938626 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.445578874 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138642997 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.26449162 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102952828 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104010203 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.298472996 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098982206 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085182964 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104850308 seconds)
  done (took 2.45698912 seconds)
done (took 11.795728725 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095050163 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11706462 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114257869 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.462508881 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107137441 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099129082 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147775107 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.24927746 seconds)
done (took 2.151663517 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.145365472 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.578295287 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.431881292 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.235259668 seconds)
  done (took 2.006380898 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.407007471 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09931198 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084285734 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081846552 seconds)
  done (took 1.434692818 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080997784 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101081414 seconds)
  done (took 0.944370021 seconds)
done (took 5.29620124 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081794297 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.133055737 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080746778 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.100768048 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081230933 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.098301894 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08120345 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.097116614 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078930106 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097655678 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096573007 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080734349 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.098153694 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.081473012 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098273282 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078387364 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095259989 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081329884 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.097005286 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078723548 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09641812 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081278668 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096406008 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079086093 seconds)
  done (took 2.970240295 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101869324 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09966646 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10506617 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087469962 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104565444 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087942624 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103687419 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099310436 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087211947 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100682022 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103486829 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085631168 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101375113 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086072365 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100361971 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103078074 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087682146 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099488104 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083873572 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10317854 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103308652 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081723923 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102416053 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086409711 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102059418 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102605324 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084217075 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099164584 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104095765 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085456763 seconds)
  done (took 3.648849149 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086007365 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095775954 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079281401 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103338075 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078897925 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098836052 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078689504 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097270573 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080397322 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09693613 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080630463 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096232442 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078495478 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098014806 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080774328 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100158636 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113474561 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079093686 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096745707 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079398394 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099823331 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07924382 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096436884 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078992948 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096411081 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079206222 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096920231 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079229292 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096841236 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079035548 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099606994 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082920327 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096828133 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102918977 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082467482 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096240801 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082722466 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096161531 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079657561 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096722311 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078715491 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096098214 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079702975 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103478188 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078986769 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098404221 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079702794 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098751545 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079962975 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099547216 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079570191 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096612854 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098665247 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081168255 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100889654 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079147821 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09741557 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078865764 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097457773 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079498236 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096451918 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079081745 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099331337 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080128321 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112691862 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086224909 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097750093 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.09840545 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.080369325 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099349115 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.081629038 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111022492 seconds)
  done (took 7.272226761 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.133397907 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128270023 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081792896 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09902421 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078347421 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097778876 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083570246 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097535328 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099074503 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087034897 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098190578 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081225034 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099193462 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096487781 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098051598 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082088671 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104666261 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096043945 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07980351 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100957402 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080563604 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10150054 seconds)
  done (took 2.875256741 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209441416 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.1060292 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144149852 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108975787 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084290494 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107340901 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104250223 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086571719 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104341695 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085319334 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101556256 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104636319 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085586825 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101378465 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102641047 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084907092 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104397125 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085528164 seconds)
  done (took 2.684247019 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094160246 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099904247 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100049992 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100449312 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100772599 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.197351206 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105479579 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109031183 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084138665 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099893423 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090804305 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102568578 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085219663 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100234712 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102331216 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083315388 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102447699 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083777902 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109463652 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106486134 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088128439 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109061668 seconds)
  done (took 3.031689529 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097129853 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10243159 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120692676 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085515217 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097202216 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081229888 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106855489 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083505144 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105904418 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103514696 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08322972 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098591675 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088470356 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09971851 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105740331 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083200618 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102899128 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084331988 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102175138 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078861227 seconds)
  done (took 2.685975587 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103872407 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101740084 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102357978 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093791892 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101749632 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084226952 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112197681 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101678401 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084339952 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12743175 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.1017991 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084433901 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110534183 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10753888 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102076246 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093743492 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110364863 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110692611 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084200269 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101847423 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126771488 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084139232 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109465756 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101589058 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084671897 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101425962 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101797236 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090039945 seconds)
  done (took 3.60109576 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082332213 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100274947 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079880619 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.0984131 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079788653 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098146278 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080442903 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098329105 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082144569 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097969918 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082673886 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099992965 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083328742 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100475038 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082372874 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100447701 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083485827 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097856592 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080445604 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098270586 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082800408 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100457345 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082514801 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098232361 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080249539 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100669491 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080256486 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097908599 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083457371 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097715961 seconds)
  done (took 3.493108592 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093192007 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108536124 seconds)
  done (took 0.982523094 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080711476 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116642207 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080698148 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104483437 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087694868 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102655779 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10987857 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087339793 seconds)
  done (took 1.551865677 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098084495 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112212978 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084682816 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115685841 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111540603 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099353854 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.173305631 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102607155 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108218564 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080951863 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116040772 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082393045 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108116196 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083919611 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106638038 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090300186 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098900726 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107904234 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086644734 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09986085 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085510834 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1102292 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104460542 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080653101 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107017368 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093344661 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114001672 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103138373 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086847495 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10921905 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089777163 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095653214 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083826774 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102284674 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081635965 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11148689 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11854246 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086739421 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110918082 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102757076 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095041174 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096831531 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088236923 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107901005 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11266898 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084083377 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102407563 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07969574 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102444855 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086022541 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096815176 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08387889 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096597552 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110093344 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087618133 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112335797 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082043254 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10285622 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086539432 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105198446 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108920152 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086239282 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103994843 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083997556 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111720613 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088232059 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112286367 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096726628 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077506289 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.0999433 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094379863 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124933764 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.108489811 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085182885 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104276887 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081799022 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10514911 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103173036 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090059686 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107578942 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084323769 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109032668 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109323536 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083850062 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104945518 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092543256 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099966359 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105035567 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081071865 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119357305 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082028421 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100378098 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081333841 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.1129094 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104811816 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.083310834 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.099542001 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091191383 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096539783 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085029771 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103137573 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1018006 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095377093 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10700317 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108020825 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095149237 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.109474539 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083796386 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106173533 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080683878 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103190358 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100204327 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091542483 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095683699 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086723856 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.10273226 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084543426 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111528635 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09993481 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084548457 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110592719 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090449357 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101278639 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080296839 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105508462 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084412567 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106538033 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111569975 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.082837904 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.097374861 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079794542 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106606001 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083974718 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106859338 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107925181 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087423537 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097275382 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082617767 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107764305 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.1128249 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084428271 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.103050616 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091840537 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.104206157 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083092687 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109798799 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104705094 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083571872 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108319683 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085288878 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.098510319 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087583229 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105867576 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101536182 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087815386 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106598123 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087440593 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103623655 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082532753 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108601703 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102941213 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083614566 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101710688 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083272679 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114215884 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086266193 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097836494 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.10016421 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092388962 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100666569 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083391612 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102204727 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086960944 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.1041157 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099821505 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083068125 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104170209 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096928509 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107240873 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104607175 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090560105 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114755502 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084204576 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105412008 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083500748 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103313941 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103312755 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094160239 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108166658 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089521338 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105767893 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099633153 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090894264 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110847169 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084293645 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101309626 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082898656 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10687576 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108930907 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089203019 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104324872 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083357572 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103381497 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087107238 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105607113 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102811549 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083632036 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10804067 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083641572 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.111126994 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104292494 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096010249 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10566709 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080019635 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106551276 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10132306 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090818455 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098459296 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081832665 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101397657 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085622517 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102593838 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088713543 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096958109 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09144405 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111945176 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103700058 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084251349 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103014128 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091094731 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104915211 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088913762 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106109739 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109597371 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095376123 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102474462 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088388858 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114629108 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103689274 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078484217 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108156926 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084282737 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102410757 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083480703 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.10180194 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088082421 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112338444 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110350585 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078692632 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106268108 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083553579 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102352733 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080025607 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108087419 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10603297 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085690832 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110042172 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088022162 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104364985 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107295893 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085164039 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104772167 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086586736 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106407766 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085800723 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107052246 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084381562 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107227326 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10260403 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082678262 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104572001 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085339423 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103683817 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091578376 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103156491 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085204365 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106710179 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104578868 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086484694 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104326715 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085135647 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106756174 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085745308 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104614445 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106213941 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080290398 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110878823 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084973502 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111418081 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084777941 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.10136006 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090306819 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.106722539 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109718169 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085818233 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104423169 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087369451 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103213777 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106719109 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092706883 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101803813 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096718485 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112253737 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104507903 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089097864 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103995345 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086961288 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102883407 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08629337 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104245036 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085618244 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103582135 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108947926 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088148658 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104131589 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086952877 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106193816 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08622194 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10544748 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079803409 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103425929 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084454208 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104681103 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115085938 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08659628 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103987232 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083468279 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105340312 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102785721 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082284742 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111873552 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095098083 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104927382 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112152125 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084994165 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105217479 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097481913 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098137062 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083357447 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102191097 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082568659 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112074917 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104253393 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095355476 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104110926 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084907183 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100873955 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08628385 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10273546 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098377756 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08281957 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116844385 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084285397 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102836403 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085542991 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107335389 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087026517 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115489144 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103236332 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086235432 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104799879 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082436402 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103931466 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085616827 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107884605 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105190646 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083376946 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102236195 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085341295 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105311649 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086910668 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103712202 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087202995 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114812136 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08575215 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108361682 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108145909 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080770684 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106684908 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08624902 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105192989 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085323771 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108668394 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108295427 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087345692 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114189705 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085607095 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106320416 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08563398 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.103447624 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10408495 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085618358 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10541056 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085682698 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106348911 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094573919 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102084459 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108396778 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085510845 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104893061 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093925526 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105911357 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089275338 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113162757 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104291064 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087297759 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113143832 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090459222 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108393955 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106616268 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087505229 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111549254 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085416976 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111150984 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086320403 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106614317 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.107085866 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083991189 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105142802 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085819319 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10423202 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092745685 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.106158992 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085012755 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104215535 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.103509506 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087102216 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109367116 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093867317 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107876313 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08962402 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100643709 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081726936 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103541905 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099034654 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085134355 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105182097 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08972738 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104326332 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083814821 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100064532 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111994476 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092301412 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108937242 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084586968 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108820142 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087235636 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109177031 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106759717 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086474786 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107165877 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090583118 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107171532 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085894068 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112801462 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.109392918 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087688198 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106288973 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087250213 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105316182 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081419599 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105496253 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088810724 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111783216 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.108556228 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087540751 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116617275 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083567403 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105481471 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109111488 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085623878 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110323619 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081622744 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106755011 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087382605 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107433247 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080930885 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.104381159 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083878415 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.109528368 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.1043462 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081838513 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116800638 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095985837 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107725223 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102771738 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083256369 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100884575 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.08170621 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104556266 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086171872 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106963816 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116621414 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085941983 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104834168 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.082124347 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105427228 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089460595 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.109392149 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084067621 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100790005 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084723387 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109482281 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111673611 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084978139 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105475374 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090267166 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108316155 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084898728 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110045252 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082806628 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111049568 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120059144 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08817253 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106715042 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113300304 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09541764 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107464626 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082432596 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106825459 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089463839 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106057234 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08795941 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107001472 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123157098 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090206292 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105616472 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084861239 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.110320874 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.105134537 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094922603 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106820491 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087404064 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.111298434 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089007915 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116261106 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108815307 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094914959 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10921464 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.109869313 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085758118 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106557542 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085224554 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105325167 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088252739 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107100963 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111151776 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096474334 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.106007633 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09879201 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11723172 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10800807 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084014303 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.104956022 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08729514 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101464471 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088462879 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.104840929 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085522796 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104244361 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085290498 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107154915 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112647928 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088257107 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107964236 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087185583 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.101021461 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.08972629 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109022179 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087154308 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.104460136 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087306651 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108443959 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110294868 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091114737 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103686793 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089333724 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108433091 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087853362 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102115165 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113092338 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086035174 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.109920438 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086440009 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106669632 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088681562 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110225452 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112084016 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088666692 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108698808 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096409403 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108669848 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084612002 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104504406 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112234953 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.085057147 seconds)
  done (took 59.288333558 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151094002 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084298341 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102663854 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08220632 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116220746 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102765071 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082385696 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103178333 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083354609 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105635884 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082484664 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102581341 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112368443 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128114006 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096000159 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107641763 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102286615 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.084603248 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10170564 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083645231 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112007176 seconds)
  done (took 2.963520103 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107891355 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.124790839 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11893135 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.1224164 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093804098 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118671723 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118055824 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118566171 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101516019 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11529143 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121682663 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118511201 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.094591157 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.115446689 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114463531 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096178401 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122410735 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112358941 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119570457 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098407793 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117107625 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117990776 seconds)
  done (took 3.321064377 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087459734 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10576283 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088512258 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101698988 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086099327 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101063794 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.090755492 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.105030344 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.091429382 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.106447897 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.105705278 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.085534842 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108302092 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082978749 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.106664238 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084687015 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.157335654 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110781365 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086445249 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109573285 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.102922375 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089554329 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102327368 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082817008 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105235232 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091401416 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107784744 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084740292 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106760343 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085609251 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107452544 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.103778741 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088327458 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107476761 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086113813 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.105528313 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086940027 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106574985 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082591841 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.105357342 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087867572 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.103047169 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087620443 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108879635 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.10505075 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084795707 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.10824509 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08668439 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.101779116 seconds)
  done (took 5.650198933 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106877951 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165841175 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08943411 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144039035 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121324431 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114748664 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089490226 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141447139 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101488775 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085361749 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122596175 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.124087611 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107971166 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092631253 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.114437243 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107329273 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088385689 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106143325 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091539511 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107934215 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112204901 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094244757 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.123404783 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122366661 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110947262 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086834826 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106922242 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111489538 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101195052 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.113580852 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112587578 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093258155 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124813896 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109572127 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087180133 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109960525 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125576135 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087591647 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10991861 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105012684 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090213273 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11254411 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114370989 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10454443 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108748965 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.11337528 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087949943 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105119022 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.12232344 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090594546 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116542555 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123759716 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092498826 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108736339 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112384584 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104121204 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.108629142 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105930743 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091173538 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121041011 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105027475 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092283425 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.123955851 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109645832 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096332243 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.123161106 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113490607 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111521656 seconds)
  done (took 8.370207831 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096779877 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.114094185 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124393026 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123581075 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094328846 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.1147332 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114973103 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.094190415 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115081193 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119453911 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115051954 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.138267781 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089511696 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118162473 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115188187 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094421941 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115280021 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114635009 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093888383 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115700004 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115149636 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123037076 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094921752 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124993057 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.145867483 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109813188 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093628508 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116140432 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125043821 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114788836 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12623597 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.094000937 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11536894 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123316905 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126488512 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094307586 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107624942 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1151797 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094285012 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115038922 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109560445 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124674759 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094389198 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.111142061 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116066404 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094497441 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.124565922 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127605472 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118832446 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120761638 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.094500324 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125051008 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115133165 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0940388 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125505245 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.150030197 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124299776 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124516088 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115734684 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124367227 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104337523 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133099634 seconds)
  done (took 7.913687015 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109374408 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.119512492 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.122116751 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.104367849 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086224736 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113226141 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086143003 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10590027 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09683576 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.118883779 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121818759 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113278079 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095684776 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121063045 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112536202 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115923543 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091992273 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112965065 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117613518 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092232683 seconds)
  done (took 3.007073932 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097596676 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128180846 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088593677 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116393578 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.111950026 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095565112 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.111441287 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111515246 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089796725 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111363114 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100520033 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.120364368 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110111994 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094712114 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.121270314 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115786306 seconds)
  done (took 2.577542859 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101108164 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121575853 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12514662 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088143872 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.108452331 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106064554 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088187653 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.105116354 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084256504 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.126063767 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087876555 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113634298 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109524179 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087254991 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10553438 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091537914 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.105277724 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086201097 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110011244 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.123833922 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.1005825 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.109283283 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110133173 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090814956 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109971148 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093843957 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.11086011 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.106907796 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087167798 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109473071 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089156007 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116715135 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10647137 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087678581 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.107186259 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087099996 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.108829558 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088626523 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113615284 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.108102516 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088088001 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109170261 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088079254 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111669415 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.10543309 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089786646 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105374857 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094764486 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107748607 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089105843 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110675694 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111549873 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090779388 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119102774 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.113393709 seconds)
  done (took 6.504104943 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102819829 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111300911 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084924335 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107641154 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091327484 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111206891 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112579135 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090839982 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110418711 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086588865 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110719374 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091719048 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111975671 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113874858 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090761212 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11306707 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085019453 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11112564 seconds)
  done (took 2.691599417 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093844901 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109462683 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09689347 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109409791 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08859416 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111916923 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084409212 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.107439928 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108277378 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08838482 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109670166 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091262572 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108147597 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.092569391 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110128647 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088491531 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.11220561 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107960686 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088769028 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105651516 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092018893 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107927531 seconds)
  done (took 3.06981012 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.116531461 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125568367 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.094785688 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.234502096 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10467379 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134051521 seconds)
  done (took 1.667192302 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114229887 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124440662 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110746879 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112014179 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118513197 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111817935 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092331284 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112229276 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122074297 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104774502 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113497281 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121878 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121192038 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100125411 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119297922 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11822387 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112154396 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090961873 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110941277 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131226183 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091120049 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121922869 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111822403 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090544211 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11203804 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121668428 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122068223 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126510295 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091341296 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121085262 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119794244 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091274035 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123186831 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126686789 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113918629 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100916374 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111780006 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132223227 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118859439 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100268594 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113701009 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118561356 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101503868 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119653392 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12151523 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113383984 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096132552 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11289809 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112579211 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140783987 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097452336 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122462722 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118872072 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122020293 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123432359 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138504724 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105665432 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121230146 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119135266 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126830644 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121736866 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097687172 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121298849 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127192128 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119306298 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124694314 seconds)
  done (took 8.432503399 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106333534 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130896028 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113545037 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12688852 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099207639 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112164134 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112587233 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0918213 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11229075 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112219243 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156388294 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090522999 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122444996 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122445147 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113092441 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092019663 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11303345 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121587388 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090990618 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139738269 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112037782 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121488272 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122391829 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100218929 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127322071 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11907975 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112488607 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091972837 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113092049 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112612139 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096924349 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112227153 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122082574 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091445961 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123045047 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113250315 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112425317 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097116976 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112224011 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119781678 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101113577 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132929149 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112603896 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113911045 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12658827 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092152014 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113625656 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091333851 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113941587 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111824448 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127910479 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105095323 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127750153 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121917948 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113275263 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091705981 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112924706 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113110383 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091552678 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120114321 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122098881 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113647899 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139798556 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092315558 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112749951 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121958749 seconds)
  done (took 8.318188566 seconds)
done (took 159.331161966 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.218460404 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198517227 seconds)
  done (took 1.27980134 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.090865014 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.139881597 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100747604 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.173992467 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084801205 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140401404 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138275952 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097712188 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105875959 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086860177 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109134692 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091238262 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.176303198 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08601779 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105815586 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107971581 seconds)
  done (took 2.706587483 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.118378809 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.264973152 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124733622 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.110463093 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.092996855 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112401635 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085311622 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112076263 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090299863 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.107761983 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.092520702 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.110832536 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088293506 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.111253459 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094102572 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.11452334 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109894196 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.092265742 seconds)
  done (took 2.902386407 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118222931 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152403766 seconds)
  done (took 1.145279522 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.247438274 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.160746458 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.228305751 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.479720307 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.29013461 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.357597688 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.198429278 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.211266676 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167833969 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.209307532 seconds)
  done (took 3.419010611 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123912791 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.188120087 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.324935639 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158041326 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106243878 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127923954 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158096977 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134112554 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.125404141 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104151384 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.127077538 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.123128518 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143510899 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.098974908 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.121100182 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122918769 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125048954 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.118313827 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.12028486 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09961651 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142926781 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.111473885 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.098152869 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.118049613 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.123342693 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.102409381 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.109431165 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090049801 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.119886596 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.120555679 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.096846999 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12920454 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123473561 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.160077796 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.128247114 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.159284893 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.123544514 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093467895 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115344146 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090579743 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117808941 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118091303 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125169161 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096900127 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105224179 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097230371 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107010208 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084901835 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115999429 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122557843 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097968575 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.118754518 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.158897407 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.125022425 seconds)
  done (took 7.576086529 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.797144891 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157393588 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089571582 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.886691114 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136122464 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102480798 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.784624519 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111661177 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258420211 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.764779484 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134674875 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098305774 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237295375 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.267154867 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.962073919 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.294522984 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.64960234 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127796914 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15345377 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.158419082 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119386732 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116283925 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131799876 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454431108 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116311849 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089983935 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11908555 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117424723 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158998775 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124414382 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093305274 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.202691152 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.25552474 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204833393 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093944544 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111288818 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088351056 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.192989168 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271995748 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192499447 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180011396 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107866121 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089496354 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122344218 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132134278 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085739594 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18449855 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.177813216 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171592639 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117054842 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118982882 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098394439 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121951288 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165768518 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123845108 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.329031474 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321443715 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095415312 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126579802 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.130918871 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.245047023 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128875429 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232863974 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146982114 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196896723 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.117109212 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786184866 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.173218992 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110630276 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095382784 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119553748 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115955507 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.0984499 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166892351 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390530643 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123756074 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113612989 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089771344 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.25251848 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103600433 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111444878 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162304152 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116131557 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120723729 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101748924 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122038512 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168249728 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.258833006 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106292391 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125722342 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120743813 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108080671 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.118235616 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214245673 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223287342 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.169223674 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.235839643 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099097747 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186334951 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.175820359 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125077238 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.178222642 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125521145 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106968523 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128501093 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226044342 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.151756159 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105905715 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121856727 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117807986 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.1484269 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127011855 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097104493 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192998317 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.485008354 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.175466885 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.114886334 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.132118875 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098235879 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161365561 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119004522 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258743616 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122061864 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169453633 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097254585 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108742784 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12030558 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162426764 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120852919 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099802275 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121855055 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118679985 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.23570194 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21823731 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12212421 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222306572 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188597641 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121327069 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173558211 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126855536 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17421634 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126134892 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104939557 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116772358 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.770238023 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101675976 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119892557 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114976106 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196408598 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089249426 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123766521 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124074957 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086856303 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808794463 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128628132 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098946281 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124407915 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117066506 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118899892 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096013555 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116251515 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163245746 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232090396 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125236286 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103995792 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.130757979 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.167358545 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.122776998 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.1306746 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107931855 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.131666065 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128301506 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098132068 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129844965 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167665793 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.185716532 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226805126 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.575063562 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.117419592 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.128136072 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.206449712 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118248117 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292970294 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100257597 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226726175 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18637538 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098197246 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309667157 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.171136797 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201504082 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.134119426 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.179786702 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11474477 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124270348 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.171943667 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094776311 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123716441 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.168803995 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131575984 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128698711 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.968034321 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089623741 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224579464 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.112778387 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.177788885 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123077056 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126245465 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.281966311 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.118923334 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134425402 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.171215615 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121361091 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108652481 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.734137029 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.1241351 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100277938 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117439801 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225502518 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.170857184 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125256578 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122920946 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096701416 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162558709 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.235329604 seconds)
  done (took 44.606647688 seconds)
done (took 64.504583135 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.285463253 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218389939 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269593645 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172572606 seconds)
  done (took 1.923809154 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.178846108 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156804797 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.127592719 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.112733342 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.158549953 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08973389 seconds)
  done (took 1.723089356 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.374093968 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282948754 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.254755104 seconds)
  done (took 1.816917244 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.294223807 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252097093 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.484834983 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.336011368 seconds)
  done (took 2.398091576 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.215489519 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.14078769 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.116897874 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.108902818 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.205113849 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.254526409 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14941577 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.210450912 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127388524 seconds)
  done (took 2.481788466 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.180764989 seconds)
done (took 11.430586435 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.135903632 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.254168467 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.184611671 seconds)
    (4/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.177067526 seconds)
    (5/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.257380993 seconds)
    (6/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.131438768 seconds)
    (7/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.184800695 seconds)
    (8/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.270250073 seconds)
    (9/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.21238751 seconds)
    (10/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.129327889 seconds)
    (11/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.196643625 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.129956915 seconds)
    (13/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.250127231 seconds)
    (14/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.219533919 seconds)
    (15/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.226469956 seconds)
    (16/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.12397481 seconds)
    (17/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.206377936 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121676539 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118835034 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086968158 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.135669861 seconds)
    (22/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.221864746 seconds)
    (23/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.114543148 seconds)
    (24/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.158041605 seconds)
    (25/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.123318964 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.185713993 seconds)
    (27/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.183040048 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.233523382 seconds)
    (29/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091909125 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.251497705 seconds)
    (31/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.185467731 seconds)
    (32/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.179240823 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.172788405 seconds)
    (34/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11471393 seconds)
    (35/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.152398237 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.154516238 seconds)
    (37/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.078270259 seconds)
    (38/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.181000661 seconds)
    (39/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.154475046 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.137633836 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112645373 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.23416725 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.220505588 seconds)
    (44/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.113833982 seconds)
    (45/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.201860095 seconds)
    (46/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.075685721 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.182712666 seconds)
    (48/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.092628388 seconds)
    (49/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.115916525 seconds)
    (50/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066714033 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.139828711 seconds)
    (52/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.23838457 seconds)
    (53/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.185421205 seconds)
    (54/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.099771865 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.144373385 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090471351 seconds)
    (57/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.126299194 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.125035376 seconds)
    (59/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.099317893 seconds)
    (60/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.088168584 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.122254942 seconds)
    (62/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.152828985 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.11566129 seconds)
    (64/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.156744378 seconds)
    (65/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.127303776 seconds)
    (66/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.120522616 seconds)
    (67/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.118162147 seconds)
    (68/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159108074 seconds)
    (69/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.18189848 seconds)
    (70/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.130470535 seconds)
    (71/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091129698 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.146764744 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.117746935 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.121977036 seconds)
    (75/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.12446879 seconds)
    (76/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.071680849 seconds)
    (77/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.096427517 seconds)
    (78/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.165504091 seconds)
    (79/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.194922489 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.217509847 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.190510925 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.227727345 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.092531655 seconds)
    (84/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119805387 seconds)
    (85/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.201135542 seconds)
    (86/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.17090145 seconds)
    (87/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.099743918 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.196627799 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.124825101 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.16116158 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.138436946 seconds)
    (92/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.070861461 seconds)
    (93/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.185401009 seconds)
    (94/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.123500415 seconds)
    (95/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.083278754 seconds)
    (96/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.125823899 seconds)
    (97/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.087305078 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.139009771 seconds)
    (99/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.102438244 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.071462162 seconds)
    (101/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.12207908 seconds)
    (102/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.184211431 seconds)
    (103/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.102883121 seconds)
    (104/309) benchmarking ("sort", Int64, false)...
    done (took 0.115962449 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.072640391 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.081991994 seconds)
    (107/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.123418073 seconds)
    (108/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.081345605 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.113044988 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.09669571 seconds)
    (111/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.119506751 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.071195402 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.191166576 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.139612106 seconds)
    (115/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.098429885 seconds)
    (116/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.145178188 seconds)
    (117/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.199784317 seconds)
    (118/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.106124142 seconds)
    (119/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.117125118 seconds)
    (120/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.15938144 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.098846309 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.115631205 seconds)
    (123/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.093238252 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.200979578 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.093268982 seconds)
    (126/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.144633587 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.378877875 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11923841 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.102062512 seconds)
    (130/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066281426 seconds)
    (131/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126252241 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.166761071 seconds)
    (133/309) benchmarking ("sort", Float64, false)...
    done (took 0.172753284 seconds)
    (134/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.092608535 seconds)
    (135/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.085718779 seconds)
    (136/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.116489967 seconds)
    (137/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.06703833 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 0.183903756 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.123683603 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.098148441 seconds)
    (141/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.117035251 seconds)
    (142/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097510133 seconds)
    (143/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.145800175 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.199562464 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092691819 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124162265 seconds)
    (147/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.072906171 seconds)
    (148/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.072809363 seconds)
    (149/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.230934415 seconds)
    (150/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.096582794 seconds)
    (151/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.101567761 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.123932853 seconds)
    (153/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095755732 seconds)
    (154/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.147486654 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.091130167 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.12388411 seconds)
    (157/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.089385964 seconds)
    (158/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.097120056 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.177612709 seconds)
    (160/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.117891439 seconds)
    (161/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.071254647 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.126865514 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.0996721 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.137308407 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.140478332 seconds)
    (166/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.092220869 seconds)
    (167/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115278005 seconds)
    (168/309) benchmarking ("sort", BigInt, false)...
    done (took 0.227562478 seconds)
    (169/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.123727287 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.140754614 seconds)
    (171/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.100974949 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095752936 seconds)
    (173/309) benchmarking ("sort", Int8, false)...
    done (took 0.189172861 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.090270259 seconds)
    (175/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067221561 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.137191958 seconds)
    (177/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.073677661 seconds)
    (178/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.144585278 seconds)
    (179/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.081990731 seconds)
    (180/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.123990441 seconds)
    (181/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.118340998 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117813588 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.135045877 seconds)
    (184/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114032364 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.117018014 seconds)
    (186/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.094276525 seconds)
    (187/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.152078466 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.090811045 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.115221113 seconds)
    (190/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.072793994 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.124899824 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.149600087 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.178211417 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141296641 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067559899 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.176467023 seconds)
    (197/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06893896 seconds)
    (198/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.10243768 seconds)
    (199/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085847024 seconds)
    (200/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.089981828 seconds)
    (201/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067123005 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.090250027 seconds)
    (203/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.189939148 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111163346 seconds)
    (205/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.223047431 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113864272 seconds)
    (207/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.093528963 seconds)
    (208/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066572243 seconds)
    (209/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138696697 seconds)
    (210/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.094912234 seconds)
    (211/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.123557257 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.07451284 seconds)
    (213/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106992572 seconds)
    (214/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09803124 seconds)
    (215/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.12377215 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099134778 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123128616 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114830231 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.147346568 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.113296938 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.119441378 seconds)
    (222/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.092116825 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.11104257 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110022402 seconds)
    (225/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.187651468 seconds)
    (226/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095352065 seconds)
    (227/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.11061582 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086454278 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117056569 seconds)
    (230/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.096314201 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.095903233 seconds)
    (232/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094973783 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.1159656 seconds)
    (234/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098733557 seconds)
    (235/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.133100322 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.090911055 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.14411667 seconds)
    (238/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.225337637 seconds)
    (239/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.169174741 seconds)
    (240/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.071713822 seconds)
    (241/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.071903522 seconds)
    (242/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.120323272 seconds)
    (243/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.081584031 seconds)
    (244/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.215543432 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.197673372 seconds)
    (246/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.100143817 seconds)
    (247/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.096964547 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.06694525 seconds)
    (249/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119546506 seconds)
    (250/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086899708 seconds)
    (251/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.105742957 seconds)
    (252/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068374867 seconds)
    (253/309) benchmarking ("sort", Float32, false)...
    done (took 0.174407987 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.085824968 seconds)
    (255/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066988877 seconds)
    (256/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.0900575 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.128712621 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.213031214 seconds)
    (259/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130352008 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.111733731 seconds)
    (261/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067488366 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086317815 seconds)
    (263/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123847733 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.136222227 seconds)
    (265/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.069077383 seconds)
    (266/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.08912103 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111191106 seconds)
    (268/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118242308 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092522347 seconds)
    (270/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127829767 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.06664192 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.117961456 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.109746799 seconds)
    (274/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.099700595 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.086919549 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091225264 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085863215 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.137340623 seconds)
    (279/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091534867 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110031855 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.108628222 seconds)
    (282/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.115683371 seconds)
    (283/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087090699 seconds)
    (284/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.111566396 seconds)
    (285/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.06773188 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.180988033 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118980926 seconds)
    (288/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067276895 seconds)
    (289/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068552104 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.11162188 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084729777 seconds)
    (292/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.090548444 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085619276 seconds)
    (294/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090620642 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.128704124 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119046796 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.08972809 seconds)
    (298/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.163678271 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125623888 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091456877 seconds)
    (301/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113310803 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086231848 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116494749 seconds)
    (304/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070069773 seconds)
    (305/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.114414643 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.197403323 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.161200775 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.129510652 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067124524 seconds)
  done (took 40.948205603 seconds)
done (took 41.857246377 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104918859 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.142889813 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.101699569 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.142818015 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.131607944 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09752887 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.12480698 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103488466 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.131270371 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.13331135 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.103805175 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.101059053 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101589864 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.127265324 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102224179 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.144129774 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.131532663 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.098868735 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.12478257 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.09137402 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.12397848 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090578252 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112831982 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070829085 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121381144 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093674835 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116623188 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120180457 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086390437 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110359731 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089596442 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117996534 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086350962 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123668925 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092748132 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119140271 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096168772 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120615349 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112507448 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08608238 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118855583 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085630385 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116912155 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093996414 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11607625 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091465142 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118624582 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.097943963 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.134944714 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112487389 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095323123 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120821745 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095660081 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117811469 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090717795 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121176232 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.117699359 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110548151 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.122026593 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092962412 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119757436 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094635218 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116783704 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.124393013 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.094451655 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121878854 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097924574 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116705686 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096640411 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117150279 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086654984 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118408319 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114898428 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087142902 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.120234392 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.097606285 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109593701 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092630034 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117307404 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091743345 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110596277 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088722403 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113219299 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092700826 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11349564 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07002057 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114917595 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092857496 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110666113 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096001971 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11639248 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093956813 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114065615 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097841689 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11006423 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.116548167 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.086392295 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.110740203 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088569719 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.114345183 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.085874067 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112565365 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.09488955 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112114461 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092986933 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123263955 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086565963 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.1177646 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086376106 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109956415 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124708132 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.096353871 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.110626946 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089403872 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110236525 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.093969815 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110047623 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086977045 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.11029842 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086009382 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116962539 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086729614 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113411802 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094452258 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124965994 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086879879 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11394308 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088540072 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110676661 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092909376 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110957468 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086640227 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11217694 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078020879 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11307793 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087217776 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118256405 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088731152 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118668239 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.1127101 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095251029 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.115215618 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.092703634 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116872458 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086209572 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099048052 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089278206 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113439985 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089085679 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.110483973 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088334518 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.110934831 seconds)
done (took 17.063634811 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.091622953 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187562986 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151630592 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142864812 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107319453 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111879269 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121915048 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119015063 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115201242 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144352243 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111005517 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133466648 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148741702 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085979283 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11327852 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.094447066 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113005501 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103108413 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14519742 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133897307 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163876533 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086228105 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147621219 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137902771 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120828527 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105084444 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112035332 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090695 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115749069 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.114097161 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131461733 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11492205 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.08761696 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134258339 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105297298 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121492961 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.114633175 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.093909795 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.111856048 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087478533 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142877614 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136788788 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093169791 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117658891 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091753663 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114504752 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092862334 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123921434 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123327966 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091480627 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127638148 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157179286 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.093212731 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12158926 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.110663214 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.098186525 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12183244 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090316273 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.115153242 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089521962 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112330349 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091069811 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128204576 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141799762 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092380043 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121237929 seconds)
  done (took 8.669967186 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107919203 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141214609 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131865616 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105015242 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11167831 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087040252 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112485742 seconds)
  done (took 1.770236186 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093468601 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139193619 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111431931 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135911858 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131852712 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.125175984 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123734135 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087926994 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132523128 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089263177 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133351623 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152730067 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092495875 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121286644 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138087153 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088234278 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137697152 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087831329 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116043919 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137557173 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091482513 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13637623 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090474555 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11438417 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104223935 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113950174 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162030829 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092960732 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117338282 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091812676 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11304432 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166646052 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103509155 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125076726 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113789799 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10291343 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128706073 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086591374 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130168419 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093131779 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127255705 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114159217 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.089686002 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112615228 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.094094972 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124195959 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.08973027 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115098718 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091644706 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133841954 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089603894 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12777741 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.113804663 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.092489962 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115784928 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093854139 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123408684 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089865778 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134071961 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090897424 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132282827 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.130242182 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102098171 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131725772 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091253257 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129546583 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.128934583 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.090891726 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116033771 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.091930453 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131298411 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087302222 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116839002 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.102217751 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116607753 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.140374293 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.111370033 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116437349 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100912521 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.116338771 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089896333 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115881973 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.144164974 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091835369 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114574263 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092959123 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117560239 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.086641036 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113138053 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.091858178 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112489282 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091054342 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118428507 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.094320808 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118439479 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13375367 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.089286989 seconds)
  done (took 11.893674357 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094729429 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115442603 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091536467 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.1147417 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090287384 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116358741 seconds)
  done (took 1.609310487 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.118201436 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120201202 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.108748303 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119659696 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159319243 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.134033487 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104056619 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12583282 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.11225116 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126798933 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131178172 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105010487 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135050083 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122079125 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104879049 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122051348 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130339129 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100111323 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129125071 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096955707 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136713198 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122409536 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096371985 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133195989 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118417694 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094913351 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12842108 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105283218 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127734461 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12486774 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098701494 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119950229 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.124850875 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097218765 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.13142908 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124102168 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095614825 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119228297 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099832505 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120674954 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.13511448 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095862556 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.130396629 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098339108 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124003481 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122034265 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093587499 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126858842 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.130183174 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093971565 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121734488 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095592984 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120201096 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120421241 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096020255 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125656037 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096138519 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130411141 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122897236 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095594888 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119801675 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093598558 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124218582 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118091301 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104384238 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119201707 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122426462 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096203787 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122932384 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096567599 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120049185 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119243859 seconds)
  done (took 9.340802865 seconds)
done (took 34.246691955 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69240997 seconds)
  done (took 1.670928668 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.733091412 seconds)
  done (took 1.714041438 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.338285179 seconds)
  done (took 18.321567321 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.514522297 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.595925885 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.836699556 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181693924 seconds)
  done (took 3.111226502 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.957751095 seconds)
  done (took 1.962133725 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.251206816 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232862596 seconds)
  done (took 1.471081063 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.77780239 seconds)
  done (took 1.771566356 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.359001875 seconds)
  done (took 2.344530531 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.337257746 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185465673 seconds)
  done (took 1.519506755 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.55882129 seconds)
  done (took 1.555357399 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.202458406 seconds)
  done (took 8.205788169 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260339169 seconds)
  done (took 1.271769646 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303774148 seconds)
  done (took 1.302731774 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.584879363 seconds)
  done (took 4.59082371 seconds)
done (took 51.798496005 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100622868 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12713583 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.1010925 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125167372 seconds)
  done (took 1.448799924 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10254425 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121018438 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099620412 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121090629 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126821219 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095282626 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122560297 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099639677 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121659188 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095774797 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121337321 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.1204294 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098156149 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12284041 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09289668 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124589819 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099714733 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121115863 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12494633 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096038093 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118793365 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098025323 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125175454 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093739572 seconds)
  done (took 3.670289712 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101986909 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118968886 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096061807 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119255622 seconds)
  done (took 1.448197106 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103889526 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142628551 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138605149 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099649572 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143976381 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135754185 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091780855 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118038872 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093727749 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126214298 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090619731 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149350126 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13819913 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.09981197 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128079067 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088608729 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116896606 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137202892 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099248438 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126296289 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092538913 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125438552 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090220246 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139620233 seconds)
  done (took 3.823130127 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.159726256 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.151187421 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139317689 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094554476 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.155982295 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141381656 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090503017 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141288501 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088482076 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129951446 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119142567 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133270507 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128826943 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087381032 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113826289 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.113805883 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.102322734 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128357986 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091073784 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145662318 seconds)
  done (took 3.470558677 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.101000183 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117653147 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087906014 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116867127 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098687022 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120805098 seconds)
  done (took 1.656306756 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092376639 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114665691 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089955017 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115221342 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093811752 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115643208 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087784861 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115155993 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089210738 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115284908 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088640648 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113613397 seconds)
  done (took 2.244865923 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.464721115 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092048954 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120253493 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11195556 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.095685769 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114824625 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103749845 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119608209 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140373917 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089530815 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115058397 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091286642 seconds)
  done (took 2.671032591 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245042211 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131958792 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295308153 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190191805 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159126608 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171255522 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151558788 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165854149 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199631788 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157259757 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235137908 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196186458 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150224132 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192261419 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137898433 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146196528 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198670157 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247441247 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155656211 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204248393 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229588635 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166581599 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179726843 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152102322 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137368119 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168174962 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094723564 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129866537 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234180969 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176285361 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188261399 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163443195 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146150993 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241675367 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254598868 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198016228 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213427005 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109250927 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.171231392 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166253484 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265246527 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112140425 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235306129 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159203147 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130639842 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193004378 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16905628 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173559194 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149849189 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138749632 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197465307 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239479324 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191360901 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137157565 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16119061 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160078788 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166487984 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152248847 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254010861 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203620187 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205719518 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093688741 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146408564 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191029154 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181722398 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.166799966 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.207142607 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146322973 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19265625 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187905604 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164558342 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218314386 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183864567 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137372799 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169753397 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174025839 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169804345 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257270149 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178937912 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122249768 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166685211 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150318633 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104174098 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19335503 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124712414 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213469918 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150887933 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.13480471 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163619177 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160138822 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160610776 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196958399 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218468591 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119634039 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110198115 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156840933 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128469877 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215115698 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139471755 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158765202 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159649686 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.102765767 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202347916 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097358527 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17686793 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118707124 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176821338 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182959248 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126104572 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157807032 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151437292 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124997368 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204214177 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197653108 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139812154 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106700786 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232680536 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177154405 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149474332 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179581541 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201084283 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143248256 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149253027 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226096853 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218419211 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139903618 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20440826 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155119915 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135468479 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134124606 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179544736 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156885969 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160515418 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106225983 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.207161825 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210727076 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125741724 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111066983 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215900671 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105793962 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132966542 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161206009 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148864675 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139265469 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14570131 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.123552549 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209207061 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180699801 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153485078 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167852587 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151472406 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256882994 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140107759 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.12290326 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147778725 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120068637 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194491956 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198291273 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131376312 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228644375 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17202088 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155936147 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170751804 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107357305 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176066918 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130490632 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093165336 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220938183 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168019177 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162582647 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196158065 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15663967 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181212802 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.209308641 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172390205 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175396022 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165731717 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160345582 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.13904492 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131295387 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192348035 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096805235 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14331977 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134809625 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157623754 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142450191 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106078506 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224784262 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169288809 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14765517 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131357235 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149426788 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179418885 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130239946 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177155839 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175913834 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147947033 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.22362806 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193695729 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187216828 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143915261 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237548985 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094408891 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125253168 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142160794 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170573014 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106946865 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135547117 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165961525 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180016352 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210405193 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176381659 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162728503 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176182424 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190831729 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122387476 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141633337 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211603277 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175287926 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.16123156 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13739406 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151415294 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176663426 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156435265 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258074383 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165452547 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176155033 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235505525 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.148224673 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103853618 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150230479 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184916106 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153177262 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174964366 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148142063 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143294684 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161010125 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132417783 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159760693 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183235888 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163078225 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217762034 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.123062826 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212978115 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100254296 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191723256 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130763916 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163777638 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108599819 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174504018 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230169393 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120802123 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195861427 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191740941 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132021359 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.149523123 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239909758 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193035516 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138680201 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158309828 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159616472 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166008317 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172309262 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177605806 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160747579 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188953198 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156287486 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13750432 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139742188 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150098685 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123353109 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132707625 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148710414 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174767844 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140293654 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186821243 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162153051 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157927775 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173084255 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150384479 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144363369 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150410605 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21635946 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175044546 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240267134 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149432084 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178599102 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204761996 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126556992 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131254552 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105910088 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176367032 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136306521 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187549637 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.148022802 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156917766 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18029619 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219887887 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111353162 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120035066 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156017915 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172790445 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164382993 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152062283 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.157905112 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206545982 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.1421766 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104118569 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171028255 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15774063 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147647941 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195368005 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107490695 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121033969 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129054304 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133016206 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163793524 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205023399 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136100353 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182969169 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172266338 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16844865 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165050805 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150146345 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150003272 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137863579 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232124824 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184248891 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132227622 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157462081 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1759978 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193905517 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16086632 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140541407 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20273921 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219431833 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198887082 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142707331 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167817735 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167613422 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15689441 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187148746 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136184423 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206166536 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13457206 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226802115 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153502189 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141716957 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173612819 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.119946604 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141089645 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215082231 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173869274 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107943272 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133823121 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167326001 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204335802 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127774369 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127724387 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179402925 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12547451 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190627839 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262787068 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133526798 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15398087 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118752759 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135501313 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157161218 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157858371 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139023384 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140040566 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227386812 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13476283 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189872586 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229666162 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168687607 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173687259 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143882147 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693683324 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102305052 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220950555 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153163724 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205498271 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150542838 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172542262 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160693406 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168305338 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193441271 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157521529 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231956955 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223087852 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177550631 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132209987 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159140237 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161457153 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142983917 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123826354 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194224645 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13028682 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.151681166 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.203991322 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168406028 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.105903369 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140216818 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196801783 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154958866 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213426394 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177808933 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110749025 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172024703 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211907322 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133244011 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179864607 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206448543 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142231228 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151482204 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133872625 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154502898 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25846941 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096614783 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226194665 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174098399 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157479919 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165024351 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146234568 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189868251 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158180032 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176931147 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145567884 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158959006 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156286301 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137157463 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102690694 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154580046 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166263044 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149352787 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159405532 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.161984395 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191124114 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.0959806 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144317657 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156147402 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187687152 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243214628 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136465312 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108744933 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1626267 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152167564 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174374659 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176745308 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13512884 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13584583 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135145767 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131426688 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136893915 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127359714 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156420464 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164979555 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237451328 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13637468 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.250283286 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139342919 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154930529 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088446567 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131481896 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151296792 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14797763 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157222213 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150861935 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233653528 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146899227 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131453403 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148861108 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098308836 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136025148 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164102623 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166220942 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176219904 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145584538 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080812731 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1588679 seconds)
  done (took 80.711517382 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164251254 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130648451 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145648237 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201014652 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174989972 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26954247 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209626233 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25326087 seconds)
  done (took 2.640442934 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096225356 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144980913 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.153605411 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13219839 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090662672 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120357595 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.330722373 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132931973 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.089734612 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.140654362 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.147492732 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.117605334 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.511978466 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.118255623 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.11766406 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.082358841 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115607479 seconds)
  done (took 3.729556236 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.46963235 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.715717352 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.481787221 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124702393 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.188833854 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.133865459 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.78326975 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.211243032 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09443708 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.488361236 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.76830133 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.179021293 seconds)
  done (took 18.72997738 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.100380757 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121070934 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.10744174 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135859085 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095929612 seconds)
  done (took 1.65584628 seconds)
done (took 128.896927116 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104133473 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.403197549 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072484393 seconds)
  done (took 1.602911087 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.109564426 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137297518 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108523326 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137091907 seconds)
  done (took 1.595033964 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.101012577 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127042908 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109033793 seconds)
  done (took 1.434474138 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.32329411 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189977322 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.141698445 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10791207 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12966502 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102944039 seconds)
  done (took 1.43898671 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097348671 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127674515 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097882159 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129218264 seconds)
  done (took 1.553129603 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.096344599 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071069311 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101862094 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074127185 seconds)
  done (took 1.441147249 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.116379702 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131820546 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103853707 seconds)
  done (took 1.454536276 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.134393748 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.13973172 seconds)
  done (took 1.376037592 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106348484 seconds)
  done (took 1.205082448 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119830287 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.16916116 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190619816 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164538393 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.22785132 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165604187 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142555982 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113739118 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130421922 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145244101 seconds)
  done (took 2.671955731 seconds)
done (took 17.628804533 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10455443 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.418297057 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413824955 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117129337 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721808088 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381033418 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.036423248 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146331658 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1657057 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093600235 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139159199 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673197207 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.039094581 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378447683 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.989549804 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377020909 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.706122904 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092223758 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12061386 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093700731 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.022853706 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092587102 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122553173 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09259622 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703947955 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426607773 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094580589 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376877572 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091394064 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127461976 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.411381075 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094481825 seconds)
  done (took 16.957403362 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097703335 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174944579 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098279429 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137355679 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123437767 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094259491 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125058007 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093034856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179502526 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123756776 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110394709 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120588667 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126618647 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095160967 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142354727 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092448493 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125866036 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121505108 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09362599 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123074365 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111610121 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121192707 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093818769 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122643098 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094662274 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136297221 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123752079 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093050895 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121131625 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09950635 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12892836 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095359786 seconds)
  done (took 4.852666575 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14313681 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184001374 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129196878 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127124307 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16879571 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124416821 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200184827 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147965057 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15440873 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1228624 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140362597 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093411302 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157908224 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124290885 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114852959 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122358995 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096555994 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122625949 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092653023 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123790786 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140840589 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092654744 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122933973 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093347711 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123093696 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138055595 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09552226 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121662203 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092491471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127971822 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100648834 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1239261 seconds)
  done (took 5.178210826 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.102780346 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129145485 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109296793 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139355697 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095564172 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125785725 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097644902 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12502363 seconds)
  done (took 2.03830378 seconds)
done (took 30.127138038 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.106717164 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123176898 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.097930425 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135044452 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.097796296 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133202261 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092583713 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.129124722 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099084851 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.126379062 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129546153 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092527377 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124355995 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091678433 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.128425431 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092605838 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132999836 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.09606999 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132479256 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133357036 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094400208 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.129024881 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.099510536 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132051896 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103298195 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133017662 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134357963 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.097960667 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123101984 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094840271 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123503639 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.102900231 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122197962 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.102746109 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122309174 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092818246 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121368959 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09219131 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132460848 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.128449112 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.094784972 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.129207275 seconds)
  done (took 5.905076523 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107956648 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140264195 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.103572191 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081467284 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116584201 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081136242 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137483524 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079028155 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110444023 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107629003 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077349018 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106281491 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078882007 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102371189 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076864482 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075338649 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109470731 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075523048 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076874977 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106596019 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080317276 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072979569 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108097892 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078267257 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104003476 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081072506 seconds)
  done (took 3.589170285 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101009624 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135059011 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112419365 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184289358 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161883235 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100011509 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132675924 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140744164 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108098845 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120999769 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096730552 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150498588 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111120398 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128566716 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091589447 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137202752 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136412137 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094065291 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129305892 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113195995 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138497459 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102414461 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142845563 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134657985 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091443167 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123920481 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095656214 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135446382 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098245324 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131850163 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126922427 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.095101709 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124112764 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104983419 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126570139 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09485257 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143228602 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132714521 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101246615 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123202138 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095676025 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122473404 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114087422 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168588273 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.121326304 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.099617062 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129947916 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102703436 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.12181646 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110191868 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13219873 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091619406 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124753826 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091308476 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122466225 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13568377 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.093185537 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.125245095 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102033983 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125102218 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105200367 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125918369 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108537394 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121768946 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129600437 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.091817397 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122323258 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.091040706 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144399647 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094246421 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163829279 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.123468816 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.093441504 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131738346 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100135849 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128386159 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092519093 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137725447 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102124611 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126173171 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.131516433 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.096001584 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.125084894 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111004545 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125393817 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.09453801 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123238337 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.09970456 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124588648 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094192803 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136644887 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.122607047 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.095555508 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140010018 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.09303278 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124128932 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099745805 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12758951 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092793139 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135688044 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.127900225 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.094001325 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13233701 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093221554 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12559863 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102867719 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.135210912 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.12084749 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.09795213 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129292978 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.093987175 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124120681 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.095436062 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.124608898 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103644002 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129199744 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097455165 seconds)
  done (took 14.862883005 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228619907 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.219062012 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.12582806 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.210573232 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.104636406 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.133947413 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211507615 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155810116 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.093583548 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.124346536 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.094605044 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.162722809 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.156508319 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.170049127 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.103872755 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.12237696 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.111304128 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164817286 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213792644 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.208211795 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144170639 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131514703 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.094574554 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.124685754 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.094784931 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132888872 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.10898346 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133763092 seconds)
  done (took 5.215362092 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109871736 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155763708 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098020748 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144919987 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147809774 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092368894 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128227662 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095325368 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135680208 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136010858 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092674422 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129294866 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100716928 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131699434 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123174087 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.101984379 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132304626 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095074949 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126441323 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097047971 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130693808 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.132619607 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097049999 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122482692 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.100020033 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121799375 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086238305 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143004842 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123576895 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114697368 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121806914 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100057883 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133759268 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093854186 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123339955 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095104713 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124959149 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095736971 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125744666 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091943167 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.12139009 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078194168 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121508753 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136161615 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099717044 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110071779 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.099115518 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129269986 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098017304 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120961531 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095283811 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124562353 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095852874 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130487081 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098007367 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128184325 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095779643 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116497953 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098746662 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125911874 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084834495 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122355136 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097733721 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11854052 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100957263 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128307408 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091889134 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125093205 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09748519 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12880946 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.125138131 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.095457427 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.120930864 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.095416025 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128108702 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.097836922 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126347303 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092402724 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122690459 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093775546 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106066995 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.093630916 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.10487238 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.096752848 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.122384878 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.091923593 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.126140269 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.099760599 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137741466 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096015682 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130371754 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.123960471 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.093132118 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126668848 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.08405651 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.127360253 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.108602172 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141138856 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093816196 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121857556 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.137253946 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.098923391 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123168193 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076723384 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.131099621 seconds)
  done (took 13.004226985 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.119871027 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.149555538 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095852801 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137833719 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.151498649 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.117141326 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131429718 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.100207754 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.125992772 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.110728072 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124342769 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.102996469 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127426269 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.132315982 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.116548046 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.132418374 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.096745923 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.133029039 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.10125812 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.159545027 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.138167797 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.108200965 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.134560501 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094911262 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129005013 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.107033932 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.150832354 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.135786324 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103233461 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.138429653 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.104586734 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.150297248 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.108982717 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129971327 seconds)
  done (took 5.338993697 seconds)
done (took 49.028366421 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.216289867 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.442500569 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.210529187 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.096538797 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.225238465 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.217719757 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.242215048 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.20862407 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.303197261 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.214480498 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.447358855 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.859524598 seconds)
done (took 58.822394843 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.209472137 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.340026955 seconds)
    (2/2) benchmarking "String"...
    done (took 1.505291361 seconds)
  done (took 3.989406678 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.567882067 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.165588108 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.46375238 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.212851488 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.213479707 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.504986059 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.900363366 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.602503174 seconds)
  done (took 28.20115011 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.208731448 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.610089537 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.949386468 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.947833611 seconds)
  done (took 18.85553397 seconds)
done (took 60.95917535 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.212422013 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.239558703 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.229404625 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.186958329 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.338129421 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.25668602 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.554545674 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.269957412 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.224551868 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.189579263 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.236121265 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.202303161 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.237423563 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.590286624 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.211861356 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.228730535 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.256009085 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.743300937 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.613624094 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.215892148 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.252096411 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.257004409 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.235644399 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.21121267 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.247271295 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.213191062 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.205219655 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.232385963 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.81444883 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.209309279 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.212954113 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.791816579 seconds)
  done (took 191.257108514 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.204038802 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.29380824 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.361145002 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.239525736 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.797181189 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.419878821 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.335349577 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.860146902 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.222897745 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.221353933 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.534418729 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.207668748 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.596917597 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.239493021 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.215189745 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.305161489 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.519847421 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.574516107 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.221617094 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.460641003 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.229240301 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.483651667 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.391462012 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.45865856 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.26553955 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.269212954 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.226776449 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.215996682 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.431518566 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.427636431 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.238328933 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.244613184 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.846607067 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.068623429 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.217551477 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.22119968 seconds)
  done (took 151.20265206 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.511710322 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.206080689 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.204872548 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205948838 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.238535234 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.206269468 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.799779802 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.786134738 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.717559808 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.532035007 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.267594978 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.518864724 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.211849191 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302496678 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.220357696 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.207861904 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.223042987 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.252230898 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.214833689 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.207778558 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.799807928 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.228720614 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.336390932 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.224565675 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.207201006 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242375752 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.599504693 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.208151703 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240948618 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.533063577 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.257892549 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206615634 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.582485196 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.066246815 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.330523111 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209358558 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.242674738 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.208645843 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.481281849 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.208696757 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208323607 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.210841101 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.211228456 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.868708225 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.214971764 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.806117719 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.216097615 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.197081985 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.213737729 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.208563241 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.208278811 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.544218396 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.845501386 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.230287263 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.209147802 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.211423442 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.210401923 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209924691 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.244458744 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.462339221 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.314398241 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.228007879 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.214689457 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243356197 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.211816316 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.210616398 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210613569 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.421247828 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.273642237 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.422935413 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.658537225 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.824957071 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21501484 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305209871 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331164855 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.210834222 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.209633734 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.209455819 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.21106919 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.211384291 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.319769968 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.211172435 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.642714038 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.21596276 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.213591216 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.272032192 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.306372335 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.211050035 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.565075663 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.216033575 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.211069338 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.948983933 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311467973 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.211671193 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.211552311 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212102259 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.63920776 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788532684 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.457935413 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.216314054 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.614776724 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.219690378 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.65602385 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.779059913 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.876458709 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.21700344 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321721733 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215978227 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.214544731 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.212532016 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.241145648 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.230369574 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.273190228 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.212076206 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.61043714 seconds)
  done (took 348.236624646 seconds)
done (took 693.344965071 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.899789912 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.845392673 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.986022702 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.863567695 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.845165519 seconds)
  done (took 10.586422458 seconds)
done (took 11.727515528 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.400840506 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.401324305 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275747372 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.403657747 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242403543 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.420505865 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.387069269 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.238691514 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.317484237 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.297246574 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.314789436 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.267467101 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.242091068 seconds)
  done (took 18.35268903 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.545998155 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.530740119 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.2801394 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.54283175 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.257323228 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.536742883 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.421506253 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.435645849 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.434781601 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.263269523 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228908611 seconds)
  done (took 16.629110257 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.541158237 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.542050681 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285432315 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.548428925 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260980144 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.543751558 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.425352078 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.437508301 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.449088148 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252096176 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227448561 seconds)
  done (took 16.663081617 seconds)
done (took 52.788889754 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.224668983 seconds)
  done (took 2.369617707 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.258286772 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.423651284 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.24712421 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.228257064 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.225408867 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.227661123 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.230875076 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.225710229 seconds)
  done (took 11.21632076 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.22534186 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.222177443 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.220852523 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.222737631 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.224575074 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.224525357 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.223617827 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.224616519 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.22290023 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.225260758 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.222425686 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.223269125 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.223913868 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.224977549 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.224158397 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.222489577 seconds)
  done (took 20.725579401 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.223854219 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.222548434 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.223471327 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.224541916 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.221433925 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.223761966 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.223646136 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.221085973 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.225158894 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.224072989 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.223162548 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.223832298 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.224786084 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.221914477 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.223153339 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.226107012 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.225919307 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.22314894 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.226811526 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.223272132 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.223536642 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.2250876 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.225555783 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.225868933 seconds)
  done (took 30.527213488 seconds)
done (took 65.98801334 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.470729127 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.981675703 seconds)
  done (took 9.603512478 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.227368917 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.225814372 seconds)
  done (took 3.603067348 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.226514631 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.226758074 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.227553506 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.226243794 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.224921047 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.226363079 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.225577053 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.226718672 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.226930001 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.225990427 seconds)
  done (took 13.413611295 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.228361862 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.227187029 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.224761984 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.22815212 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.228584518 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.225222675 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.227257547 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.228756322 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.23009317 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.227062832 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.229758408 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.225058274 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.227914692 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.225901619 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.226848963 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.22558744 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.225495393 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.225866256 seconds)
  done (took 23.241626787 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.22832519 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.226962263 seconds)
  done (took 3.608805728 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.225961079 seconds)
    (2/7) benchmarking "second"...
    done (took 1.225508973 seconds)
    (3/7) benchmarking "month"...
    done (took 1.226100312 seconds)
    (4/7) benchmarking "year"...
    done (took 1.227610886 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.22564843 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.224531695 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.226390636 seconds)
  done (took 9.736054084 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.228742593 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.397533704 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.479970163 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.82478469 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.229709937 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.231253044 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.084171253 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.231475097 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.232934038 seconds)
  done (took 14.096209888 seconds)
done (took 78.451465063 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.262021976 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.239616259 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.430998871 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.232826784 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.257860848 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.565694887 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.223885422 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.356947049 seconds)
done (took 37.722299796 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.24223824 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.018569131 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.009954149 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.245350748 seconds)
  done (took 11.429996414 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.205109027 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.200918953 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.224222512 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.2735142 seconds)
  done (took 18.06203413 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.305621614 seconds)
    (2/2) benchmarking "read"...
    done (took 1.564597886 seconds)
  done (took 5.024661306 seconds)
done (took 41.911345337 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230364024 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.231475957 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.233805906 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.234726144 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.231861397 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.230127679 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.229272316 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.2314469 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.228202306 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22992568 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.230125095 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.230966465 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.23074582 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.230356278 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231858438 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229061789 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228857665 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232423211 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.229083117 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229846018 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229200113 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232637549 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.228701153 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.23056067 seconds)
  done (took 30.688674509 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.233315038 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.2285174 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.232105171 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.231799718 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.23087477 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.232086642 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.233434456 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.227864907 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.232015742 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.232628649 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231009424 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.22967519 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.232011682 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.229674547 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232324653 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.229596271 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.232603926 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231392164 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234803017 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.232173177 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.232585968 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230235961 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.232425435 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233729209 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.23124707 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231870299 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.235320726 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.231519449 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23333815 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.232987585 seconds)
  done (took 38.115050178 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.238847057 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.241542338 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.234220713 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.234193637 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.232504556 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.233688726 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.233501218 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.233940533 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.233810139 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.233588718 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.234872905 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.23286846 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.235743966 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.235366975 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.231707922 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.234470605 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.235300268 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.23445943 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.234210237 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.233408766 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.235473142 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.234447204 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.234672548 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.234892223 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.233787097 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.235218582 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.233302589 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.2343174 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.234214101 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.235194093 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.233710681 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.235169769 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.235230274 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.234473543 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.233607042 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.23498396 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.241153229 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.242320068 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.237086146 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.234720081 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.23416538 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.234315169 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.23557004 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.234919217 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.233393481 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.234247241 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.237233195 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.236614796 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.235520692 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.236065213 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.236031387 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.23724794 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.2352905 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.236443122 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.234967647 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.238302265 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.236843732 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.237246841 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.236284447 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.23508692 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.236289245 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.237159083 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.237289367 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.236175511 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.237472309 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.236423983 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.236575654 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.237358889 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.23706051 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.236561893 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.235259324 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.238579513 seconds)
  done (took 90.117223943 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.238692762 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.237310385 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.234499887 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.235295072 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234660697 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.238379049 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.235957432 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238534637 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23550461 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.237683189 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238513848 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.23634574 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236255373 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.239855589 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239541975 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.236314613 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.237810225 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236283289 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.238989182 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.239231567 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.239010046 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.237792926 seconds)
  done (took 28.384560453 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238278434 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.239459505 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.236364742 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.239586842 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.235758897 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.239352966 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.243760045 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237801377 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238498719 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235414242 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237133622 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237353423 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235570569 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236028379 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239283392 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.238470689 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241426124 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23663036 seconds)
  done (took 23.453585173 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.23862674 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.238052822 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.239779017 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.237183924 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.238133652 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.239323456 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238163353 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.240238121 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.240765555 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.238873399 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.241496027 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240706524 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.239918724 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238209088 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239453285 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.237947893 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.241476574 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238125931 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240887214 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237878883 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.238116439 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240833194 seconds)
  done (took 28.426183727 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241387268 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.23984585 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.236861527 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.240050456 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.239090145 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.240201795 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.241716195 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.238327944 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.239342779 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.242288109 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238969093 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.242623373 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.239884157 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.242625074 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.240479049 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238651756 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.243313685 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.239857671 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243719034 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.240285426 seconds)
  done (took 25.973578494 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241275951 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243461012 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.243797119 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24318185 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242922546 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.243043553 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241499861 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.243529892 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243491243 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.24426694 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.243922228 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.243614983 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244772634 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.244774845 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243353025 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243233055 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244214582 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.245087383 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244385561 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245408069 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.245086447 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.244526976 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246226145 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243803179 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.244345535 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.244075511 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244385076 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.244961396 seconds)
  done (took 35.998333228 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243821207 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24530953 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.241922637 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.242685999 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.241324619 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.241700307 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.244007448 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.244305284 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.247234777 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.243792893 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.245906359 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.245163929 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.246391911 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.245803824 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245867748 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.24658948 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246480351 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.243470865 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243997556 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246720811 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.246254021 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245971079 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.248139316 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.243444216 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244332455 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.246973575 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244474275 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245684043 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24616778 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.24456928 seconds)
  done (took 38.518873905 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.265455336 seconds)
    (2/2) benchmarking "in"...
    done (took 1.265486381 seconds)
  done (took 3.701358284 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.244919489 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248416153 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.24653061 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.245848301 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.247096848 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.249488405 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.247616612 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245332269 seconds)
  done (took 11.14897582 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.248523916 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.246551502 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.247384023 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.247463614 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.247998516 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.250001337 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255341778 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.267855097 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.251171038 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.249460245 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.25638247 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.255318601 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.25112772 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247049292 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.247381365 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249712571 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.249413274 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.249452286 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.247997108 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.250589178 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248968947 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252963509 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251084818 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.247286489 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.251209374 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.260109116 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.27755208 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.250532426 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25286158 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.254910941 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.249523379 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.247942305 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.249892443 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.250019496 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.248960906 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.250128472 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25758728 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270650023 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.256171939 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.2725392 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250726169 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.249713631 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.251076319 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.252348794 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252576084 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.250174093 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.251156373 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.247963576 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.250164983 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.255783545 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.255393175 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250509446 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.248580376 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25490482 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.252491994 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258756656 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.270295559 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.256215875 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.25980818 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.26301187 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.287055232 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.28097364 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254827879 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.25381135 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263060107 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.275677598 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261216269 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.271404145 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.250757132 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.254266218 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.260851142 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.289601008 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.280505926 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.254360248 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254633571 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.256853543 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255667396 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255577504 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260884151 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.277157331 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.255086485 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253362834 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26499199 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278382183 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.256481473 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.255192968 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.254619164 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.25415735 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.257054084 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267109779 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.274901995 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.256451202 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.255760155 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.255221192 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.256410034 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.256868551 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.255305663 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256497139 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.252584505 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.257455287 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257031484 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259822647 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.265412287 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256167669 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256638018 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.262768229 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.275794861 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256658295 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.263472632 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.255815093 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257020088 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.257696153 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.261335062 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.254307571 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259307835 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.265448013 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.256620599 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.257657663 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.255566414 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.25679436 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267900226 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.285476217 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.256641238 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.257296004 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.261144541 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.268574886 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256498376 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.259543349 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.256786229 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.254033241 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.256283542 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.259640297 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.257773007 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.259186617 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258062885 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261754878 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.255207624 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.258736571 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.258091585 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.259106449 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.258611786 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.25905678 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.259935905 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.262447867 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.257945889 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.260446343 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.266992949 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.278604467 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.260076439 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.259243591 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.256646877 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259429246 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.261630649 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.260225242 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.259397015 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258402314 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.258623162 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.260617531 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260216022 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.261323708 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25986249 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.259134913 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265475058 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.260230785 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.263582176 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.259702402 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.258270711 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.261551413 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.261193023 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.262089346 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.261240542 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.260188836 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.264711339 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.267596963 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.259678284 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.260205975 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.262792847 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260294699 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260995257 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260107081 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.265079009 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.269774462 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.262220452 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.266140094 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.281925638 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261489452 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.261566447 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.262823706 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.262015647 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263551977 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.265666387 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.269697781 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272296827 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28944126 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.262647743 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.267155851 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.262914922 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.266894741 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.264785477 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.263354492 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.264492857 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261265844 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264316337 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262816297 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.26386695 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.263525196 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.262602075 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.263573613 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.264583056 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.262264731 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264579336 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.26332828 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265227889 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.261247243 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263463003 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264827573 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.264026352 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.261821294 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.261394205 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.265406136 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.264246274 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.262894276 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.268654272 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.262214273 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26619359 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265210974 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.262444026 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.262949731 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.264982763 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265978514 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.264935076 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271587527 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.282112304 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.265778972 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.269881452 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.282745324 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.263554471 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.268834907 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.264914637 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.263968377 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.267153553 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.27391289 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.264285905 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.264802216 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.264797069 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264249889 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265662733 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.27367027 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.283566007 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.265124162 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.264852272 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.268115988 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.262080725 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.26626215 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.266714529 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.267531574 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266858079 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265384073 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.265446209 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268228474 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.265622861 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.267534612 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.26679501 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268389242 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.27390965 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.269890726 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.265420939 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.267923009 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.266851775 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.270201002 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.265091586 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.266855015 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.265584499 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278347928 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.290639223 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272026839 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.288335256 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.266812275 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27136293 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.288851453 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.271117083 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267779227 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267438437 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.268408061 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.267371177 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.265389607 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267436864 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.267924666 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268620289 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.269075807 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.271543062 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.269163231 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.267683993 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.268003274 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.267387254 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.268434126 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.26818535 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.271099312 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.270980895 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27067492 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.268560766 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.268292393 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274081138 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.288839217 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.269080395 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.269051859 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.26915529 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.267635665 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.269884395 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.267973593 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.271849368 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.2748523 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.271043451 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.277376251 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.272049559 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.277797097 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.268245945 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.273131984 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.276997541 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.266428114 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.266687592 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.270083061 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.269070299 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275870364 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.290424427 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.271950631 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.27447193 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269922523 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.271920172 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.268252943 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.270716606 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270731602 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.271955554 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277670214 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.290033946 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.275446273 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272388568 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.266865311 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.269906634 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.271390867 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.269401848 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274199013 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.269320736 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.271532367 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.270399002 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.270659984 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.270886309 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.270851757 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.270378511 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.268192168 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.271928502 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277009353 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.2905326 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277273393 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.270885421 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.279567174 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.294197304 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279114505 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.293824689 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.271565603 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.273024358 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.272250472 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.272965602 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.271607957 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.272755636 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.273255027 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.273015006 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.276398452 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.271920041 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.277190012 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.274164174 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.272420497 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.273820348 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282438619 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294717823 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.273738231 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276260517 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.270185645 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.274159413 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.278807966 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.273799375 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.272811037 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.276685737 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28535043 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279654953 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.274356078 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.273994273 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272755104 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273461801 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.273746434 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.274533294 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.273952896 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.27366577 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.275082849 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.274852091 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277550607 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.273417203 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.27513037 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275345423 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.27581354 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.284065176 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.295286098 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.276377601 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275449993 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.274816216 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.273766617 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.275502313 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.275069512 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276404939 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275656646 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.275795558 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283350383 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.283584255 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.276425368 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.275881393 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.276386225 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.276809474 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.275126738 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275608172 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.277363725 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27591295 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.277466111 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.276440444 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.276752324 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.275119197 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.276710045 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.277562746 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276817406 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278336122 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.28245568 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276851286 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.273965929 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.276293176 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277160156 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.274119182 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.277571561 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.284058289 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.300033485 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.287067984 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.285977177 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.28461601 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.281106291 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285625629 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.286837062 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.277560165 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.280944127 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.278593552 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.280100961 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.278316505 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.280975939 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278321608 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.285297159 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.297954924 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.277693951 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286148048 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.298677577 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.277898495 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.279453765 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.282006067 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.279739552 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.275735337 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.278933067 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.277106722 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285401781 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.297847681 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278789591 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279969836 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.277861103 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.280166652 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.282254196 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278255623 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.280169808 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.276581727 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.278775673 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.279993736 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281992049 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.277171755 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.278518936 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.278410714 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.283570411 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.286832306 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.276697157 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281922502 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.280905745 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.279756235 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.280069849 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281186774 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.278274087 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.278253154 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.2820017 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28037845 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.28131801 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.282458242 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.279662137 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.282270635 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.280952587 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281144995 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285022408 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.292003342 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.289431209 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.279248416 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.279696621 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.282413939 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.284714271 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281511872 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.280814595 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.282921236 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.28308366 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.282536286 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.281061787 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.281891188 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.284944098 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296339172 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.300126052 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28126553 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.281887311 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286060447 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.280852516 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.279067592 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.282521438 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.283673125 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.285430091 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.289382689 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.282439249 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288660696 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302907308 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.284241551 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.287134141 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.287623342 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.289056541 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.287657964 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.283017189 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.283586296 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.288234125 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.297706475 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28304646 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.293768339 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.311802851 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.303722963 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.283924429 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.283056129 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282236699 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.282004547 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.284367186 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.282696304 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.283796835 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.284036578 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.283215015 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.282738394 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.288242461 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.285251304 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.284045461 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.282865636 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.28271465 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.284884841 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.281113555 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.284039073 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.283529885 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.284497027 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.284413198 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.28385175 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.284030539 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297436724 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.312652103 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.285343285 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.285534255 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.281880558 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.288584105 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.287803182 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295353891 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.291776374 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.285601957 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.284446639 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.285913214 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284833561 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.283192926 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.2858087 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.286439491 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.286422313 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.283725727 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.297071936 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311361704 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.289852959 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.284862683 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.287549726 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.285624763 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286250125 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285432943 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286452376 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.287802609 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.287486208 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289835139 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.287759394 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.286530021 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.289012769 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.293746965 seconds)
  done (took 758.85419186 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.284968832 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283668222 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284042181 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.285236096 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284354081 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283862354 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284804405 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284111226 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.284951923 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.284010503 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.283498325 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286459202 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284993785 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.284977844 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284920057 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.283974368 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282187693 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284701326 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.286068794 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285121857 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.284824982 seconds)
  done (took 28.185054399 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.287048483 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.285565239 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286073994 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288090753 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285396062 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.28672761 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.286129146 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289216389 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287441981 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28511416 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.286958533 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287446557 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.284833347 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.285384701 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285683191 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289369041 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.288755334 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286067184 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.288339566 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286345759 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288516515 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.286885076 seconds)
  done (took 29.519188328 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.288288524 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.289447417 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.287952577 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.287254706 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.288282377 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.287816625 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.289900046 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.289939318 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.288696459 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.289594432 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.288713927 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.289142017 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.297046818 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.294199093 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.292419725 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.288608648 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.4334031 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.290013204 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.290619546 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.289946714 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.287895744 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.294778925 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.310176942 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.289040779 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.289169418 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.291075211 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.291690997 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.2912617 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.290892962 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.292956817 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.295480312 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.290145011 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.290930437 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.292304969 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.290105887 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.29182383 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.296434856 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.291711093 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.288107277 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.290198064 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.303618368 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.312700509 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.290896309 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.29681956 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.312835516 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.292717428 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.293736262 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.298804706 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.287987018 seconds)
  done (took 64.688289707 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.291237749 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.291306706 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.289386973 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.291374548 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.2934129 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.289158329 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.290815219 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.29122358 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.289151316 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.289632497 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.291609395 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.289582584 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.289554538 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.292923679 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.292923975 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.289600423 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.290030006 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.289362531 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.290086907 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.289831314 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.291231566 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.293273136 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.294280661 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.290910933 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.294524463 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.289494055 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.290362915 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.294731731 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.289708126 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.290528295 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.29298989 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.294221931 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.2945322 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.291663766 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.291606554 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.295165765 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.294044785 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.291371611 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.294889836 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.291735768 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.293561745 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.294351843 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.29419384 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.29485367 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.292828001 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.291852002 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.29103809 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.29255053 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.291846285 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.294532028 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.294442527 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.292490639 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.294101149 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.290758185 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.294562466 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.295322489 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.292804921 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.290970012 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.295084542 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.291857035 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.292349062 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.294679223 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.293505653 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.294899902 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.295388921 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.292686569 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.29446396 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295661907 seconds)
  done (took 89.094249557 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296408883 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.295783541 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297372284 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296447732 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295838605 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.295667781 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.296591683 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.297082101 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.295370881 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.298337599 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297197192 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.295160774 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.295081577 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.296145418 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.295459017 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.297149546 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.297124037 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296882346 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296371473 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296199049 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.296656414 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.297305566 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.296301505 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296296847 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.298448006 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.297873695 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.297080629 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.297075514 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296054097 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.297609195 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.297669446 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.297085546 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.297105114 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.297106832 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.298729029 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.297673317 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297169042 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297231315 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.297003846 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.297706416 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.298371086 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297938481 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.297121223 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.298878518 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.299229807 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.297242982 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.298191171 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.297824448 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.298257322 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.298373494 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.299287335 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.299628821 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298468408 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.299294946 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.298079264 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.299001119 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298609336 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.298670538 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297943761 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.299112908 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29969215 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.298908369 seconds)
  done (took 81.657624357 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.299593716 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.298518583 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.297125836 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.297698318 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.299674314 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.296776226 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.299132361 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.2992301 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.300251563 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.299444255 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301073423 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297061316 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298088407 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299275763 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.299872218 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297732145 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.298472785 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.299029128 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300044345 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.298793447 seconds)
  done (took 27.195746086 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.299644367 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.301771272 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.298607139 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298601814 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.301790468 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.297505627 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.302295573 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299794478 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297365554 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299774199 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.301243887 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.300649927 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296960839 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.298144086 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.30218361 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.299004711 seconds)
  done (took 22.015153656 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.299171045 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.301809397 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.301998799 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.301922738 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.299130896 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.29876588 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.302133307 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.298768797 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.298483554 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.302326536 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.302039007 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.302255147 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.30258129 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.302434904 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.299666619 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.302857838 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.299976543 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.300153899 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.303098558 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.303447889 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.30053797 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.300575046 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.303159384 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.303127463 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.300137942 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.300620214 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.301299494 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.300561652 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.301287404 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.303928196 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.30179226 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.302959893 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.29955769 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.30090521 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.304274517 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.30161935 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.305007958 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.303625646 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.304714753 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.304547121 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.304658142 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.300034356 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.303304239 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.304059777 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.301764804 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.302997328 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.302167202 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.303345039 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.300907188 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.301791156 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.306318363 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.304828844 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.304681702 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.304182733 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.304199683 seconds)
  done (took 72.836671642 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304720225 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.303526127 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.30336837 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.305386378 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.305191082 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.302216566 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.305779036 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.303120799 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301786976 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.305087074 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303493487 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.306191137 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30313097 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.306513301 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303770854 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30653205 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.302944743 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.304470045 seconds)
  done (took 24.701597982 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.305668724 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.305278567 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.306250204 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.304524159 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.303032571 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.307239985 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304321217 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.306008186 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306620241 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.304852053 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303794989 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.307687063 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306893607 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.307106541 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.306354216 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305604146 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.308481351 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305594915 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.30378787 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.305280369 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.309179377 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.307607467 seconds)
  done (took 29.955918283 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.307253896 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.30531861 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.305518522 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.323639771 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.326171076 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.329984492 seconds)
  done (took 9.123026308 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315071704 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308529071 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305423896 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308566016 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307991479 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304668744 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304380447 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30455477 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309236887 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306813239 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305920034 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307905575 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307695266 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306233956 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308974884 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309304017 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305609547 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305692932 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307518523 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308185499 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305970418 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308854627 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306836714 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305430245 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305979624 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307163037 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310666782 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308928011 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307889699 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308823341 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309537882 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306783889 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309537304 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30833667 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310103295 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310697508 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307168434 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31080668 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309421297 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308660738 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.311657635 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310702302 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309867956 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30623388 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309811079 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307035862 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307275915 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308157095 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308454976 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311573275 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310116437 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308128008 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310606442 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310444494 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309528129 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311671892 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308806714 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30834866 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312691669 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309660721 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308895814 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311361677 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308966082 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310022104 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311920587 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313528108 seconds)
  done (took 87.630871815 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30944207 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310404366 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310654387 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311592817 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309560062 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308773479 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310692085 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308612801 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309026443 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310669917 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31273782 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308785926 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310002734 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309830694 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311231445 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310472539 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309628427 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310360105 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309617249 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313786151 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310279411 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310752332 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312089301 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310924392 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312031929 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313729549 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310507851 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311509339 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310069383 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311953288 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310903708 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312441289 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311489385 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.311423201 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312254499 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312586422 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312443438 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3115352 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312034415 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315613 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313810244 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31595009 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312702407 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312693789 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312381579 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3123261 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310915147 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311939265 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311857333 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311308088 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313564836 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314576598 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313232617 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312449421 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312957678 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313314637 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312861039 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312985004 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313561619 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316426552 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31245211 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313295665 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316046656 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313324605 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312553462 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314032225 seconds)
  done (took 87.816886148 seconds)
done (took 1768.955318866 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.413672752 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.365920998 seconds)
  done (took 14.013270407 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.476530477 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.434845388 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.312428012 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.31761483 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.315085553 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.321057671 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.336467746 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.315291011 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.313894646 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.313680619 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.314757379 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.508454151 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.309497497 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.316282971 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.314422003 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.406482041 seconds)
  done (took 42.86842875 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.344358222 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.320899564 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.440954692 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.344702869 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.343881575 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.518454823 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.38058925 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.320759883 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.508570071 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.368800076 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.011066776 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.346811525 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.320376874 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.517291225 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.339741866 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.515966633 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.593446985 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.021334467 seconds)
  done (took 30.794482116 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.821931459 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.359577318 seconds)
  done (took 9.41765534 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.310042327 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.350376607 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.326923862 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.323984321 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.339142516 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.349286616 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.36954319 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.37391805 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.327362109 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.333835094 seconds)
  done (took 64.647810172 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.342114692 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.321633142 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.322135509 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.321545968 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.312248623 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.313637077 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.319341498 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.318454141 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.361052158 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.464889695 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.34651782 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.329107754 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.342546707 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.322148408 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.319301692 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.358833259 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.502034582 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.341396564 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.319062602 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.32858041 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.321185573 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.463366507 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.366645046 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.320969907 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.459409018 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.385722711 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.330128529 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.328378959 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.481728996 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.342144036 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.322766386 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.32283039 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.323550605 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.901930654 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.799410944 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.343899862 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.34819557 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.332558959 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.320378708 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.526043765 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.344503135 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.32943432 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.323993948 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.758258868 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.484156185 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.444880776 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.714265298 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.331308629 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.324680668 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.38841453 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.324703816 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.324292842 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.354903143 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.103912077 seconds)
  done (took 112.041364327 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.367166745 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.804185915 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.48962002 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.340554931 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.221015122 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.178167071 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.340136239 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.639776942 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.384452288 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.31690669 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.669335875 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.868118136 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.342540615 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.381689202 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.699311638 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.376564454 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.317997088 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.109615319 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.342528226 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.322763832 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.746478216 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.347175027 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.318660959 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.588206146 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.359187109 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.825794482 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.004493881 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.805519547 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.344898367 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.319364639 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.828913685 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.3505822 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.355444842 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.322008532 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.607755411 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.725799955 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.721682041 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.347639278 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.333747937 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.319363061 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.344688412 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.82658706 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.734423834 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.342143223 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.337857347 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.830426265 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.344805454 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.320769934 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.327169699 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531933019 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.281533472 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.322209571 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.988473659 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.326241704 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.614400497 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.41376559 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.394802614 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.859542811 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.345131064 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.443981358 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.37621284 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.320086754 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.325310082 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322726543 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.321437946 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.714892823 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.761893746 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.323468148 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.716329873 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.849017709 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.344855166 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.883834264 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.281846488 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.340149149 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.369927138 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.328789402 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.935112132 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.882302063 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.396002146 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.322888094 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.703725836 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.346906078 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.663546896 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.346412815 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.323578133 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.759389947 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.351953145 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.365276249 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.322079344 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.343455394 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.116297896 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.342392875 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.607313567 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.370220691 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.321073633 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.323747655 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.332368213 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.323036426 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.328349809 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.325055955 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.883250166 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.352379873 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.644471914 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.349515491 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324816609 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.329156654 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.325998586 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.324583758 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.551401976 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.807066411 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.333940947 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.323724754 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.34079176 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.325969283 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.547104189 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.32955367 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.675724516 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.348697473 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.325360108 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.327630831 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.207541618 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.384932788 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324471321 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.34393916 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.189875515 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.559984116 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.344327036 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.343332706 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.327955581 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.34834706 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.877708008 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.331654965 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.412163291 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.326748388 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.069245321 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.355450065 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.354816553 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.913581987 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.326424905 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.325401703 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.351667032 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.32683903 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.63962949 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.621489011 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.372492222 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.329133117 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.354439569 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.05263263 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.363973632 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470191529 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.345246039 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.309107833 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.530049973 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.563276466 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.328602713 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.882492003 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.324934515 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.548730262 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.32642467 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.64981206 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.858587326 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.350508029 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.32881203 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.074503506 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.032146492 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.934041975 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.327356566 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.681593576 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.343322479 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.782444341 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.328913687 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.327293812 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.931906861 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.328599314 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.328802096 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.328045536 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.327179513 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.400298763 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.505382519 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.278213514 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.334541471 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827454426 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.360472898 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.34433573 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.341162033 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.330894534 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.680033172 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.40009484 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.329959097 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.359074828 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.33139583 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.32984806 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.842908961 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.253032138 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.335730259 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.485272354 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.999858777 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.352782432 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.339070791 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.959170763 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.541354714 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.878184839 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.402524919 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.679429573 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.35467559 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.372553528 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.167463717 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.360598911 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.889475531 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.357198053 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.330864785 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.969930559 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.356740738 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.396149804 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.329979861 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.331050843 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.905246753 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.355395924 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.336149308 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.802251346 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.331288688 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.593762101 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.332249324 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.354024468 seconds)
  done (took 1114.492111312 seconds)
done (took 1389.507050917 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.331521063 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.331933619 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.318588291 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.340291519 seconds)
  done (took 26.578803616 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.341918955 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.34203688 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.341829617 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.340013204 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.34341046 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.340714588 seconds)
  done (took 9.310271739 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.472321404 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.33670729 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.340899984 seconds)
  done (took 19.406116971 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.581893948 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.716824749 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.748032061 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.748766228 seconds)
  done (took 11.056662301 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.342125766 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.343154601 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.343265161 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.343510343 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.34506827 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.347061499 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.343377862 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.344571826 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.346815683 seconds)
  done (took 13.358303803 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.680994973 seconds)
done (took 86.642229382 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.433819719 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.337661065 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.321510206 seconds)
    (4/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.390307486 seconds)
    (5/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.98858562 seconds)
    (6/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.361480159 seconds)
    (7/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.644562181 seconds)
    (8/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.408570178 seconds)
    (9/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.337091226 seconds)
    (10/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.448604389 seconds)
    (11/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.498815909 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.617286052 seconds)
    (13/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.968639141 seconds)
    (14/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.83510097 seconds)
    (15/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.333084961 seconds)
    (16/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.338150771 seconds)
    (17/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.852675283 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.378113927 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.363642558 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.339457577 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.787261009 seconds)
    (22/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.214456686 seconds)
    (23/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.353362654 seconds)
    (24/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.014085387 seconds)
    (25/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.345960925 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.045307844 seconds)
    (27/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.720690155 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.762574887 seconds)
    (29/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.402397223 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.337204428 seconds)
    (31/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.050634278 seconds)
    (32/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.910805638 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.444473703 seconds)
    (34/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.606422182 seconds)
    (35/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.860238154 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.411782435 seconds)
    (37/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.333863916 seconds)
    (38/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.321100677 seconds)
    (39/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.076939562 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.982313615 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.355790792 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.891527689 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.440821881 seconds)
    (44/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.440347597 seconds)
    (45/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.100771162 seconds)
    (46/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.822604172 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.361930718 seconds)
    (48/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.441756613 seconds)
    (49/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.33865675 seconds)
    (50/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.359541731 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.336292744 seconds)
    (52/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.983979008 seconds)
    (53/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.22590586 seconds)
    (54/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.467158943 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.330194306 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.048763751 seconds)
    (57/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.37186759 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.398658564 seconds)
    (59/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.463626114 seconds)
    (60/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.054775793 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.453452616 seconds)
    (62/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.713929227 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.602238606 seconds)
    (64/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.85427803 seconds)
    (65/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.347942842 seconds)
    (66/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.025833483 seconds)
    (67/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.445154746 seconds)
    (68/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.739521421 seconds)
    (69/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.657358471 seconds)
    (70/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.507917724 seconds)
    (71/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.565881532 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.170947085 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.398593496 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.969945681 seconds)
    (75/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.352833342 seconds)
    (76/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.07569976 seconds)
    (77/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.076350524 seconds)
    (78/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.951020329 seconds)
    (79/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.346438383 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.434145384 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.461970703 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.342245025 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.376904257 seconds)
    (84/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.427534711 seconds)
    (85/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.348806784 seconds)
    (86/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.121403014 seconds)
    (87/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.366791171 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.403430958 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.183053575 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.182624703 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.250203344 seconds)
    (92/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.944200556 seconds)
    (93/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.001191294 seconds)
    (94/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.37323383 seconds)
    (95/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.532943867 seconds)
    (96/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.46935502 seconds)
    (97/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.928244463 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.798497173 seconds)
    (99/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.453159888 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.854274334 seconds)
    (101/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.247360494 seconds)
    (102/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.000252751 seconds)
    (103/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.375576548 seconds)
    (104/309) benchmarking ("sort", Int64, false)...
    done (took 5.607903338 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.660518298 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.255045221 seconds)
    (107/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.369427611 seconds)
    (108/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.763763228 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.425780722 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.174765993 seconds)
    (111/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.426073063 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.437325759 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.341937604 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.099189923 seconds)
    (115/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.88821712 seconds)
    (116/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.559813643 seconds)
    (117/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.333291609 seconds)
    (118/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.43088868 seconds)
    (119/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.350072335 seconds)
    (120/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.214593481 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.555590563 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.299272826 seconds)
    (123/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.394092716 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.44112046 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.651128286 seconds)
    (126/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.560182479 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.358056371 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.420332907 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.32485223 seconds)
    (130/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.860883747 seconds)
    (131/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.861443465 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.351305449 seconds)
    (133/309) benchmarking ("sort", Float64, false)...
    done (took 5.744343928 seconds)
    (134/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.96533074 seconds)
    (135/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.367592783 seconds)
    (136/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.867878235 seconds)
    (137/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.665341849 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 1.893732772 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.394067316 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.626271691 seconds)
    (141/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.472435835 seconds)
    (142/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.371626494 seconds)
    (143/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.229938569 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.345125307 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.185636724 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.628080802 seconds)
    (147/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.975192082 seconds)
    (148/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.891870419 seconds)
    (149/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.355973583 seconds)
    (150/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.756944342 seconds)
    (151/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.431486751 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.44881148 seconds)
    (153/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.413343069 seconds)
    (154/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.297165686 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.191499061 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.373413994 seconds)
    (157/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.523003017 seconds)
    (158/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.334480346 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.370011443 seconds)
    (160/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.470629919 seconds)
    (161/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.013409688 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.494215863 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.369672079 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.184864404 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.689307708 seconds)
    (166/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.480713191 seconds)
    (167/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.184684675 seconds)
    (168/309) benchmarking ("sort", BigInt, false)...
    done (took 6.346198757 seconds)
    (169/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.374994282 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.375532026 seconds)
    (171/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.9969333 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.739592558 seconds)
    (173/309) benchmarking ("sort", Int8, false)...
    done (took 4.394343677 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.006121538 seconds)
    (175/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.912310341 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.656271656 seconds)
    (177/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.388014017 seconds)
    (178/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.384550679 seconds)
    (179/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.876749673 seconds)
    (180/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.365110624 seconds)
    (181/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.348376545 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.377848992 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.389887376 seconds)
    (184/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.365182412 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.630246713 seconds)
    (186/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.395272986 seconds)
    (187/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.776787697 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.79634019 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.787760477 seconds)
    (190/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.082052306 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.391966144 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.369319506 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.45516588 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.073346253 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.336138547 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.341961142 seconds)
    (197/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.337156391 seconds)
    (198/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.241694241 seconds)
    (199/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.25787166 seconds)
    (200/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.688559508 seconds)
    (201/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.687883289 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.433573937 seconds)
    (203/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.541708442 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.118994967 seconds)
    (205/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.349902085 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.016401352 seconds)
    (207/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.338597296 seconds)
    (208/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.610844241 seconds)
    (209/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.453811511 seconds)
    (210/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.360293435 seconds)
    (211/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.376882822 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.330771489 seconds)
    (213/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.75090156 seconds)
    (214/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.376433486 seconds)
    (215/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.376708946 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.984222684 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.570519476 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.36023309 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.365659249 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.7208395 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.248967421 seconds)
    (222/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.117398025 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.128077988 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.305759111 seconds)
    (225/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.689603907 seconds)
    (226/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.379106861 seconds)
    (227/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.352543984 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.364426383 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.37458594 seconds)
    (230/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.439447081 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.781718343 seconds)
    (232/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.370447647 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.247542276 seconds)
    (234/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.466999774 seconds)
    (235/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.828254714 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.393465389 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.003649317 seconds)
    (238/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.357506006 seconds)
    (239/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.365126819 seconds)
    (240/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.794227343 seconds)
    (241/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.683840585 seconds)
    (242/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.461824104 seconds)
    (243/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.737122874 seconds)
    (244/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.791067746 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.37206823 seconds)
    (246/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.426940611 seconds)
    (247/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.500840555 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.343632459 seconds)
    (249/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.384379026 seconds)
    (250/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.908099531 seconds)
    (251/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.359117812 seconds)
    (252/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.52360432 seconds)
    (253/309) benchmarking ("sort", Float32, false)...
    done (took 5.386209937 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.891022215 seconds)
    (255/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.693505138 seconds)
    (256/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.777464712 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.425764615 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.353933862 seconds)
    (259/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.951905236 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.37083831 seconds)
    (261/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.761075603 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.602136009 seconds)
    (263/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.853510212 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.398027943 seconds)
    (265/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.041410406 seconds)
    (266/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.423728556 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.354423823 seconds)
    (268/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.390178062 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.380216791 seconds)
    (270/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.028246863 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.296411192 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.733296683 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.6061947 seconds)
    (274/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.927226758 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.398513146 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.368121724 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.366104494 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.398859494 seconds)
    (279/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.373033489 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.039640321 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.796481386 seconds)
    (282/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.400386497 seconds)
    (283/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.354874041 seconds)
    (284/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.39603162 seconds)
    (285/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.558328449 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.377974016 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.456812852 seconds)
    (288/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.335593109 seconds)
    (289/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.344585862 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.474309825 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.472585431 seconds)
    (292/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.548568314 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.808374803 seconds)
    (294/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.649124113 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.366055293 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.204678841 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.371958645 seconds)
    (298/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.357026543 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.06752978 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.40031251 seconds)
    (301/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.420735775 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.18227146 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.379278558 seconds)
    (304/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.336188513 seconds)
    (305/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.465826831 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.354899079 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.356202111 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.121975422 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.32014584 seconds)
  done (took 945.414292777 seconds)
done (took 946.676248491 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.390195363 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383637859 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.367296031 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.389375824 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.480356863 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.393328436 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.378082115 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.37028551 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.415919802 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.417269971 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.36739669 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.393787408 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.369507772 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.367920808 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.367763055 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382905656 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.54876245 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.376444781 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.385956913 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.378135956 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.386823052 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.368881276 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.419379124 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.394934011 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.372598875 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.372092192 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.373001973 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.389298351 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.483150987 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.373271981 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.372385169 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.381859049 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.508589755 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.370348048 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.365053136 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.390500023 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.382226609 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.37981305 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.372986058 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.403063233 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.956167458 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.38903524 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.372327017 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.370941581 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.370553074 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.375176214 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.372078942 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.37802113 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38440522 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384561384 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.947480929 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.405825764 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.372789134 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.372212469 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.381323384 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.370514467 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.3757043 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38758694 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.392043094 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388174199 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.554918803 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.383162806 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.37457524 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.389184482 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.379336913 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.987127668 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.387748836 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.37870438 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.955981309 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.398089791 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.982798485 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.399978525 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.373680302 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.387061491 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.404162265 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.56096647 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.373770032 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.372583105 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.381105191 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.372882823 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.382025581 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387300448 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.377714198 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.373580094 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388420559 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.398537563 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.382615638 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.375180727 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.382027233 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.393936682 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.381044785 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.384820185 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.376805529 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.368769073 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.382900188 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.377869743 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.376955834 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.375740154 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.377808775 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.386387944 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.019375609 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.416886104 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.371294293 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.371632423 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.373415419 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.388718681 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.02993745 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.401438304 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.395354663 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.422537534 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.376093003 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.555908446 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.384457996 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390657437 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.385855456 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.378596258 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.37119511 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.558208496 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.048824139 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.416407081 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.376581931 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.374052727 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.391904426 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.377341834 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.372014964 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.570600271 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.384681667 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390983034 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.497698555 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.387685408 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.407444708 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.375682333 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.379969008 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.402373957 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391962147 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.408826514 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.378840591 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3909893 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.393494152 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.374211344 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.387091712 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.3875131 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.378679376 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.38381054 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.371544036 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.403059052 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390049024 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389972844 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.400014623 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.498040874 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.375076144 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.558700668 seconds)
done (took 234.25027855 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.434425569 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.373674664 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.461939774 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.373947225 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.475291474 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.477089991 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.370317483 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.372264466 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.371598128 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.810546795 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.372013732 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.372598842 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.370060599 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.372897528 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.457106402 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.374826269 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.372554377 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.717687663 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.374449907 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.446593726 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.375854338 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.372136457 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.37369978 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.755827748 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.369269078 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.369258465 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.447171934 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.37547135 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.771030929 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.370240753 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.369372737 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.72355793 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.465552012 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.394246259 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.385823919 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.382668309 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.478156502 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.396918569 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.455773684 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.458321617 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.464403717 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.413916061 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.377867605 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.378115876 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.378442213 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.376179031 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.373363151 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.403397769 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.368628246 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.375126061 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.787974441 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.385730869 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.384152947 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.374351299 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.375019068 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.395090066 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.375235201 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.37617084 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.466749532 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.379053495 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.438979195 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.813631539 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.757879915 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.377348609 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.374362902 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.375427113 seconds)
  done (took 151.478421966 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.44386864 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.449729615 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.49606653 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.397911593 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.427761014 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.500831142 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.39779891 seconds)
  done (took 11.403392347 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.384449053 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.378816916 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.43071285 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.427775773 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.378012888 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.526736567 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378786788 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.390256985 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.376313068 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.431890571 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.380012312 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379936358 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.386254811 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.380558029 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.426716703 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.390257457 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.492804008 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.379928441 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.379126661 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.530313543 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376821411 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.3865743 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.431283888 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.389634652 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.380932977 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.385973166 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.949903887 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.379368044 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377178675 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.378856737 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378199882 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.417411335 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.379870886 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.377376175 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377635476 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.495157281 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.380599364 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378974063 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.38074224 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.380204344 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.381233284 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.381440795 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.381012599 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.378061885 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.381176677 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.403929801 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.380907186 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.38191252 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.380565168 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.381010867 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.432247196 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.381899831 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.379010902 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.379075321 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.439506831 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.388343903 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.382681901 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.378827293 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.383500885 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380154173 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.53288772 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.429253643 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.382991731 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.430726611 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.383281279 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.383605445 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.383556942 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.381801354 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.437189064 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.384416376 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.431981382 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.380167285 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.538746156 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.405345617 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.385271578 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.384741995 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.385780366 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.382955901 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.377023127 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.388654996 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.381573111 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.385395149 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.388610118 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380930555 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.381521935 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.48551577 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.492087791 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.380895804 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.396955566 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.390909824 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.382985256 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.437051857 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.384406801 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.381695748 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.435136678 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.497936873 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.439891821 seconds)
  done (took 157.877346123 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.390584064 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.393847428 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.385975304 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.402235979 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.384295289 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.385090062 seconds)
  done (took 9.6392484 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.386989249 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.387657944 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.383525799 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.384984966 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.386129775 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.387533272 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.385697467 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.386213143 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.391736958 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.385255231 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.387980053 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.387306344 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.386416517 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.385048405 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.38622378 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.386491496 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.386425938 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.384437384 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.38804457 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387225061 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.491311465 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.38641036 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.3858528 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.387023152 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.391345545 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.386850667 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.394394939 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.386710191 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.387154595 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.396055221 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.410044156 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.389555111 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.388013822 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.39438864 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.391760437 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.389177115 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393338235 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.38949489 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.384999739 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.388484353 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.389327726 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.388401425 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.388783443 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.389997222 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.390309057 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.393788052 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.394696982 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.396096031 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.389599476 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.390000588 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.390268518 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.388524977 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.390020194 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.390284838 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.389847649 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.412268777 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.394704705 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.389535637 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.388729049 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.39065941 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.391773464 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.390695407 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.391280231 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.394025733 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.388086743 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.389993077 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.390874588 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.39392979 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388683796 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.390374651 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.392738963 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.386904924 seconds)
  done (took 102.469347336 seconds)
done (took 434.154358962 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.555877388 seconds)
  done (took 7.855118366 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.595257298 seconds)
  done (took 7.903897748 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.975810492 seconds)
  done (took 24.28362245 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.417706189 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.467628346 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.40024689 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.383553114 seconds)
  done (took 26.975588591 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.725173672 seconds)
  done (took 8.029136549 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.382871503 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.381693942 seconds)
  done (took 14.071182567 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.595650671 seconds)
  done (took 7.898118218 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.12546882 seconds)
  done (took 8.438856665 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.392314382 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.406912218 seconds)
  done (took 14.372193511 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.363321528 seconds)
  done (took 7.666231655 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.10453872 seconds)
  done (took 9.413466285 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.386087206 seconds)
  done (took 7.694477391 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.426226519 seconds)
  done (took 7.730643109 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.319013417 seconds)
  done (took 10.624805051 seconds)
done (took 164.259083142 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.38617454 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.384482294 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.385000849 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.384565065 seconds)
  done (took 26.846750633 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.89856553 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.425001326 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.425153825 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.435852233 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.427444883 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.423844953 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.417124342 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.415400198 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.436721518 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.434888503 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.426991894 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.427279691 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.425143275 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.416456246 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.42716119 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.427587722 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.436799913 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.427341222 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.417756789 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.429128718 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.392039181 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.436534375 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.42729336 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.391978357 seconds)
  done (took 35.952868112 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.91609643 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.464314892 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.546545945 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.443914483 seconds)
  done (took 7.673207152 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.445001026 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.447513507 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.459182999 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.499593772 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.531643206 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.458156166 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.42152563 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.416291752 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.402634507 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.447931974 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.524320672 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.461866463 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.532136514 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.395169973 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.593183514 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.39572173 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.393855226 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.445636647 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.500120104 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.511507769 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.394266757 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.446448798 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.450810709 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.463592109 seconds)
  done (took 36.343360674 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.407104941 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.401363454 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.3943924 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.393528468 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.415342339 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.393480381 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.39490243 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.393890843 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.39438196 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.401856862 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.393969925 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.406478408 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.39444528 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.394628925 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.400298104 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.396507312 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.399600197 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.393871104 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.397677111 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.397720571 seconds)
  done (took 29.273794317 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.387866276 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.242628875 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.739502341 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.646628068 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.391481997 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.388513224 seconds)
  done (took 28.104110763 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.476076102 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.653082243 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.40080948 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.802060811 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.899669128 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.415075438 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.39779838 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.665238319 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.032509921 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.037122336 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.468505687 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.47270624 seconds)
  done (took 21.033016913 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.390808777 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.39664641 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.395085163 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.414003259 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.458578338 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.419289427 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.402698526 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.390658596 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.466120509 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.485692854 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.421048838 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.461690213 seconds)
  done (took 38.414596543 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478770182 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.442012226 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.563394116 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258873276 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.124926301 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603940922 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.29322246 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.857418183 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.403591588 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665815099 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391544947 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487687563 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.650191947 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413694439 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398854606 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.508759381 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648125053 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960342806 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398057805 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.71985735 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427213063 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396739211 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.863616164 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.433475331 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604581601 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.377590756 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.655271803 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.167913973 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.72061979 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409507825 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403405298 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393397355 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667864259 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122667358 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521030202 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404931837 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.283429323 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.949393545 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.391607578 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.738890302 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409489981 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.40306407 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406506379 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394748551 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.328840878 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395560704 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867621493 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.409053741 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.105937637 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394838216 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405242997 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488589619 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.39916649 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.96936829 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.51667288 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.402404277 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.395867015 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401733816 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969228178 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.343562968 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419398259 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.337124627 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.896625346 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.750606502 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090588809 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.518501201 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.40075203 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400235399 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332516057 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.806540992 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421950273 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534474514 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.421565804 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.05768691 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216849291 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.431728179 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.336989528 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031259248 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408198663 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.340065425 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625882553 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.173670619 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337897834 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.354737956 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331851918 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.229281525 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413601145 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.945785669 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413565988 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.860255825 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.417380762 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418839689 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42070363 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.622695903 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.277824526 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397374363 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.39931335 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522203031 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42112802 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.85903848 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339367565 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.404103382 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656727472 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.610149101 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412468278 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.529580104 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653509891 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408866276 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.426767811 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.414441547 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.418817727 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.047221312 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.432604773 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.330040831 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423582212 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.17599095 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257397883 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407617064 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.509218735 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.399234598 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677715857 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.288508 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.291274873 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469673419 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403513755 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399649098 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.850999924 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.258246996 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.282784531 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.398249123 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417039049 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.418097242 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.400952995 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360463483 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.40666703 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406725291 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.20437143 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.626555546 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416248054 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684925049 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33577994 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539130439 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.417675708 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.623590146 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.77957548 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.426903916 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662276568 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402006746 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.417970964 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.420219092 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420574196 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498970129 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424505118 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.401345563 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.667008344 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.406012119 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.405799253 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.875473211 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.187370494 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405772925 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.408639992 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.289818206 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061543244 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402375623 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.413195224 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300363077 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.417433843 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470394522 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.410529262 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.413281602 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.491969386 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.436433531 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.412970828 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.401356072 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633733945 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415820691 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.792767178 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490081983 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.62639686 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.070677242 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444547226 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.338026818 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.114557738 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.096036686 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404944085 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.60831413 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405782653 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413502286 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414146516 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.075671717 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.065844887 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435272331 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.790988267 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.418715469 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416579373 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.411999838 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407086814 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.48700102 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.405580584 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42780861 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.426152348 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549512029 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.420614086 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.341567078 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.923629057 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411407177 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.406762548 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.185139251 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441055977 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.790588984 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918112193 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669030658 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.269410801 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425123007 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.998786754 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.449957584 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.41145487 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425502605 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434110886 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.421674844 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423423716 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.418431752 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.798138881 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.863174174 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978460803 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203227472 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047482166 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.512420787 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.414620275 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.328332447 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.873411997 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349158763 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.068204465 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623363361 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.907674278 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373342168 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636329257 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.794634624 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.313921946 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425031409 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638864908 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486877643 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.432962733 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429429179 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622574445 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44573349 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.426825541 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.348148895 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.691268042 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663170693 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41670897 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496595539 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883026449 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417311438 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.19561494 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.40998986 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.941752145 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.632298754 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.963125479 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.804295592 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410875284 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423310409 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914381873 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.421398706 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.942767695 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119765086 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.436774089 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.644153288 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355780576 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.42345965 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.42288711 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.408443409 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.011148133 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.42638977 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.675908755 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423116205 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346491028 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410393651 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02078884 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.292542558 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.417784346 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411559521 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.291420608 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424635404 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.74782643 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.431978822 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.487596428 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441907709 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.34828884 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347743521 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.106304438 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415252904 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383369543 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999057657 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.86318677 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.538030692 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453498384 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269315517 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.670900443 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.427678464 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.079057525 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667585387 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.376799311 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443060006 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.514714088 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415882867 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.403325883 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.296710002 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.649981882 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300440227 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.639171207 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.624366667 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.323355167 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.413601354 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.635052849 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.297713115 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.431116765 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699931445 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.152744546 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.430870697 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208517583 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459369102 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414599349 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.461565642 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.918125718 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431982499 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486482024 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425976713 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.425837151 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.42578572 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.61163025 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436539686 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423655958 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.429629722 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510080188 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.401957142 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.498999986 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.197385062 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083355413 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298608115 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.110065084 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457525438 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416400498 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415211932 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350281025 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566402187 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.944736653 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68921997 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537996657 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.001578085 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443514244 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426570542 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424534083 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632786084 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690844686 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.292334013 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433593713 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.088320274 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.578347498 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430118316 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.629022573 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006856482 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082992668 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549532 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424500201 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.887657345 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700684195 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.509516864 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417537097 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.01211338 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.417601332 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.974430044 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.454413638 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425372396 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575299651 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428937071 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148749199 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.457586554 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.577811449 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.192787537 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.929546179 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.685527787 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.021111727 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.437004738 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088474124 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.252266769 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689715109 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491210257 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428950351 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.526714728 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566382448 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.417267391 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.322680612 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417396591 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265520641 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.130116997 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.427713467 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088330041 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.710969991 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.417070093 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.421838087 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450218397 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.430661345 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.643987105 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.248581344 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647586632 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.428953696 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.422387416 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.412936403 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087347797 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455694642 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352726421 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.42450107 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69598263 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.683117125 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4444385 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.872129347 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.131071977 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06573256 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.403565586 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44144219 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.437165731 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232020708 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093181879 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.517106206 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023492285 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.084873424 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435048358 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704219721 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.427138164 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.422556134 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703163478 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.425323422 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.426803265 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.436452071 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.09466378 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.328782189 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.428822587 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.887713358 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.365817505 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.649310914 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.14406804 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36421571 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432855926 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.625357515 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.43147079 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543769558 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434700996 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.41924351 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448355874 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.186031949 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705930769 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.428369201 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.406019155 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.424169887 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.432972002 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43738262 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681093229 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429555357 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.096993793 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.774549057 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.682933209 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.427747375 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.412150238 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.427457216 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425334925 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.151312528 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.400227221 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.102378351 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096132045 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.440512208 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.441661497 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.428718046 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.642640259 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63707693 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.426089397 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.444889451 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425748449 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469015615 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.327191722 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.197940068 seconds)
  done (took 1640.754550829 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.463465889 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.478508389 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.470426536 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.461476257 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.434111186 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.532351662 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.472512403 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.519994699 seconds)
  done (took 53.174500741 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.441917797 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.58248011 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.461207231 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.431914445 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.436450749 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.427693915 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.939241323 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.461617676 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.435338533 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.435909806 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.424693705 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.427797326 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.176943821 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.441478981 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.439993949 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.421728762 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.435364433 seconds)
  done (took 67.166713655 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.426113857 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.03295375 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.464733571 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.430782516 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.166087411 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.464251814 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.04640768 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.450175727 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.432408635 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.511537178 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.081771842 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.438800031 seconds)
  done (took 82.290204071 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.4357583 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.435556703 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.435371639 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.435745828 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.434790764 seconds)
  done (took 8.520722155 seconds)
done (took 2076.85211221 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.788903141 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.242739133 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.161817856 seconds)
  done (took 5.747814999 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.570413105 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.627050694 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.824562241 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.799735825 seconds)
  done (took 8.164632751 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.711677143 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.812540234 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.61325975 seconds)
  done (took 6.483356455 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.058131179 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.451160552 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.565940681 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.430770355 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.434805832 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.431070394 seconds)
  done (took 20.641218004 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.433471048 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.434015226 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.432900733 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.436110553 seconds)
  done (took 7.080153601 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.411420716 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.126667453 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.410626772 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.428749414 seconds)
  done (took 18.721391083 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.181268015 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.191160767 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.176381868 seconds)
  done (took 7.897324987 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.430188784 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.278653862 seconds)
  done (took 10.057588007 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.743863911 seconds)
  done (took 3.090829792 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.565133765 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.765250476 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.631207341 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.578305931 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.668388456 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.957952817 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.324348028 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.840205464 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.536564325 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.952508039 seconds)
  done (took 31.169383009 seconds)
done (took 133.257967087 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.709053863 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.453129363 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.634166139 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.676387584 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.661948361 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.63561204 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.747358299 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.642160326 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.406799292 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.179109569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.677795048 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.661467793 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.698892144 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.454573891 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.69778784 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.456281542 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.661376369 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.740857571 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.362684755 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.440276943 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.74795543 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.313234657 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.512054146 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.335135839 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.661469389 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.582446287 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.893887467 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.455468626 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.444543468 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.136859294 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.591247529 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.431086325 seconds)
  done (took 200.050496772 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.447448661 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.432172897 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.449899036 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.451703542 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.431616679 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.461124636 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.450069187 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.450583232 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.451837582 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.445389497 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.436489792 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.431135776 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.431389335 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.460008486 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.432651388 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.4344334 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.432490046 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.454755542 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.433033909 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.452640005 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.433588984 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.453755994 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.433973035 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.466357867 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.432778973 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.432809077 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.453481154 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.43234209 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.434175631 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.433547787 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.439024894 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.445026354 seconds)
  done (took 207.509736479 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.433105809 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.433984921 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.435815431 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.433285732 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.433615698 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.440411459 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.436207851 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.467463421 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.435971437 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.450483487 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.435255773 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.434108618 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.435182364 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.435743657 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.435675019 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.43471112 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.434964747 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.435061907 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.470716054 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.434719022 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.457440115 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.437066973 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.440558883 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.44593833 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.437557744 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.436809861 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.441142556 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.434137619 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.437065107 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.446688751 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.44535161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.440329811 seconds)
  done (took 207.437310333 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.631931532 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.443169426 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.44300066 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.383884964 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.445554114 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.443604323 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.439284148 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.642760092 seconds)
  done (took 15.22531457 seconds)
done (took 631.567941519 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.997560395 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.697795239 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.663697952 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.467506486 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.339772257 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.489353135 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.464827797 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.650489576 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.434845075 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.662049206 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.822581792 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.482275959 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.97404301 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.46379718 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.731547137 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.568707758 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.408825753 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.535460164 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.804428211 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.149225408 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.754804685 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.033223959 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.672126685 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.398446043 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.004891897 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.034864425 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.313683389 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.386974529 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.483668743 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.808503534 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.404072041 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.593629213 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.535428696 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.535089582 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.588320607 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.569147281 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.554054299 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.530773036 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.685635793 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.790736076 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.143536332 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.247820059 seconds)
  done (took 99.230054483 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.429432811 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.428818678 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.428351537 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.430648552 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.432966497 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.430916874 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.42889695 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.428611481 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.431087449 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.428824939 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.427652725 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.430673196 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.429032923 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.429569336 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.429184192 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.429187072 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.429251639 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.432668901 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.430308725 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.429146282 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.432516289 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.430636447 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.430210876 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.429289706 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.429374895 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.429072797 seconds)
  done (took 38.533091288 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.449248163 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.71910491 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.910045038 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.456074612 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.449064332 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.453299153 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.53687186 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.451906199 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.453628145 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.454032502 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.631923081 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.453103142 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.490241549 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.92750133 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.453138195 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.450424788 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.450143663 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.452909812 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.728988044 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.463539391 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.565824921 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.453763439 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.539668742 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.462294218 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.474888162 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.453074003 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.454771255 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.983715148 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.475477271 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.635773996 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.375402471 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.544479834 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.940721907 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.930493169 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.377358609 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.4623551 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.451771905 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.637970938 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.453617679 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.453577431 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.541596181 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.453952909 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.907476345 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.0931873 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.47559156 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.453717449 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.013083776 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.658926299 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.743296082 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.469335583 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.935978127 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.456204122 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.454824098 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.455438125 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.747160128 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.46968714 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.455944719 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.028976511 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.479222914 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.544798138 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.456221099 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.454568489 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.738567889 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.454166027 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.727192084 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.457254008 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.464499027 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.479134747 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.909516362 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.457891246 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.1230226 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.475283998 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.456228632 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.6340467 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.72904597 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.046489599 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.48134613 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.740941095 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.954736023 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.567128917 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.461872168 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.977816281 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.57002781 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.461860001 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.458757685 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.456430578 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.455094591 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.503800717 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.545038146 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.050268239 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.127591935 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.045520422 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.572443916 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.471280814 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.456462652 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.031012122 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.477637033 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.455620906 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.913857342 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.116935459 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.476260889 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.463216628 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.121901227 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.479616964 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.551994702 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.464191153 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.945909647 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.457753506 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.501737454 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.456428624 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.464419914 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.483035064 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.552338204 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.463166007 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.457707904 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.09738513 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.670578168 seconds)
  done (took 191.689013103 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.452996269 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.472423928 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.460759722 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.451277626 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.451800702 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.457813033 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.454395644 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.450376303 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.457268051 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.451376576 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.453461288 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.453138818 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.454632319 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.461019584 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.462711758 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.45910374 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.110501702 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.451642615 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.453830938 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.452553853 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.292286417 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.461291611 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.453701525 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.45228389 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.454242915 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.455758305 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.462155413 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.478801465 seconds)
  done (took 155.650739544 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.462666918 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.105329224 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.47927792 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.61757174 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.490205658 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.457631445 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.615998101 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.528968816 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.4805289 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.46118872 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.458083262 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.80669133 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.463617237 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.05061063 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.68566334 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.631022826 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.076048087 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.489897151 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.460461197 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.460753009 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.614289304 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.467232232 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.808613465 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.106682763 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.485257742 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.108232044 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.444858541 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.460221312 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.460169756 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.111844168 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.479619273 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.809167224 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.54975711 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.532719035 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.129819184 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.077847703 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.080305156 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.63844853 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.469553557 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.462485527 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.460942141 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.452074457 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.139145484 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.483818083 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.464705025 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.138770462 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.486165322 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.462801959 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.473571457 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.460670858 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.534230271 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.555719425 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.846003003 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.155504701 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.579282515 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.486216487 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.619537312 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.847445214 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.467639736 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.053133337 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.446422269 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.156246024 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.488922863 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.447757182 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.464165395 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.469950823 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.642592291 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.627581527 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.061113687 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.485723285 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.052137586 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.661416604 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.468015426 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.462362133 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.465971815 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.116968713 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.078752514 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.665510722 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.623926459 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.692145986 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.45015113 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.464907251 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.449199312 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.552282459 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.461552449 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.117033491 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.094663275 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.486698161 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.466494916 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.466627856 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.467364368 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.667717206 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.137956831 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.577138373 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.084396011 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.837326254 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.815773377 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.46861914 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.531148459 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.485085809 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.816821441 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.468145399 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.530788143 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.911739734 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.818824401 seconds)
  done (took 176.325809785 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.734946175 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.931471482 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.575194719 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.607983159 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.104075991 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.069742247 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.813377083 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.631475778 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.587951827 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.751336551 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.814933707 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.560177244 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.663359653 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.550471793 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.265915618 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.562829162 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.585780197 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.633239943 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.592826934 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.616016726 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.161337086 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.778618527 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.669498997 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.614444869 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.571377329 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.355988675 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.083227483 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.058837625 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.662798834 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.02751592 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.038224609 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.763112013 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.527741038 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.250650866 seconds)
  done (took 71.59114881 seconds)
done (took 734.370437464 seconds)
SAVING RESULT...
DONE!
