cset: moving following pidspec: 23219
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.236001199 seconds)
loading group "string"... done (took 0.550034396 seconds)
loading group "linalg"... done (took 7.67920832 seconds)
loading group "parallel"... done (took 0.171227343 seconds)
loading group "find"... done (took 1.166268921 seconds)
loading group "tuple"... done (took 1.825110132 seconds)
loading group "dates"... done (took 1.257122359 seconds)
loading group "micro"... done (took 0.235735566 seconds)
loading group "io"... done (took 0.770053418 seconds)
loading group "scalar"... done (took 41.124158052 seconds)
loading group "sparse"... done (took 12.930092267 seconds)
loading group "broadcast"... done (took 1.153012673 seconds)
loading group "union"... done (took 13.426461177 seconds)
loading group "simd"... done (took 4.772539474 seconds)
loading group "random"... done (took 9.677702421 seconds)
loading group "problem"... done (took 2.135436405 seconds)
loading group "array"... done (took 22.624157648 seconds)
loading group "misc"... done (took 2.059275292 seconds)
loading group "sort"... done (took 3.457646785 seconds)
loading group "collection"... done (took 19.529418033 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.575774196 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144934873 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.151502902 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.1497973 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188330684 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158052792 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15863201 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097797177 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.015553823 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174483121 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153506577 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.525520123 seconds)
done (took 5.291814292 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.265622705 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095009339 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104515613 seconds)
  done (took 0.952601674 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077487534 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145679079 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094461193 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.080511393 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09540831 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077107238 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094606983 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076995102 seconds)
  done (took 1.413653085 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08595139 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.09751857 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.0818381 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097148361 seconds)
  done (took 1.111178392 seconds)
done (took 4.573580285 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.737232991 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.284237 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204309346 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464767293 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193008117 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216824291 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.755590362 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.384542164 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.256121668 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100013986 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14378949 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386710545 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136978174 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.742408144 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092678709 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12423743 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.185004604 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.493852131 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083723789 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110961047 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119847403 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143489468 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131600941 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090366306 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183372398 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081530083 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194603655 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109662833 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080736208 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.287222332 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201046784 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.737578602 seconds)
  done (took 11.245316075 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111343319 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134539415 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098535782 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137804341 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137343232 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100070142 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083973385 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097722189 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12193752 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176074285 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116069484 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137442262 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09543854 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081828795 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115876311 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245075691 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121858644 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098729886 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101043408 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088682962 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138245217 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112149301 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109714045 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093419724 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167195568 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223606212 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113158434 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128033654 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098657824 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113138566 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144391059 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143833215 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096837176 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080144904 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173582954 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12795202 seconds)
  done (took 5.226909989 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.099791472 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190479032 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122195163 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171173018 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081121653 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143580641 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095858496 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114145506 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259675221 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.113391429 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177948803 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145009695 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099952136 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09811675 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082029775 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097935796 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.642886232 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158136045 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135334024 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097615404 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104520337 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101261524 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.726234798 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089412755 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.099333732 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082949545 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085488437 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168485804 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081887283 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.163928457 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.102072931 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101784628 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133512716 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20155013 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128005477 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120775388 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097729527 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.129878557 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078076741 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178979836 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107529809 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097260092 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104831246 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095391473 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134374284 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119289792 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098771006 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097032392 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.20546953 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096142056 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098384009 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.951214886 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.184046889 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.107364665 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098636093 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.325192156 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099588955 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09857049 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082216929 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.286702593 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.190789488 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099374225 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079751305 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098284598 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080748104 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.75335034 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083785493 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.127222079 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085244149 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109918486 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082889681 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098025596 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103092822 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087312702 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11544813 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.0798992 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100514119 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078877504 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09985104 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08164598 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110701787 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103139642 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080311255 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165653847 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082148248 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117869683 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12682372 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086086533 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097614231 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13003194 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083533437 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098480824 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134976087 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080489174 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109242218 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100384016 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144637272 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080924684 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.153199513 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097229172 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127890948 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103001888 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114740756 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111060625 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099328281 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084703686 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.123876528 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095446796 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078976008 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096512418 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080809192 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167283172 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085488895 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.101098777 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095428823 seconds)
  done (took 23.778503583 seconds)
done (took 42.095788494 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.320794769 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104228749 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105693042 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104551745 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101864918 seconds)
  done (took 1.563249214 seconds)
done (took 2.361875948 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.325049341 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.194933961 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077515894 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188259167 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078897022 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.175098234 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16262987 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114157642 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.222652056 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076248681 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.184252382 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077454592 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095219237 seconds)
  done (took 2.798714107 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095462742 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117524689 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082632178 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113211788 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077222748 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115366023 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092981275 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119047988 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110923405 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086553935 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09487271 seconds)
  done (took 1.898696985 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095032 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114643742 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083332885 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111682205 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076864019 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112348279 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09327259 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11817348 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111249233 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086583115 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095590099 seconds)
  done (took 1.892921609 seconds)
done (took 7.37782808 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092342204 seconds)
  done (took 0.88271333 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.931258146 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.978865386 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114474019 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.15101922 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.319957486 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193071076 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.479527834 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126165272 seconds)
  done (took 11.276389475 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.114906949 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.116032065 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.106033659 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084619378 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.10580174 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086484027 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.106190424 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100944763 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083664124 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.101458347 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086819651 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103695327 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101074172 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085684215 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.10163814 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086749947 seconds)
  done (took 2.426282604 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119487652 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11846977 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.109277369 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110299357 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086889508 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107869874 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108305431 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08872532 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.104557337 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105660581 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090247201 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107845035 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105544613 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080428617 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108424757 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109147502 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08686031 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108118263 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108034777 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090669881 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108213657 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097744343 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087349972 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10869029 seconds)
  done (took 3.360254827 seconds)
done (took 18.738791971 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161648302 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110740326 seconds)
  done (took 1.067469429 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097180382 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115098388 seconds)
  done (took 1.012746256 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098616813 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098424325 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124021085 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111277792 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080990899 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098805489 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121024613 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081046505 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098735635 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080393919 seconds)
  done (took 1.79745612 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083796071 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111606848 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103227531 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095653421 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107732233 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096660296 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088733672 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.10103114 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111688588 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077668581 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104537451 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116134037 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086019527 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117292163 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106454051 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082857129 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10546497 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100276093 seconds)
  done (took 2.604673165 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081389213 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098831707 seconds)
  done (took 0.985245921 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081855002 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095666639 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08139801 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098887866 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095952355 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077355321 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09613421 seconds)
  done (took 1.431333144 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.491012545 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13772347 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.264048686 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084887817 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121940371 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.305728889 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100575428 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085408739 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105866332 seconds)
  done (took 2.560434016 seconds)
done (took 12.257530028 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095138672 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118268499 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112582636 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.472308491 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108850523 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.101103895 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148983862 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.255792008 seconds)
done (took 2.221399062 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.145487107 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.410986373 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.100663757 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085494782 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082888923 seconds)
  done (took 1.493447047 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081345905 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101309664 seconds)
  done (took 0.996929304 seconds)
done (took 3.452322986 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082996327 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098070588 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.114594482 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.099115217 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079481576 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.099268078 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078287372 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100805782 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079814036 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.09918797 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.097282826 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08190196 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095698791 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079725963 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096907206 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082310329 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096047548 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079017816 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095330513 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081183715 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095834935 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078698419 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096987388 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080244166 seconds)
  done (took 3.01827732 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099967505 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101265088 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104847593 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087137933 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104503192 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085900211 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.107207919 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098496655 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.0864805 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10186736 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102435425 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085847762 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100974171 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085056381 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10212974 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103357876 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086711167 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099459206 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082786486 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103671477 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104870498 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08195336 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103206552 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085081488 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.104157134 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103087033 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082837115 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100891763 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103163835 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08596074 seconds)
  done (took 3.701914385 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086117211 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096097943 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079751907 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103454646 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078279447 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09863173 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078070677 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098011631 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079676204 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097302651 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079283246 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097540074 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078166763 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099048511 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078285298 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101139542 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108788266 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079535148 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096238012 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079413723 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100079561 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079650375 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09770011 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078661348 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097182917 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078621963 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096967918 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078439992 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097636152 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078401439 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100420685 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081998904 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098027216 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084680362 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102170802 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077573014 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.10137199 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077099488 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097672231 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076698978 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.0974462 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095388728 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079558454 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103434481 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079602908 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098902088 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079198974 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098811366 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080387729 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.10075058 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078557028 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.098307633 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079665839 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099938841 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081676692 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096937451 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.078337267 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.097032127 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097504075 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079372776 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096235748 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079156261 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098735523 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081129236 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112729197 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085347763 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097008186 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080678408 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098650404 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080948128 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099186186 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092067588 seconds)
  done (took 7.296658736 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084568382 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108637628 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080594294 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099825278 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076623046 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098875099 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10020314 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079593605 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098964992 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085059081 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098327524 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079925942 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099860832 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109077264 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080657642 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099027408 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085273543 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096285241 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079749446 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10119459 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07970195 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101918241 seconds)
  done (took 2.846890519 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212139055 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107532895 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144975347 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108834608 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085127547 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108180289 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103947303 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088561885 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103660992 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082751974 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103269466 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104246019 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084098685 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102865791 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101474511 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086939594 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104772548 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085747814 seconds)
  done (took 2.743952738 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093842592 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101142041 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102804622 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102079285 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099835222 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084682443 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105560081 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109066213 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084018419 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099855828 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090009857 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103763731 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101484567 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081805531 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102556026 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081496779 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103244657 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080389305 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110657553 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105845446 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086103218 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110818228 seconds)
  done (took 2.967825149 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098258644 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102377944 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117962983 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085239961 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096349561 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081143679 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107863445 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081607022 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109210757 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101297513 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082146035 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09898811 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088428604 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101156845 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105290211 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082781733 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102890867 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082243728 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102971815 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.191329114 seconds)
  done (took 2.845993801 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103299246 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102936312 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100985631 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092473887 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102051477 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082338444 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111025788 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102135798 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082513829 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128146339 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102093356 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08249226 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111352399 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107791002 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100875992 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093635128 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110411146 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11002836 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083017284 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10251033 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127231953 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082514179 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110688921 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102234944 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082922489 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101740844 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101185651 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090131174 seconds)
  done (took 3.639311836 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082633069 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100190306 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080462525 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097584393 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080158885 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09782577 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079823506 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097430358 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081950632 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097812089 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081887312 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099609374 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084022843 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101251558 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08184564 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100883294 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081879002 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09762599 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080152385 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098077519 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081465269 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101387956 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081104001 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098761654 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079336571 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102047193 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078352218 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098642717 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081499011 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098867867 seconds)
  done (took 3.535897148 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092555405 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108170274 seconds)
  done (took 1.03093535 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080894219 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115767668 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07913002 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10480496 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086945248 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102670756 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109565382 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086217564 seconds)
  done (took 1.596528944 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097772248 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112248741 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084255781 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115720533 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111700563 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09846533 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172844576 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103790713 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087457033 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.101413114 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114288834 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08178578 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107525041 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083644851 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107460836 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088621322 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099866806 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107606343 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086175381 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100115897 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083661941 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110337518 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083975644 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099295131 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102266322 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092489665 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114376844 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082600258 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10600739 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108865288 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089069432 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095823984 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083227352 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103002963 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079649388 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112033987 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118469717 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085304537 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11266025 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082986745 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114231348 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09632506 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08693035 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108446967 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092554574 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102947803 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102627216 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077947975 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098883971 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08482687 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097716162 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082646649 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096831567 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089726592 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105668191 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112404503 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082008286 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103122329 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085690299 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105957406 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088565259 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104383746 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102997984 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083353788 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108447437 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086924051 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112590029 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077071748 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097310695 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079812095 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112349433 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.129398016 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.08944816 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.1036813 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102210587 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080469056 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105704784 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083972688 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108198126 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.087551302 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103765456 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109308411 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090436546 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102816419 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08424976 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110056596 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099573363 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084851314 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099695065 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118262224 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082428341 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09940688 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081546729 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113465499 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085946876 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102641798 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079698542 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110422438 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075891726 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103599656 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102747941 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083637325 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114146654 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107177164 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089427238 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111795761 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.08994413 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102919037 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.10375046 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080315654 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10252531 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086143333 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109171247 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077778135 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105776086 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083166321 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103257899 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11003354 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082100148 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101871518 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09098467 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10919749 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080730884 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.100203198 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084994709 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102889246 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105670202 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091878479 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101195472 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077321882 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098058878 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085654232 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102979692 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105064309 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088827969 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106723029 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076530507 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101052303 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105898726 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092799417 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103123678 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083845375 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109323673 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.0837027 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102273941 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108200857 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08661249 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10141766 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089157658 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104450294 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077618876 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107202641 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105070236 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08242374 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105188064 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087212852 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105641434 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.084471412 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101544181 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107827062 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084548616 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101093639 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083544104 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.101429631 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093601195 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105966792 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077913097 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.10089337 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109765195 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08110818 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102202531 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082597334 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105826011 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083710066 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101257382 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081895309 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104960945 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114424002 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087927031 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105056158 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107847598 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095597235 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.1030651 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086324153 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102608362 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083371422 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10472204 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112457852 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088732987 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10916029 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085767658 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100534867 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107683692 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092038099 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101390317 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082064642 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101745964 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087700221 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109348222 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105362754 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084988055 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100443868 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084429077 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106931781 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085542543 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103324039 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081518265 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108281157 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101756262 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090450307 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105040324 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113022308 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08810803 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098325867 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086841186 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101486158 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088582547 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099300054 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079724468 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102630757 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104143569 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083747782 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106160511 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078476507 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110529465 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091832702 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103815718 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082256272 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103684157 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10911741 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085563257 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106827931 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08627633 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110879337 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112963953 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083331615 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105438628 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094608245 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104538276 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076570308 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109424655 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081010415 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103806292 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101964216 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082421178 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106274643 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092679331 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111303603 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.075983111 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106456124 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101241447 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083053435 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097796935 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088451115 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106265551 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084170918 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110630798 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103401289 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08485001 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105996709 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084028161 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104826144 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084200683 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107004499 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103576074 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087195601 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101503621 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087491942 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104090366 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081420936 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104796701 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.0833327 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104198277 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088486945 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103636346 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102820753 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08647529 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103890358 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084567089 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104351429 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083021321 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106820487 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082814533 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104024888 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105157301 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080594364 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110990464 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084131575 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112856698 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083955055 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.101723937 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108143503 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087050263 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109147882 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08499282 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105309479 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084533202 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103722065 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.1057402 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090949932 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100877546 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094575087 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11259103 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102814613 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087164552 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102792208 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085805003 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102152585 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084815852 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10471176 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083856606 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104256602 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107295589 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088035992 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103239895 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085578186 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105166652 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083875053 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105451133 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077776651 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103558742 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08201788 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104459584 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113974205 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08492123 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106876224 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082125317 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10611787 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081526684 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.101482776 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110909471 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092604112 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105444407 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110863939 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08368007 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104231757 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094258591 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098218194 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082225799 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102854605 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081556335 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111857164 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10410418 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093111553 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103747697 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083330764 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101454411 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085329085 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103625586 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077116824 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.103224734 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106738017 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088137499 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101568137 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084441201 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107570842 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084889417 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114869371 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.1106554 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085570038 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103505352 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081849552 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101580167 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083342374 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107012792 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08490353 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101869023 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08114965 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104562379 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083108518 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105198766 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103014642 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085880704 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110802303 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082964952 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107891956 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086575578 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099398955 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106067019 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084641133 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103029164 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08402739 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108028767 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087463944 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105769641 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112589584 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083783174 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104201296 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084566918 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102533062 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083488838 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104411796 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083052567 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.104144005 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103934456 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092848397 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102239739 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.08758624 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103657314 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.0835014 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111382183 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104894109 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087652092 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112459609 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086144445 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.106696772 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091337902 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.108596622 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106990369 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085370218 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106512054 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088825286 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.104116466 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109384026 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085441602 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104102933 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086514877 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10235428 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084325253 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104340834 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082109644 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.110729943 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103947926 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084321984 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102413243 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082624116 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105908673 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087980771 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113233694 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085570056 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109109291 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09880037 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082133641 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105455663 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08191215 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105829234 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.087971218 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111934561 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085853936 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105970552 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102701893 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09438139 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111237212 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088260395 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102707516 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086247681 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106137754 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105875494 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085301554 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103274331 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086208799 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108295875 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085400936 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.104729243 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110752839 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089428642 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105133091 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08604972 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.105617717 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084309268 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100553708 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084258569 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107556098 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109363727 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086930309 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104236584 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095551368 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.105147868 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083230914 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108227604 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102904674 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089764373 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099940246 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085253061 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106419651 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084980915 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100449358 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082191136 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103208725 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105501743 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084280146 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100041121 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09632451 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.11481164 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086365648 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10492767 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102218674 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080844165 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099394731 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083681355 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106182571 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085915848 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115646027 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083773092 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104782846 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078500712 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105514329 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107773084 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.088121532 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101696458 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079693737 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103394136 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087461572 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112262465 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08213605 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105329014 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107666788 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087373528 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102865064 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08758348 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.101875695 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087766079 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119467768 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105638078 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084538504 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111766033 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091729116 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106194938 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098880804 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086354723 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107843796 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084778552 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106049231 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084540542 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121780115 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107553809 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084015558 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104064268 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086635869 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104771406 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092423199 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107076945 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105352945 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.08955406 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106841998 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093261258 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108048154 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112917505 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087819967 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.108434102 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082573327 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105295912 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081419748 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.104030418 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105598044 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08622106 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110081925 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093737184 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104850468 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115980253 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094454425 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110694229 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081107585 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.105270802 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.0828264 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.102214294 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084079258 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.104493136 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102398972 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083582088 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103421028 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085684224 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111561112 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084726559 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107297044 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.084203557 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.102507013 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086326903 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.107617696 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105173227 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081793184 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104872302 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086429983 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.109948596 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089157112 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.106178036 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084965153 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107999613 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105699918 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080981908 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.112092553 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084202169 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.108243253 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083750901 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105928654 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085399544 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110197537 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110710635 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085718782 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107351065 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096839855 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108530707 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100620016 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083428159 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.110736359 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082921445 seconds)
  done (took 58.76673288 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148563341 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081080851 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100610948 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080174625 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11493222 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101232168 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080711341 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102201612 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081163888 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104396409 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07977301 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101798119 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110016158 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126309275 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095050081 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106737883 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079443668 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103096065 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100270871 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08159766 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111348356 seconds)
  done (took 2.976003443 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105435082 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120880014 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116935534 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121783463 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091290767 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117827866 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116732594 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116595423 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099914828 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11407318 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120836398 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11697564 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091814134 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.113479806 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112908397 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093225355 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119624295 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11190886 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117784087 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096052209 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115940189 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118035663 seconds)
  done (took 3.33264419 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085015788 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104812998 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086233212 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099715803 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084741488 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.100567691 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088031444 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103508262 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08735252 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.10508658 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082024562 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.105051227 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.106693601 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080330295 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104860863 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082630654 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154528747 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110571585 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082875268 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107335766 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.079209407 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108181395 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100503667 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08030979 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.104178227 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088431723 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106761554 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081903955 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10548322 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082386569 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105656637 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081335264 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107974539 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.083373435 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.105248541 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102712076 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084715857 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104593301 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080086879 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102672768 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084599195 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.101366642 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084675599 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107424929 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081796629 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103580409 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085044336 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10629904 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.079010727 seconds)
  done (took 5.576269791 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105234727 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163926451 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087368605 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.147013604 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123739622 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11469073 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088333632 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144455269 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105081594 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083417716 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125038109 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122002034 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105315574 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089532451 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.113084785 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104929006 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086946843 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104874635 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.08881119 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105759852 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110321703 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091012902 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121700923 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120505254 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11021728 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083434144 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106638713 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109608245 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098721757 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11169103 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110952429 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090077557 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123335401 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.112073107 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083176397 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.11008219 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123418722 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105919613 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088717816 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103427627 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087444427 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111703388 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112490076 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103993499 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106672098 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.11129434 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085214424 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103737863 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119692356 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087782057 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115063953 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120996804 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087771978 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106884291 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111214801 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121807583 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085194589 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10452586 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088150565 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119600702 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.104428297 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088957809 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120920218 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.1081325 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091997366 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121277822 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112321807 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109874665 seconds)
  done (took 8.307787461 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094328616 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112976471 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123357057 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122679464 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091109458 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114551424 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112063007 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090549068 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113337602 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118388925 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112945344 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.136262503 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086986743 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117285059 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112546235 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092265112 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113558263 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113404399 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091086029 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112980925 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113466164 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121113747 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09105272 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122313562 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144388842 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107950816 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09070909 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113534673 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122795154 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.1121841 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124607122 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092857635 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113179306 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12302937 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125515426 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090980089 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105635561 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111710679 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092423856 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112960037 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.1071367 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101172473 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113479289 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107739741 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091271156 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113617537 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123060069 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125963966 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116282318 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096657808 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113590787 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123297446 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112957018 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091415722 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123103345 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14902535 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122457863 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121694486 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112404226 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100540873 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122471594 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130575162 seconds)
  done (took 7.830150532 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10877394 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117500483 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.120028252 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101663969 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084954828 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111169835 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083322017 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104349421 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115459039 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095929162 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119485433 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11125554 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092701375 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119784685 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111121691 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113611998 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089243764 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11146884 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116868492 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088240947 seconds)
  done (took 3.015925146 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094414288 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.1264173 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085119052 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114170374 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110023496 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091071216 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109760889 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109472299 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087171848 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110376797 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096841135 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117996158 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108010426 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091266733 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118228066 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113394546 seconds)
  done (took 2.587176162 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098030455 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118917623 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122653287 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084868507 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106977897 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080091449 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.108423235 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102341821 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082355441 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.125479183 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084432847 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111095785 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106603337 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083310494 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.104119107 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088724311 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104239218 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082825136 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10783715 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121019376 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096402109 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.107091853 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085241171 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.110289638 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107213745 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09119775 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108082459 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104895318 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084056448 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107760997 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08596425 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115874662 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102846111 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084999626 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104105689 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082553818 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10733515 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085297862 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110582204 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106320664 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085076521 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106416243 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085652979 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108296596 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080720906 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108066969 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080470038 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113906654 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104118684 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085796531 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10795295 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087708026 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108159445 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117705408 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088863454 seconds)
  done (took 6.384694691 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099860447 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110961811 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081325042 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105471153 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088062151 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110240547 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109442357 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089093689 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109500834 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083600138 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110473272 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089275223 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110317776 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109681419 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087979609 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11085546 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081321009 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109554751 seconds)
  done (took 2.706132288 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092298236 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108199144 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093467584 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107962571 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084713077 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110977698 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080314056 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.107016966 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104506554 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086692013 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107515989 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087990003 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105966908 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087137313 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107734002 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08522354 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110815665 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105378461 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086896799 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103265747 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087883287 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106096994 seconds)
  done (took 3.065149742 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119317122 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126948388 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092227554 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.236573081 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103939033 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134279001 seconds)
  done (took 1.721975736 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110834589 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122254593 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.1074772 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107266913 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117129333 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08678557 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109819973 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109572126 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118615464 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102019497 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11023599 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119874832 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118744977 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096687747 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11738027 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115456992 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108308618 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088863971 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108955038 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129044749 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088139564 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119808402 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110131572 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087393691 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110433456 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119448296 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118764499 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101203243 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109612944 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119738066 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116316373 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088250304 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119655368 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124297526 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088097222 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120246021 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110553017 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129621209 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114693936 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097422203 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111251416 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116186463 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098706352 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116204175 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119367975 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109263472 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093176872 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11018438 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108956006 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136912345 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095157503 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118707323 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116297625 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118511892 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097599537 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135378051 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123852357 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120078801 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116718022 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124093764 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119161196 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095467837 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119536701 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125269654 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115585039 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096336418 seconds)
  done (took 8.269695803 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102651519 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129417356 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109455245 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123456633 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097718597 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109957658 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109674709 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089139106 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110190978 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10809384 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154987282 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089014489 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118759658 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118820927 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087456719 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11115671 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110702405 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118134728 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08714443 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137645663 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110593117 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119690191 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097274689 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119818181 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124583665 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117149129 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109659821 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089598844 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110678173 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087025393 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116021326 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111292313 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119445778 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086801962 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11919453 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110334713 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087821009 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116953646 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110316584 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115661739 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098464048 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130151909 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110882445 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108775185 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103375787 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111718161 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110157594 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08749313 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111403631 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108205308 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102464501 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125280787 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124263247 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118873305 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109134397 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088107769 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110308022 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108745605 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088944025 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117759235 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118524664 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087990894 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136527309 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112228204 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110409876 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118936411 seconds)
  done (took 8.182777077 seconds)
done (took 158.757983792 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.239214402 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.256007985 seconds)
  done (took 1.40829373 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099198802 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.139076972 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095903027 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.199721193 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108347208 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127186644 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140230687 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097232566 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108452848 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085465027 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.110268401 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087100834 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.210704474 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.0849944 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.109362392 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11043513 seconds)
  done (took 2.837201396 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.203151317 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.258490952 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102368178 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108448457 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088443609 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112791024 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.106699308 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.092580609 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.112302647 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085719635 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111337588 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087216853 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.108381913 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086210146 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.112750651 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087430235 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109240034 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088050073 seconds)
  done (took 2.980932266 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11368524 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.159732885 seconds)
  done (took 1.198319415 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119982043 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18152873 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.321382525 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158076301 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105971908 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129395893 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.159638959 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132599879 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19926207 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.1247276 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123461713 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09754903 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142047397 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116577394 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094821564 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.12097164 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143941075 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093041538 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.118019017 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117429954 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117514812 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.109128316 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115672372 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094305291 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183204673 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121569114 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084559327 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109119698 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117562622 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095477827 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.1150386 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127180088 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097847095 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180344123 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102134417 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.179186607 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098556785 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114469336 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.093521778 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.115334936 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119947045 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119404382 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105363163 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120958017 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085219133 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120700951 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107946411 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08582918 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116408465 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096987542 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116720691 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114905673 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155654831 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120063754 seconds)
  done (took 7.67989213 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.800983649 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157678424 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090004606 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.891009813 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136428279 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104932224 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.783480763 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112342872 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255990645 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.765263382 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134500966 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126316181 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206534439 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.261358363 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.95457357 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290612728 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.697542508 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102070107 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151088038 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153713016 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120049761 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137310911 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10981761 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431773193 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118555194 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112843334 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096828399 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120475156 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15981158 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126330928 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11468547 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179455179 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.248954321 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207154753 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093615435 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113996398 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111890639 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171874934 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266252906 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192887961 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181215302 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11099834 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089099249 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122804731 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133036942 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108952204 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165358356 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174465857 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170147395 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11613609 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120178677 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097137775 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122033325 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163971286 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12272407 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.320932812 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.3110937 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089640133 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122873589 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127218017 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262647458 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102365448 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227499717 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140437219 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211992738 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090358288 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775765325 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169979584 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112668806 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094687072 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122182043 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116838103 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09889904 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168935652 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393856103 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125641394 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116597554 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089680583 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232639598 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102499242 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11375868 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16246985 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119666342 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121115968 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102300511 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12433773 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168057616 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.258737394 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101083118 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121719158 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116072431 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103022724 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.119065959 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212018592 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221174275 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163284803 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23302073 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099834837 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186782873 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171248655 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120181068 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.175043986 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120278592 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102592109 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123366759 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219717502 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145860687 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124303404 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094586433 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120119824 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147607133 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12757453 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096648228 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.193554137 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.460796899 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169916679 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111902302 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128499377 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098578794 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18575353 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095409258 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258788096 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122896927 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170764477 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119918765 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088328297 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121986654 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163802734 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123633765 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120571186 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101056573 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12085025 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236852933 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217581515 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122726131 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22245152 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184576385 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120694177 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172842017 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122690244 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168309893 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121494426 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098096138 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118950392 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782459845 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123860939 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09936838 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117983827 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189169886 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089692234 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126595743 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126528191 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086753128 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77727464 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129377848 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121914387 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10304784 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119608467 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120213258 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09756312 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117820635 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162529041 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230789037 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120096777 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09752174 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126180505 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161746236 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118694099 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126996993 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102914925 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126982165 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123367385 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115412624 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103965725 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168056273 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.187571273 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219197045 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567892585 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114277608 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124384088 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204642868 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115410686 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290929526 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097419017 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228029999 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186584117 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099730599 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309571155 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165274459 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.191109588 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.129647431 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174784615 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111755849 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119465724 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166109253 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090258118 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120324367 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162446278 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126667602 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124158493 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.961222901 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091127291 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2245026 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111572045 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.17271363 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118881179 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120059647 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.274685164 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114844085 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129912042 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165450393 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115660806 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103394683 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.736988348 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12626562 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099918957 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120248617 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224967631 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164995778 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121114191 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096678564 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123078113 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16194516 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230787895 seconds)
  done (took 44.230797367 seconds)
done (took 61.251781043 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.285181521 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.220405456 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.272511763 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173678025 seconds)
  done (took 1.982110957 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17520639 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151736495 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122219595 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.110382462 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.153016525 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084972796 seconds)
  done (took 1.74961938 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.36789594 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.280089351 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.245715171 seconds)
  done (took 1.847072605 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.322447161 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251393152 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.480352159 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.329625415 seconds)
  done (took 2.434963358 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210947608 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134341283 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.113256148 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104415992 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.2006555 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249558764 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143939112 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203665931 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098236949 seconds)
  done (took 2.455587475 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.201226934 seconds)
done (took 11.624412045 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.252627119 seconds)
    (2/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.160953458 seconds)
    (3/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.246094061 seconds)
    (4/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.156469845 seconds)
    (5/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.256016026 seconds)
    (6/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.265855735 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.128982607 seconds)
    (8/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.168562545 seconds)
    (9/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.207645791 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098057194 seconds)
    (11/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.142967598 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119229516 seconds)
    (13/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.176122512 seconds)
    (14/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.119100822 seconds)
    (15/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.134174923 seconds)
    (16/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.227762236 seconds)
    (17/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.102561205 seconds)
    (18/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.238178344 seconds)
    (19/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.209751789 seconds)
    (20/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.188008401 seconds)
    (21/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.128712118 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.116026932 seconds)
    (23/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.12400946 seconds)
    (24/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137619319 seconds)
    (25/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096449072 seconds)
    (26/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.118795782 seconds)
    (27/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.159376843 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.216517169 seconds)
    (29/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.139470627 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.119728383 seconds)
    (31/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114355085 seconds)
    (32/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119962833 seconds)
    (33/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085059922 seconds)
    (34/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.118922376 seconds)
    (35/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.240856004 seconds)
    (36/286) benchmarking ("sort", BigInt, true)...
    done (took 0.218478552 seconds)
    (37/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097419216 seconds)
    (38/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.219305793 seconds)
    (39/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.182770539 seconds)
    (40/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.137332006 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093417091 seconds)
    (42/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.142230089 seconds)
    (43/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.096361797 seconds)
    (44/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.137451318 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.13645717 seconds)
    (46/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094339567 seconds)
    (47/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.117345516 seconds)
    (48/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.122507545 seconds)
    (49/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.162214576 seconds)
    (50/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.169759545 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113746283 seconds)
    (52/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112709013 seconds)
    (53/286) benchmarking ("sort", Int8, false)...
    done (took 0.188912756 seconds)
    (54/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.125582159 seconds)
    (55/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119023398 seconds)
    (56/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.066988989 seconds)
    (57/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11706598 seconds)
    (58/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.131101957 seconds)
    (59/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.200810993 seconds)
    (60/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.143476593 seconds)
    (61/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.200851685 seconds)
    (62/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.160430693 seconds)
    (63/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.116896618 seconds)
    (64/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067529022 seconds)
    (65/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.154297842 seconds)
    (66/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120291049 seconds)
    (67/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.177189256 seconds)
    (68/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.14288501 seconds)
    (69/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.11227131 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.116723871 seconds)
    (71/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163820974 seconds)
    (72/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.154421109 seconds)
    (73/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.190382998 seconds)
    (74/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.173245517 seconds)
    (75/286) benchmarking ("sort", Int64, false)...
    done (took 0.088668957 seconds)
    (76/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.186811743 seconds)
    (77/286) benchmarking ("sort", Float32, false)...
    done (took 0.175347336 seconds)
    (78/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.127154761 seconds)
    (79/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075860948 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.112084849 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138896052 seconds)
    (82/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094735176 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.139531862 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085548726 seconds)
    (85/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117796071 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120240032 seconds)
    (87/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099110868 seconds)
    (88/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.140558166 seconds)
    (89/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173192638 seconds)
    (90/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.123430686 seconds)
    (91/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.079068241 seconds)
    (92/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.151591776 seconds)
    (93/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.189265665 seconds)
    (94/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067180486 seconds)
    (95/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.166444383 seconds)
    (96/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.06668127 seconds)
    (97/286) benchmarking ("sort", Float64, false)...
    done (took 0.175005024 seconds)
    (98/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.191576949 seconds)
    (99/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.124602952 seconds)
    (100/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.120187853 seconds)
    (101/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.088348469 seconds)
    (102/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.184207085 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119890384 seconds)
    (104/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092664475 seconds)
    (105/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.125620684 seconds)
    (106/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.122983823 seconds)
    (107/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.112431092 seconds)
    (108/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.177565022 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086715423 seconds)
    (110/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.188981317 seconds)
    (111/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138322716 seconds)
    (112/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.200907705 seconds)
    (113/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.127847486 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 0.182683998 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.120769471 seconds)
    (116/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067469245 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119807126 seconds)
    (118/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067628932 seconds)
    (119/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067348781 seconds)
    (120/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.175613076 seconds)
    (121/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067275223 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117755591 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094161 seconds)
    (124/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.118762775 seconds)
    (125/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.092370108 seconds)
    (126/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.092066287 seconds)
    (127/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.22704081 seconds)
    (128/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.124706103 seconds)
    (129/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.112066383 seconds)
    (130/286) benchmarking ("sort", Float32, true)...
    done (took 0.226250356 seconds)
    (131/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.125353884 seconds)
    (132/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.119108817 seconds)
    (133/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067778567 seconds)
    (134/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.190139962 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119325405 seconds)
    (136/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.10609199 seconds)
    (137/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.112038956 seconds)
    (138/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.082846661 seconds)
    (139/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.120477323 seconds)
    (140/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068965899 seconds)
    (141/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067689838 seconds)
    (142/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.11319421 seconds)
    (143/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.094869757 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.11366205 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093687305 seconds)
    (146/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.093627673 seconds)
    (147/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093212915 seconds)
    (148/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.09358914 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086965513 seconds)
    (150/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.186439766 seconds)
    (151/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.137780729 seconds)
    (152/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068610218 seconds)
    (153/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086776405 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120549806 seconds)
    (155/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118514639 seconds)
    (156/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.09318557 seconds)
    (157/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.113601383 seconds)
    (158/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.163205514 seconds)
    (159/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.194626808 seconds)
    (160/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.103135069 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087316776 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.194638395 seconds)
    (163/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.123035525 seconds)
    (164/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.097496382 seconds)
    (165/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.105712361 seconds)
    (166/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.087899784 seconds)
    (167/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.147653309 seconds)
    (168/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098914316 seconds)
    (169/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.093423486 seconds)
    (170/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.089298453 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112762015 seconds)
    (172/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.237908995 seconds)
    (173/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.069327296 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.085974363 seconds)
    (175/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.359908256 seconds)
    (176/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.11172867 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09477395 seconds)
    (178/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.112033321 seconds)
    (179/286) benchmarking ("sort", BigInt, false)...
    done (took 0.222470361 seconds)
    (180/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.10007027 seconds)
    (181/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.114846067 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095898323 seconds)
    (183/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.094675306 seconds)
    (184/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104768569 seconds)
    (185/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.113339348 seconds)
    (186/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067559736 seconds)
    (187/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.111915163 seconds)
    (188/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.085657476 seconds)
    (189/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.123618116 seconds)
    (190/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.12669696 seconds)
    (191/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086831098 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 0.217159026 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.1107553 seconds)
    (194/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.069247876 seconds)
    (195/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.096782063 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.113807628 seconds)
    (197/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087078336 seconds)
    (198/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.104515131 seconds)
    (199/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.130595013 seconds)
    (200/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.093532083 seconds)
    (201/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086914508 seconds)
    (202/286) benchmarking ("sort", Float64, true)...
    done (took 0.225633706 seconds)
    (203/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.09328915 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096884787 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120516868 seconds)
    (206/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087939594 seconds)
    (207/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.189282586 seconds)
    (208/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067571495 seconds)
    (209/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.176766271 seconds)
    (210/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113268467 seconds)
    (211/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089870023 seconds)
    (212/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066511048 seconds)
    (213/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117127646 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.08524248 seconds)
    (215/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.104397933 seconds)
    (216/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09283085 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11811961 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085290549 seconds)
    (219/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.092900649 seconds)
    (220/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.134369578 seconds)
    (221/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.094495624 seconds)
    (222/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069730637 seconds)
    (223/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117550652 seconds)
    (224/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.1596575 seconds)
    (225/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.093408637 seconds)
    (226/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.093297854 seconds)
    (227/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.091592191 seconds)
    (228/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068126788 seconds)
    (229/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067632506 seconds)
    (230/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.092365847 seconds)
    (231/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.111383536 seconds)
    (232/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125737444 seconds)
    (233/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.140085484 seconds)
    (234/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.068909797 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086083898 seconds)
    (236/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.093228734 seconds)
    (237/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.078107114 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11765048 seconds)
    (239/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.098807552 seconds)
    (240/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.11150385 seconds)
    (241/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079107542 seconds)
    (242/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067715135 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122204269 seconds)
    (244/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068107824 seconds)
    (245/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.094506448 seconds)
    (246/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.069060683 seconds)
    (247/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118828903 seconds)
    (248/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06837174 seconds)
    (249/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090343554 seconds)
    (250/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.098114312 seconds)
    (251/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067660303 seconds)
    (252/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066840745 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.113168294 seconds)
    (254/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067695473 seconds)
    (255/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.112635047 seconds)
    (256/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068576437 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.111854705 seconds)
    (258/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.088562781 seconds)
    (259/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.093981513 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096094296 seconds)
    (261/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.091933311 seconds)
    (262/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093464939 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109701508 seconds)
    (264/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.192467148 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.112576148 seconds)
    (266/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.067443456 seconds)
    (267/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115508525 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094479817 seconds)
    (269/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.094078311 seconds)
    (270/286) benchmarking ("sort", Int8, true)...
    done (took 0.215280894 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.094126632 seconds)
    (272/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.186506117 seconds)
    (273/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.08705866 seconds)
    (274/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.127407931 seconds)
    (275/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.067043967 seconds)
    (276/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.095807483 seconds)
    (277/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069242821 seconds)
    (278/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127368019 seconds)
    (279/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101531258 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.119069546 seconds)
    (281/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.067795056 seconds)
    (282/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.091562921 seconds)
    (283/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.068963864 seconds)
    (284/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093224979 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.112438346 seconds)
    (286/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067743721 seconds)
  done (took 36.516989214 seconds)
done (took 37.470042598 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101350717 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15046444 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096016784 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138068212 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.126536343 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091935903 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.121268485 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098150017 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.126516074 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127158626 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099278549 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.095322476 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09978102 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123042864 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09685252 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.14177643 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125909584 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093884286 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121224397 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086486956 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121508445 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086526741 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114438439 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069840799 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.124252313 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095388142 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.119773188 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120681945 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087448352 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110887492 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091690134 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119052858 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087403216 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12579909 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093445183 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.121033915 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097049726 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.123924362 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088001758 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113714983 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119074007 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088822544 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118335414 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.0957931 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117982646 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093378884 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120499823 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.09920631 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142235834 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116647202 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096130163 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123117326 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096669154 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120297627 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090892056 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121351848 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09142332 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.142946385 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121433135 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092757151 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120424771 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095037729 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.118322876 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09503788 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.12102821 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.097191654 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124350293 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117312097 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097613999 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.118038876 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086946466 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120807305 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089925447 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112387616 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096452228 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.124369056 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08551493 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118937181 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.09338339 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.11856206 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.08591915 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115618068 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112839477 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094599048 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113503462 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071685364 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090936129 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.119300382 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086047682 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.121712087 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117842938 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095049787 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113873369 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.09948455 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112009975 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092812829 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112904155 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087542342 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114175964 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091838598 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.11209796 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090266343 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121688698 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089483036 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118906865 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.099200743 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.112895543 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.09282838 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.112812877 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.085431697 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.12859623 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122840878 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087128263 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117803555 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085929609 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120310664 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086722011 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112346485 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087887002 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114304951 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092788424 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112730878 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089158168 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.12039715 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.100267453 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.114293995 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.090575411 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116502069 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111133008 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094921228 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112004348 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088354112 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113657608 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079300841 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089425129 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.113809351 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118476129 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091407253 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120535719 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.090050663 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121421596 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092028371 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118534678 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093847844 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111485141 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074898411 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117726868 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090812744 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114066994 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087559579 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114379103 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08849369 seconds)
done (took 17.177234596 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087995647 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18641588 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153317892 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14503611 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107492054 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11484471 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12267514 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120434262 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115962765 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144080043 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111744987 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135248291 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150377426 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086888514 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11409699 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091612847 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11492722 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102980188 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148650708 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134607551 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165402977 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085857621 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148562213 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137911394 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121549808 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.11564771 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113230979 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093057188 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.119259871 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103406529 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.137834119 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.117853898 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089683417 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136146204 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10481618 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122587338 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08690588 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121510912 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086973026 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113973179 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142510254 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.1352825 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093939738 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118664771 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091427696 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116164338 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089740566 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122993315 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097365586 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11849214 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127445758 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157008014 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091662338 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124196747 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086116026 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125240404 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122657027 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090778872 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113965551 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090852218 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113195293 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091606734 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12907416 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142722588 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091560768 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12444498 seconds)
  done (took 8.767033863 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106218535 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141548004 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104627873 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132550484 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112543838 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088288212 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11406791 seconds)
  done (took 1.819312488 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090084014 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135480608 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111282636 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.138241484 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13261619 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109697952 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125027987 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088368558 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133750556 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089357118 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137305285 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15396641 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.0907638 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.123074376 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138924578 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088599307 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.140704025 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088156684 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118902264 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112421156 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119091522 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136473899 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091197691 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115170231 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103176137 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116407123 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163018503 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09436746 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116244991 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093111499 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113784012 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167970584 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10259614 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127210739 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087778096 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130787936 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129488919 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087599925 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131351602 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09426792 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130270867 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089197429 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11740468 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.104767917 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120861306 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124373909 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091355293 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115938789 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093451578 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135363478 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089308507 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129012433 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08818746 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120007779 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089328422 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121617817 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123361272 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091382892 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134791027 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091013017 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132168215 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105896267 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130290067 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132458947 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092841661 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129622589 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102833642 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120075989 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090125763 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120023359 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131075427 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088793674 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11638102 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101412002 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116996368 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113431721 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139956127 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089707507 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.127400896 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115636346 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090577675 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115206323 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11324921 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122424198 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088995179 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121694695 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092695871 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.1147397 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087571808 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.120743284 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087145409 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117816202 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091420476 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117202863 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116531239 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106900858 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116082597 seconds)
  done (took 12.009805093 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091524434 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115402233 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092550966 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115897763 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093080993 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116604564 seconds)
  done (took 1.653768863 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11588541 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119970785 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103379015 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122652603 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15888065 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104151473 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.132364568 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124917043 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107819661 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128967099 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130564156 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10553731 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138980746 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122293032 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104805663 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122936545 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103955178 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127427516 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128607118 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096433734 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13859203 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122630533 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097834498 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134295606 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.092260601 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.124539661 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127754942 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103021282 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12966279 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.1239405 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096948168 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119820713 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09611235 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125985652 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132536424 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095996078 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123366913 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.093455912 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12760071 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119359262 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104416544 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125385925 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127763683 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094669321 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125337879 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121426188 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095179796 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126674895 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103555708 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122066346 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119892959 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096326976 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120103901 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094058918 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124852274 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12360223 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094982091 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130409301 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095068255 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124440842 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118661723 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09455235 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125177994 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.092738784 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.131939201 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119814197 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096629528 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124295947 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122145627 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096610413 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120734982 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09343478 seconds)
  done (took 9.364437127 seconds)
done (took 34.627189887 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.708572867 seconds)
  done (took 1.736198159 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.849375345 seconds)
  done (took 1.879136603 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.448581343 seconds)
  done (took 19.509446499 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.513581706 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.603734262 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.0146026 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181609124 seconds)
  done (took 3.34735395 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.99045097 seconds)
  done (took 2.042950268 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.298533698 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261015779 seconds)
  done (took 1.599014439 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.811991217 seconds)
  done (took 1.857897785 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.375296879 seconds)
  done (took 2.417021927 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.336778847 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186399238 seconds)
  done (took 1.568952752 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.553419394 seconds)
  done (took 1.59830261 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.096108529 seconds)
  done (took 8.146055466 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.271093647 seconds)
  done (took 1.328395691 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302985935 seconds)
  done (took 1.352446197 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.784077153 seconds)
  done (took 4.835925621 seconds)
done (took 54.256400032 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100989546 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128207605 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102533634 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126621018 seconds)
  done (took 1.502984752 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102398201 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123016109 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100811753 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124500471 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127754959 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097621586 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12425085 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100081201 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123917927 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096458412 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123964658 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121319882 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100190658 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124524063 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093154734 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126475061 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099393563 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.124808681 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125163257 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097088905 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121504339 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097492213 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12730702 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093717658 seconds)
  done (took 3.750964923 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101456186 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119955739 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097148744 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119744098 seconds)
  done (took 1.502324227 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101050337 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144723638 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.140057412 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100663977 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.14529142 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137764276 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093263906 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.119495596 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093991804 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128150264 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.0907126 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150246931 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139504087 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099332969 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129766929 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114278998 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.093472562 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.139286408 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.10004649 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128649623 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092586992 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127358344 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090575901 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141338698 seconds)
  done (took 3.900697939 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171134555 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130875421 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141322536 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095142065 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163247091 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141663716 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089231274 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142503953 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088538912 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134013312 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118890089 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134972281 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.132045138 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088520714 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116393254 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087578134 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.132808116 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130376201 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092051291 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12918607 seconds)
  done (took 3.526967587 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098815052 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118941573 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089216126 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117688834 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099725443 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12268761 seconds)
  done (took 1.713100055 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092008985 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115577055 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091195065 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115218092 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096139788 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116999966 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090147153 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116029153 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090752602 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.118659338 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089874266 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114972574 seconds)
  done (took 2.313772471 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.504819995 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122194409 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120706262 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090152465 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123527303 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089713386 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130834172 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093126343 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14364127 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089029268 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118418502 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09127597 seconds)
  done (took 2.782474439 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235938729 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128134774 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288856162 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.374878359 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159356063 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180252077 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283246399 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166999341 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.22778662 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168162371 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203379944 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2272495 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15454672 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190840182 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140694712 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119755363 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236312107 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250881624 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156394625 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210594789 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230733062 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169982273 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183873233 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153744501 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139960274 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175819882 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095390895 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132945158 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235373116 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177591656 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217484882 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164843056 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147535863 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214487823 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256384576 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223664335 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288915091 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110899812 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.180042489 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.173342551 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270064517 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140860429 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20569864 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156767336 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134136581 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1914621 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195659396 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.18012098 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.155390256 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112960338 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225186427 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240910572 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196139353 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139866623 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310531979 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156761345 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.176711399 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223543841 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225610524 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231262636 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189909323 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122701049 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190924789 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222354763 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188182983 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.177138557 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181852926 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150762265 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23012832 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192602191 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166776731 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221883326 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190356177 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141679456 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173273107 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175055442 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174367337 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260223749 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18652172 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124444429 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170919318 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151997295 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133247241 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168039905 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127487163 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241263893 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11887516 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165449772 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244333346 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160903681 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161495605 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206138922 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232780985 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121089989 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.113644488 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156626272 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157942906 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196405679 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143185715 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161662065 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164367908 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130263623 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186702637 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096603306 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213679123 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091222913 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174126906 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212171039 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099599011 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163524052 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153714689 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.155225501 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175491325 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228072594 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115815199 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136790299 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209425452 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206188614 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.152437808 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180912231 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20348267 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146556124 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151704285 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199848102 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247042876 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141123307 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204966877 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159131691 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137003782 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.104821729 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212855217 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155429978 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161953212 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109410793 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.211343482 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209658887 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127363321 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1113983 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224143526 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133991573 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105292227 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164659281 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149744238 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141481756 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154193308 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154806551 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184389375 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17860572 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15598804 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165846451 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154011946 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25638052 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144205092 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152761248 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149605761 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095075896 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.219614509 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202283317 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131633691 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207004927 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172026867 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232515423 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174623836 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136086968 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178032274 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103325292 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122573354 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195534212 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169493988 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162450265 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.226614437 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203003251 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182648798 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.213832288 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175144208 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174843954 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167997343 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158943114 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.14074212 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162896852 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174522618 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096609243 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.146504704 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135870187 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150555857 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145256518 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107092129 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227362992 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170113468 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194004911 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162246768 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152500858 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18265922 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130742824 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175253383 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206919122 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122020842 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.230403284 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195764486 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185807837 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145089418 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232739223 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.09305048 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12826679 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144119455 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173569119 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106272024 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137886121 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164226434 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182662483 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210948846 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178447537 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242468347 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174786932 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192902986 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.093923049 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172000063 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185882919 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207103348 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.16843937 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142472011 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152613251 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181642649 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159874728 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256910411 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170747589 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177273569 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238901938 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152240005 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104891613 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153780929 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224282488 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156797281 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179639203 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14893248 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115564937 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163059075 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135616615 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162256242 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212954419 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163596382 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192652886 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153252465 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186513105 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130585804 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165282895 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161889387 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16779584 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081605657 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175897818 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235144502 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150817826 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169741611 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190104807 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135003993 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311465047 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248273856 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196229426 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140281464 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157913566 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162873042 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166261663 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173459603 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179364202 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16074772 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189544252 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160036807 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139834596 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142104178 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120659639 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153095227 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.134092075 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150168082 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178001223 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141755631 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186134196 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164815047 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161096372 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17432176 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152328605 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147101458 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151923829 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218414637 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184346144 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241888809 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.154285682 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.182422862 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234940919 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100259781 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135029682 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133421563 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180486278 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110179112 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22445823 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189867969 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237438227 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185886925 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195469876 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143297365 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12058064 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130599193 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205006421 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211318994 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156360487 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.16150709 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23280502 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.120799808 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134656844 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179852579 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296683348 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148613701 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226948491 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081242238 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.287432504 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131520197 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105588351 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166483818 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239332042 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138606892 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.165629211 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174696222 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173662293 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166491455 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150559636 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192954469 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219873921 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232135853 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181800706 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.135172419 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158054041 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178586194 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194080241 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160493596 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143037381 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233846211 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198613582 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.1991741 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.145062818 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170757372 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170237853 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1599314 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217741385 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108334144 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238946565 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106139852 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227101764 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156409201 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146053345 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177621962 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19111276 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145943137 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190677383 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213909491 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107857633 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136220273 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171422886 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181813169 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160763621 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130023193 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181395852 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128239074 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195409997 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262088339 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138516877 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156904081 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148816583 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109152474 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156933984 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160265932 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143679876 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.166947588 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209191975 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13634246 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192722769 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234248755 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171590606 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17648094 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146994061 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.695462691 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132204514 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197774567 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162955472 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206344811 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151759004 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175411783 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161240334 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170337598 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229066083 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163077222 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233291878 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195146644 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.208177077 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10636877 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161122785 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166006696 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146986929 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153264078 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170746237 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162003197 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.156726388 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179892818 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172523826 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.138166583 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141737585 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202724182 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163023664 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183054798 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181287068 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14259417 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17574553 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218546608 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106488763 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.207959102 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210199576 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145128816 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155803042 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135471803 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158946325 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235438628 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127639055 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235580122 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188450185 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160763191 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172778682 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148619536 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195778594 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159660598 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21670754 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120243663 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.16176568 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158795722 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140457338 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.133001467 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157549425 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170160017 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150626134 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161763835 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142762809 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198430426 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127145388 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147046179 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299324498 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226286611 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217695333 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13894654 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10769196 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16456912 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154618632 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177134722 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209929443 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.107967124 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139890565 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.1390959 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132884672 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143161468 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158835455 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199723221 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168497152 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207834873 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.140703478 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283156007 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142324476 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156412082 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090446407 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.135334494 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152237926 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118018752 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162420503 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.223369106 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270836477 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.119826315 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.136698872 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152031536 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126929943 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110196503 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169108534 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165764241 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178470798 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147605721 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111063328 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158058275 seconds)
  done (took 84.441092556 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176681492 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15320256 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.16458649 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.225585976 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19426101 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290853979 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228916127 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27707283 seconds)
  done (took 2.860316741 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095346742 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.149391013 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159709931 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.135470021 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09230086 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120362557 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.350151806 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.135827978 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.119927754 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122880149 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.178222558 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09545508 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.561902739 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091970019 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121052377 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.111087928 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.09362245 seconds)
  done (took 3.887169926 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.48482873 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.768141588 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.524437313 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098142922 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.36675812 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113956092 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.134969387 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.207197189 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.120356458 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.509680739 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.777069177 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.171752725 seconds)
  done (took 19.438280415 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.100335122 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.123373127 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109690032 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.138060722 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096619132 seconds)
  done (took 1.733106326 seconds)
done (took 134.397235105 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.106349015 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.408958947 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072410259 seconds)
  done (took 1.678150505 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.109062434 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.139298441 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10880313 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.138644086 seconds)
  done (took 1.664778896 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099277422 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129203614 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109884026 seconds)
  done (took 1.501818624 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.328990958 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.193774594 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.173966743 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108125563 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131398832 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104495856 seconds)
  done (took 1.511677466 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098548597 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129021987 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097802482 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132562841 seconds)
  done (took 1.626535598 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095777415 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071276305 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102469581 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076106988 seconds)
  done (took 1.510090221 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115217435 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133702558 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103901176 seconds)
  done (took 1.52324725 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.131309291 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.141718429 seconds)
  done (took 1.443422825 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.107363968 seconds)
  done (took 1.272591093 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.11909379 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.172391002 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.192193022 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.167960707 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.239372372 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.167447925 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142164696 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114760951 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.133902447 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.147100879 seconds)
  done (took 2.766584802 seconds)
done (took 18.464907763 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104691494 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.424654286 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.3847709 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147171123 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.7267917 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380510928 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.034521526 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149256618 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167275141 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094040552 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14119938 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674759114 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.063602051 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.381212861 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.018634476 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.38064879 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677640591 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123489254 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123034482 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095431888 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017093197 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092784969 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12367847 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092472563 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707256739 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427234831 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096210815 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.377669992 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092875102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128538291 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383183869 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125709215 seconds)
  done (took 17.116476768 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096856089 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175626822 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098865021 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.140448477 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124714483 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095017666 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126370142 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093739998 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181216406 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124771374 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110496619 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12415124 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12666954 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096444744 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143735554 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09288196 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127352978 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092796221 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123811926 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122257024 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113361534 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123073628 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094851114 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123262196 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094280699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137205027 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094996132 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123739723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122201673 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100336023 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130605079 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095164824 seconds)
  done (took 4.940101611 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142485431 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18574947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130646422 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12855875 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.171381619 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126071315 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.202151558 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118094437 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186216336 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126343074 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141393821 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093521345 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15989694 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09459533 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.145888691 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122398176 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098259679 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123833126 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093360659 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12609498 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141938902 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094004223 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124494855 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094670583 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125203823 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108576598 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12667193 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121326433 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094861224 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128154388 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100827862 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125643358 seconds)
  done (took 5.279632853 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098505299 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127613006 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111634343 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.14095132 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094860774 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.128215706 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097390752 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126918834 seconds)
  done (took 2.098775454 seconds)
done (took 30.599744729 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112558487 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128785984 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107550309 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136678085 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103429183 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.134117075 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091824067 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136821372 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134634996 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103375279 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13939798 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092663798 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124415244 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093134589 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136435951 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098128003 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134992011 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102356245 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135981397 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133151273 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096155173 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.13526562 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10351969 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135349603 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104974122 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135339985 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139429029 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100971623 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.1235276 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094358896 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126242195 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.105452788 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12576201 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106317147 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128573792 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097484172 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125414126 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093961458 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134945008 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133770415 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101385413 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134667033 seconds)
  done (took 6.128971871 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108883347 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141553153 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105657343 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081077325 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.120402178 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080915161 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.140561321 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080031229 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111841223 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109295805 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074585474 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10847956 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079381611 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102592275 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078842132 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076301473 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109530624 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07672376 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076849548 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107598575 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080745899 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073407971 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.110814997 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07977854 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075305853 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.112719496 seconds)
  done (took 3.682177763 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102296276 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137626072 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11352239 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186419065 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162624129 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100183677 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.135493132 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.110587176 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.141119502 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122432295 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097482994 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151698825 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1111953 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131597952 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092184107 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.140316276 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137209154 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094622391 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129315247 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114909946 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.141199103 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102810221 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.146401901 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133547927 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093692448 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124548348 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097318925 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137528595 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099110192 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133631066 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096126682 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.128124394 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123665035 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10556551 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127674035 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095156518 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.144822177 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103707342 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.133397446 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091921969 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.127533747 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123075867 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115687065 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171574181 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.0914371 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131411619 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.100002257 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.136189943 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122399774 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112872401 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133433345 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09230398 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.127211172 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092499677 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123049592 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106941815 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.126223543 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094143091 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.135024966 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125147149 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.107614132 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126866344 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110150359 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123018919 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10055063 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.123847203 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093731505 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123343664 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.115515757 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125955182 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.166166033 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093946863 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12547385 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102075168 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.133377142 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129795618 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095097722 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139281407 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10348842 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127314847 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.103624549 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.128337825 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095628455 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.14345852 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094540099 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126215833 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.093460298 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131333516 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.126160423 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095836134 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137538755 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093867809 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12745191 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110104524 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.124062081 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.094284197 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.133574731 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127626247 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093245249 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136248829 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098965343 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125129797 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103223931 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.124109566 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095503876 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134367607 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127542218 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093621435 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127752688 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099924321 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124431561 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094357698 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126655065 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095086143 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134830954 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099999909 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129628153 seconds)
  done (took 15.068396376 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230832957 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218287091 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208691073 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.298627904 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.138531579 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114800833 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212675178 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.158236932 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125434823 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161765096 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176632967 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183514546 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.171256964 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.186816071 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172019696 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09446212 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.14395951 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.133652614 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.248945204 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.270061083 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.146835802 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133220804 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.131613601 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162228596 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.13957017 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134777521 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.11080843 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.139132799 seconds)
  done (took 5.939514417 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109511298 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158817247 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098669031 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147967404 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149885177 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093064555 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130181862 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093860066 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.138430932 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136231624 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093928822 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131491419 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099612087 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134562142 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124087341 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104021622 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134638241 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09516425 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128561763 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097665135 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132028019 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100963732 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129994966 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121922057 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103992781 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122718749 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087410533 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143583837 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092887059 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.147338376 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122500966 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100267805 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135628328 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.09402513 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124609134 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096467267 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127150828 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.0949995 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12748644 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091909926 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124739142 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078396942 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12391442 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105593331 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.13124065 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079366216 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.132222283 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12887697 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096544938 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121439593 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098125927 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12716923 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.098501454 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131646537 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099892346 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126044655 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097222521 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117904059 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101049397 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126919663 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086209352 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12242646 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099730856 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11871308 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102445228 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129854582 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092481011 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127144316 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098793623 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130804008 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096072514 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128718941 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090363309 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.128500023 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095588029 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130434884 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096226433 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124631016 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093155766 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.126540882 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075612284 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125649818 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074463139 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.128074687 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091810737 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123981369 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095923482 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131732483 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13853661 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096340042 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13329455 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096115445 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123976122 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097322092 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114365514 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09812333 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.14116217 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142933748 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095015743 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122554191 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108475059 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127844628 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093388212 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107496329 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102933712 seconds)
  done (took 13.150409012 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129134348 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156107754 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09499903 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.145934121 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157521348 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158893738 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102475996 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132027984 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095952876 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143617146 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094268737 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133921041 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09771438 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140531791 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158129159 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104032395 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127558323 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107909142 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.134019153 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172005922 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112717385 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14502958 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107590157 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126915268 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098245221 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.142885792 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16326795 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108033484 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138992026 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142516716 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109622502 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162857188 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112847587 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.131413129 seconds)
  done (took 5.601786474 seconds)
done (took 50.742915918 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.304581727 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.515563057 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.270859887 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.313601188 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.323368397 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.277144919 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.284305367 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.27215075 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.493850034 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.274114147 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.498580787 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.011221102 seconds)
done (took 60.041485917 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.364083918 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.409657689 seconds)
    (2/2) benchmarking "String"...
    done (took 1.536854591 seconds)
  done (took 4.151782641 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.635187406 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.28269936 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.543532678 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.271776613 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.304636371 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.568093853 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.174146231 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.680933205 seconds)
  done (took 29.023762054 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.281346922 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.366969857 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.305724223 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.280222274 seconds)
  done (took 6.432265308 seconds)
done (took 49.812079251 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.274295166 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.306251998 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.298461972 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.254132197 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.395439837 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.303367758 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.468841676 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.431061321 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.294706988 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.254203966 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.297407897 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.284630306 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.278781982 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.447536682 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.286539215 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.278245092 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.353773613 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.936946074 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.736502629 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.306548539 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.29101529 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.311872213 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.291590917 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.283928585 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.320451961 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.274524883 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.294876337 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.311023404 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.306184361 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.28390411 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.317012279 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.592389447 seconds)
  done (took 193.564495516 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.275616722 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.397578175 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.54491212 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.344218715 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.717793347 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.476246603 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.407124959 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.918812973 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.305326751 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.300419279 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.643548302 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.2747007 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.712695659 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.306131776 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.309953377 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.282176277 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.618310445 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.728200039 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.333477358 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.456379162 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.284466802 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.55418427 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.497070924 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.604805848 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.305019257 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.407086584 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.293413682 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.298276685 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.470840626 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.531762119 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.278741634 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.28444264 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.97635751 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.138039173 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.294902772 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.312066067 seconds)
  done (took 154.0886329 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.326207555 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.276969575 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.277039613 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.277203213 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.311894871 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.277367318 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.899082411 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.932117344 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.831297311 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.593753737 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.915399836 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.67228147 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.283011496 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.376911665 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.291224364 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.278386571 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.29336169 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.326836631 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.279040889 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.279142929 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.933418713 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.296504213 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.830591108 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.470438901 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.299481017 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314065029 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.674062265 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.279013692 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315508938 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.620284783 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.336631015 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.279699863 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.761112555 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.498111288 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.401290983 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.281222163 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314950508 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.27924417 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.28056406 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.566083176 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.280839882 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.281350175 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.283415757 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.279842818 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.044716707 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.284695307 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.903032282 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.279800983 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.367168255 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.283976885 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.281643802 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.058841263 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.191631903 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.306138198 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.279547939 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.28247586 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.281520449 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.280341451 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.31693097 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.96141224 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.38143594 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.302898838 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.285606541 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317259012 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.280684893 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.621341825 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.285315494 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.453427071 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.357655309 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.390051464 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.940601282 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.285206878 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.382035748 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.406411657 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.281510782 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.281817388 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.28173618 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.282178602 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.396873545 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.281374617 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.754782754 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.469218448 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.302705949 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.930551767 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.386933832 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.282593178 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.755726261 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.286347752 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.282674949 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.182035505 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.388499203 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.282588423 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.282809485 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.282741931 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.757570814 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.941033446 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.634040059 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.287578185 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.132524041 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.287984644 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.774198577 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.900041032 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.053019628 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.287951253 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.399423368 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.470239642 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.303419178 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.285168759 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.283241557 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.283346301 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.284264288 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.927226107 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.288326526 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.342703061 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.686020209 seconds)
  done (took 380.417201789 seconds)
done (took 730.600305842 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.956837069 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.947218137 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.0670053 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.93877934 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.896283074 seconds)
  done (took 11.013924314 seconds)
done (took 12.226885142 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.50223745 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.506571197 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.356760912 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.507646748 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.320503472 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.525214008 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.487452545 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.308689563 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.399954767 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.384842098 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.404580623 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.350154383 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.319136392 seconds)
  done (took 19.582873983 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.631472301 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.6253416 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.348983247 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.628774556 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.325089158 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.621877034 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.492691384 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.510649456 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.512978835 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.323114814 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.299724862 seconds)
  done (took 17.531455101 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.630149376 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.62323383 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.352352755 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.628805539 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.32733055 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.625073216 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.49680033 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.514172482 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.513699372 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.323434607 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.298835484 seconds)
  done (took 17.544374059 seconds)
done (took 55.872029744 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.296958787 seconds)
  done (took 2.506893865 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.330835793 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.503955786 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.321693202 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.299041984 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.296893849 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.296421442 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.300656364 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.296680017 seconds)
  done (took 11.857991776 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.292640804 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.295715844 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.295275236 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.293217226 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.295654512 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.296161194 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.296561843 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.292826784 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.29249034 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.292706836 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.295501522 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.296043339 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.293947262 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.292853999 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.293346155 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.295760687 seconds)
  done (took 21.922150436 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.296170533 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.293397653 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.293860014 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.294444573 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.293729755 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.294272892 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.295528886 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.293608019 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.293274675 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.29432532 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.29493255 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.294161364 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.295613377 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.294940004 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.29432786 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.295751459 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.293802513 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.293689104 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.299734483 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.29534024 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.295486494 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.294240706 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.296686727 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.296024319 seconds)
  done (took 32.292468991 seconds)
done (took 69.79498371 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.588942786 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.112952046 seconds)
  done (took 9.916007521 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.298558617 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.297235441 seconds)
  done (took 3.809691877 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.29746576 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.297354876 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.298490202 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.298703983 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.298595181 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.297855197 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.297761789 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.29815859 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.297991809 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.298286625 seconds)
  done (took 14.194716576 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.298890697 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.29859492 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.296355685 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.298590378 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.298062556 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.295845076 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.298728126 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.298396719 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.298706944 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.295814289 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.299736447 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.296091054 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.299157448 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.297170517 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.298535494 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.296756574 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.296705051 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.295240435 seconds)
  done (took 24.571896087 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.299983991 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.29967686 seconds)
  done (took 3.815369462 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.297768186 seconds)
    (2/7) benchmarking "second"...
    done (took 1.296814948 seconds)
    (3/7) benchmarking "month"...
    done (took 1.297354548 seconds)
    (4/7) benchmarking "year"...
    done (took 1.297184933 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.297323619 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.296535305 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.297251069 seconds)
  done (took 10.295464409 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.30032461 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.476822941 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.55614152 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.906824484 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.300672996 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.30306739 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.201578349 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.303644157 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.3051779 seconds)
  done (took 14.869680196 seconds)
done (took 82.692629996 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.356291731 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.318374214 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.772907122 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.317222865 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.314136511 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.594520375 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.315096173 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.426037094 seconds)
done (took 38.636997049 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.311305986 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.280801535 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.361088353 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.280534764 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.4170828 seconds)
  done (took 18.556769238 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.409529458 seconds)
    (2/2) benchmarking "read"...
    done (took 1.633610191 seconds)
  done (took 5.262183526 seconds)
done (took 31.353106831 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302403361 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.302370881 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.302294003 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.298676824 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.30180647 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.299965774 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.299147066 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.302070949 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.302373294 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.303015752 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.301962 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302743563 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299265295 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299887261 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.300307592 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303675539 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.299799713 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300069527 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299593418 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301895503 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.299336022 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.299379451 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.300457193 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.302688999 seconds)
  done (took 32.441861577 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.303602519 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.301197308 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.303512571 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.303372603 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.300688849 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.303224953 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.304547945 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.300538637 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.302847357 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.303617027 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.301270708 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.302064779 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.302997789 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.301495728 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303298079 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.302163949 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.304875536 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301517114 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303482817 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.301592487 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.30541081 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301866479 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.301634135 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.304321639 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.303416038 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.30005372 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.303886163 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.30230063 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303911304 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.301764984 seconds)
  done (took 40.29858792 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.310398208 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.312959532 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.304299821 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.304119987 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.304588336 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.303483724 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.304460454 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.305225657 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.305569069 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.305299667 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.304183554 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.305579081 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.305459346 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.304162728 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.305119082 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.305599045 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.305889785 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.306116471 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.305024334 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.305827276 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.30497718 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.305506313 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.306313173 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.305583166 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.305499537 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.3064852 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.306421127 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.30608175 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.305290575 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.305686881 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.306465027 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.307032646 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.306549269 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.306354841 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.30612156 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.305908239 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.312237307 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.314683994 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.305333888 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.307065839 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.307011069 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.30578201 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.306780382 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.30692921 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.306286785 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.307116601 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.307012014 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.307350652 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.306455788 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.306850158 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.307798227 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.306907946 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.3080453 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.307230098 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.307234482 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.307342679 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.307787767 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.30818769 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.308721811 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.30739822 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.307219819 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.30793033 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.308502546 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.307922687 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.308271519 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.309006124 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.307871355 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.307166409 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.309753034 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.308105816 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.307924737 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.308423106 seconds)
  done (took 95.313393902 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.309939248 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.305479946 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.305861873 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.306929645 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.305988539 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.308154551 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.306025749 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309805853 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306482949 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.310010875 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308976925 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.306263941 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306200779 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.309207296 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.309006876 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.307488906 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.308631234 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.307895297 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.310642221 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.310529507 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.310394054 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.307986261 seconds)
  done (took 30.002895007 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.310553466 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.311173008 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.308113034 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.310965612 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.307249605 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.310473038 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.310159421 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.311677313 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310820131 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.307193023 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307717275 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309997491 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.307872097 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307751887 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308727107 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.310045665 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.309664123 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.310471715 seconds)
  done (took 24.796467951 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.309137929 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.308638269 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.312065011 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.307968341 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.309114041 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.311022506 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309376652 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.311987781 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.311296302 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.309360055 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.311851243 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312166241 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.312407952 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308549853 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312096162 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.310478234 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.313097413 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310574135 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313202785 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.309147251 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.309943061 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.31354313 seconds)
  done (took 30.065092596 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312171254 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.313815037 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.311561032 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.310044427 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.310329464 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.313116605 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.313015734 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.310047801 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.315159973 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.313083105 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311946115 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.313090851 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.313157968 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.31117242 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.310334097 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310426123 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.314573014 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.312023421 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313564318 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.310076117 seconds)
  done (took 27.4715803 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.31586927 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314902072 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.314065903 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.316512541 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.316824873 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.316424385 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.315746655 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.315742863 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.316964515 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.316305967 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.315433189 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.316212095 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317379133 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.315790362 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316695137 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.31712516 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316100541 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.316418091 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.316785379 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.316625712 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.316522365 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.316584281 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.31536218 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.317494573 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.316709513 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.316755395 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.317632204 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.316812503 seconds)
  done (took 38.087140163 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.316422237 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.316203099 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.313219772 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.313693761 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.313328487 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.31296423 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.313995559 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.313567442 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.315589682 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.313955595 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.316607851 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.316476636 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.316152475 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.31619471 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.316191517 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.315498168 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317123084 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.315242024 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314861621 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314035098 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.317357112 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317553318 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.318473055 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.314506753 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315157502 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.317165584 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314660427 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.314813853 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317815418 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.315230634 seconds)
  done (took 40.695963627 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.336741125 seconds)
    (2/2) benchmarking "in"...
    done (took 1.336192538 seconds)
  done (took 3.904896052 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.315419338 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.317105627 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.317975065 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.31617305 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.316479368 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.318877524 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.318958015 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.315739666 seconds)
  done (took 11.769096255 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.318156786 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.318607687 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.31853922 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.318471878 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.319342152 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.31859105 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.325156267 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.342226674 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.317988779 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.319071327 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.326613053 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.327458132 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.319901377 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.318634105 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.318881642 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.32124124 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.319519967 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.319929948 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.319952202 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.319746759 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.319809114 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.321702044 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.321406469 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.317264659 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.321024947 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.329904022 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.344761554 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.319666694 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.319777437 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.321896772 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.321018272 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.317480107 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.321121101 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.321108561 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.321133231 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.322166812 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.327989085 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.342322376 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.326810888 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.344144769 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.328824835 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.318551483 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.321857331 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.321923712 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.323221109 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.321507123 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.323080544 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.319148371 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.32049703 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.324876362 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.327597283 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.320674947 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.320314103 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.324051965 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.321759445 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.327679054 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.344875825 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.32593585 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.333453015 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.333948133 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.356956497 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.349944706 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.323822594 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.323581464 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.334590696 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.348125711 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.328568089 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.342914673 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.320183954 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.322849312 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.33087568 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.357629744 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.352333328 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.324231091 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.324331081 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.323696823 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.323502249 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.324172206 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.32955277 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.347234462 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.323360827 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.323713792 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.334402648 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.349434276 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.322912496 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.324513377 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.32535913 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.325059764 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.326393275 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.334450673 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.347221607 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.325286354 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.322645626 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.324360125 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.325007737 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.325194752 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.324130244 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.325613545 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.322435497 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.325272388 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.324825427 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.329434374 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.332883364 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.325370947 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.326026097 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.330950242 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.347747946 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.324436165 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.330094231 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.325114966 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.326408299 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.328287432 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.332007295 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.323156693 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.328796053 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.334245744 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.325798885 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.325937252 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.326393421 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.327087492 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.337212753 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.354453972 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.326525768 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.32643628 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.330950847 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.339154813 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.327760939 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.329892606 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.328085417 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.324741428 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.325185742 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.327430846 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.327594623 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.327015933 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.327520614 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.327386421 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.325205336 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.328090747 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.328758868 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.328194627 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.329681708 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.327925555 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.328008334 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.329995789 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.328861857 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.328908327 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.333139511 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.349267782 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.328401078 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.327433776 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.326687766 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.32886927 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.328166376 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.329437466 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.32846562 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.327963485 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.328318882 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.328847112 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.329498421 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.329367297 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.328470977 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.33001785 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.333692947 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.329145954 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.332062457 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.328066439 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.327697262 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.329560361 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.32974273 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.328787017 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.330287685 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.32877829 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.333644724 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.339272459 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.329903594 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.331221248 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.331755309 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.329739402 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.330836723 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.331264111 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.333858965 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.339894279 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.330040574 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.335714514 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.351727107 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.330419547 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.331802152 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.329269481 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.330206454 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.331368953 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.334492014 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.340332044 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.344003077 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.358327653 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.332909554 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.33608952 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.33222612 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.335855955 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.334086188 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.33187237 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.333159004 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.332384644 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.330919366 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.332355736 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.332803271 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.331543224 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.330828948 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.332863198 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.332402021 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.33185977 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.333888084 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.331915358 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.332888583 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.330886317 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.331715915 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.333353255 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.332467559 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.329942013 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.331550631 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.331796377 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.331340621 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.332608631 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.338468474 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.329940059 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.3338048 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.334361829 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.331458117 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.331773228 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.333947634 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.334551288 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.332436646 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.340074102 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.354714351 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.333244735 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.339324353 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.354220403 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.332798616 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.335407081 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.33450432 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.33165872 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.336988065 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.342290697 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.334473036 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.334499765 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.334821375 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.335515825 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.335226093 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.340759593 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.354163228 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.334446799 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.334334353 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.335092835 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.332749791 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.334604568 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.33378592 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.334851138 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.33669517 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.335204453 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.335991121 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.336404159 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.335953954 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.336628033 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.335413933 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.338413014 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.343728027 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.340292479 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.335638116 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.336838576 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.336808003 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.341521803 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.334723568 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.337076053 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.335593512 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.348396386 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.364641566 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.343150748 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.359352646 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.336648861 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.342120369 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.359667435 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.341145259 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.335776267 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.336019362 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.336390877 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.336802532 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.333774231 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.335857178 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.337294583 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.338052995 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.338462865 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.34180351 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.337752247 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.337437839 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.337847116 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.338230877 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.338966076 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.33713554 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.337081072 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.33886418 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.338927109 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.337684965 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.337871559 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.343202616 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.360789938 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.339124836 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.337464564 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.337371463 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.336287344 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.338623835 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.338071675 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.343067493 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.347251952 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.342474852 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.347549882 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.340206212 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.348026296 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.339505042 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.343449888 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.347830471 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.337638057 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.33781033 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.3389601 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.339267204 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.344974567 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.362211381 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.341716667 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.344722626 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.339696257 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.340645861 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.340422184 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.340451873 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.340858459 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.340826092 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.347191837 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.362768107 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.3444802 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.340639021 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.337265693 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.341420454 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.341287641 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.339169163 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.341999741 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.340358938 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.340566575 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.339812894 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.341558888 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.340929774 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.341505579 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.341490207 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.338136293 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.341246295 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.347181095 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.365996272 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.347378693 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.342549296 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.347126227 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.36446993 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.347418485 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.364986009 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.341719435 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.342162781 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.341474735 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.342758612 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.340935397 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.341749353 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.34304158 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.343348419 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.346837257 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.341320015 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.343562984 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.341700571 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.343563394 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.342491844 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.353869284 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.368556457 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.345060721 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.348045654 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.341778061 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.344901522 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.347536677 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.343595013 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.342974178 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.346121465 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.355737139 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.352385179 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.342578356 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.343319822 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.343468241 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.343794096 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.344002773 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.344389168 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.344326694 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.344500724 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.344842929 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.344735894 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.346129186 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.343784179 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.343938908 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.343881357 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.346122284 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.353728616 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.365973529 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.344689498 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.345230799 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.346067003 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.344319646 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.343521873 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.344259515 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.34540244 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.345910124 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.347264007 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.353499287 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.351195634 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.347052038 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.344737997 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.345511183 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.34562745 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.345182447 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.346631979 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.345424878 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.346129094 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.346039887 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.345019326 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.346979112 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.345435195 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.345447669 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.34658782 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.346438916 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.348134427 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.355455108 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.34627381 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.342753636 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.34684875 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.346385093 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.345451267 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.346450455 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.352068992 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.372942299 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.359046531 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.357928146 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.351781224 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.347731416 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.350711411 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.355629619 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.346851746 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.345787365 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.348958088 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.348510456 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.348923364 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.351639927 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.348748383 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.352208712 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.369205442 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.34643137 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.355332879 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.369857498 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.347913984 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.35004988 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.352847847 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.347844268 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.346691354 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.347879034 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.346963202 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.353975592 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.371480804 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.350249461 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.349881734 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.346911377 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.350334909 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.354951033 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.349789898 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.349561855 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.345942919 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.348418759 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.349151876 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.350153303 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.347486715 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.34759158 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.34921566 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.352767611 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.356623433 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.347756702 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.349718705 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.349093539 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.349083965 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.349127565 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.350466729 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.347773151 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.34725265 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.347899473 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.350838951 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.350544993 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.351572398 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.349548252 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.35064599 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.351831463 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.351399536 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.354155312 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.36275659 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.359914625 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.348364375 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.349778635 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.350744401 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.352529277 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.351122397 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.35200283 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.350982751 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.351952504 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.351365192 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.35278778 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.35335929 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.354959038 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.367243005 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.374138156 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.351809899 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.351346362 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.35471225 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.35207937 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.34926585 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.351989691 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.35263527 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.355246597 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.361812265 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.352212751 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.358067933 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.37407586 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.353253954 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.357072789 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.356087123 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.360441215 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.353099095 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.352310793 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.352890552 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.358597808 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.36894457 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.352870812 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.364621142 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.384478311 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.375724607 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.35298992 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.353790408 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.352469688 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.353796378 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.354288906 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.35467446 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.354047626 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.353362436 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.353727197 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.354749057 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.358821774 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.35421737 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.354787405 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.355397937 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.353044475 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.353820288 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.351295188 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.354558311 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.355639152 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.355258678 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.356129056 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.3559557 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.35494121 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.367296361 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.384205562 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.355047559 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.355405649 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.353277581 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.357159723 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.358921502 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.368474383 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.364289076 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.355708854 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.356257491 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.356552269 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.356242743 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.355405311 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.355841439 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.354951858 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.355138122 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.353380328 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.367700558 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.384986022 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.359507025 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.355430818 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.357038269 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.356555172 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.356983062 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.356705301 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.356945425 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.356467849 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.358219182 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.36197708 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.357254056 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.357184942 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.360199842 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.365616188 seconds)
  done (took 800.485807279 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.355913715 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.354177277 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.355112454 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.354194662 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.35505631 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353853338 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.354029746 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.354493676 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.353773376 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.355266867 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.354804781 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354016189 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.355182236 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.354625427 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.354524748 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.355321984 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354615716 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.354714768 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.355679206 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354540334 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.355062872 seconds)
  done (took 29.718499099 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.358394613 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.355558607 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.355949498 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.358085129 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.356140068 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.359052343 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.356953023 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358326736 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.359771934 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355668114 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.35858 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358997351 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.357064337 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.35656489 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.357508332 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.359446435 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.358312592 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.356524977 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.359933939 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.355690673 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.359434846 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.357968431 seconds)
  done (took 31.14047903 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.360790541 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.361063701 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.358977273 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.357369271 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.360633013 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.357097473 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.361144413 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.36042318 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.360056809 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.360623854 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.358992892 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.360731767 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.368564595 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.366699365 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.361178745 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.360832766 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.507892096 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.361050195 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.361366223 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.361826976 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.358692572 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.364682029 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.380527671 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.359173627 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.359766829 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.361489961 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.362142106 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.361211703 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.3616847 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.363365342 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.366620338 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.361346573 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.361541748 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.363252279 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.359601279 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.362517533 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.367393598 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.362316482 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.359246365 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.362398815 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.371351414 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.385992161 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.362521121 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.367030627 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.384919431 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.363429121 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.365107534 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.371881565 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.359989704 seconds)
  done (took 68.231397655 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.363542444 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.361911012 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.360671357 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.36308761 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.364405681 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.363551032 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.363300361 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.363070375 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.361050564 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.360825965 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.363061301 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.361621733 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.361280391 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.363685215 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.364115641 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.360535229 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.361531459 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.361667696 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.361743843 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.362245718 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.361607024 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.363931848 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.364726568 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.361938391 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.363843852 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.362109385 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.361634939 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.364307993 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.361751467 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.361877028 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.36446922 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.365124092 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.365017 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.363284689 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.363780811 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.364473621 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.365485984 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.362315281 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.36506736 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.361778028 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.365691688 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.365910926 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.364912463 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.365261468 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.362530515 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.363341201 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.362657737 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.363297962 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.363830964 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.366430288 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.366014849 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.363674212 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.364752671 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.364424008 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.366622682 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.367369788 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.365841326 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.364216027 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.366261871 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.364356421 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.364069552 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.36628214 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.365136308 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.36670214 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.366325022 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.364537444 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.365014165 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.366544453 seconds)
  done (took 94.014203524 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.367471265 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.367576572 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.366723522 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.368086674 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.367199682 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.36800135 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.367964631 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.368369356 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.367549415 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.368574829 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.368048003 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.368781326 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.368036567 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.3670689 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.366879933 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.368017636 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.368293353 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.368461958 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.368907985 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.368810884 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.369936223 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.369423084 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.368844386 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.369024646 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.369130009 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.369342173 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.369151861 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.368798812 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.368173676 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.368452443 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.369490334 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.368934205 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.368661906 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.368205495 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.369396816 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.370236358 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.369546797 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.368693472 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.368617678 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.369922879 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.369774071 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.369315961 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.36904897 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.369657932 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.369558833 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.370467061 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.370745805 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.371126061 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.369339464 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.36892435 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.369460238 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.369467841 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.370484946 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.369667567 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.370633584 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.370519206 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.369901419 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.371068609 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.371231426 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.371211878 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.371310417 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.371561076 seconds)
  done (took 86.166158167 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.372126831 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.37197958 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.369180653 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.367970911 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.370491999 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.368567973 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.370523764 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.370430428 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.370633826 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.370354592 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.372539383 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.368826043 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.368840851 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371288702 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.369449125 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.369396689 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.368652498 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.368629674 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.371781127 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.369477218 seconds)
  done (took 28.683733302 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.370403278 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.372269568 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.36989214 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.370002538 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.372396941 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.37013316 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.372348238 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371842841 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.369707412 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.372811518 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.372802755 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.372931322 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.369030042 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.369643404 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.372915871 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.370346977 seconds)
  done (took 23.222388161 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.370884598 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.37152536 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.372247525 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.372889077 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.371536329 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.370669217 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.373500521 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.371079167 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.369787124 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.374453693 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.373808848 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.372233545 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.373196265 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.37391962 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.371798028 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.374105586 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.370679373 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.371862406 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.374245626 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.375113658 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.372362054 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.370522208 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.373955556 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.375426388 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.373425028 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.372516968 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.371759241 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.372329317 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.372398989 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.375762632 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.372646541 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.37284554 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.371934721 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.372551619 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.37570496 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.372683314 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.374767386 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.375460118 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.375666035 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.375496658 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.37517186 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.373005504 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.375972447 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.375699275 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.372268459 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.376344426 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.373155363 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.373706208 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.373220046 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.37294529 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.37609672 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.377239099 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.376684966 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.377505579 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.376019983 seconds)
  done (took 76.830175834 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.377285594 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.377194937 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.372996716 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.376929083 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.375378494 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.375255545 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.377557919 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.375812941 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.374885213 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.376989126 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.375369651 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.378920676 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.373634326 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.376698733 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.375173574 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.377910769 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.376122372 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.375965842 seconds)
  done (took 26.057019153 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.375570108 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.376234275 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.37774938 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.375847884 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.374886549 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.378507939 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.375561117 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.37800974 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377833471 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.376040611 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.375325983 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.379054766 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378293125 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.378469258 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.375797048 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.376153303 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.378173048 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.379862 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.377254325 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.376520586 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.379373862 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.379830662 seconds)
  done (took 31.589901219 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.378752777 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.378201302 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.379111526 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.396051228 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.400581256 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.403937636 seconds)
  done (took 9.626595325 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.388123086 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379874774 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.377292747 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379166691 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380145024 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377623118 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376431256 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376670846 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379913112 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377976201 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376778813 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380362592 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380888758 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.377423316 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379713523 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379471061 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377536787 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377434452 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378841607 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380288201 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378019727 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380356595 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37765887 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377894735 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377787775 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377996168 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380873778 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379168475 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377987291 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380484561 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381441054 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378361702 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381448992 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379898528 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382079714 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381313299 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377862858 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381748388 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381290516 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.378278238 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.381008827 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382102632 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380427362 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380059327 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381991357 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380085766 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378407551 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380402034 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379206445 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383332516 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383122899 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381946388 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382872951 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382882905 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381993033 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38358332 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380179834 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380661013 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38309287 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381016294 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380334793 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383716191 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381322374 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381863303 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383407687 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381783774 seconds)
  done (took 92.412052737 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382353581 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.381605077 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381370716 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382226248 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381489223 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381327656 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381646666 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381378279 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383090302 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382817557 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384111728 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383003024 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381560802 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382088706 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381400613 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38082676 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381688682 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381130781 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382558714 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384614899 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382004183 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382169322 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381864403 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38151456 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382895029 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385919636 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383307203 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382475532 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382658155 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382370004 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382979898 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383475191 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383401525 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.383480456 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38325076 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383542986 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383805873 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38225702 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383382101 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385382145 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384382439 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386750022 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384305104 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384410412 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38544405 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383447343 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384801441 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384301956 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383727112 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384789482 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384640517 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384871537 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384396833 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.385823002 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383695021 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384929242 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385361166 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38517327 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383835953 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388531308 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385133636 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385362884 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388290314 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385011716 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384872416 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384569144 seconds)
  done (took 92.612655361 seconds)
done (took 1866.86173628 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.469341999 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.390693586 seconds)
  done (took 14.157265176 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.550820675 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.505166259 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.38633081 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.383679909 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.386779435 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.393492876 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.406934201 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.387013447 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.387280211 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.385698206 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.386476954 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.589022817 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.443020902 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.388630101 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.386953435 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.48236716 seconds)
  done (took 44.154050307 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.416861036 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.392453855 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.526911124 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.41643945 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.416503746 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.60772375 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.455351225 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.391042908 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.600082395 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.441474273 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.218543999 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.415952447 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.390684431 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.687915569 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.41268872 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.607563028 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.68928245 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.22999906 seconds)
  done (took 32.616085219 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.947518852 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.434768039 seconds)
  done (took 9.682759373 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.415567637 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.3925366 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.392388816 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.389003558 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.381929065 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.404533873 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.391160388 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.388393012 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.894822135 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.550753767 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.399324751 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.39835266 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.414953689 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.394146589 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.390973459 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.431081483 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.550294776 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.391644985 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.389324589 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.397234149 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.392915382 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.507960647 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.44260856 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.396430991 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.545616969 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.893975151 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.402091274 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.398352635 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.578991275 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.39148865 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.392984041 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.392899146 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.3946556 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.038847862 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.972515079 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.411587875 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.440543435 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.401388087 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.39144055 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.563819631 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.39555039 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.399316091 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.38678889 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.985723901 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.540648542 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.535348573 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.814977113 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.42210799 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.395046226 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.460670306 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.395356359 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.39510799 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.426550649 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.214745248 seconds)
  done (took 117.185313594 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.417397738 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.777949851 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.560367063 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.414747798 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.302059018 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.255543455 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.412834282 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.747682267 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.448830026 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.388131896 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.698936237 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.98298476 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.414172494 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.436370169 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.875078871 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.475961124 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.388275019 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.321208648 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.41460105 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.3953599 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.936666696 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.406395287 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.387989281 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.577337236 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.431584408 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.901253525 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.158998118 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.905750169 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.416564912 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.388857025 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.930747881 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.41428282 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.404490793 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.393651603 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.678170898 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.80893305 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.798593224 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.410156736 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.397634249 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.39130585 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.409608545 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.897739361 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.808331118 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.41196079 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.39611365 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.905970951 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.410147403 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.397189392 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.395705789 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.607136983 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.040338584 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.400562589 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.149729936 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.395998763 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.724706573 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.459037094 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.475984813 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.931059193 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.421427721 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.624166011 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.427929217 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.390838096 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.392375232 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.396610537 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.394723996 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.794697828 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.694898539 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.394954578 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.792882402 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.949386214 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.416789528 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.987783893 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.363879772 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.415897661 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.443728893 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.39276885 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.140978684 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.948850003 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.459715331 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.392306902 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.79248488 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.416668526 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.70930419 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.41759038 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.393718624 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.948789807 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.400663524 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.426416389 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.39263094 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.397742794 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.175072585 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.395350822 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.714567496 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.421031443 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.394167718 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.39168726 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.446216338 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.394310871 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.399288409 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.39635208 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.98838393 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.421140932 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.403588322 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.420668162 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.39399074 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.393419072 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.3962568 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.394150345 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.628889747 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.908705332 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.424126387 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.393861037 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.393517037 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.406749634 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.576152005 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.39355949 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.771478363 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.419360044 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.404976081 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.399778368 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.271558426 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.46016006 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.395205727 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.398214319 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.353947581 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.6104783 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.417769828 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.416804149 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.394288431 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.416142363 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.946313014 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.422348565 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.481036351 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.396070005 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.174215236 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.455683529 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.436191577 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.698176558 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.403413437 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.395808261 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.407474597 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.395979245 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.69826456 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.695926202 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.649474759 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.396767984 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.416408813 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.154456626 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.455963721 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.548555392 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.420423948 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.389584858 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.601174322 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.522701983 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.39911529 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.010941792 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.397943655 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.624637504 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.399560057 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.711269776 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.959326165 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.422593213 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.404390098 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.164260587 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.134701867 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.180246791 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.398663322 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.710315101 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.411960264 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.891996734 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.397437686 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.398007386 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.970579302 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.401052358 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.403432086 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.398917481 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.398563131 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.458512694 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.575726381 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.659090152 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.401907128 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.907554496 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.460229549 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.398127103 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.405742094 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.400029374 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.745858892 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.455242461 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.404808418 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.410157416 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.401951123 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.400807913 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.930594105 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.399880996 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.406265561 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.55698146 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.105918666 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.426015529 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.413772398 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.057387678 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.638170603 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.000575954 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.460759028 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.76583976 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.425020202 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.441668018 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.203997421 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.429014056 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.929091022 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.422254599 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.400522383 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.055390951 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.42106541 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.479565849 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.401267255 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.401054011 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.02624607 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.422483201 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.406504864 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.972505407 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.429663924 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.671166083 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.401754382 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.425586911 seconds)
  done (took 1130.492843134 seconds)
done (took 1349.592601483 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.402553515 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.407334461 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.391490032 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.407915472 seconds)
  done (took 26.926158827 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.412835147 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.408456776 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.410934768 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.407568651 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.408917681 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.4069784 seconds)
  done (took 9.774042624 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.522918309 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.407958179 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.408286769 seconds)
  done (took 19.656891773 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.653024458 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.912622354 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.829511694 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 4.068884318 seconds)
  done (took 11.784663334 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.41037213 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.410711549 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.411358224 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.411693533 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.413088683 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.414235627 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.411815777 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.412179801 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.413800867 seconds)
  done (took 14.026959028 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.413190799 seconds)
done (took 84.904901855 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.500932248 seconds)
    (2/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.3135718 seconds)
    (3/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.390272296 seconds)
    (4/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.535358204 seconds)
    (5/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.384364017 seconds)
    (6/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.662470416 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.688303526 seconds)
    (8/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.432808058 seconds)
    (9/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.401814225 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.450795429 seconds)
    (11/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.14464006 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.435517082 seconds)
    (13/286) benchmarking ("map", identity, Int64, true)...
    done (took 3.056862801 seconds)
    (14/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.986892739 seconds)
    (15/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.417077918 seconds)
    (16/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.223660598 seconds)
    (17/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.603797104 seconds)
    (18/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.385670103 seconds)
    (19/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.38662797 seconds)
    (20/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.384626245 seconds)
    (21/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.651277118 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.521986479 seconds)
    (23/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.496330386 seconds)
    (24/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.415758584 seconds)
    (25/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.434061382 seconds)
    (26/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.509295504 seconds)
    (27/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.783933567 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.411152748 seconds)
    (29/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.494857308 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.510556647 seconds)
    (31/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.434899121 seconds)
    (32/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.431738994 seconds)
    (33/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.955751302 seconds)
    (34/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.360761655 seconds)
    (35/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.733209645 seconds)
    (36/286) benchmarking ("sort", BigInt, true)...
    done (took 6.428968891 seconds)
    (37/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.516157693 seconds)
    (38/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.388096441 seconds)
    (39/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.275024644 seconds)
    (40/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.446571952 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.519164321 seconds)
    (42/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.627982304 seconds)
    (43/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.44365053 seconds)
    (44/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.272246986 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.681631887 seconds)
    (46/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.43261947 seconds)
    (47/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.530004122 seconds)
    (48/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.447675523 seconds)
    (49/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.799048378 seconds)
    (50/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.421527386 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.464569202 seconds)
    (52/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.422927769 seconds)
    (53/286) benchmarking ("sort", Int8, false)...
    done (took 4.449499255 seconds)
    (54/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.416485668 seconds)
    (55/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.439457161 seconds)
    (56/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.153500744 seconds)
    (57/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.440186389 seconds)
    (58/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.393160897 seconds)
    (59/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.506663364 seconds)
    (60/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.431629099 seconds)
    (61/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.264474607 seconds)
    (62/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.227164003 seconds)
    (63/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.495858887 seconds)
    (64/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.659200061 seconds)
    (65/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.845378984 seconds)
    (66/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.428282404 seconds)
    (67/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.391282048 seconds)
    (68/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.454660732 seconds)
    (69/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.40869087 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.359399382 seconds)
    (71/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.388819604 seconds)
    (72/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.335674282 seconds)
    (73/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.38934639 seconds)
    (74/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.756080871 seconds)
    (75/286) benchmarking ("sort", Int64, false)...
    done (took 5.719103272 seconds)
    (76/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.392014426 seconds)
    (77/286) benchmarking ("sort", Float32, false)...
    done (took 5.508529414 seconds)
    (78/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.973246196 seconds)
    (79/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.109515593 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.433586219 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.128454567 seconds)
    (82/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.409257702 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.851381428 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.494966624 seconds)
    (85/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.073946964 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.8454983 seconds)
    (87/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.45489096 seconds)
    (88/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.161005184 seconds)
    (89/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.390453915 seconds)
    (90/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.810350001 seconds)
    (91/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.389729605 seconds)
    (92/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.349637476 seconds)
    (93/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.420122281 seconds)
    (94/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.418225621 seconds)
    (95/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.408629587 seconds)
    (96/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.410574686 seconds)
    (97/286) benchmarking ("sort", Float64, false)...
    done (took 5.86702405 seconds)
    (98/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.506715165 seconds)
    (99/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.154476378 seconds)
    (100/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.44195625 seconds)
    (101/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.474512147 seconds)
    (102/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.513891697 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.632964729 seconds)
    (104/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.436033305 seconds)
    (105/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.518207119 seconds)
    (106/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.085297381 seconds)
    (107/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.515907708 seconds)
    (108/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.43041919 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.472547282 seconds)
    (110/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.909737365 seconds)
    (111/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.495117397 seconds)
    (112/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.263021836 seconds)
    (113/286) benchmarking ("map", abs, Float64, true)...
    done (took 3.00017152 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 1.945353727 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.455677264 seconds)
    (116/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.441535973 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.691462336 seconds)
    (118/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.418751298 seconds)
    (119/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.350875448 seconds)
    (120/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.39247052 seconds)
    (121/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.630077817 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.330265297 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.672570066 seconds)
    (124/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.430740669 seconds)
    (125/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.375509135 seconds)
    (126/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.44046657 seconds)
    (127/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.98563515 seconds)
    (128/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.819537657 seconds)
    (129/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.495465844 seconds)
    (130/286) benchmarking ("sort", Float32, true)...
    done (took 6.409777822 seconds)
    (131/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.323513007 seconds)
    (132/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.317369034 seconds)
    (133/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.254468987 seconds)
    (134/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.393135556 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.518863024 seconds)
    (136/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.250981929 seconds)
    (137/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.421244003 seconds)
    (138/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.021396822 seconds)
    (139/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.422568335 seconds)
    (140/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.026957902 seconds)
    (141/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.274811155 seconds)
    (142/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.431271714 seconds)
    (143/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.415574384 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.396609809 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.439602364 seconds)
    (146/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.091135313 seconds)
    (147/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.521172819 seconds)
    (148/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.393496168 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.288198505 seconds)
    (150/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.432217105 seconds)
    (151/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.315985943 seconds)
    (152/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.414493326 seconds)
    (153/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.413510809 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.459852418 seconds)
    (155/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.518322186 seconds)
    (156/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.439912165 seconds)
    (157/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.513939563 seconds)
    (158/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.397324333 seconds)
    (159/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.407019606 seconds)
    (160/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.965161341 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.842203727 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.422631063 seconds)
    (163/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.46613745 seconds)
    (164/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.525002294 seconds)
    (165/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.837549249 seconds)
    (166/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.093739182 seconds)
    (167/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.815287542 seconds)
    (168/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.424839861 seconds)
    (169/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.466459025 seconds)
    (170/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.473954897 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.140681039 seconds)
    (172/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.750294458 seconds)
    (173/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.43342429 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.357065602 seconds)
    (175/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.440147995 seconds)
    (176/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.541354989 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.441676623 seconds)
    (178/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.465347709 seconds)
    (179/286) benchmarking ("sort", BigInt, false)...
    done (took 6.414655964 seconds)
    (180/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.526600428 seconds)
    (181/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.501333322 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.456640356 seconds)
    (183/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.401481512 seconds)
    (184/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.24556948 seconds)
    (185/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.428211155 seconds)
    (186/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.401915425 seconds)
    (187/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.338011044 seconds)
    (188/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.397658203 seconds)
    (189/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.533752795 seconds)
    (190/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.065825782 seconds)
    (191/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.694860828 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 5.561506524 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.494015185 seconds)
    (194/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.420256873 seconds)
    (195/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.515775901 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.853415454 seconds)
    (197/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.496503719 seconds)
    (198/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.726870875 seconds)
    (199/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.39849251 seconds)
    (200/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.417508405 seconds)
    (201/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.420492922 seconds)
    (202/286) benchmarking ("sort", Float64, true)...
    done (took 6.417747344 seconds)
    (203/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.425800599 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.047996651 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.625553155 seconds)
    (206/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.445017474 seconds)
    (207/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.020243022 seconds)
    (208/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.410060464 seconds)
    (209/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.770762761 seconds)
    (210/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.499584717 seconds)
    (211/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.541890323 seconds)
    (212/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.20357785 seconds)
    (213/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.50903696 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.432342211 seconds)
    (215/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.136520554 seconds)
    (216/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.464160138 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.441074071 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.457638683 seconds)
    (219/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.619474179 seconds)
    (220/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.521663014 seconds)
    (221/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.412432993 seconds)
    (222/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.414278515 seconds)
    (223/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.50602559 seconds)
    (224/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.401490684 seconds)
    (225/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.399135626 seconds)
    (226/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.50381845 seconds)
    (227/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.415684644 seconds)
    (228/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 3.016146353 seconds)
    (229/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.399596516 seconds)
    (230/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.413450756 seconds)
    (231/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.325709753 seconds)
    (232/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.197474965 seconds)
    (233/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.231221308 seconds)
    (234/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.39979733 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.660969994 seconds)
    (236/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.209860276 seconds)
    (237/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.325817305 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.446591637 seconds)
    (239/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.417318791 seconds)
    (240/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.308376901 seconds)
    (241/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.493643871 seconds)
    (242/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.413774107 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.805068854 seconds)
    (244/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.401529538 seconds)
    (245/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.432157846 seconds)
    (246/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.399824223 seconds)
    (247/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.45352333 seconds)
    (248/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.400146788 seconds)
    (249/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.44439563 seconds)
    (250/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.114580504 seconds)
    (251/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.774982082 seconds)
    (252/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.734865275 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.837080882 seconds)
    (254/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.424142795 seconds)
    (255/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.457359183 seconds)
    (256/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.792924 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.831778569 seconds)
    (258/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.500719983 seconds)
    (259/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.408890369 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.50689644 seconds)
    (261/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.380022607 seconds)
    (262/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.437177905 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.502382966 seconds)
    (264/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.421843224 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.533277822 seconds)
    (266/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.854473693 seconds)
    (267/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.506056886 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.235346554 seconds)
    (269/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.401764591 seconds)
    (270/286) benchmarking ("sort", Int8, true)...
    done (took 6.421041202 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.487580761 seconds)
    (272/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.524988708 seconds)
    (273/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.428354083 seconds)
    (274/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.103457037 seconds)
    (275/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.626389893 seconds)
    (276/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.43795382 seconds)
    (277/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.404614855 seconds)
    (278/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.222152443 seconds)
    (279/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.032877648 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.447302326 seconds)
    (281/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.177830593 seconds)
    (282/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.970024556 seconds)
    (283/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.700746727 seconds)
    (284/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.471543189 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.084373255 seconds)
    (286/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.842992299 seconds)
  done (took 982.994961886 seconds)
done (took 984.321332421 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.457835271 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.452264423 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.433924506 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.455532368 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.545949823 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.459632975 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.446201766 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.436468674 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.481287581 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.483639083 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.433452874 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.461976372 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.435737453 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.435365252 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.435330639 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.450852648 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.652338054 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.435601804 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.451973287 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.444024226 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.452791708 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.433711652 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.484672734 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.461985389 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.439150636 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.437236212 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.437668132 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.455048599 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.546543328 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.438990175 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.439106943 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.447563005 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.65313406 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.434013867 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.430813578 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.45550617 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.446014542 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.446425584 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.439849815 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.46929644 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.143652483 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.455657237 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.438274336 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.438906276 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.435765297 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.441979307 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.439951297 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.442689649 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.45175252 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.451480372 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.131271208 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.472874769 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.440613241 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.437461736 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.44991618 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.439054811 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.441533019 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.456256073 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.457581451 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.456250823 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.644120761 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.444970092 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.440764676 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.454394294 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.446724532 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.170592949 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.454427537 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.442510943 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.145902769 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.465015741 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.171971152 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.467228914 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.440846159 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.452116967 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.470807801 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.65777666 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.433913623 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.438854236 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.446234866 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.437330473 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.449644406 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.453503856 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.444705194 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.439988515 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.454968213 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.466375995 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.450286323 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.440820515 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.448326325 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.459113596 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.447338918 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.45219033 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.443706427 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.435068652 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.449817024 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.443598117 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.442359585 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.443441912 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.446031084 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.450831576 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.146453334 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.48040738 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.438578911 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.436776219 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.440245323 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.455027842 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.147525439 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.462630424 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.46258285 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.488810023 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.44410826 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.649164912 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.445376 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.460505159 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.451059963 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.445524174 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.436155968 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.65345684 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.143943415 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.478895275 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.445237466 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.440951756 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.459117259 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.444680827 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.439633044 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.668879021 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.44457749 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.457635532 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.563359923 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.45434053 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.474840246 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.440742127 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.445407458 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.469509223 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.461183304 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.474654487 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.446836562 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.46162661 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.457250198 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.439992681 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.453726956 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.454130428 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.444099784 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.449122572 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.43671885 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.470596018 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.457249706 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.456805064 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.4647247 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.564308828 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.441107701 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.655126453 seconds)
done (took 245.406739468 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.501157813 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.431392194 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.529751592 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.439087502 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.543001453 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.543594544 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.437135116 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.436787705 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.436373665 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.831644406 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.436944408 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.446437836 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.432004776 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.437707542 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.521698769 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.441588354 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.43796834 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.781956696 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.440113796 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.511269896 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.433479505 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.439244293 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.440524609 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.820098211 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.44155636 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.438963561 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.510412341 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.440707739 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.78627124 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.441657983 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.439736929 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.784998734 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.530229917 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.458382229 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.450408902 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.448657293 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.545517846 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.462894172 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.523505499 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.524504201 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.531394464 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.480600828 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.442324386 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.43868334 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.442874608 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.442717345 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.439530162 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.467983104 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.440870668 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.439825084 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.785238205 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.451743682 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.440412393 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.44030306 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.440782107 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.470410371 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.441622037 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.443839511 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.533269793 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.44487884 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.50404092 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.823104419 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.821523079 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.442561709 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.442166263 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.44117732 seconds)
  done (took 155.65952962 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.509257503 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.517565635 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.567923131 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.466149683 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.494216965 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.570041727 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.464671647 seconds)
  done (took 11.938861719 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.449416769 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.445066552 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.494284757 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.493411902 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.445035649 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.592957749 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.444627599 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.454508894 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.442419702 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.497113291 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.444838864 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.446023847 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.450912293 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.438345725 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.492651858 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.457051478 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.559087259 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.44514982 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.446102303 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.602465963 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.44232808 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.452118549 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.501058406 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.455894408 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.44581544 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.450983185 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.010086415 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.445897769 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.443448851 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.445715942 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.443899633 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.482334091 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.446883902 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.444086184 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.44242661 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.561792849 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.446461085 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.442310622 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.446887971 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.441216757 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.44515808 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.446593032 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.447054891 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.444175626 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.445913177 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.468876945 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.445885525 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.44725138 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.44785304 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.449253108 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.49681453 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.4473288 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.444749277 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.444122552 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.501468187 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.455243678 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.447281206 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.446145691 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.448023697 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.4441105 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.603498208 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.508679132 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.447326486 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.494879456 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.447939082 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.447842782 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.446613627 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.447894099 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.501233091 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.447890561 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.496325893 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.446122187 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.600889942 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.469993194 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.449160565 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.450028615 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.450005595 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.450093774 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.444452331 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.452991554 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.444796825 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.448172311 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.454530437 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.446684337 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.446218626 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.55063637 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.557540473 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.446204997 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.462164774 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.455190241 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.447206877 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.501952923 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.448815062 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.446960217 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.501407807 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.56356501 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.512246257 seconds)
  done (took 164.288288086 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.454778852 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.458567086 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.451156284 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.464753032 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.449526237 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.448854783 seconds)
  done (took 10.082710683 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.454837701 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.45346625 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.449948184 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.451130449 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.450996496 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.45125983 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.451192269 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.452419386 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.457105114 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.452061226 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.450646812 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.452922827 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.45041388 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.451143487 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.451721525 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.450475298 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.451596123 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.449282855 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.450706876 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.450928379 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.551376599 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.451747563 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.451511173 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.453128468 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.456745218 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.451931821 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.457724325 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.451954644 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.451564056 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.456429384 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.475708165 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.452574851 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.452879628 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.459492531 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.457524116 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.45377342 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.457172523 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.452836272 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.450511515 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.454355041 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.453450731 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.453261417 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.453610062 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.453383666 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.45531803 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.459268306 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.458084964 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.460891511 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.453688158 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.454335841 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.453285955 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.453357753 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.454145238 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.453388129 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.455206747 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.479751152 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.457514445 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.454505078 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.454601177 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.455226609 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.456687232 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.453908532 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.4558489 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.458740507 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.462061034 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.45391117 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.455817816 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.458920312 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.456441411 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.455083026 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.454864857 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.45223101 seconds)
  done (took 107.193155566 seconds)
done (took 450.514678747 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.664339013 seconds)
  done (took 8.022450963 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.802004064 seconds)
  done (took 8.162334862 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.608961087 seconds)
  done (took 25.975802977 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.569504053 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.462532076 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.482058548 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.454466062 seconds)
  done (took 27.327473526 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.072226633 seconds)
  done (took 8.43119057 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.447547416 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.463598106 seconds)
  done (took 14.273306375 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.891256039 seconds)
  done (took 8.250121546 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.469252806 seconds)
  done (took 7.836603138 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.46305644 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.476784917 seconds)
  done (took 14.312960338 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.429942457 seconds)
  done (took 7.790199733 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.924853622 seconds)
  done (took 9.284401606 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.457376733 seconds)
  done (took 7.817715236 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.525051932 seconds)
  done (took 7.884893097 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.862640344 seconds)
  done (took 11.221914898 seconds)
done (took 167.957446832 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.449002251 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.450856814 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.450280121 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.449081316 seconds)
  done (took 27.158495595 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.49003732 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.488631945 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.491214307 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.499942828 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.492551056 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.491817283 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.482015392 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.482111889 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.500868445 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.492638046 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.491926654 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.493325262 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.490001979 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.483508003 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.492816269 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.493293604 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.502055822 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.49214014 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.483218023 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.498982808 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.457392556 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.502139656 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.495574847 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.457813671 seconds)
  done (took 37.106957298 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.979198681 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.528331498 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.610846266 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.509086937 seconds)
  done (took 7.990044627 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.509960959 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.511328182 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.523211763 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.562868577 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.58978299 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.521340536 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.486152171 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.480208837 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.465425645 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.511093906 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.586849658 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.528698605 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.598177785 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.458514573 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.639756615 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.458386001 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.45815099 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.510747465 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.56248217 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.576127813 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.460156332 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.510589282 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.515396591 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.527860418 seconds)
  done (took 37.916018542 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.459011709 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.478389261 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.458763198 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.457815675 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.467285464 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.459820584 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.458935149 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.459334258 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.458127553 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.464055551 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.458982862 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.471309897 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.459058924 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.460130279 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.464925191 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.46002065 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.4638939 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.458760293 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.459879052 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.465405671 seconds)
  done (took 30.6079871 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.453542332 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.306838583 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.806181419 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.710185413 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.452914873 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.45370556 seconds)
  done (took 28.548787848 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.548982938 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.724525352 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.4610119 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.926859931 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.034152752 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.489546698 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.461207485 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.748238153 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.182404595 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.169971628 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.534024423 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.542196672 seconds)
  done (took 22.189652256 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.460973152 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.457951332 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.478509111 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.474438843 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.527133851 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.486271594 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.467413191 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.454797637 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.533448968 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.554263911 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.486855507 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.5293849 seconds)
  done (took 39.279255445 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542344481 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.505212159 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.585246671 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.508653366 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.234202188 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.669246902 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.481956307 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.970208638 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.460189296 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.730271454 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476198918 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546850206 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.715129093 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457250722 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.46111458 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.61180993 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.705121847 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074902581 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460777247 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.309703395 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487686616 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.457243861 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.449470972 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.498906343 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.669105733 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.604357915 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.718576632 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.234192175 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827287609 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.476280942 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469909328 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.459564223 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733652851 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216205647 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578061244 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468544156 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.470168501 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.008109015 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.455993421 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.337354438 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.467997304 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.461434145 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469458821 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458850306 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.39410217 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.476114143 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967132935 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.465718651 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.171596358 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.45931136 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47079556 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553560268 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.462931996 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.452385357 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.543332266 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.465209693 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.457934259 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.558561769 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049426874 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.624157954 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462545301 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.398977708 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.463531268 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.241504284 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208900846 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.585619053 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.464168069 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.465567288 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.40527982 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.311101958 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483534561 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606742629 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.484267669 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.15531449 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331462009 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.500229112 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.406699368 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14769271 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.467055526 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.402423891 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689566487 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.238770479 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401508297 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.405020223 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.397097034 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.338844279 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471164025 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.033991006 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48120724 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.979403032 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.472346665 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479841238 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486045018 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.686425529 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.341980134 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462466213 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.461965527 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.581862642 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48470369 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.955914331 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407655725 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.46577667 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.72096937 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.675803247 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.480554996 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.629061457 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.739135445 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464379496 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.483288064 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.463134287 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.498491534 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.154202572 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.49910192 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.890368735 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486863365 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.238624567 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36893354 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.47690841 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.569600626 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.472351586 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750299894 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.397331083 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.84337935 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531081759 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.467672813 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.465565332 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.362882839 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.064217038 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.345991856 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.461362825 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.465585821 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.500854674 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.466157029 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.463462652 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.47663498 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.472454572 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.266699396 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.690536929 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.47005398 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.743185729 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399127071 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611827332 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.511564659 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.689434262 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.867767364 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.487447563 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.726584138 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481523782 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.48200057 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.483435627 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484099819 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568728847 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488015889 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.479913601 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.729615354 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.471103531 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.470293418 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.367617322 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.25246007 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46712982 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.472903275 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.49419622 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166489644 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475876013 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.471074853 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360804178 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.480780256 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535606081 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.473565043 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.480357842 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.760336619 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.501419012 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.473764828 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.475759417 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.698342571 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.479951526 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.367680786 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552733436 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.71648518 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.166086978 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503799383 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.402255206 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.181053561 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.160384395 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.467744303 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.670323123 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.469500617 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478612743 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.479086834 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.469861366 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.194994155 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.494067973 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.286474327 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.478003529 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.479980686 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.472630076 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469056408 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.761434349 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.685310753 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.479205338 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.48532131 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613512238 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.482769285 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.404506189 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.98550842 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.475199585 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.470101144 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.245494382 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50374327 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.27958779 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008894883 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.731802372 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.493744616 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.482796881 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.510659202 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.51387452 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.471090135 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.482298211 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.47349528 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.481465813 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501433915 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.482337568 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.358538883 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.882974421 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035705693 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34026064 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150667818 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.57336063 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.47713106 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.373090617 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.970914075 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.406367229 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.131403016 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700868757 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.991263009 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.466707711 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.723370589 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.877277177 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.45073231 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491524225 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702092669 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.550662687 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.493947447 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484003406 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.685723252 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505529622 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.474743656 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.418693222 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.77108272 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784123874 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.484910351 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550827231 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96954525 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.472047323 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.274330691 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.515385288 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.008912501 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.703750962 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.021672229 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.89989371 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.482193693 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.491620989 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01095135 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.476715402 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.003333676 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204547618 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.509654082 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.726473658 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413506707 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.484882281 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.484551914 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.470718161 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.275987128 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.485599352 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.737517818 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.486683831 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.409841579 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.477297835 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120266167 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.356665917 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.480496339 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476650169 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.401816083 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.492235813 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848110436 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.483757858 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.762969556 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.506971075 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.410290591 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.409991864 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.168857812 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.485996754 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462057663 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112421429 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.488481333 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.506190606 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.491163167 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332954409 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.733936751 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.49135625 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.178527846 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.726421809 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.492207508 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499822713 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.576743857 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.480713978 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.460110541 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.378120852 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.71310701 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.527564985 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.70116474 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.648150366 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.377869637 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.478931666 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.71417513 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.381431728 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.47803379 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.816387151 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.216004172 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.480014898 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340365303 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525519372 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.481580554 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.526646 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.48073566 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523316392 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571473408 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.489951335 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.489823424 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.489382184 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686525702 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.482180657 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.482280134 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.493581451 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573723783 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.961903937 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.776353651 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.258310364 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186085887 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395273642 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.209819554 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514979411 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.479970205 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480172281 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423702166 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6314343 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.008765079 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.753285234 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.60696688 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.493090203 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503797972 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.495408202 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.493529741 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.696262086 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.754825944 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.455985444 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483592199 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.274731088 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.363488125 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.493462082 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.692180423 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122701436 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193120531 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607302277 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.500149389 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.985468078 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7551793 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.573049867 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.481527211 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.077116781 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.493011849 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.000346482 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.509938094 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481920671 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628669719 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.490771637 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230692958 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.515421601 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.641739979 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.256022724 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.429516525 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.745338884 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.113801771 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.492699503 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18982353 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347661006 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.747665245 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553221405 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.492888566 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.596336191 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6333786 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.493791254 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.37021336 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.482099981 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332621758 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.192915175 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.493134863 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200194598 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.770960982 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.480897067 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.495835483 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510561556 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.492412405 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.708927542 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.369418512 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.711818243 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496591077 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.483002131 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.476345196 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190491597 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520062944 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428816379 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.487615712 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797854737 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.747942325 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507019064 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.93692442 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.196344229 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179079286 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.462211076 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50653684 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.501461249 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.333935229 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19572245 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.807004308 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135157905 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.149876694 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.486057681 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.764935339 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.490272629 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.49935676 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76545773 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.488876721 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.493005194 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50360758 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.191590214 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.47083028 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.504970508 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.444898466 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.429752615 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.715645921 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.555288895 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.456015475 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.487584657 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.703057625 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.485922254 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.615898114 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499091601 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.483673565 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.491435383 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.264186772 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.809810205 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.492087334 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.484398624 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.475692978 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.489642211 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.589678999 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798170788 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.490963327 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.162701026 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.841625283 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.745213594 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.503372974 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.47381293 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.492059576 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.487029122 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.245666732 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.539298056 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.490651562 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19462657 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.492209477 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.525944231 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.492036205 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.707468512 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.699590585 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.499351877 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.502458058 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.507691353 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511961366 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.391553095 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.293247229 seconds)
  done (took 1737.397213483 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.547420899 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.519829552 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.501357221 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.564596714 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.510895981 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.513333741 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.529652211 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.526477491 seconds)
  done (took 53.611082622 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.501966687 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.654277067 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.525228526 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.490970856 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.505173041 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.492450088 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.034223479 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.516588566 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.503036888 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.500380941 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.490288622 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.50784098 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.265095624 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.499875601 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.504606759 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.495228416 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.501902796 seconds)
  done (took 68.398070333 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.49933376 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.764017185 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.568914398 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.492026929 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.901977922 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.515838178 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.614703336 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.504663092 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.529924234 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.923045897 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.146847146 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.519107874 seconds)
  done (took 84.379071563 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.498723394 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.497701651 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.499580455 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.499010393 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.498232606 seconds)
  done (took 8.892284723 seconds)
done (took 2184.844652722 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.498408216 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.373804906 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.23664447 seconds)
  done (took 6.008455026 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.643868849 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.691434827 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.844478518 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.831889704 seconds)
  done (took 8.413466167 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.778248875 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.870233391 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.691336706 seconds)
  done (took 6.742114775 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.847268981 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.504215597 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.497258224 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.493177337 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.496604993 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.496880756 seconds)
  done (took 20.890775612 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.499751835 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.500974639 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.499317158 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.502057057 seconds)
  done (took 7.407937453 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.475255278 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.213674242 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.477881611 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.495145235 seconds)
  done (took 19.065799851 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.246723547 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.258232346 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.241913486 seconds)
  done (took 8.151320174 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.53051518 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.525608316 seconds)
  done (took 4.459897144 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.810936381 seconds)
  done (took 3.214425012 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.513732811 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.553595759 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.772903005 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.735695471 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.30534283 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.503125623 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.646998179 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 3.107330255 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.706927084 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.443312281 seconds)
  done (took 35.693329449 seconds)
done (took 137.800942438 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.089350371 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.522255086 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.703845662 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.062908545 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.734675701 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.702052356 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.76940711 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.0230341 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.617467434 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.559970187 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.06594884 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.73228655 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.943806087 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.524265348 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.944448717 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.522083127 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.730713594 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.139468574 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.505574429 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.504348264 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.771866345 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.700243782 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.890140466 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.730566674 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.730366212 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.65331015 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.297901647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.522190446 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.512645436 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.321445329 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.652770482 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.501512177 seconds)
  done (took 206.089430722 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.508818657 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.501812632 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.498092161 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.498637892 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.511578122 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.499038998 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.498367853 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.520744986 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.529635972 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.498937209 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.499950313 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.534237876 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.500204013 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.497618541 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.500807426 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.498103346 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.497545302 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.5217299 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.4984539 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.524352662 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.500281379 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.538400932 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.504173991 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.511576837 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.500131765 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.520867409 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.500268859 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.500489421 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.499297552 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.502274181 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.499420743 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.517733812 seconds)
  done (took 209.64016134 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.498904198 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.522543777 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.502133081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.520041994 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.499955392 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.515131404 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.499888539 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.501125484 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.528940258 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.500791608 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.498183235 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.500716117 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.528818102 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.519277801 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.502031169 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.524546073 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.509379486 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.500633918 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.522412978 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.500984291 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.501478428 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.500986984 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.509837803 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.512852396 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.508525049 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.516472949 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.510066582 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.517270789 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.50139099 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.524585397 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.540582737 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.503258515 seconds)
  done (took 209.752934603 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.698630681 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.509705052 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.51095402 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.445535653 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.510559912 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.509529008 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.5044643 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.709310401 seconds)
  done (took 15.808710054 seconds)
done (took 642.705101694 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.080641238 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.78371619 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.731172045 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.531630455 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.490805003 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.55328821 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.529759409 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.730895497 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.517810221 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.744134263 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.966095162 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.550442694 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.128771115 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.528807078 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.821415414 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.642257021 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.482806393 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.6157618 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.890466748 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.224893793 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.826180996 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.269286007 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.761466912 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.517671351 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.152180928 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.193475641 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.414970652 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.468892707 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.553304122 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.901698004 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.455532128 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.668444059 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.610285567 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.610112031 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.66684708 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.647271123 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.652608003 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.607737586 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.756157554 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.953027772 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.254517592 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.324403299 seconds)
  done (took 103.225321798 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.496730461 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.496211335 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.495421309 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.495096572 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.497390282 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.495471906 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.495710235 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.49519729 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.495330233 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.495963088 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.49456301 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.496880878 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.496412998 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.497518501 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.495877954 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.494989452 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.496104741 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.498737166 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.497179276 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.496530607 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.497599627 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.496032093 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.496831334 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.496342531 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.497102438 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.497577391 seconds)
  done (took 40.318359467 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.514564588 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.794116676 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.984991425 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.52283614 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.512905875 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.518514611 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.610487667 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.516718834 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.517448932 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.517860682 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.701696275 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.517111789 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.553115366 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.018088785 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.51812208 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.521816315 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.516256654 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.516843052 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.803858908 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.526531741 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.637146562 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.51894663 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.613468054 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.525650463 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.543799744 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.517592551 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.522892898 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.057069002 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.541859714 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.704787436 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.548609876 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.614099879 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.00732149 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.019469509 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.546833305 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.524988451 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.518220032 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.710823953 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.520359896 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.518199186 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.613629366 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.518662468 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.998092149 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.188794102 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.544004253 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.516783688 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.081766559 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.739316563 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.846367917 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.53018664 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.043469873 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.525999383 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.520840713 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.519672105 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.827913335 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.525196748 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.517394388 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.099962475 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.550511972 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.615256952 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.521082344 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.518919503 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.82094095 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.523581286 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.809265074 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.525195932 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.526735164 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.544415056 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.999190613 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.523141299 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.212699697 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.547594883 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.519938769 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.706414196 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.809301609 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.122169087 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.547401577 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.825785565 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.025028436 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.636878271 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.523780119 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.047574838 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.642063887 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.525606052 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.523272075 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.523894425 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.519997357 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.577233483 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.614455229 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.130294562 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.229679549 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.132123363 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.643319889 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.534336281 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.520540066 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.106911673 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.548013858 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.522432202 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.99257212 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.213120119 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.549287852 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.529501234 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.21082646 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.545286591 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.619600427 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.528321771 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.020322075 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.527539998 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.576391036 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.523006636 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.528048722 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.550381393 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.618233333 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.526187429 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.522005885 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.175381802 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.742055601 seconds)
  done (took 200.289051323 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.517650801 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.539534997 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.534593231 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.515551632 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.516713791 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.524669229 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.51626679 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.517512732 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.521225957 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.516460902 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.517234966 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.516341786 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.518836791 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.53287695 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.528270508 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.522812516 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.172983498 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.516030432 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.517874654 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.527334879 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.370374337 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.522655915 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.516511347 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.516714443 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.517428099 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.516281116 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.524705411 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.521195998 seconds)
  done (took 157.520693024 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.527136952 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.280586124 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.553345936 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.692092191 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.554231798 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.5234841 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.689434095 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.598118657 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.548993718 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.522540258 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.523067841 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.898995193 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.526934198 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.166842215 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.773403188 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.715240442 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.164991716 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.54929253 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.524540034 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.523123552 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.690343869 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.533188993 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.899802425 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.225500837 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.550353926 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.225616435 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.510218599 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.526780083 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.524673566 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.227977573 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.547716657 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.905274064 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.623146792 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.599735076 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.25110876 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.18977156 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.191708994 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.713681174 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.526048135 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.524923006 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.525079136 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.511126259 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.229018925 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.551947866 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.527599564 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.221596871 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.55241188 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.528992971 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.532888351 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.526092621 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.599999667 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.623373533 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.928997679 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.237572729 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.646640232 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.540192083 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.68936769 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.929132636 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.531268591 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.169684631 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.51183884 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.23642042 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.553515175 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.511814321 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.528179871 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.532738429 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.714919239 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.693297334 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.172083358 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.552493081 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.170264572 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.737869983 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.527597669 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.528034765 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.530382501 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.235943081 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.194856028 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.73848179 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.696831349 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.775021861 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.513262773 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.528411231 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.513311885 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.625239488 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.529229245 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.237821507 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.194457256 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.553523937 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.53089591 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.532311778 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.531722456 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.751758294 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.26079347 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.648571511 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.163505591 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.931702532 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.909349179 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.532499576 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.603903967 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.551541129 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.908813242 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.533651893 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.603936121 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.996967476 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.911869839 seconds)
  done (took 184.617566891 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.829934069 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.901470543 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.633513574 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.6872701 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.205386784 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.148427758 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.906607819 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.690018161 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.662737751 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.832663985 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.876367649 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.622201725 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.737430331 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.620365117 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.344162134 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.636019701 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.661728613 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.695948771 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.66735679 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.647348602 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.265369178 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.849156267 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.734502256 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.611204983 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.638795355 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.441005654 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.156770655 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.09352675 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.747883574 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.017890207 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.120884868 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.776484464 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.621617225 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.332867595 seconds)
  done (took 73.847786111 seconds)
done (took 761.237919387 seconds)
SAVING RESULT...
DONE!
